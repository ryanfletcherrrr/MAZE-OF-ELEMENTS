<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>Hello!</speech>
            <speech>Would you like to travel to the stadium?</speech>
        </speeches>
        <speeches id="2">
            <speech>Alright. Please speak to me again if you wish to go to the stadium.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Oooh, is that the Terran badge? Not bad, not bad at all!</speech>
            <speech>Your win over Arturo shows that you've gotten stronger, so that's good - because I've gotten a lot stronger too!</speech>
            <speech>And, as is the custom, it's time to find out which one us is the better trainer right now.</speech>
            <speech>No time to waste, then! Let's put this show on the road</speech>
        </speeches>
        <speeches id="2">
            <speech>Congratz, I guess? I mean, you're better than I... for now. But there's still a long road to the
                top, and we ain't close yet.
            </speech>
            <speech>Anyway, uh, I will be around Lansoil Town for the time being. I've to figure out this whole
                'Horus' business. Pfft...
            </speech>
            <speech>What next for you? You can travel to Moonshire Docks towards the Volcano for Gym 6.</speech>
            <speech>You need to travel there by a ship for which you will need a Seafarer Pass.</speech>
            <speech>There is a ship in Lansoil Docks (south of Lansoil City) which will take you there.</speech>
            <speech>See you around, I think?</speech>
        </speeches>
        <speeches id="3">
            <speech>Congratz, I guess? I mean, you're better than I... for now. But there's still a long road to the
                top, and we ain't close yet.
            </speech>
            <speech>Anyway, uh, I will be around Lansoil Town for the time being. I've to figure out this whole
                'Horus' business. Pfft...
            </speech>
            <speech>What next for you? You can travel to Moonshire Docks towards the Volcano for Gym 6.</speech>
            <speech>You need to travel there by a ship for which you will need a Seafarer Pass.</speech>
            <speech>There is a ship in Lansoil Docks (south of Lansoil City) which will take you there.</speech>
            <speech>See you around, I think?</speech>
        </speeches>
        <speeches id="4">
            <speech>Did you underestimate me?</speech>
        </speeches>
        <speeches id="5">
            <speech>You ought to hurry up and beat Gym 5. It's quite challenging, from what I've seen.</speech>
        </speeches>
    </conversation>
</npcs>
