<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>***You notice something very familiar about that guy.***</speech>
            <speech>What are you looking at?</speech>
            <speech>Oh... you are the kid who battled some of my master’s disciples earlier</speech>
            <speech>I would stop trying to ruin our plan if I were you, or you will have to deal with me instead
            </speech>
            <speech>But I won't waste my time with such a weak kid for now as the first part of our plan it’s almost
                done.
            </speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I am four years old! I will do my best! Trainer, you should do your best, too!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa! That's what I expected from the Champion! Strong!</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa! That's what I expected from the Champion! Strong!</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm four years old! I did my best! Trainer, you did your best, too!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Hey... Can I ask you a question? When did you start loving your Pokémon?</speech>
        </speeches>
        <speeches id="2">
            <speech>I guess it's more important to ask how long you'll keep loving them, though, isn't it?</speech>
        </speeches>
        <speeches id="3">
            <speech>I guess it's more important to ask how long you'll keep loving them, though, isn't it?</speech>
        </speeches>
        <speeches id="4">
            <speech>I've always loved my Pokémon. I really thought that was true, but...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Br-bring it on! Bearing in mind that I'm a b-beginner!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hey! Are you for real? I'll pay you back for treating me like this!</speech>
        </speeches>
        <speeches id="3">
            <speech>嘿！你是真的吗？我会回报你这样对待我！</speech>
        </speeches>
        <speeches id="4">
            <speech>耶！谢谢你对我轻松！</speech>
        </speeches>
    </conversation>
</npcs>
