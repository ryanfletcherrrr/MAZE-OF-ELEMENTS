<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Stop! I'm going to have to ask you not to move. Just sit back and see what I do with my shears!</speech>
        </speeches>
        <speeches id="2">
            <speech>What a shame. It looks like I've dulled my precious pruning shears on an ordinary weed.</speech>
        </speeches>
        <speeches id="3">
            <speech>What a shame. It looks like I've dulled my precious pruning shears on an ordinary weed.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hey there! I'm a Gardener! My scissors are my only real friends.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>There are young and beautiful people, but youth is different from beauty.</speech>
        </speeches>
        <speeches id="2">
            <speech>Youth is just youth. I wish I had realized it back then.</speech>
        </speeches>
        <speeches id="3">
            <speech>Youth is just youth. I wish I had realized it back then.</speech>
        </speeches>
        <speeches id="4">
            <speech>If I'd only known that when I was young, I wouldn't be having such a hard time now...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hi! Sorry to keep you waiting! I'm a Hiker with a cult following!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh no! It's over already? The Hiker hunk is bored!!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh no! It's over already? The Hiker hunk is bored!!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hi there! I'm a Hiker!  Watch your step!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>The truth is that I'm a time traveler. I just popped by from the future.</speech>
        </speeches>
        <speeches id="2">
            <speech>Even if I lose, I can just jump in my time machine and go back to the past to try a battle again!</speech>
        </speeches>
        <speeches id="3">
            <speech>I knew this cheap package tour wouldn't be any good.</speech>
        </speeches>
        <speeches id="4">
            <speech>I knew this cheap package tour wouldn't be any good.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Speech can be utter nonsense. Pretty words only taint battles...</speech>
        </speeches>
        <speeches id="2">
            <speech>I let it slip that I'm a greenhorn right before the battle.</speech>
        </speeches>
        <speeches id="3">
            <speech>I let it slip that I'm a greenhorn right before the battle.</speech>
        </speeches>
        <speeches id="4">
            <speech>Trainers who treat battles as a sport are the height of vileness.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Come on, let's get on with it already! No need to worry about particulars!</speech>
        </speeches>
        <speeches id="2">
            <speech>Regrets from the past, worries about the future forget all that! All that matters is here and now!</speech>
        </speeches>
        <speeches id="3">
            <speech>Regrets from the past, worries about the future forget all that! All that matters is here and now!</speech>
        </speeches>
        <speeches id="4">
            <speech>Even if I try to forget, I can't remember... That's probably all I need to know, isn't it?</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Hey! You! Yeah, you! Let's work up a good sweat together, right?</speech>
        </speeches>
        <speeches id="2">
            <speech>I may still be wet behind the ears, but I aim to be a Veteran someday!</speech>
        </speeches>
        <speeches id="3">
            <speech>I may still be wet behind the ears, but I aim to be a Veteran someday!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hey, don't sweat it... Sometimes you've just gotta learn to let it go.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Are you lost here? Are you lost here? Brother John, Brother John.</speech>
        </speeches>
        <speeches id="2">
            <speech>What's that? I look bored? That's because this is a company trip.</speech>
        </speeches>
        <speeches id="3">
            <speech>What's that? I look bored? That's because this is a company trip.</speech>
        </speeches>
        <speeches id="4">
            <speech>Winning bells are ringing, winning bells are ringing. Ding ding dong! Ding ding dong!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Hi! Focus!</speech>
        </speeches>
        <speeches id="2">
            <speech>Look into my eyes. That's it. Breathe deeply as I count one, two, three...</speech>
        </speeches>
        <speeches id="3">
            <speech>Look into my eyes. That's it. Breathe deeply as I count one, two, three...</speech>
        </speeches>
        <speeches id="4">
            <speech>Fooooo!</speech>
        </speeches>
    </conversation>
</npcs>
