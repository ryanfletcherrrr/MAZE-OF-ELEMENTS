<npcs>
    <conversation id="1" canSkip="false">
        <speeches id="1">
            <speech>Oh look who the Skitty dragged in!</speech>
            <speech>You want to know what happened? Why? It's not like you can do anything!</speech>
            <speech>You see that Entei, yep it's done. See how I am going to capture him in front of you, and you won't be able to do anything.</speech>
            <!--<speech>I might as well leave behind a 'thank you' note, for all the help that they've foolishly provided to us.</speech>
            <speech>With this , $JVALOH_EVIL_TEAM takes another step towards absolute control.</speech>
            <speech>Hmph, simpletons. They don't even know what's coming for them!</speech>
            <speech>Boss should be pleased with this development, no doubt.</speech>
            <speech>The {COLOR=ORANGE}Fire Fur{ENDCOLOR}, it is just as they describe. Who could imagine that something so beautiful could cause so much destruction?</speech>
            <speech>Alas, it would appear that appearances are deceptive, after all.</speech>
            <speech>Oh and you, there, I know you are behind me.</speech>-->
        </speeches>
        <speeches id="2">
            <speech>{COLOR=RED}Commander Horus throws a Master Ball and captures Entei.{ENDCOLOR}</speech>
        </speeches>
        <speeches id="3">
            <speech>Haha, feeling helpless? This loser of a Gym leader felt the same way.</speech>
            <speech>He tried to save Entei, and we ended up taking him hostage until I figured out what to do to him.</speech>
            <speech>I don't want to waste my time with you anymore.</speech>
            <speech>{COLOR=RED}Charizard, attack $PLAYER_NAME!!!{ENDCOLOR}</speech>
        </speeches>
        <speeches id="4">
            <speech>{COLOR=RED}Charizard roars and attacks us.{ENDCOLOR}</speech>
            <speech>{COLOR=RED}Our bag gets dropped and Mom's Amulet falls out.{ENDCOLOR}</speech>
            <speech>{COLOR=RED}Commander Horus notices the Amulet.{ENDCOLOR}</speech>
            <speech>Charizard, come back!</speech>
        </speeches>
        <speeches id="5">
            <speech>{COLOR=RED}Commander Horus looks confused.{ENDCOLOR}</speech>
            <speech>I have to leave. I cannot waste more time here.</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>I failed again...</speech>
            <speech>I am sorry $PLAYER_NAME...</speech>
            <speech>I tried my best but his Charizard swept me completely.</speech>
            <speech>I did not know that journey to be the Pokémon master was going to be so difficult and full of pure evil.</speech>
            <speech>I need some time to get over this $PLAYER_NAME.</speech>
            <speech>I will train even harder now. I will make him regret what he did today.</speech>
            <speech>$PLAYER_NAME, let's meet at Glassmoor's North Exit after we win the 6th badge.</speech>
            <speech>Bye!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Thanks for your effort young trainer.</speech>
            <speech>I am Blitz, leader of the Volcano and the Fire Gym.</speech>
            <speech>I could not save Entei. I was supposed to do that, but I have not battled someone as strong as Horus.</speech>
            <speech>I was not prepared. I am glad in the end we all are safe.</speech>
            <speech>I don't know what their intentions are, but we need to train becoming even stronger.</speech>
            <speech>Meet me at the peak of the volcano, and I will battle you for the 6th Gym Badge.</speech>
        </speeches>
    </conversation>
</npcs>
