<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Raising Pokémon isn't just about battles, but even here, my team is ready to prove their strength!</speech>
        </speeches>
        <speeches id="2">
            <speech>Well raised, well fought! Your Pokémon must trust you a lot.</speech>
        </speeches>
        <speeches id="3">
            <speech>Well raised, well fought! Your Pokémon must trust you a lot.</speech>
        </speeches>
        <speeches id="4">
            <speech>Your team has potential, but proper care and training make all the difference!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Balance, precision, and a bit of flair..let's see if you can keep up with my act!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoops! Looks like I dropped the ball on that one..</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoops! Looks like I dropped the ball on that one..</speech>
        </speeches>
        <speeches id="4">
            <speech>A flawless performance! Maybe you should take up juggling instead of battling!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Only those who command true respect from their Pokémon deserve to stand here!</speech>
        </speeches>
        <speeches id="2">
            <speech>I misjudged your strength... Your Pokémon truly trust you.</speech>
        </speeches>
        <speeches id="3">
            <speech>I misjudged your strength... Your Pokemon truly trust you.</speech>
        </speeches>
        <speeches id="4">
            <speech>You lack control. A true Tamer doesn't just battle...they command with authority!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{COLOR=RED}Molllll...tresssss...{ENDCOLOR}</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=RED}Mooool-TRES!{ENDCOLOR}</speech>
        </speeches>
        <speeches id="3">
            <speech>*Moltres erupts in a spectacular display of {COLOR=RED}crimson flames{ENDCOLOR} and {COLOR=ORANGE}golden fire{ENDCOLOR}*</speech>
            <speech>*The legendary phoenix beats its {COLOR=YELLOW}blazing wings{ENDCOLOR} creating a warm thermal updraft*</speech>
            <speech>*With a proud screech, it indicates the {COLOR=RED}flames must cool{ENDCOLOR} before you return in {COLOR=YELLOW}$DURATION{ENDCOLOR}*</speech>
        </speeches>
        <speeches id="4">
            <speech>{COLOR=RED}Mol-tres!{ENDCOLOR}</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Golbat" speed="1" sprite="42" type="pokemon" x="6" y="16">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Goollbaaat!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Golem" speed="1" sprite="76" type="pokemon" x="22" y="33">
        <path>RIGHTx1,DOWNx1,RIGHTx1,LEFTx1,UPx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Golleeem!</onCollisionSpeech>
        <speech>GOLEEEM!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Golbat" speed="1" sprite="42" type="pokemon" x="51" y="28">
        <path>DOWNx7,LEFTx7,RIGHTx7,UPx7</path>
        <onCollisionSpeech gap="4">Golllbaaat!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Xavier" randomRotation="true" sprite="20" x="21" y="17">
        <speech>Supposedly, if you're in a crew, you can teleport somewhere to heal yourself.</speech>
        <speech>Hah.. I'm too old for that kind of fancy business.</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Machoke" speed="1" sprite="67" type="pokemon" x="34" y="4">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Machoooke!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="7" name="Louise" randomRotation="false" sprite="28" x="32" y="32">
        <speech>Are you kidding!?</speech>
        <speech>My Dragonair has to reach level 55 before it can evolve... I wonder how elegant it will look!</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Hercules" speed="1" sprite="11" type="npc" x="47" y="12">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>How am I supposed to prove myself a hero if nobody will give me a chance?</speech>
    </movingNpc>
</npcs>
