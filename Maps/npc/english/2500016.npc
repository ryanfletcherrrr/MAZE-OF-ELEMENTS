<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Please select a floor.{ENDCOLOR}</speech>
            <speech>The buttons await your input, ready to take you where you need.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GREEN}The lift console closes itself with a soft click.{ENDCOLOR}</speech>
            <speech>You'll need to activate it again if you wish to use it.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}Ah, so we meet again!{ENDCOLOR}</speech>
            <speech>The President and I are discussing a vital business proposition. Keep your nose out of grown-up matters…</speech>
            <speech>Or, experience a world of pain!</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=RED}Arrgh! I lost again?!{ENDCOLOR}</speech>
            <speech>Blast it all! You ruined our plans for Silph!</speech>
            <speech>But Team Rocket will never fall! {COLOR=YELLOW}Never forget that all Pokémon exist for Team Rocket!{ENDCOLOR}</speech>
            <speech>I shall leave Silph Co. for now… But I will return!</speech>
        </speeches>
        <speeches id="3">
            <speech>{COLOR=RED}Hmph. So, you’ve come back… But I have no business with you now.{ENDCOLOR}</speech>
            <speech>Enjoy your little victory while you can.</speech>
        </speeches>
        <speeches id="4">
            <speech>{COLOR=RED}Hah! Just as I expected!{ENDCOLOR}</speech>
            <speech>Pathetic. You dare challenge the leader of Team Rocket with that level of skill?</speech>
            <speech>You're nothing more than an obstacle in my path. Now, begone!</speech>
            <speech>Silph Co. belongs to us now!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=GREEN}Oh dear boy! You saved us!{ENDCOLOR}</speech>
            <speech>Team Rocket was after our research and technology... I shudder to think what they could have done!</speech>
            <speech>As the President of Silph Co., I must thank you for your heroic deeds.</speech>
            <speech>As a token of our gratitude, I present you with our most advanced Poké Ball.</speech>
            <speech>{COLOR=GOLD}You received the Master Ball!{ENDCOLOR}</speech>
            <speech>It’s the ultimate Poké Ball—capable of catching any Pokémon without fail!</speech>
            <speech>Use it wisely... It is the only one we have.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GREEN}Thank you again for saving Silph Co.!{ENDCOLOR}</speech>
            <speech>We will work hard to ensure this never happens again.</speech>
            <speech>The city is safe because of you. I wish you the best on your journey!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>You've made it this far? Impressive. But this is where your journey ends, by order of Giovanni himself!</speech>
        </speeches>
        <speeches id="2">
            <speech>No... I was supposed to stop you! The boss won't forgive this...</speech>
        </speeches>
        <speeches id="3">
            <speech>No... I was supposed to stop you! The boss won't forgive this...</speech>
        </speeches>
        <speeches id="4">
            <speech>You're strong, but not strong enough. Team Rocket always wins in the end!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Ah... {COLOR=CYAN}we meet again{ENDCOLOR}. The trainer who {COLOR=RED}destroyed{ENDCOLOR} my {COLOR=GOLD}Viridian Gym{ENDCOLOR} and dismantled {COLOR=PURPLE}Team Rocket{ENDCOLOR} before.</speech>
            <speech>You should have stayed {COLOR=CYAN}retired{ENDCOLOR}, trainer. Your {COLOR=RED}interference{ENDCOLOR} has become a {COLOR=PURPLE}persistent problem{ENDCOLOR}.</speech>
            <speech>But {COLOR=GOLD}Project T.E.R.A.{ENDCOLOR} represents {COLOR=RED}Team Rocket's{ENDCOLOR} {COLOR=PURPLE}evolution{ENDCOLOR} - power beyond what you faced before.</speech>
            <speech>This time, there will be {COLOR=RED}no escape{ENDCOLOR}. No {COLOR=CYAN}lucky victory{ENDCOLOR}. Only {COLOR=PURPLE}absolute defeat{ENDCOLOR}.</speech>
            <speech>Let us {COLOR=GOLD}settle{ENDCOLOR} this rivalry {COLOR=RED}once and for all{ENDCOLOR}!</speech>
        </speeches>

        <speeches id="2">
            <speech>Again... {COLOR=RED}Again{ENDCOLOR} you stand in my way!</speech>
            <speech>How many times must you {COLOR=PURPLE}humiliate{ENDCOLOR} {COLOR=GOLD}Team Rocket{ENDCOLOR} before you're satisfied?</speech>
            <speech>This {COLOR=CYAN}vendetta{ENDCOLOR} between us has gone on {COLOR=RED}long enough{ENDCOLOR}... but it's far from over.</speech>
            <speech>{COLOR=GOLD}Project T.E.R.A.{ENDCOLOR} was meant to be my {COLOR=PURPLE}final triumph{ENDCOLOR} over you... but you've proven {COLOR=CYAN}resilient{ENDCOLOR} once more.</speech>
            <speech>Enjoy this victory, trainer... it may be your {COLOR=RED}last{ENDCOLOR}.</speech>
        </speeches>

        <speeches id="3">
            <speech>You continue to be a {COLOR=RED}thorn{ENDCOLOR} in {COLOR=GOLD}Team Rocket's{ENDCOLOR} side...</speech>
            <speech>Every time we rebuild, every time we {COLOR=PURPLE}evolve{ENDCOLOR}... you appear to {COLOR=CYAN}tear it down{ENDCOLOR}.</speech>
            <speech>But this {COLOR=RED}cycle{ENDCOLOR} will not continue forever. {COLOR=GOLD}Team Rocket{ENDCOLOR} learns from every {COLOR=PURPLE}defeat{ENDCOLOR}.</speech>
            <speech>Our next encounter will be {COLOR=RED}different{ENDCOLOR}... I guarantee it.</speech>
        </speeches>

        <speeches id="4">
            <speech>Finally! The {COLOR=PURPLE}persistent pest{ENDCOLOR} who destroyed my {COLOR=GOLD}empire{ENDCOLOR} has been {COLOR=RED}eliminated{ENDCOLOR}!</speech>
            <speech>{COLOR=GOLD}Project T.E.R.A.{ENDCOLOR} has given me the {COLOR=PURPLE}power{ENDCOLOR} to surpass our {COLOR=CYAN}previous encounters{ENDCOLOR}!</speech>
            <speech>This {COLOR=RED}victory{ENDCOLOR} tastes sweeter than any {COLOR=GOLD}gym badge{ENDCOLOR} or {COLOR=PURPLE}conquest{ENDCOLOR} before it!</speech>
            <speech>The {COLOR=CYAN}age of Giovanni{ENDCOLOR} begins {COLOR=RED}now{ENDCOLOR}!</speech>
        </speeches>

        <speeches id="5">
            <speech>You think you can {COLOR=RED}rush{ENDCOLOR} to face me like in our {COLOR=PURPLE}previous encounters{ENDCOLOR}?</speech>
            <speech>This time I am {COLOR=GOLD}prepared{ENDCOLOR}. Clear my {COLOR=CYAN}forces{ENDCOLOR} systematically, as a {COLOR=RED}true challenger{ENDCOLOR} should.</speech>
            <speech>Our {COLOR=PURPLE}final battle{ENDCOLOR} will happen when {COLOR=GOLD}I{ENDCOLOR} decide it's time.</speech>
        </speeches>
    </conversation>
    <npc direction="RIGHT" hidden="false" id="1" name="Ms. Vellum" randomRotation="false" sprite="38" x="1" y="8">
        <speech>Go give that suited thug a piece of your mind, dear.</speech>
    </npc>
</npcs>
