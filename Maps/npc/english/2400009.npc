<?xml version="1.0" encoding="UTF-8"?>
<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Aloha! I'm Kaleo, a spiritual medium from the {COLOR=CYAN}Alola region{ENDCOLOR} studying ancestral bonds.</speech>
            <speech>In Alola, our Marowak are mystical - they're {COLOR=ORANGE}Fire/Ghost{ENDCOLOR} types that dance with spirits!</speech>
            <speech>The spiritual energy in Alola transformed Marowak into ghost types, allowing them to commune with ancestors.</speech>
            <speech>Their bone clubs are lit with spiritual flames that burn with the memories of their mothers.</speech>
            <speech>If you have a {COLOR=GREEN}Kanto Marowak{ENDCOLOR} that you caught yourself, I'd love to trade you an {COLOR=CYAN}Alolan Marowak{ENDCOLOR}!</speech>
            <speech>I'm collecting specimens to study how spiritual energy affects Pokémon evolution patterns.</speech>
        </speeches>

        <speeches id="2">
            <speech>Perfect! You have a {COLOR=GREEN}Kanto Marowak{ENDCOLOR} that you caught yourself!</speech>
            <speech>Would you like to trade your {COLOR=GREEN}Kanto Marowak{ENDCOLOR} for my {COLOR=CYAN}Alolan Marowak{ENDCOLOR}?</speech>
            <speech>The Alolan ones can perform the {COLOR=ORANGE}spiritual fire dance{ENDCOLOR} with their flaming bone clubs!</speech>
        </speeches>

        <speeches id="3">
            <speech>I understand - Marowak have such strong bonds with their trainers.</speech>
            <speech>I'll be here studying spiritual energies whenever you're ready!</speech>
        </speeches>

        <speeches id="4">
            <speech>{COLOR=GOLD}Excellent!{ENDCOLOR} Another specimen for my spiritual research!</speech>
            <speech>Let me take your {COLOR=GREEN}Kanto Marowak{ENDCOLOR} and give you this mystical {COLOR=CYAN}Alolan Marowak{ENDCOLOR}.</speech>
            <speech>This Alolan Marowak has developed {COLOR=ORANGE}ghost abilities{ENDCOLOR} from Alola's spiritual energy!</speech>
            <speech>Watch how its bone club flames dance with ancestral spirits!</speech>
            <speech>I'm studying how spiritual energy transforms Pokémon, so if you find more {COLOR=GREEN}Kanto Marowak{ENDCOLOR}, please bring them!</speech>
            <speech>Each trade helps my {COLOR=BLUE}spiritual research{ENDCOLOR} and gives you another mystical {COLOR=CYAN}Alolan Marowak{ENDCOLOR}!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Nidoqueen" speed="1" sprite="31" type="pokemon" x="10" y="7">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Queeeen!</onCollisionSpeech>
    </movingNpc>
</npcs>
