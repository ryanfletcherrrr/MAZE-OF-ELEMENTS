<npcs>
    <conversation id="1">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Welcome, traveler, to Invictus Isle. I am Aria, guardian of this sacred land, where strength is forged in the fires of resolve.</speech>
            <speech>The winds and waves here bow only to those who possess true power. I have watched over these shores for countless seasons, guiding only the worthy to victory.</speech>
            <speech>Your presence stirs the ancient forces that flow through this island. But tell me, $PLAYER_NAME, are you truly ready to face the trials ahead?</speech>
            <speech>On this island, only the strong prevail. Choose your next steps wisely, for Invictus Isle does not show mercy.</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>Impressive, $PLAYER_NAME. Your strength echoes through the winds of Invictus Isle. You have proven yourself worthy.</speech>
            <speech>Let this victory fuel your spirit, but know this: the island will test you again. In [GOLD]$DURATION[] days, the challenge will rise anew, and I will be waiting.</speech>
            <speech>For now, revel in your triumph, for not many can claim such a feat.</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>The tides of Invictus Isle do not always favor a challenge, $PLAYER_NAME. The island is not yet ready to test your strength again.</speech>
            <speech>You must wait for [GOLD]$DURATION[] days before the isle's forces align once more. Only then will you have the chance to prove yourself.</speech>
            <speech>Patience is a warrior's virtue. Until then, the island watches... and so do I.</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>Even the greatest warriors must sometimes bow to defeat, $PLAYER_NAME. But do not despair—true strength is forged through adversity.</speech>
            <speech>Invictus Isle does not break the worthy. Instead, it challenges them to rise stronger.</speech>
            <speech>Return in [GOLD]$DURATION[] days. Let this defeat drive your spirit, and when we meet again, perhaps you will have earned the island's respect.</speech>
        </speeches>
        <speeches id="5" />
    </conversation>

</npcs>
