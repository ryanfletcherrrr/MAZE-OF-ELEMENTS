<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Gloom may look droopy, but don't let that fool you it's tougher than it seems!</speech>
        </speeches>
        <speeches id="2">
            <speech>Aww now I'm the gloomy one</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww now I'm the gloomy one</speech>
        </speeches>
        <speeches id="4">
            <speech>See? Glooms not just cute it's a real powerhouse!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Route 9s rough terrain builds tough trainers! Let's see if you can handle it!</speech>
        </speeches>
        <speeches id="2">
            <speech>Guess I slipped on a loose rock but I'll climb back up stronger!</speech>
        </speeches>
        <speeches id="3">
            <speech>Guess I slipped on a loose rock but I'll climb back up stronger!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ha! Like a sturdy mountain, I stand strong no matter the challenge!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>My bugs may be small, but don't underestimate them! They're quick, tough, and always ready to swarm their foes!</speech>
        </speeches>
        <speeches id="2">
            <speech>Looks like my strategy got squashed. Time to train my team even harder!</speech>
        </speeches>
        <speeches id="3">
            <speech>Looks like my strategy got squashed. Time to train my team even harder!</speech>
        </speeches>
        <speeches id="4">
            <speech>See? Bugs aren't just creepy-crawly They're champions in the making!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>I may be young, but my Pokémon pack a punch! Get ready for a real challenge!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa maybe I should've spent less time bragging and more time training.</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa maybe I should've spent less time bragging and more time training.</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! Told ya! Being young just means I've got more time to get even better!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Nothing beats a good hike and a great battle! Let's see if you've got the stamina to keep up!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa-ho! You've got some real strength! I'll have to step up my training!</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa-ho! You've got some real strength! I'll have to step up my training!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ha! Just like climbing a mountain, battles take patience and endurance!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Bugs are the best! Fast, tricky, and always growing stronger just like me!</speech>
        </speeches>
        <speeches id="2">
            <speech>Aww man guess my team still needs time to evolve.</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww man guess my team still needs time to evolve.</speech>
        </speeches>
        <speeches id="4">
            <speech>See? Bugs aren't weak! You just need to believe in them!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>These rocky trails build strong legs and strong Pokémon. Let's see if you can handle the climb!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph...even the mightiest boulder can crack. You've earned this one.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph...even the mightiest boulder can crack. You've earned this one.</speech>
        </speeches>
        <speeches id="4">
            <speech>Solid as a rock! You've got a long way to go before you can match my strength!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Battling is like fashion grace, confidence, and a touch of flair make all the difference!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh dear... I suppose even beauty needs a backup plan.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh dear... I suppose even beauty needs a backup plan.</speech>
        </speeches>
        <speeches id="4">
            <speech>Flawless! A true victory should always be as dazzling as the trainer behind it.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>I love cute Pokémon! But don't think they can't battle too!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh no! Maybe I need to train with my Pokémon instead of just brushing their fur</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh no! Maybe I need to train with my Pokémon instead of just brushing their fur</speech>
        </speeches>
        <speeches id="4">
            <speech>See? Strength and cuteness go hand in hand!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Whoa! No way! You made it this far too!</speech>
            <speech>This is incredible - we've both come so far since we first met in Viridian Forest!</speech>
            <speech>Look at us now, both getting stronger with every step! My dream of becoming a Pokemon Master is so close!</speech>
            <speech>My team's gotten amazing! Charmeleon has gotten stronger, and Pikachu... well, you'll see!</speech>
            <speech>This might be our most epic battle yet! Ready to see how far we've both come?</speech>
        </speeches>
        <speeches id="2">
            <speech>That was absolutely legendary!</speech>
            <speech>You've become such an incredible trainer! Every battle with you pushes me to be better!</speech>
            <speech>Hey, I've got something really special for you this time - this {COLOR=GOLD}Light Ball{ENDCOLOR} that I found!</speech>
            <speech>It's supposed to boost Electric-type attacks! Perfect for any Pikachu you might catch!</speech>
            <speech>And here, take this prize money too - you've definitely earned it after that amazing battle!</speech>
            <speech>Keep getting stronger! I know we'll both make it to the Pokemon League!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hey there, fellow trainer!</speech>
            <speech>Route 9 can be pretty tough with all these trainers! How's that Light Ball working out?</speech>
            <speech>I can't wait to see how much stronger we both get!</speech>
        </speeches>
        <speeches id="4">
            <speech>Wow! That battle was incredible, even though Pikachu and I came out on top!</speech>
            <speech>You really know how to bring out the best in your team - that was so close!</speech>
            <speech>Here, take this {COLOR=GOLD}Light Ball{ENDCOLOR} and prize money anyway - you've earned it!</speech>
            <speech>Every battle with you makes me a better trainer! Thanks for that!</speech>
            <speech>Lets both keep training hard - the Pokemon League awaits!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Bouffalant" speed="1" sprite="626" type="pokemon" x="17" y="13">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4">BRRAAWWF!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="2" name="Spearow" speed="1" sprite="21" type="pokemon" x="38" y="32">
        <path>UPx3,RIGHTx3,LEFTx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Speaarrowwww!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Emolga" speed="1" sprite="587" type="pokemon" x="41" y="17">
        <path>DOWNx3,LEFTx3,UPx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Emooool!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="4" name="Voltorb" speed="1" sprite="100" type="pokemon" x="53" y="35">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Vooolt!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Spearow" speed="1" sprite="21" type="pokemon" x="33" y="0">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Sppeaaar!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="6" name="Chinchou" speed="1" sprite="170" type="pokemon" x="91" y="6">
        <path>RIGHTx2,DOWNx2,UPx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Chiiinchooou!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="8" name="Chloe" randomRotation="true" sprite="60" x="72" y="24">
        <speech>Oh my, I just love filling up my Pokédex!</speech>
        <speech>Sometimes, I even get access to new areas just by showing off how many Pokémon I've registered!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="10" name="Luke" speed="1" sprite="102" type="npc" x="26" y="23">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>You'll find plenty of Electric-type Pokémon in these routes.</speech>
        <speech>Good thing I'm on a break, I've been zapped more times than my lunch gets microwaved!</speech>
    </movingNpc>
    <movingNpc direction="UP" id="11" name="Hunter" speed="1" sprite="49" type="npc" x="96" y="16">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Dude!</speech>
        <speech>My Magneton evolved into Magnezone when I accidentally dropped a Thunder Stone on it!</speech>
    </movingNpc>
</npcs>
