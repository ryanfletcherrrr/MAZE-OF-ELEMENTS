<npcs>
    <conversation id="7">
        <speeches id="1">
            <speech>Congratulations on your victory over me and for rising to the status of Hoenn's Champion, $PLAYER_NAME.</speech>
            <speech>Your strength and courage have truly impressed me.</speech>
            <speech>As a member of the Hoenn Elite Four, it's my duty to test the limits of those who seek to master the power of dragons.</speech>
            <speech>In recognition of your prowess, I offer you the opportunity to earn the Salamencite, a stone of great power for those who can command it.</speech>
            <speech>Your journey has shown you have the heart of a Dragon Master. Prove your might, and the Salamencite shall be yours.</speech>
            <speech>Seek me out where the dragons soar, and the sea's whisper meets their roar. I await your challenge, ready to witness the depth of your resolve.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Sora" randomRotation="false" sprite="40" x="7" y="12">
        <speech>Easy isn't always simple.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Takashi " randomRotation="true" sprite="20" x="14" y="5">
        <speech>Choose what is right, not what is easy.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Ayaka" randomRotation="false" sprite="33" x="15" y="15">
        <speech>Sometimes, accepting help is harder than offering it.</speech>
    </npc>
</npcs>
