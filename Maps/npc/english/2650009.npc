<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I've been exploring the ship all day! A battle sounds like the perfect break.</speech>
        </speeches>
        <speeches id="2">
            <speech>Wow, you were quick! I guess I need more practice with my Pokémon!</speech>
        </speeches>
        <speeches id="3">
            <speech>Wow, you were quick! I guess I need more practice with my Pokémon!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yay, I did it! I guess I've got some sea power after all!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Being on this ship is awesome! But I'm still ready to show you what I've got in a battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, I can't believe I lost! Guess I got a little too excited...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, I can't believe I lost! Guess I got a little too excited...</speech>
        </speeches>
        <speeches id="4">
            <speech>Yes! That was a blast! Maybe I should challenge you again sometime!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="WIgglytuff" speed="1" sprite="40" type="pokemon" x="13" y="12">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Wiggglyy!</onCollisionSpeech>
    </movingNpc>
</npcs>
