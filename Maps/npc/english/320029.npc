<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Well, now that you've gotten your 6th badge, we're all on equal-footing.</speech>
            <speech>Or, are we? I guess there's only one way to find out, and that's via a battle!</speech>
            <speech>And so, without further ado, let's begin!</speech>
        </speeches>
        <speeches id="2">
            <speech>Wow, you haven't been slacking off, have you $PLAYER_NAME? You're definitely a lot stronger since when we last battled.</speech>
            <speech>But, then again, that's what I expect from my rival. Good job!</speech>
            <speech>By the way, did you find out what why they captured the 3 dogs and why Commander Horus left the Volcano?</speech>
            <speech>Let's not give up and continue our investigation. Path to Gym 7 is long so lets make sure we take full advantage of it and get stronger.</speech>
            <speech>See ya later, ???</speech>
            <speech>Say it with me!</speech>
            <speech>{COLOR=BLUE}Feraligatr.{ENDCOLOR}</speech>
        </speeches>
        <speeches id="3">
           <speech></speech>
        </speeches>
        <speeches id="4">
            <speech>Looks like you've been taking it slow, $PLAYER_NAME. Hehe, no worries, though!</speech>
            <speech>Just gotta train some more, that's all.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>
</npcs>