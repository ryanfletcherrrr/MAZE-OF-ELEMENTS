<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey! You can't go any deeper into these caves!</speech>
            <speech>We're... uh... still conducting important Team Rocket business down there!</speech>
            <speech>Nothing for you to see - especially not any scared little Pokémon hiding around!</speech>
        </speeches>
        <speeches id="2">
            <speech>Argh! My Zubat couldn't stop you...</speech>
            <speech>Look, we already got what we came for during the raid anyway.</speech>
            <speech>If there's some lost Cleffa down there, that's not our problem anymore!</speech>
        </speeches>
        <speeches id="3">
            <speech>Fine, fine... go rescue your precious little Cleffa.</speech>
            <speech>We never should have stuck around Mt. Moon after the boss called off the operation.</speech>
            <speech>Just don't expect us to help you find it!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ha! Told you my Zubat knows these caves better than anyone!</speech>
            <speech>Now turn around and leave that Cleffa alone - it's been through enough!</speech>
            <speech>Team Rocket doesn't need any more trouble from do-gooders like you!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Ugh... Can't believe I got stuck with Mt. Moon duty... Guess I'll just beat you up and go back to napping.</speech>
        </speeches>
        <speeches id="2">
            <speech>Great... now I've gotta tell the boss I lost and didn't finish my nap...</speech>
        </speeches>
        <speeches id="3">
            <speech>Great... now I've gotta tell the boss I lost and didn't finish my nap...</speech>
        </speeches>
        <speeches id="4">
            <speech>Finally! Now I can get back to... important rest-related activities.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>These fossils? Just a small piece of the puzzle. When Giovanni's plan comes together... oh man, you'll wish you hadn't gotten in our way!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... I'll never climb the ranks like this... Maybe I should steal two fossils next time...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... I'll never climb the ranks like this... Maybe I should steal two fossils next time...</speech>
        </speeches>
        <speeches id="4">
            <speech>One step closer to a promotion... Giovanni's gonna see I'm no grunt...I'm a future executive!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Fossils today... Power tomorrow. Giovanni's building something big, and this mountain is just the beginning!</speech>
        </speeches>
        <speeches id="2">
            <speech>No! If Giovanni hears I lost, I'll be stuck scrubbing floors!</speech>
        </speeches>
        <speeches id="3">
            <speech>No! If Giovanni hears I lost, I'll be stuck scrubbing floors!</speech>
        </speeches>
        <speeches id="4">
            <speech>That's one less pest in our way... Giovanni's vision will reshape the world!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Fossils aren't just old bones..they're power. And when Giovanni unlocks their secrets, Team Rocket will be unstoppable!</speech>
        </speeches>
        <speeches id="2">
            <speech>No... I failed him... Giovanni's wrath is worse than losing!</speech>
        </speeches>
        <speeches id="3">
            <speech>No... I failed him... Giovanni's wrath is worse than losing!</speech>
        </speeches>
        <speeches id="4">
            <speech>You can't stop the future. Giovanni's vision will crush everything in its path!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Hey! These fossils are mine! I found them fair and square deep in these ruins!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmph... No way I’m telling you which one’s better. That’s for a true trainer to decide!</speech>
        </speeches>
        <speeches id="3">
            <speech>Alright, alright… You battled well. I guess I can part with one. But only one!</speech>
            <speech>Go on, pick a fossil — but choose wisely. Ancient powers rest within these stones...</speech>
        </speeches>
        <speeches id="4">
            <speech>Go on, pick a fossil — but choose wisely. Ancient powers rest within these stones...</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Clef? Cleffa? *cautiously approaches, sensing your kind intentions*</speech>
            <speech>*The Cleffa finally emerges, looking up at you with hopeful, teary eyes*</speech>
            <speech>Cleffa! *nods eagerly and starts heading toward the cave exit*</speech>
        </speeches>
        <speeches id="2">
            <speech>Cleffa! Clef! *happily bounces ahead, no longer afraid*</speech>
            <speech>*The Cleffa pauses occasionally to make sure you're following*</speech>
            <speech>Clef! *chirps excitedly, eager to reunite with its family*</speech>
        </speeches>
        <speeches id="3">
            <speech>Clef... cleffa... *whimpers softly*</speech>
            <speech>*The tiny Cleffa cowers behind the fallen rock, trembling with fear*</speech>
            <speech>Cleffa! Clef! *looks around frantically for its family*</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Geodude" speed="1" sprite="74" type="pokemon" x="32" y="11">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Geoodudeee</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Geodude" speed="1" sprite="74" type="pokemon" x="31" y="26">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Geoooo!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Paras" speed="1" sprite="46" type="pokemon" x="54" y="10">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">paar paar</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="4" name="Roggenrola" speed="1" sprite="524" type="pokemon" x="46" y="36">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Rollaaaaa!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Travis" randomRotation="true" sprite="39" x="53" y="47">
        <speech>Whew... I thought I'd seen it all.</speech>
        <speech>That Rock and Poison-type Pokémon nearly wiped out my whole team.</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Geodude" speed="1" sprite="74" type="pokemon" x="28" y="56">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Geoooo</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Seth" randomRotation="false" sprite="101" x="22" y="30">
        <speech>Make sure your Pokémon stay healthy, alright?</speech>
        <speech>Can't be too careful out here with those shady guys.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="8" name="Samantha" randomRotation="false" sprite="82" x="17" y="5">
        <speech>Waaah!!!</speech>
        <speech>Oh, you look friendly... I wanted to find a Moon Stone for my Clefairy, but Mt. Moon got really dark suddenly...</speech>
        <speech>Now I'm too scared to move!</speech>
    </npc>
    <movingNpc direction="LEFT" id="9" name="Roggenrola" speed="1" sprite="524" type="pokemon" x="9" y="22">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">rolaaaaaa</onCollisionSpeech>
    </movingNpc>
</npcs>
