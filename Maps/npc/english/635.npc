<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Ah, a new challenger approaches! The waves have whispered your name to me.</speech>
            <speech>Your journey has led you to the depths of the sea. But can you withstand the pressure?</speech>
            <speech>Prepare yourself! This will be a battle as fierce and unpredictable as the ocean itself.</speech>
            <speech>Now, choose your level of difficulty. How deep are you willing to dive?</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>You have bested me? Incredible! Like a ship navigating a storm, you have proven your worth.</speech>
            <speech>But beware, the sea is ever-changing. Next time, the tides may not be in your favor.</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>Turning away? Even the mightiest sailors sometimes retreat. But remember, the sea never truly rests.</speech>
            <speech>Come back when you are ready to brave the depths once more. I will be waiting, perhaps after $DURATION?</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>As I suspected, the ocean's might is too much for you. But do not be discouraged.</speech>
            <speech>Train hard and return when you are ready to face the true power of the sea.</speech>
        </speeches>
        <speeches id="5">
            <!-- Generic Speech -->
            <speech>The sea is vast and full of mysteries, just like the challenges you will face.</speech>
            <speech>Whenever you are ready, come and test your strength against the ocean’s fury.</speech>
            <speech>I will always be here, waiting for a worthy opponent.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>I can't let this mighty Centiskorch challenge my strength. I need to collect 35 Heat Shards.
            </speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Ssss... Centiskorch!</speech>
        </speeches>
        <speeches id="2">
            <speech>*Would you like to give 35 Heat Shards to Centiskorch?*</speech>
        </speeches>
        <speeches id="3">
            <speech>Centiskorch seems impatient.</speech>
        </speeches>
        <speeches id="4">
            <speech>Centiskorch flares up in approval. I can leave this map now!</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Your Pokémon look tired. Would you like me to heal them?</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go, all healthy and happy!</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww, I'm sure they would have liked to rest.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Pyukumuku" shouldSleep="" speed="1" sprite="771" type="pokemon" x="31" y="15">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Octillery" speed="1" sprite="224" type="pokemon" x="5" y="26">
        <path>DOWNx3,RIGHTx9,LEFTx9,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Pelipper" speed="1" sprite="279" type="pokemon" x="9" y="11">
        <path>LEFTx6,DOWNx4,UPx4,RIGHTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Swanna" speed="1" sprite="581" type="pokemon" x="17" y="36">
        <path>UPx6,RIGHTx6,DOWNx6,UPx6,LEFTx6,DOWNx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Sandygast" speed="1" sprite="769" type="pokemon" x="48" y="25">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Sandygast!</onCollisionSpeech>
        <speech>Sandygast!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Clawitzer" speed="1" sprite="693" type="pokemon" x="32" y="25">
        <path>DOWNx6,RIGHTx2,LEFTx2,UPx6</path>
        <onCollisionSpeech gap="4">Clawitzer!</onCollisionSpeech>
        <speech>Clawitzer!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Seel" shouldSleep="" speed="1" sprite="86" type="pokemon" x="41" y="10">
        <path>DOWNx2,LEFTx3,RIGHTx3,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Mantine" speed="1" sprite="226" type="pokemon" x="14" y="9">
        <path>RIGHTx15,LEFTx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Seel" shouldSleep="" speed="1" sprite="86" type="pokemon" x="34" y="15">
        <path>RIGHTx1,UPx1,DOWNx1,LEFTx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Tentacool" speed="1" sprite="72" type="pokemon" x="40" y="34">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Tentacool" speed="1" sprite="72" type="pokemon" x="38" y="36">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Fearow" speed="1" sprite="22" type="pokemon" x="54" y="18">
        <path>DOWNx6,LEFTx4,RIGHTx4,UPx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Finneon" speed="1" sprite="456" type="pokemon" x="58" y="27">
        <path>LEFTx4,UPx4,DOWNx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Finneon" speed="1" sprite="456" type="pokemon" x="53" y="26">
        <path>DOWNx4,LEFTx3,RIGHTx3,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Wailmer" speed="1" sprite="320" type="pokemon" x="49" y="33">
        <path>DOWNx5,RIGHTx5,LEFTx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="19" y="34">
        <path>RIGHTx10,DOWNx3,RIGHTx8,LEFTx8,UPx3,LEFTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Tentacruel" speed="1" sprite="73" type="pokemon" x="25" y="18">
        <path>DOWNx4,LEFTx5,UPx4,DOWNx4,RIGHTx5,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Gyarados" speed="1" sprite="130" type="pokemon" x="11" y="13">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Ondine" speed="1" sprite="22" type="npc" x="7" y="23">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Be careful in these waters! You might think it's safe, but there's plenty lurking at the bottom.</speech>
        <speech>You could step on a Staryu or get nipped by a Corphish if you're not careful.</speech>
        <speech>And Tentacool love to hang out down there, too. Always stay alert when diving.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Mankey" speed="1" sprite="56" type="pokemon" x="42" y="16">
        <path>RIGHTx1,DOWNx1,RIGHTx1,LEFTx1,UPx1,LEFTx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Dweeble" shouldSleep="" speed="1" sprite="557" type="pokemon" x="54" y="13">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Binacle" shouldSleep="" speed="1" sprite="688" type="pokemon" x="43" y="5">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Wailord" speed="1" sprite="321" type="pokemon" x="35" y="4">
        <path>LEFTx14,RIGHTx14</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Wailord" speed="1" sprite="321" type="pokemon" x="32" y="2">
        <path>LEFTx14,RIGHTx14</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="25" name="Doge" randomRotation="true" sprite="4" x="39" y="24">
        <speech>So explore! Very adventure! Much ocean! Wow!</speech>
    </npc>
</npcs>
