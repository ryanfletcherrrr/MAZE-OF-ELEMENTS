<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I don't think you can pass this barrier without answering the question..</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>I believe it's time for a puzzle?</speech>
        </speeches>
        <speeches canSkip="false" id="2">
            <speech>This Pokémon has long been a fan favorite, and for many early players, it was their very first shiny.</speech>
            <speech>Now, with the power of this strange stone, it has transformed into a fearsome force of nature. Can you guess which Pokémon it is?</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh my, oh my, oh my. That's absolutely, definitely not the right correct wrong answer, it's not.
            </speech>
            <speech>In others words, you have failed.</speech>
        </speeches>
        <speeches id="4">
            <speech>No, no, no, hahahahaha. That's not the wrong answer!</speech>
            <speech>Silly you, continue!</speech>
        </speeches>
        <speeches id="5">
            <speech>Silly you, continue!</speech>
        </speeches>
        <speeches id="6">
            <speech>Come back in 2 minutes.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I am a member of the cult of shine lost in the valley of soul.</speech>
            <speech>We are a group of extraordinary individuals, who have gained the power to summon alternate-colored Pokémon.</speech>
            <speech>I believe the common description is "shiny Pokémon". More precisely, I have attained the power to summon a shiny new Duskull.</speech>
            <speech>If you wish to see a demonstration of my power, then bring me 3 Dusknoir (at least Lv.45), and I shall do the rest.</speech>
        </speeches>
        <speeches id="2">
            <speech>I see you have arrived with 3 Dusknoir, as asked of you. Would you like to see a demonstration of my powers?</speech>
        </speeches>
        <speeches id="3">
            <speech>That's a shame.</speech>
        </speeches>
        <speeches id="4">
            <speech>Very well. Time for me to show you my powers - *Huazaha xhakje troyes muhyean*!!</speech>
        </speeches>
        <speeches id="5">
            <speech>And there it is, a 'shiny' Duskull! Make sure you take great care of it!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Welcome to my Soul Shard Shop. Would you like to buy something for Soul Shards?</speech>
        </speeches>
        <speeches id="2">
            <speech>Please visit again!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Palossand" shouldSleep="" speed="1" sprite="770" type="pokemon" x="6" y="27">
        <path>UPx6,DOWNx6</path>
        <onCollisionSpeech gap="4">Palossand!</onCollisionSpeech>
        <speech>Palossand!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Dhelmise" shouldSleep="" speed="1" sprite="781" type="pokemon" x="49" y="41">
        <path>DOWNx4,RIGHTx6,UPx4,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Dhelmise" shouldSleep="" speed="1" sprite="781" type="pokemon" x="30" y="53">
        <path>LEFTx7,RIGHTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Sandygast" shouldSleep="" speed="1" sprite="769" type="pokemon" x="28" y="32">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Sandygast!</onCollisionSpeech>
        <speech>Sandygast!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Jellicent" shouldSleep="" speed="1" sprite="593" type="pokemon" x="56" y="4">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Gastly" speed="1" sprite="92" type="pokemon" x="32" y="5">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Gastly" speed="1" sprite="92" type="pokemon" x="28" y="6">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Frillish" shouldSleep="" speed="1" sprite="592" type="pokemon" x="20" y="6">
        <path>LEFTx5,DOWNx4,RIGHTx5,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Duskull" speed="1" sprite="355" type="pokemon" x="11" y="37">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Mareanie" shouldSleep="" speed="1" sprite="747" type="pokemon" x="40" y="12">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Mareanie" shouldSleep="" speed="1" sprite="747" type="pokemon" x="38" y="21">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Grimer" shouldSleep="" speed="1" sprite="88" type="pokemon" x="56" y="27">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Grimer!</onCollisionSpeech>
        <speech>Grimer!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Grimer" shouldSleep="" speed="1" sprite="88" type="pokemon" x="48" y="36">
        <path>LEFTx3,UPx2,DOWNx2,RIGHTx3</path>
        <onCollisionSpeech gap="4">Grimer!</onCollisionSpeech>
        <speech>Grimer!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="33" y="54">
        <path>RIGHTx11,LEFTx11</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Palossand" shouldSleep="" speed="1" sprite="770" type="pokemon" x="36" y="42">
        <path>DOWNx6,RIGHTx6,LEFTx6,UPx6</path>
        <onCollisionSpeech gap="4">Palossand!</onCollisionSpeech>
        <speech>Palossand!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Toxapex" shouldSleep="" speed="1" sprite="748" type="pokemon" x="11" y="21">
        <path>UPx8,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Sharpedo" speed="1" sprite="1374" type="pokemon" x="2" y="57">
        <path>RIGHTx10,UPx10,DOWNx10,LEFTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>
