<npcs>
    <conversation id="TELEPORT_QUESTION">
        <speech>Abra... Kadabra..... Alakazam.......</speech>
        <speech>Want to see magic and travel to another land?</speech>
    </conversation>

    <conversation id="TELEPORTER_NO_REPLY">
        <speech>That's unfortunate. Please come back whenever you wish to travel elsewhere.</speech>
    </conversation>

    <conversation id="BANK_QUESTION">
        <speech>Greetings! Welcome to the Bank of PBO's ATM system!</speech>
        <speech>Would you like to withdraw or deposit money?</speech>
    </conversation>

    <conversation id="BANK_NO_REPLY">
        <speech>Please return whenever you wish to make a transaction.</speech>
    </conversation>

    <conversation id="BANK_NO_MEMBERSHIP">
        <speech>This feature is available only to people with a &apos;PBO membership&apos;.</speech>
        <speech>For all non-members, you can use our other free to use terminals.</speech>
    </conversation>

    <conversation id="SEEKER_NOT_READY">
        <speech>I find it very brave of you to challenge someone much stronger than you.</speech>
        <speech>Unfortunately, I don't like wasting my time over weaklings.</speech>
    </conversation>

    <conversation id="SEEKER_BEFORE_BATTLE">
        <speech>So you dare to challenge the clan of the strongest of strongest in PBO?</speech>
        <speech>Let's see what you have got kid.</speech>
    </conversation>

    <conversation id="SEEKER_LOSS">
        <speech>I am impressed $PLAYER_NAME.</speech>
        <speech>Let's have a rematch later. I need more practice.</speech>
    </conversation>

    <conversation id="SEEKER_VICTORY">
        <speech>I warned you. Now pay me a fat sum of money for using my time.</speech>
    </conversation>

    <conversation id="SEEKER_NEED_CHARGE">
        <speech>I need some time to get ready for another battle. Why are you being so impatient?</speech>
    </conversation>

    <conversation id="NO_FISHING_ROD_IN_BAG">
        <speech>Hey, kid. I'm the local expert on fishing rods. I heard fishing rods are being given away in Jubilife
            City.
        </speech>
    </conversation>
    <conversation id="FISHING_INTRO_QUES">
        <speech>Hey, there. I'm the local expert on fishing rods. I can fix up your fishing rod if you'd like? For a
            fee, of course.
        </speech>
        <speech>Would you like to repair your rod for 500 F?</speech>
    </conversation>
    <conversation id="FISHING_PLAYER_SAYS_YES">
        <speech>Congratulations, your fishing rod was successfully repaired!</speech>
    </conversation>
    <conversation id="FISHING_PLAYER_SAYS_NO">
        <speech>Come back if you need your rod repaired.</speech>
    </conversation>
    <conversation id="ROD_NEEDS_MAINTENANCE">
        <speech>Your rod is in perfect shape already! Come back when it needs fixing.</speech>
    </conversation>
    <conversation id="MAINTENANCE_CRITERIA_FAILURE">
        <speech>Oops, you don't have enough F to repair your rod.</speech>
    </conversation>

    <conversation id="HEALER_NO_MEMBERSHIP">
        <speech>Oh, I can only heal your pokemon if you have PBO membership. You can buy one from Donator Shop.</speech>
    </conversation>

    <conversation id="SEEKER_MISSING">
        <speech>You currently do not have a Vs. Seeker in your bag.</speech>
    </conversation>

    <conversation id="CW_NOT_RUNNING">
        <speech>Crew Wars is not running.</speech>
    </conversation>

    <conversation id="COME_TOMORROW_MAZE">
        <speech>It is not safe to go to the Legendary Caverns anymore. Please come back tomorrow.</speech>
    </conversation>

    <conversation id="MAZE_LEGENDARY_ALREADY_BATTLED">
        <speech>**The Pokémon doesn't seem to be acknowledging you anymore.**</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokémon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokémon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokémon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Do you want to heal your Pokémon? Remember that every heal you use will lower your chance to get a legendary drop.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_YES">
        <speech>There you go. All your Pokémon are now healed.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_NO">
        <speech>Good choice tough cookie.</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_BEFORE_BATTLE">
        <speech>So you want to battle me? All right, lets do it!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_VICTORY">
        <speech>Pretty strong!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_LOSS">
        <speech>Very weak!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_NOT_BATTLING">
        <speech>I am currently not the mood to battle you.</speech>
    </conversation>

    <conversation id="LEGENDARY_BOSS_WARP_PVP_NPC_PENDING">
        <speech>I cannot take you to the legendary cavern until you defeat all my brothers and show me that you are powerful enough.</speech>
    </conversation>

    <conversation id="FRONTIER_COME_BACK_MONDAY">
        <speech>Champion, the trainers are tired of losing to you and they are not willing to battle anymore.</speech>
        <speech>Please come back on Monday when they will be willing to battle you again.</speech>
    </conversation>

    <conversation id="FRONTIER_LEVEL_NOT_CLEARED">
        <speech>Sorry young trainer but I cannot let you pass until you defeat the champion of the current level.</speech>
    </conversation>

    <conversation id="FRONTIER_LEVEL_CLEARED">
        <speech>Young trainer, you have already defeated me. Go and try challenging bosses of higher level.</speech>
    </conversation>

    <conversation id="FRONTIER_PARTY_INFO">
        <speech>You have more than 3 Pokémon in party.</speech>
    </conversation>

    <conversation id="FRONTIER_CHALLENGE_BOSS_LEVEL_BATTLES_OVER">
        <speech>Trainer, you have defeated me more than enough times now. Please go and challenge the boss.</speech>
    </conversation>

    <conversation id="FRONTIER_PREVIOUS_LEVELS_NOT_CLEARED">
        <speech>You need to defeat bosses of previous levels before you can challenge me.</speech>
    </conversation>

    <conversation id="FRONTIER_BEFORE_BATTLE">
        <speech>Hello youngster, lets battle!</speech>
    </conversation>

    <conversation id="FRONTIER_LOSS">
        <speech>That must have been a fluke.</speech>
    </conversation>

    <conversation id="FRONTIER_VICTORY">
        <speech>Train harder or go home.</speech>
    </conversation>

    <conversation id="FRONTIER_CANNOT_CHALLENGE_BOSS">
        <speech>You need to defeat my apprentice 20 times in order to challenge me.</speech>
    </conversation>

    <conversation id="FRONTIER_USED_SPECIES_OR_TRADED_POKEMON">
        <speech>You either have a Pokémon which was used in previous frontier or you got via trade which was used in frontier recently.</speech>
        <speech>You can use these Pokémon after the next frontier reset which happens every Monday.</speech>
        <speech>Change your party in order to battle me.</speech>
    </conversation>

    <conversation id="BT_BEFORE_BATTLE">
        <speech>So you want to beat me and make a streak? All right, try me!</speech>
    </conversation>

    <conversation id="BT_NPC_LOSS">
        <speech>You have won $WIN_STREAK battle(s) consecutively. Damn!</speech>
    </conversation>

    <conversation id="BT_NPC_VICTORY">
        <speech>Very weak! Now start from 0 HAHAHA!</speech>
    </conversation>

    <conversation id="WITH_GOODWILL_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thanks for making PBO a better experience for other players.</speech>
        <speech>For your contribution we would like to offer you some Goodwill Tokens.</speech>
        <speech>These tokens can be exchanged for exclusive items.</speech>
        <speech>You have total $GOODWILL_TOKENS to claim.</speech>
        <speech>Do you want to claim your $GOODWILL_TOKENS goodwill tokens?</speech>
    </conversation>

    <conversation id="NO_GOODWILL_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thanks for playing PBO.</speech>
        <speech>You currently have no goodwill tokens to claim.</speech>
        <speech>You can get them by Donating to Priests, using Experience Boosts, Lures, Swarm Flutes, Map Bombs and Item Bombs.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_CLAIM_YES">
        <speech>Once again thank you. See you again.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_CLAIM_NO">
        <speech>No worries! You can come back anytime if you want to claim your tokens.</speech>
    </conversation>

    <conversation id="DIVE_QUESTION">
        <speech>The oceans seems very deep here. Would you like to use Dive?</speech>
    </conversation>

    <conversation id="REGION_BANNED_POKEMON_IN_PARTY">
        <speech>You currently have Pokémon in your party which violates the current region laws.</speech>
        <speech>The laws state that you cannot carry any Pokémon into this region from previous region which are above the level criteria.</speech>
        <speech>The level criteria is calculated by the amount of badges you have in the next region + 5.</speech>
        <speech>So if you have 0 badges in the next region, you can carry level 5 max.</speech>
        <speech>Once you defeat Elite 4 in the next region, you can carry any Pokémon from previous region without any restrictions.</speech>
    </conversation>

    <conversation id="DIVE_QUESTION">
        <speech>The oceans seems very deep here. Would you like to use Dive?</speech>
    </conversation>

    <conversation id="WITH_SPIRIT_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thank you for enhancing the dark atmosphere of our parallel spirit world during the Halloween event.</speech>
        <speech>As a token of our gratitude, we'd like to offer you some Spirit Tokens.</speech>
        <speech>These mystical tokens can be exchanged for exclusive, otherworldly items.</speech>
        <speech>You have a total of $SPIRIT_TOKENS to claim.</speech>
        <speech>Would you like to claim your $SPIRIT_TOKENS now?</speech>
    </conversation>

    <conversation id="NO_SPIRIT_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thanks for venturing into the parallel world of PBO during the Halloween event.</speech>
        <speech>Currently, you have no Spirit Tokens to claim.</speech>
        <speech>You can earn them by donating to Dark Priests, using Experience Boosts, Lures, and Swarm Flutes within this realm during the Halloween event..</speech>
    </conversation>

    <conversation id="SPIRIT_TOKENS_CLAIM_YES">
        <speech>Thank you once again for your contributions during the Halloween event. May your journey in the parallel world be ever haunting.</speech>
    </conversation>

    <conversation id="SPIRIT_TOKENS_CLAIM_NO">
        <speech>No worries! The Spirit Tokens will remain with you. Feel free to claim them whenever you dare.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_NON_FUNCTIONAL">
        <speech>Hello $PLAYER_NAME. I'm afraid I can't offer you any Goodwill Tokens at the moment.</speech>
        <speech>My powers are currently weakened, and I suspect it's the work of Chamunda.</speech>
        <speech>I wonder if something ominous is happening again in the Spirit World.</speech>
    </conversation>

    <conversation id="MINING_REGION_NOT_REGISTERED">
        <speech>Ah, you seem qualified. Our boss has been searching for someone resilient, someone who can brave the unknown.</speech>
        <speech>Our ranks have thinned under the harsh conditions and the mysterious dangers that lurk below.</speech>
        <speech>He's currently investigating a strange phenomenon tied to the meteors around volcanoes.</speech>
        <speech>It's a matter of great curiosity and potential opportunity.</speech>
        <speech>Speak with him and retrieve the gear; he'll be in the area where the sky's secrets touch the earth.</speech>
    </conversation>

    <conversation id="START_FIRST_MINING_SESSION">
        <speech>The earth whispers secrets of untold riches beneath our feet in this region.</speech>
        <speech>Shall you take the pickaxe and uncover what lies hidden for your first treasure hunt?</speech>
    </conversation>

    <conversation id="CONTINUE_MINING_SESSIONS">
        <speech>Back so soon, treasure seeker? The veins of wealth in this region run deep and await your eager hands.</speech>
        <speech>Ready to delve into the depths once more and claim your fortune?</speech>
    </conversation>

    <conversation id="WARP_NO_MINING_SESSION_REMAINING">
        <speech>The echo of your pickaxe has faded, and the ground rests from your toil.</speech>
        <speech>Alas, the earth has given all it can for now. Return in $NEXT_MINING_SESSION_DURATION minutes when the land is ripe and ready for your claim.</speech>
    </conversation>

    <conversation id="START_NEW_MINING_SESSION">
        <speech>The earth has replenished its bounty, and its whispers call to you once again, ready for attempt #$MINING_SESSION_ATTEMPT.</speech>
        <speech>Do you feel the pull of adventure, ready to unearth treasures anew?</speech>
    </conversation>

    <conversation id="CANNOT_ACCESS_SITE">
        <speech>Alas, brave miner, despite your level $CURRENT_LEVEL, this site demands a miner of level $REQUIRED_LEVEL or higher.</speech>
        <speech>Seek further mastery of the earth's secrets before you return to challenge its depths.</speech>
    </conversation>

    <conversation id="MINING_SITE_NO_CRITERIA">
        <speech>Hold, brave soul! The ground you wish to conquer is not for the faint-hearted or the untested.</speech>
        <speech>These depths are shrouded in dangers that have repelled many who dared its shadows without the mantle of experience.</speech>
        <speech>Only those recognized as miners, carrying the trust of mining experts, may safely navigate its secrets.</speech>
        <speech>Gather your strength and prove your mettle in the world above. The treasures below will await your triumphant return.</speech>
    </conversation>

    <conversation id="GOODWILL_CURRENCY_TRADER_QUESTION">
        <speech>So you want to exchange your Goodwill Tokens for items?</speech>
    </conversation>

    <conversation id="GOODWILL_CURRENCY_TRADER_NO">
        <speech>No problems. Come back again if you change your mind.</speech>
    </conversation>

    <conversation id="COME_TOMORROW_SHIP">
        <speech>The tides and fates are not in your favor today.</speech>
        <speech>Return in $DURATION, when the seas may grant you passage.</speech>
    </conversation>

    <conversation id="ABANDONED_SHIP_TELEPORTER_QUESTION">
        <speech>The shadows of the abandoned ship beckon. Will you venture into its depths?</speech>
    </conversation>

    <conversation id="ABANDONED_SHIP_COME_DURING_NIGHT">
        <speech>The light of the day conceals the ship's secrets.</speech>
        <speech>Only under the cloak of night may you pass.</speech>
    </conversation>

    <conversation id="MOVE_RELEARNER_NOT_FOUND">
        <speech>Greetings, traveler. I possess a unique ability to assist Pokémon in recalling moves they've once forgotten.</speech>
        <speech>I'm here to offer my services to your Pokémon as well. However, there's a small fee involved.</speech>
        <speech>In exchange for my assistance, I ask for one Heart Scale each time a Pokémon wishes to relearn a move.</speech>
        <speech>One has to make a living, after all.</speech>
        <speech>Should you find yourself in possession of a Heart Scale, do not hesitate to seek me out.</speech>
        <speech>I'll be ready to aid your Pokémon in harnessing their forgotten strengths.</speech>
    </conversation>

    <conversation id="MOVE_RELEARNER_QUESTION">
        <speech>Ooh, so you have a Heart Scale. Say, you want one of your Pokémon to relearn a move they've forgotten?</speech>
    </conversation>

    <conversation id="MOVE_RELEARNER_NO">
        <speech>Alrighty, no worries. Come back whenever you need my help.</speech>
    </conversation>

    <conversation id="EGG_MOVE_NOT_FOUND">
        <speech>Greetings. I possess a unique skill in enabling Pokémon to master moves they would normally acquire only through breeding.</speech>
        <speech>I'm here to extend this special service to your Pokémon, allowing them to learn their 'egg' moves as well.</speech>
        <speech>However, my assistance comes with a requirement. I ask for an Egg Move Voucher each time a Pokémon is to learn an egg move.</speech>
        <speech>One has to make ends meet, after all.</speech>
        <speech>Should you obtain two Egg Move Vouchers, return to me, and I will assist your Pokémon in learning egg moves.</speech>
    </conversation>

    <conversation id="EGG_MOVE_QUESTION">
        <speech>Ooh, so you have a Egg Move Voucher. Say, you want one of your Pokémon to learn an 'egg move'?</speech>
    </conversation>

    <conversation id="EGG_MOVE_NO">
        <speech>Alrighty, no worries. Come back whenever you need my help.</speech>
    </conversation>

    <conversation id="TUTOR_MOVE_NOT_FOUND">
        <speech>Hello there!</speech>
        <speech>I've been blessed with a rare gift - the ability to teach Pokémon moves that aren't accessible through normal levelling up.</speech>
        <speech>I'm all for sharing this gift, so I'm here to offer your Pokémon the chance to learn some unique moves as well.</speech>
        <speech>Of course, there's a little give and take in everything.</speech>
        <speech>A bit of fair exchange, if you will.</speech>
        <speech>Here's my proposition: one Tutor Move Voucher in exchange for teaching a move.</speech>
        <speech>When you're ready to make the trade, just come and find me.</speech>
    </conversation>

    <conversation id="TUTOR_MOVE_QUESTION">
        <speech>Ooh, so you have a Tutor Move Voucher. Say, you want one of your Pokémon to learn a 'tutor move'?</speech>
    </conversation>

    <conversation id="TUTOR_MOVE_NO">
        <speech>Alrighty, no worries. Come back whenever you need my help.</speech>
    </conversation>

    <conversation id="LOSS_IN_HARD_MODE">
        <speech>You must wait $DURATION before challenging me again in hard mode, $PLAYER_NAME.</speech>
        <speech>Remember, do not be overly critical of your team for their defeat. Allow them some time to recuperate.</speech>
    </conversation>

    <conversation id="WITH_RADIANCE_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thank you for bringing the vibrant energy of summer to our sunny paradise.</speech>
        <speech>As a token of our gratitude, we'd like to offer you some Radiance Tokens.</speech>
        <speech>These radiant tokens can be exchanged for exclusive, summer-themed items.</speech>
        <speech>You have a total of $RADIANCE_TOKENS to claim.</speech>
        <speech>Would you like to claim your $RADIANCE_TOKENS now?</speech>
    </conversation>

    <conversation id="NO_RADIANCE_TOKEN_SPEECH">
        <speech>Hello $PLAYER_NAME. Thanks for joining us in the sunny world of PBO during the Summer event.</speech>
        <speech>Currently, you have no Radiance Tokens to claim.</speech>
        <speech>You can earn them by donating to Sun Priests, using Experience Boosts, Lures, and Swarm Flutes within this realm during the Summer event.</speech>
    </conversation>

    <conversation id="RADIANCE_TOKENS_CLAIM_YES">
        <speech>Thank you once again for your contributions during the Summer event. May your journey in this vibrant world be ever bright.</speech>
    </conversation>

    <conversation id="RADIANCE_TOKENS_CLAIM_NO">
        <speech>No worries! The Radiance Tokens will remain with you. Feel free to claim them whenever you wish.</speech>
    </conversation>

    <conversation id="ANOTHER_CREW_OWNS_CW_ISLAND">
        <speech>Invictus Shores is currently under the control of the crew [GOLD]$CREW_NAME[].</speech>
        <speech>Only members of [GOLD]$CREW_NAME[] are allowed to enter.</speech>
    </conversation>

    <conversation id="NOBODY_OWNS_CW_ISLAND">
        <speech>Invictus Shores is currently unclaimed.</speech>
        <speech>Entry is restricted until a crew claims the island.</speech>
    </conversation>

    <conversation id="AROMA_LADY_QUESTION">
        <speech>Your Pokémon seem a bit weary. Would you like me to heal them for you?</speech>
    </conversation>

    <conversation id="AROMA_LADY_YES">
        <speech>There we go, they’re all refreshed and feeling much better!</speech>
    </conversation>

    <conversation id="AROMA_LADY_NO">
        <speech>Oh, I’m sure they would have appreciated a little rest. Perhaps next time.</speech>
    </conversation>

    <conversation id="CW_ISLAND_TELEPORT_QUESTION">
        <speech>Ahoy, traveler! The sea is calling, and the winds are in our favor.</speech>
        <speech>How about setting sail to another land? Invictus Isle awaits!</speech>
    </conversation>

    <conversation id="CW_ISLAND_TELEPORT_NO_REPLY">
        <speech>That's a shame, mate. The ocean's always here, though. Come back anytime you're ready to sail.</speech>
    </conversation>

    <conversation id="NO_SPACE_IN_PARTY_FOR_STARTER">
        <speech>You don't have enough space in your party to select a new starter Pokémon. Make room and try again!</speech>
    </conversation>

    <conversation id="ELITE_4_REQUIRED_FOR_REPEATABLE_GYM">
        <speech>You must first defeat the Champion of the Kanto region before I'll accept a rematch!</speech>
    </conversation>

    <conversation id="MEWTWO_STATUE_IN_ORDER">
        <speech>The eyes of the {COLOR=PURPLE}Mewtwo statue{ENDCOLOR} flicker faintly...</speech>
        <speech>You feel something shift deep within the mansion.</speech>
    </conversation>

    <conversation id="MEWTWO_STATUE_OUT_OF_ORDER">
        <speech>The air grows cold...</speech>
        <speech>The {COLOR=PURPLE}Mewtwo statue{ENDCOLOR} remains still—nothing happens.</speech>
        <speech>It seems you’ve disturbed the order. You feel the puzzle has reset.</speech>
    </conversation>

    <conversation id="DOOR_UNLOCKED">
        <speech>A deep rumble echoes through the mansion...</speech>
        <speech>Somewhere, a heavy mechanism clicks—{COLOR=CYAN}a door has been unlocked!{ENDCOLOR}</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_SELECT_SHARD">
        <speech>I see you have some shards. Which type of Hidden Power would you like your Pokémon to learn?</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_NO_SHARD">
        <speech>You'll need Hidden Power Shards to unlock Hidden Power's true potential. Come back when you've gathered
            some.
        </speech>
    </conversation>

    <conversation id="HIDDEN_POWER_NO_POKEMON">
        <speech>I don't see any Pokémon in your party that can learn Hidden Power.</speech>
        <speech>To learn any Elemental Hidden Power your Pokémon needs to know Hidden Power without any typing.</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_TUTOR_SUCCESS">
        <speech>Success! Your Pokémon has learned Hidden Power of your chosen type.</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_TUTOR_FAILURE">
        <speech>Something went wrong. Your Pokémon wasn't able to learn Hidden Power. Please try again.</speech>
    </conversation>

    <conversation id="ILLEGAL_MOVE_NOT_FOUND">
        <speech>Ah, it's you again! The trainer who helped restore the {COLOR=CYAN}Moonlight Ritual{ENDCOLOR}.</speech>
        <speech>That mystical ceremony has awakened something remarkable in my research.</speech>
        <speech>Knowledge of moves that were once {COLOR=RED}banned from competitive battles{ENDCOLOR}.</speech>
        <speech>These techniques were deemed too powerful for tournaments in generations past.</speech>
        <speech>But the Clefairy's ancient ritual has revealed their secrets to me.</speech>
        <speech>I can teach these {COLOR=YELLOW}forbidden moves{ENDCOLOR} to your Pokémon, but my research requires materials.</speech>
        <speech>For each banned technique, I'll need {COLOR=GREEN}50,000 Pokédollars{ENDCOLOR} and {COLOR=ORANGE}8 Tiny Mushrooms{ENDCOLOR}.</speech>
        <speech>They contain unique spores essential for unlocking these powerful memories.</speech>
        <speech>The Paras around here drop plenty of those mushrooms, so gathering shouldn't be difficult.</speech>
        <speech>Should you wish to delve into these forbidden arts, return with the payment.</speech>
    </conversation>

    <conversation id="ILLEGAL_MOVE_QUESTION">
        <speech>Ah, I see you have the {COLOR=GREEN}funds{ENDCOLOR} and {COLOR=ORANGE}Tiny Mushrooms{ENDCOLOR}!</speech>
        <speech>Say, you want one of your Pokémon to learn a {COLOR=RED}forbidden move{ENDCOLOR}?</speech>
        <speech>These banned techniques carry immense power - too dangerous for competitive battles.</speech>
        <speech>Each lesson requires {COLOR=GREEN}50,000 Pokédollars{ENDCOLOR} and {COLOR=ORANGE}8 Tiny Mushrooms{ENDCOLOR} to unlock the knowledge.</speech>
        <speech>Are you ready to delve into these {COLOR=YELLOW}ancient, banned arts{ENDCOLOR}?</speech>
    </conversation>

    <conversation id="ILLEGAL_MOVE_NO">
        <speech>No problem at all. My research will continue.</speech>
        <speech>Return whenever you're ready to explore these {COLOR=RED}banned techniques{ENDCOLOR}.</speech>
    </conversation>
</npcs>
