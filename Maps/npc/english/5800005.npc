<npcs>
    <conversation id="1" canSkip="false">
        <speeches id="1">
            <speech>Well, well. You're quite the adorable Trainer, but you've also got a spine.</speech>
            <speech>Ahaha! I'm Bertha. I have a preference for Ground-type Pokémon.</speech>
            <speech>Well, would you show this old lady how much you've learned?</speech>
        </speeches>
        <speeches id="2">
            <speech>You're quite something, youngster. I like how you and your Pokémon earned the win by working as one.</speech>
            <speech>That's what makes you so strong.</speech>
            <speech>Ahahaha!</speech>
            <speech>I think that you can go as far as you want.</speech>
            <speech>The Trainer in the next room is a much more formidable opponent. You really must have your wits about you.</speech>
            <speech>However, I think you can go as far as you desire. Ahahaha!</speech>
        </speeches>
        <speeches id="3">
            <speech>Well! Dear child, I must say, that was most impressive.</speech>
            <speech>Your Pokémon believed in you and did their best to earn you the win.</speech>
            <speech>Even though I've lost, I find myself with this silly grin!</speech>
        </speeches>
        <speeches id="4">
            <speech>You did well but not as well as I would have liked you to do.</speech>
        </speeches>
    </conversation>
</npcs>