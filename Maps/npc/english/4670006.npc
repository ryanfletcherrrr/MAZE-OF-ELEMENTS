<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey, $PLAYER_NAME! I'm in a real bind here. My Swampert, ever since it Mega Evolved, it just... it won't listen to me anymore.</speech>
            <speech>And now, it's causing chaos right outside the Elite Four! No one can get through to challenge them. It's like it's guarding the entrance.</speech>
            <speech>I tried everything I could to calm it down, but nothing's worked. I'm really worried it might hurt someone, or itself.</speech>
            <speech>I need your help, $PLAYER_NAME. You've got a way with Pokémon. Maybe you can get through to it? Please, it's urgent.</speech>
        </speeches>
        <speeches id="2">
            <speech>I saw what happened, $PLAYER_NAME. Whether you've just battled Mega Swampert or you encountered it earlier, it's clear we need to take the next step.</speech>
            <speech>While you track down Mega Swampert, I'll dig deeper into research on how to effectively calm it down.</speech>
            <speech>We need a solid plan to ensure its safety—and everyone else's.</speech>
            <speech>Could you head to Sootopolis and locate Mega Swampert for us?</speech>
            <speech>I'll stay here to gather more information and prepare. Let's regroup here afterward with any updates.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, I see... I was really hoping for your help, $PLAYER_NAME. This is a crucial time, and every bit of assistance matters.</speech>
            <speech>Please, reconsider if you find the time. Mega Swampert's well-being, and the safety of others, might depend on our actions.</speech>
        </speeches>
        <speeches id="4">
            <speech>That's great to hear! I knew I could count on you, $PLAYER_NAME.</speech>
            <speech>With Mega Swampert's strong connection to water, Sootopolis seems like the most logical place it would retreat to in a state of distress.</speech>
            <speech>Please, find Mega Swampert in Sootopolis. Meanwhile, I'll continue my research here and try to find a way to calm it down.</speech>
            <speech>Report back to me with any findings here. Together, we can solve this!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>**The ground shakes as Mega Swampert's roars fill the air, its massive form causing tremors with every movement.**</speech>
            <speech>**Tension builds, the water around Sootopolis stirring into whirlpools with its every step.**</speech>
        </speeches>
        <speeches id="2">
            <speech>**As the battle unfolds, Mega Swampert's ferocity shows no sign of waning, its roars echoing a primal challenge.**</speech>
            <speech>**Suddenly, sensing the tide of battle turning against it, Mega Swampert makes a swift retreat,</speech>
            <speech>diving into the depths, leaving only turmoil in its wake.**</speech>
        </speeches>
        <speeches id="3">
            <speech>**Hesitation or a momentary lapse in the battle's intensity emboldens Mega Swampert, its roars growing louder, a clear refusal to be tamed.**</speech>
            <speech>**'Find the strength to face me, or step aside,' the crashing waves around it seem to roar in defiance.**</speech>
        </speeches>
        <speeches id="4">
            <speech>**Facing retreat, Mega Swampert's roars take on a taunting tone, challenging your resolve.</speech>
            <speech>'Flee now, Trainer, and return when you are truly ready,' it seems to scoff through the tumultuous water.**</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hey, $PLAYER_NAME! So, Mega Swampert fled again? I was afraid this might happen. But I think I've found a potential solution.</speech>
            <speech>Mega Swampert always had a strong connection to the water, especially in its Mega Evolved state.</speech>
            <speech>There's a scientist here in Sootopolis, an expert in Pokémon physiology.</speech>
            <speech>She told me about a Mystic Potion that might help calm Mega Swampert down.</speech>
            <speech>The potion requires star-shaped gills extracted from Mudkip. It's a bit specific, but I believe it's our best shot at helping Mega Swampert.</speech>
            <speech>Could you go meet the scientists while I try to find the location of Swampert?</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm counting on you, $PLAYER_NAME. Finding those Mudkip and preparing the Mystic Potion is crucial.</speech>
            <speech>The scientist in Sootopolis is waiting for us with the recipe for the Mystic Potion.</speech>
            <speech>Let's not waste any time. Mega Swampert needs our help.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Hey, $PLAYER_NAME! I've been doing some research, and I found out we might be able to help Swampert with a Mystic Potion.</speech>
            <speech>It's known to soothe and calm Pokémon in distress. There's a scientist in Sootopolis who can make it, but we need star-shaped gills from Mudkips.</speech>
            <speech>Have you managed to get the potion yet?</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, you have the Mystic Potion! That's fantastic news, $PLAYER_NAME! This might be exactly what we need to help Swampert.</speech>
            <speech>Could you hand it over to me? I plan to find Swampert and try to calm it down with this potion.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, you're not ready to give it to me yet? That's okay, take your time, $PLAYER_NAME.</speech>
            <speech>We need to make sure we're fully prepared before we approach Swampert again.</speech>
            <speech>Just let me know when you're ready to hand over the potion. I'll wait for your signal.</speech>
        </speeches>
        <speeches id="4">
            <speech>Thank you so much, $PLAYER_NAME! With this Mystic Potion, we might finally be able to calm Swampert's rampage.</speech>
            <speech>I'll head towards the Seafloor Cavern right away. That's the last place Swampert was seen. I'm hopeful this potion will make a difference.</speech>
        </speeches>
        <speeches id="5">
            <speech>Alright, with the Mystic Potion in hand, it's time to act. I'll go ahead to the Seafloor Cavern to find Swampert.</speech>
            <speech>I'm optimistic this will help. I'll meet you there, $PLAYER_NAME. Let's hope for the best. See you soon!</speech>
        </speeches>
    </conversation>
    <npc direction="RIGHT" hidden="false" id="1" name="Shota " randomRotation="false" sprite="26" x="41" y="61">
        <speech>You know, seeing you here at the Pokémon League reminds me of my own journey.</speech>
        <speech>It's a testament to your strength and perseverance. Keep pushing forward, Trainer!</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="2" name="Ryo" randomRotation="false" sprite="10" x="45" y="55">
        <speech>You've got that spark in your eyes, the same one I had when I first challenged the League. Keep that fire burning, and you'll go far.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="3" name="Nao" randomRotation="false" sprite="19" x="38" y="40">
        <speech>The League is where legends are born, and you're well on your way to becoming one. Keep pushing forward, and don't ever give up!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Tatsuya " randomRotation="false" sprite="32" x="29" y="37">
        <speech>It's not every day you see a Trainer make it to the League. You've got guts, kid. Don't let anyone tell you otherwise.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Daichi" randomRotation="false" sprite="23" x="23" y="16">
        <speech>Congratulations! You made it!</speech>
        <speech>Good luck in there!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Swellow" speed="1" sprite="277" type="pokemon" x="12" y="35">
        <path>UPx7,RIGHTx5,DOWNx7,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Seaking" speed="1" sprite="119" type="pokemon" x="42" y="32">
        <path>UPx8,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Machamp" speed="1" sprite="68" type="pokemon" x="27" y="45">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Hariyama" speed="1" sprite="297" type="pokemon" x="32" y="45">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Throh" speed="1" sprite="538" type="pokemon" x="15" y="14">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Sawk" speed="1" sprite="539" type="pokemon" x="10" y="14">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Toxicroak" speed="1" sprite="454" type="pokemon" x="31" y="27">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Pangoro" speed="1" sprite="675" type="pokemon" x="31" y="22">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Skarmory" speed="1" sprite="227" type="pokemon" x="34" y="47">
        <path>LEFTx9,DOWNx2,RIGHTx9,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Hitmonlee" speed="1" sprite="106" type="pokemon" x="14" y="40">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Hitmonchan" speed="1" sprite="107" type="pokemon" x="19" y="40">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Skarmory" speed="1" sprite="227" type="pokemon" x="54" y="19">
        <path>LEFTx21,DOWNx16,UPx16,RIGHTx21</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Hitmontop" speed="1" sprite="237" type="pokemon" x="49" y="57">
        <path>RIGHTx2,DOWNx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Skarmory" speed="1" sprite="227" type="pokemon" x="37" y="51">
        <path>DOWNx3,LEFTx15,UPx3,RIGHTx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Wingull" speed="1" sprite="278" type="pokemon" x="39" y="3">
        <path>LEFTx6,UPx3,RIGHTx6,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Wingull" speed="1" sprite="278" type="pokemon" x="11" y="0">
        <path>DOWNx3,RIGHTx6,UPx3,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Pelipper" speed="1" sprite="279" type="pokemon" x="43" y="9">
        <path>LEFTx7,DOWNx2,RIGHTx7,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Swellow" speed="1" sprite="277" type="pokemon" x="17" y="8">
        <path>LEFTx13,DOWNx20,UPx20,RIGHTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="3" y="36">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="25" name="Taillow" shouldSleep="" speed="1" sprite="276" type="pokemon" x="49" y="50">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>
