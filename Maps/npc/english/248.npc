<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Battles are just like picnics you gotta enjoy the moment and savor the fun!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh no! Now my sandwiches are really toast!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh no! Now my sandwiches are really toast!</speech>
        </speeches>
        <speeches id="4">
            <speech>Nothing beats a great meal and a victory: best day ever!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Tch. You look way too clean-cut. Let's mess things up a bit!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Guess I gotta respect your strength. But don't let it go to your head!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Guess I gotta respect your strength. But don't let it go to your head!</speech>
        </speeches>
        <speeches id="4">
            <speech>Too slow! You gotta fight with some attitude if you wanna win!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Road's mine, and so is this battle! Think you can keep up?</speech>
        </speeches>
        <speeches id="2">
            <speech>Grr...Maybe I should've tuned up my Pokémon instead of my bike.</speech>
        </speeches>
        <speeches id="3">
            <speech>Grr...Maybe I should've tuned up my Pokémon instead of my bike.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Too slow! You gotta ride hard and battle harder!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Battling is just like picking out an outfit, you gotta know what works best!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph! Maybe my strategy wasn't as cute as I thought...</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph! Maybe my strategy wasn't as cute as I thought...</speech>
        </speeches>
        <speeches id="4">
            <speech>See? Style and skill go hand in hand!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>My Pokémon and I are best friends! We always battle together with smiles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh no...We need to train harder! But we'll stay positive!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh no...We need to train harder! But we'll stay positive!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yay! Winning feels even better when you're having fun!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Time for a battle haiku! This is really good. My opponent is a kid. I will win for sure.</speech>
        </speeches>
        <speeches id="2">
            <speech>Time for a battle haiku! I can't believe it. I can still continue on. I can still battle.</speech>
        </speeches>
        <speeches id="3">
            <speech>Time for a battle haiku! I can't believe it. I can still continue on. I can still battle.</speech>
        </speeches>
        <speeches id="4">
            <speech>Time for a battle haiku! I knew I would win. Yes, my Pokmon and I are really this strong.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>My Pokémon soar higher than the rest! Let's see if you can keep up.</speech>
        </speeches>
        <speeches id="2">
            <speech>Looks like my wings got clipped. Time to train harder!</speech>
        </speeches>
        <speeches id="3">
            <speech>Looks like my wings got clipped. Time to train harder!</speech>
        </speeches>
        <speeches id="4">
            <speech>Another victory, just like the wind carrying my Pokémon to new heights!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>The wind whispers secrets and it tells me you're in for a tough battle.</speech>
        </speeches>
        <speeches id="2">
            <speech>The wind shifts Seems I wasn't meant to win this time.</speech>
        </speeches>
        <speeches id="3">
            <speech>The wind shifts Seems I wasn't meant to win this time.</speech>
        </speeches>
        <speeches id="4">
            <speech>Like the migrating birds, I move forward, always searching for the next challenge.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>A good trainer understands the flow of battle just like birds understand the wind.</speech>
        </speeches>
        <speeches id="2">
            <speech>Even the best fliers get caught in a storm sometimes...</speech>
        </speeches>
        <speeches id="3">
            <speech>Even the best fliers get caught in a storm sometimes...</speech>
        </speeches>
        <speeches id="4">
            <speech>Patience and precision, that's how a true Bird Keeper wins!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Battling gets my engine running! Let's make this a wild ride</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh, my momentum just crashed Better rev up for next time!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh, my momentum just crashed Better rev up for next time!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Left you in the dust! You gotta pick up the pace!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>A good battle is like a good catch; you just have to wait for the right moment to strike!</speech>
        </speeches>
        <speeches id="2">
            <speech>Guess I let this one get away. Should've used a stronger line!</speech>
        </speeches>
        <speeches id="3">
            <speech>Guess I let this one get away. Should've used a stronger line!</speech>
        </speeches>
        <speeches id="4">
            <speech>Patience pays off, kid. Just like in fishing, just like in battles!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Behold! The sky's finest performers take the stage! Watch as my birds dance through battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>A tragic fall from the heavens but every great performance has an encore!</speech>
        </speeches>
        <speeches id="3">
            <speech>A tragic fall from the heavens but every great performance has an encore!</speech>
        </speeches>
        <speeches id="4">
            <speech>Marvelous! My Pokémon have once again painted the sky with victory!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="73" y="35">
        <path>RIGHTx3,DOWNx1,RIGHTx3,LEFTx3,UPx1,LEFTx3</path>
        <onCollisionSpeech gap="4">Luuuuv!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Kevin" speed="1" sprite="24" type="npc" x="65" y="37">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>You didn't hear it from me, but guess what?</speech>
        <speech>You can sometimes find a Heracronite from Heracross!</speech>
        <speech>Isn't that awesome?!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Tatsugiri" speed="1" sprite="1458" type="pokemon" x="110" y="3">
        <path>DOWNx9,LEFTx1,UPx9,RIGHTx1</path>
        <onCollisionSpeech gap="4">Tatsuuuuuuu!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="4" name="Phil" randomRotation="true" sprite="39" x="89" y="24">
        <speech>Now, have some patience with these routes, kid.</speech>
        <speech>If you don't keep your Pokémon healthy, they'll be crankier than me before my morning coffee!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Zack" randomRotation="false" sprite="49" x="86" y="37">
        <speech>Whaaaatsuuuuup!?</speech>
        <speech>I think the Water-type Pokémon around here aren't digging Raichu and me jamming out for band practice!</speech>
        <speech>Maybe they're just jealous of our moves!</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Raichu" speed="1" sprite="26" type="pokemon" x="88" y="37">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Raii!? Raichu!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="7" name="Pelipper" speed="1" sprite="279" type="pokemon" x="80" y="46">
        <path>RIGHTx8,UPx3,RIGHTx5,LEFTx5,DOWNx3,LEFTx8</path>
        <onCollisionSpeech gap="4">WRAAAAWK!!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="8" name="Heracross" speed="1" sprite="214" type="pokemon" x="97" y="50">
        <path>RIGHTx10,LEFTx10</path>
        <onCollisionSpeech gap="4">Herrrraaaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="10" name="Bounsweet" speed="1" sprite="761" type="pokemon" x="73" y="23">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Sweeeeet!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="11" name="Steve" randomRotation="false" sprite="35" x="67" y="28">
        <speech>I'm using my Shiny Tracker to eventually find a Pelipper and i'm almost at 70%, so get outta here!</speech>
        <speech>What's that? Oh yeah, you can find one at any Poké Mart for 30,000.</speech>
        <speech>You get a progressive boost till 100% for your shiny encounter rate with that Pokémon, Pretty cool, huh?</speech>
    </npc>
    <movingNpc direction="LEFT" id="12" name="Andrew" speed="1" sprite="39" type="npc" x="65" y="22">
        <path>LEFTx8,UPx1,RIGHTx8,DOWNx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Have you obtained Hidden Power for your Pokémon yet?</speech>
        <speech>My Magneton knows Hidden Power Fire, it melts through other Steel-types like butter!</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="14" name="Amanda" randomRotation="true" sprite="60" x="36" y="11">
        <speech>Wow! I was feeding all the Skwovet around here, and one popped up looking really sick and sparkly!</speech>
        <speech>It ran off as soon as I got close... I really hope it's alright!</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Skwovet" speed="1" sprite="1097" type="pokemon" x="26" y="3">
        <path>DOWNx4,RIGHTx3,DOWNx2,UPx2,LEFTx3,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="UP" id="16" name="Fearow" speed="1" sprite="22" type="pokemon" x="0" y="20">
        <path>UPx2,RIGHTx1,UPx2,RIGHTx1,LEFTx1,DOWNx2,LEFTx1,DOWNx2</path>
        <onCollisionSpeech gap="4">Fearooww!</onCollisionSpeech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="17" name="Noah" randomRotation="true" sprite="8" x="10" y="34">
        <speech>Have you ever heard of a Pokémon called Toucannon?</speech>
        <speech>You could literally cook food on its beak while it uses Beak Blast!</speech>
        <speech>Just... be careful it might burn you too!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="13" name="Rhys" speed="1" sprite="80" type="npc" x="44" y="25">
        <path>RIGHTx3,DOWNx4,LEFTx3,UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>They should hold racing contests here!</speech>
    </movingNpc>
</npcs>
