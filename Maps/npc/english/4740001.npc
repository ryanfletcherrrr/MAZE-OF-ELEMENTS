<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Greetings, seeker of the earth's treasures. You've come in search of pickaxe blueprints, I surmise.</speech>
            <speech>Such designs, however, demand a seasoned hand. A miner of level 20 or more possesses the requisite wisdom.</speech>
            <speech>Return once you've honed your craft to this level. The secrets of the earth await those ready to understand them.</speech>
        </speeches>

        <speeches id="2">
            <speech>Welcome, seeker. You stand before a curator of mining's finest tools.</speech>
            <speech>The blueprints I offer are not mere drawings; they are keys to unlocking the earth's bounty.</speech>
            <speech>Each is a testament to the miner's journey, demanding respect and a certain level of mastery.</speech>
            <speech>Peruse my collection with this in mind. The choice is yours to make.</speech>
        </speeches>
    </conversation>

   <conversation id="2">
       <speeches id="1">
           <speech>Seeker of the deep, your journey towards crafting the Gold Pickaxe begins, yet the path remains unclear.</speech>
           <speech>Required are: a Gold Pickaxe Blueprint, ten Heart Scales, a Nugget, a Pearl,</speech>
           <speech>a Fossilized Carapace, Petalized Coral, and a Shell Plate Fragment.</speech>
           <speech>These materials, once united, will forge a tool of legend.</speech>
       </speeches>

       <speeches id="2">
           <speech>At last, the elements have converged! The Blueprint, Heart Scales, and other treasures stand ready.</speech>
           <speech>Shall we commence the forging of the Gold Pickaxe, merging these elements into a singular masterpiece?</speech>
       </speeches>

       <speeches id="3">
           <speech>Understood. The moment of creation is sacred and demands readiness. Should you reconsider, I await your decision.</speech>
       </speeches>

       <speeches id="5">
           <speech>The art of the ancients now lies within your grasp, encapsulated in this Gold Pickaxe.</speech>
           <speech>Wield it with the wisdom of a seasoned miner. May it uncover riches and secrets long buried beneath.</speech>
           <speech>Our paths may cross again, should the earth's hidden treasures call out for discovery. Until then, delve wisely and deeply.</speech>
       </speeches>
   </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Greetings, seeker of unparalleled depths. Your ambition brings you to the threshold of the Platinum Pickaxe.</speech>
            <speech>Essential are: the Platinum Pickaxe Blueprint, twenty-five Heart Scales, five Big Pearls, a Fossilized Crest,</speech>
            <speech>An Ancient Wing Fragment, a Glacial Crest Shard, and a Fossilized Fish.</speech>
            <speech>Together, they will birth a tool unmatched in might and splendor.</speech>
        </speeches>

        <speeches id="2">
            <speech>Behold, the convergence of rarest elements! The Blueprint, Heart Scales, Big Pearls, and ancients’ relics align.</speech>
            <speech>Do you wish to merge these wonders, forging the exalted Platinum Pickaxe?</speech>
        </speeches>

        <speeches id="3">
            <speech>The craft awaits your readiness. The creation of such a tool is not to be hastened. Return when your heart is set.</speech>
        </speeches>

        <speeches id="4">
            <speech>With a steady hand and an ancient rite, the elements before us will intertwine, manifesting the Platinum Pickaxe.</speech>
            <speech>This instrument of legends shall serve as your beacon in the darkness, revealing the world's most guarded secrets.</speech>
            <speech>Through your resolve and these sacred materials, the Platinum Pickaxe is realized—a marvel of craftsmanship.</speech>
            <speech>May its gleam guide your way to fortunes untold. Venture forth with the might of ages at your side.</speech>
            <speech>Fare thee well, miner of legends. May the depths reveal their bounty in your worthy hands.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Atop this solitary peak, where stars kiss the earth, I stand.</speech>
            <speech>Seeker of the ultimate, you come for the Diamond Pickaxe.</speech>
            <speech>Your quest demands: a Diamond Blueprint, forty Heart Scales, a Comet Shard, a Pearl String,</speech>
            <speech>an Oceanic Fossil Residue, a Spiral Shell Fragment, a Reptilian Fang and a Rampaging Jawbone.</speech>
            <speech>Amass these jewels of the earth and cosmos, and together, we'll unveil a creation beyond mere mortal comprehension.</speech>
        </speeches>

        <speeches id="2">
            <speech>The heavens align, the earth whispers. Your trove of cosmic and terrestrial treasures awaits its destiny.</speech>
            <speech>Is your spirit prepared to witness the birth of the Diamond Pickaxe, a marvel uniting sky and soil?</speech>
        </speeches>

        <speeches id="3">
            <speech>Patience, seeker. The cosmos does not rush, nor should we. Reflect upon this monumental task.</speech>
            <speech>When your resolve is as firm as the diamond itself, return. The stars will wait for their champion.</speech>
        </speeches>

        <speeches id="4">
            <speech>Let the cosmos converge, as starfire and earth's essence fuse. Each item, a verse in this epic of creation.</speech>
            <speech>The Diamond Pickaxe emerges, a masterpiece of celestial craftsmanship, your testament to the heavens and earth.</speech>
            <speech>This ceremony concludes. The Diamond Pickaxe, a fusion of cosmic might and earth's resilience, is now yours.</speech>
            <speech>Wield it to uncover secrets hidden since the world's dawn. Journey forth, bearer of the cosmos' might, and unveil the mysteries of creation.</speech>
        </speeches>
    </conversation>
</npcs>