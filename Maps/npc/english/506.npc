<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>You are a Pokèmon trainer, and so am I! Our eyes met, so battle we must!</speech>
        </speeches>
        <speeches id="2">
            <speech>Too Strong! Too Strong!</speech>
        </speeches>
        <speeches id="3">
            <speech>Too Strong! Too Strong!</speech>
        </speeches>
        <speeches id="4">
            <speech>Too Weak! Too Weak!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I spy, with my little eye...</speech>
            <speech>A Trainer!</speech>
            <speech>A battle, please!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh Boo! I can't win.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh Boo! I can't win.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh Boo! You can't win.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Let's have a Pokèmon battle!</speech>
            <speech>Humph! But I'm gonna win!</speech>
        </speeches>
        <speeches id="2">
            <speech>You beat me?!</speech>
            <speech>You've got talent!</speech>
        </speeches>
        <speeches id="3">
            <speech>You beat me?!</speech>
            <speech>You've got talent!</speech>
        </speeches>
        <speeches id="4">
            <speech>I already told you that I was going to win.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>$PLAYER_NAME, I haven't told you how to catch a Pokèmon, have I?</speech>
            <speech>You wait for the wild Pokémon's HP to go down by attacking it.</speech>
            <speech>Once it's low, you should click on the Bag button.</speech>
            <speech>In the bag, find the Poké Ball you want to use.</speech>
            <speech>Click on it, and the Pokémon will be captured.</speech>
            <speech>It's important to get the Pokémon's HP as low as possible.</speech>
            <speech>This is because a healthy Pokémon is very difficult to catch.</speech>
            <speech>Oh, Pokémon also get easier to catch if you make them sleep or something by using a Pokémon's move.</speech>
            <speech>OK, $PLAYER_NAME, to get you started, I'll give you five Poké Balls!</speech>
            <speech>In addition, here's 1,000 Poké Dollars to help you on your journey. Use it wisely to buy items or supplies!</speech>
            <speech>I'm also giving you an Escape Rope. This handy item lets you escape from caves or other places instantly.</speech>
            <speech>It's great if you find yourself in a tough spot.</speech>
            <speech>You'll also receive five Super Potions. These will restore 50 HP to one of your Pokémon, so keep them handy in battles.</speech>
            <speech>Lastly, take these five Revives. If one of your Pokémon faints, you can use a Revive to bring it back to consciousness, with half of its max HP restored.</speech>
        </speeches>
        <speeches id="2">
            <speech>If you have lots of Pokémon with you, it will be safer on long trips.</speech>
            <speech>Plus, it will be a lot more fun having your Pokémon friends along. OK, I need to get going.</speech>
            <speech>Bye, now!</speech>
        </speeches>
    </conversation>

    <npc direction="DOWN" id="1" name="Joseph" sprite="4" x="13" y="19">
        <speech>Some Pokémon only appear in the morning.</speech>
        <speech>Some only appear at night.</speech>
        <speech>I'll keep looking till I've caught them all!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Marika" sprite="17" x="11" y="29">
        <speech>Hey, could you help find a way out of this route?</speech>
        <speech>...</speech>
        <speech>You're lost too? Great... seems like I will miss my favorite TV show.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Kelbee" sprite="41" x="31" y="20">
        <speech>Don't be shy about talking to Trainers you'd like to battle.</speech>
        <speech>Pokémon grow stronger and stronger from battling.</speech>
        <speech>Some trainers may even pull you aside for a battle as well!</speech>
        <speech>You'll want to be prepared at any time for a battle.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Bugcatcher Charles" shouldSleep="1" speed="1" sprite="24" x="33" y="5">
        <path>LEFTx2, DOWNx3, RIGHTx2, UPx3</path>
        <onCollisionSpeech gap="4">Please give me space, I'm looking for bugs</onCollisionSpeech>
        <speech>Hey, did you find any bug Pokémon?</speech>
        <speech>...</speech>
        <speech>I've been looking for an hour but I haven't found any.</speech>
        <speech>Let me know if you find one. It's driving me nuts that I haven't seen any!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Lilly" sprite="6" x="23" y="14">
        <speech>My Pokémon are all tuckered out! I need to go to a Pokémon Center!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="6" name="Trovis" sprite="25" x="20" y="3">
        <speech>Hey, would you like to trade a bug Pokémon for Bidoof?</speech>
        <speech>...</speech>
        <speech>Just kidding! This is my super epic Bidoof!</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="7" name="Harry" sprite="26" x="9" y="8">
        <speech>It was fun battling with other Trainers!</speech>
        <speech>I'd battle you too, but I need to hit a Pokémon Center first...</speech>
        <speech>My Pokémon need to rest.</speech>
    </npc>
    <movingNpc direction="LEFT" id="8" name="Hiker Norman" shouldSleep="" speed="1" sprite="10" x="26" y="28">
        <path>LEFTx3, DOWNx2, RIGHTx3, UPx2</path>
        <onCollisionSpeech gap="4">How's your training going?</onCollisionSpeech>
        <speech>Hello $PLAYER_NAME, I like exploring the Mountains cause they are cool.</speech>
        <speech>Would you like to join me?</speech>
        <speech>Not right now, you say?</speech>
        <speech>Ahh, so, you want to be a Pokémon Master, well then no problem.</speech>
        <speech>Good luck $PLAYER_NAME!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Starly" shouldSleep="" speed="1" sprite="396" type="pokemon" x="34" y="15">
        <path>LEFTx4, UPx1, RIGHTx4, DOWNx1</path>
        <onCollisionSpeech gap="4">Staaaaaaaar</onCollisionSpeech>
        <speech>Starly..Starly...</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="10" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="7" y="10">
        <path>LEFTx3,DOWNx1,RIGHTx3,UPx1</path>
        <onCollisionSpeech gap="4">*The Zigzagoon barks at you*</onCollisionSpeech>
        <speech>Zigzagoon...</speech>
    </movingNpc>
</npcs>
