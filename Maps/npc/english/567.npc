<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I shall present to you elegant moves worthy of the title of Rich Boy!</speech>
        </speeches>
        <speeches id="2">
            <speech>To think that anybody could be stronger than me! ...You're not just anybody!</speech>
        </speeches>
        <speeches id="3">
            <speech>To think that anybody could be stronger than me! ...You're not just anybody!</speech>
        </speeches>
        <speeches id="4">
            <speech>It's said that a Pokémon's strength depends on its training. It's not your fault. It can't be
                helped.
            </speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I've always wanted to be a Beauty, so I've made a fresh start, focusing on my appearance.</speech>
        </speeches>
        <speeches id="2">
            <speech>Six months' investment in the latest treatments... Look at me now! I glow like never before!
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Six months' investment in the latest treatments... Look at me now! I glow like never before!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Whatever your dream is, if you want to make it a reality, you have to do what it takes.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>My father, a great man, always said, The ends justify the means as long as you win!</speech>
        </speeches>
        <speeches id="2">
            <speech>Wh-why?! Could my father's words have been wrong?</speech>
        </speeches>
        <speeches id="3">
            <speech>Wh-why?! Could my father's words have been wrong?</speech>
        </speeches>
        <speeches id="4">
            <speech>It's just as my father said... History is written by the winners.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>I came here for my big brother who always hides in his room.</speech>
        </speeches>
        <speeches id="2">
            <speech>I wish my big brother would come out of his room and play with me...</speech>
        </speeches>
        <speeches id="3">
            <speech>I wish my big brother would come out of his room and play with me...</speech>
        </speeches>
        <speeches id="4">
            <speech>My big brother, look outside for once! I won for you! So come out and play!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Even though my upbringing and behavior are poor, I've raised my Pokémon well.</speech>
        </speeches>
        <speeches id="2">
            <speech>Unlike my diabolical self, these are some good Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Unlike my diabolical self, these are some good Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>Right? Pretty good Pokémon, huh? I'm suited to raising things.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Despite my appearance, I was an Ace Trainer until recently.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ace Trainers past a certain age have all changed their careers.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ace Trainers past a certain age have all changed their careers.</speech>
        </speeches>
        <speeches id="4">
            <speech>Past a certain age, it's time to hang up on being an Ace Trainer and move on.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>The weather's too awful for me to work! I'm just amusing myself here.</speech>
        </speeches>
        <speeches id="2">
            <speech>If only my Ability were Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>If only my Ability were Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>Whoa! I'm in a Sunny Day kind of mood!!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Thanks to my Pokémon, I spend every day totally addicted to my part-time job.</speech>
        </speeches>
        <speeches id="2">
            <speech>Living life for Pokémon... Am I OK with this...</speech>
        </speeches>
        <speeches id="3">
            <speech>Living life for Pokémon... Am I OK with this...</speech>
        </speeches>
        <speeches id="4">
            <speech>I have a gluttonous Pokémon that's destroying my budget. No joke!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>I don't care who you are or where you come from.</speech>
        </speeches>
        <speeches id="2">
            <speech>I need to rethink my relationship with my Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>I need to rethink my relationship with my Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>A label is not important, is it? After all, you are yourself, right?</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>'Sup! I'll give it all I've got! Let's do our best!!</speech>
        </speeches>
        <speeches id="2">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="3">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="4">
            <speech>'Sup! Good work. I tried everything I could, but I'm still pretty disappointed, yo!</speech>
        </speeches>
    </conversation>
</npcs>
