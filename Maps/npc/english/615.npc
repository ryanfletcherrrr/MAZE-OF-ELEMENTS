<npcs>
    <npc direction="RIGHT" hidden="false" id="1" name="Fisherman Ben" randomRotation="false" sprite="16" x="15" y="15">
        <speech>Be careful in these waters!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Horsea" shouldSleep="" speed="1" sprite="116" type="pokemon" x="30" y="21">
        <path>LEFTx4, RIGHTx4</path>
        <onCollisionSpeech gap="4">!!!</onCollisionSpeech>
        <speech>*You startle Horsea*</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Tropius" shouldSleep="" speed="1" sprite="357" type="pokemon" x="49" y="15">
        <path>LEFTx3, RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Venomoth" shouldSleep="" speed="1" sprite="49" type="pokemon" x="53" y="6">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Timmy" shouldSleep="" speed="1" sprite="24" type="npc" x="46" y="7">
        <path>LEFTx6, DOWNx1, RIGHTx6, UPx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>I hear theres a new bug Pokémon around here!</speech>
        <speech>COME TO TIMMY!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Golduck" shouldSleep="" speed="1" sprite="55" type="pokemon" x="25" y="9">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>You look down, did you lose and came here to relax?</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go! you are not that bad.</speech>
        </speeches>
        <speeches id="3">
            <speech>There you go! you are not that bad.</speech>
        </speeches>
        <speeches id="4">
            <speech>No good!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I want an other Bird, heard there is a cool one here.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'll keep looking for one</speech>
        </speeches>
        <speeches id="3">
            <speech>I'll keep looking for one</speech>
        </speeches>
        <speeches id="4">
            <speech>I'll keep looking for one</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Watchu looking at? My name is Slim</speech>
        </speeches>
        <speeches id="2">
            <speech>Why are you still here.</speech>
        </speeches>
        <speeches id="3">
            <speech>Why are you still here.</speech>
        </speeches>
        <speeches id="4">
            <speech>That's how we do it!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Your Pokémon look tired. Would you like me to heal them&gt;</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go, all healthy and happy!</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww, I'm sure they would have liked to rest.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Your Pokémon look tired. Would you like me to heal them&gt;</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go, all healthy and happy!</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww, I'm sure they would have liked to rest.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Ah, the champion arrives. Route 227's harsh winds are perfect for sharpening our skills, eh?</speech>
            <speech>My Kingdra's been eager for a real challenge. How about yours? Ready to clash with the waves?</speech>
        </speeches>
        <speeches id="2">
            <speech>Impressive! You've got the makings of a true Dragon Master, no doubt about it.</speech>
            <speech>But remember, the ocean's depths are endless. There's always more to master.</speech>
        </speeches>
        <speeches id="3">
            <speech>Holding back, are we? The sea's roar is not for the faint-hearted.</speech>
            <speech>Come find me when you're ready to dive deep into battle, with Kingdra by your side.</speech>
        </speeches>
        <speeches id="4">
            <speech>Victory is yours, champion. You've sailed through this challenge with flying colors.</speech>
            <speech>May this victory guide you as you navigate the vast sea of battles ahead.</speech>
        </speeches>
        <speeches id="5">
            <speech>The ocean's secrets are vast, and its guardians formidable. Only those who truly understand the depths can summon its strength.</speech>
            <speech>A certain dragon of the deep may yet hold the key to surpassing me. Seek it out, should you dare.</speech>
        </speeches>
    </conversation>
</npcs>
