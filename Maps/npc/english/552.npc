<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I'm working very hard, but that doesn't mean that I'm strong.</speech>
        </speeches>
        <speeches id="2">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="3">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="4">
            <speech>What?! Even I can lose?! But I'm a battling genius!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I chose the path of the Punk Girl. Not being popular is getting to me, though...</speech>
        </speeches>
        <speeches id="2">
            <speech>Fine... Maybe I'll change my tune from Punk Girl to surfer girl. Now, look out!</speech>
        </speeches>
        <speeches id="3">
            <speech>Fine... Maybe I'll change my tune from Punk Girl to surfer girl. Now, look out!</speech>
        </speeches>
        <speeches id="4">
            <speech>Maybe it's bad that I never give halfway strong guys a chance...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I've spent 20 years trying to find myself... But where am I?</speech>
        </speeches>
        <speeches id="2">
            <speech>Wait up a second! Hey! Don't you know who I am?</speech>
        </speeches>
        <speeches id="3">
            <speech>Wait up a second! Hey! Don't you know who I am?</speech>
        </speeches>
        <speeches id="4">
            <speech>Before I start searching for my real self... Where in the world are we here?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Stop! I'm going to have to ask you not to move. Just sit back and see what I do with my shears!</speech>
        </speeches>
        <speeches id="2">
            <speech>I knew I hated humans! All I need is scissors!</speech>
        </speeches>
        <speeches id="3">
            <speech>I knew I hated humans! All I need is scissors!</speech>
        </speeches>
        <speeches id="4">
            <speech>You have shown quite the cutting prowess... I shall sharpen my shears to face you again.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>My Pokémon will trump yours! You can bet on losing!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ahh... I'm flat broke... That's it. I've got nothing left...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahh... I'm flat broke... That's it. I've got nothing left...</speech>
        </speeches>
        <speeches id="4">
            <speech>All right! Victory is mine! Fortune is smiling on me!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I praise your courage in challenging me! For I am the one with the strongest kick!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. The Pokémon did the fighting. My strong kick didn't help a bit.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>It's merely a Pokémon battle, right? Why so serious?</speech>
        </speeches>
        <speeches id="2">
            <speech>It's not like you really lose anything when you lose. As long as you enjoy it, that's enough.</speech>
        </speeches>
        <speeches id="3">
            <speech>It's not like you really lose anything when you lose. As long as you enjoy it, that's enough.</speech>
        </speeches>
        <speeches id="4">
            <speech>So what if you lose? It's not like there's any money in winning.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>I shall present to you elegant moves worthy of the title of Rich Boy!</speech>
        </speeches>
        <speeches id="2">
            <speech>To think that anybody could be stronger than me! ...You're not just anybody!</speech>
        </speeches>
        <speeches id="3">
            <speech>To think that anybody could be stronger than me! ...You're not just anybody!</speech>
        </speeches>
        <speeches id="4">
            <speech>It's said that a Pokémon's strength depends on its training. It's not your fault. It can't be helped.</speech>
        </speeches>
    </conversation>
</npcs>
