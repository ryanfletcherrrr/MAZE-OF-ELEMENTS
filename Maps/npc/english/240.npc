<npcs>
    <movingNpc direction="RIGHT" id="1" name="Lapras" speed="1" sprite="131" type="pokemon" x="12" y="19">
        <path>RIGHTx5,UPx2,LEFTx5,DOWNx2</path>
        <onCollisionSpeech gap="4">lapppraaass!</onCollisionSpeech>
        <speech>laprasss!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Cloyster" speed="1" sprite="91" type="pokemon" x="20" y="9">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Clooooy!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Tentacruel" speed="1" sprite="73" type="pokemon" x="49" y="21">
        <path>DOWNx2,RIGHTx5,UPx2,LEFTx5</path>
        <onCollisionSpeech gap="4">Tentaaa!</onCollisionSpeech>
        <speech>tenta!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Slowpoke" speed="1" sprite="79" type="pokemon" x="28" y="7">
        <path>DOWNx2,RIGHTx5,LEFTx5,UPx2</path>
        <onCollisionSpeech gap="4">Sloooow?</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Dragonair" speed="1" sprite="148" type="pokemon" x="59" y="22">
        <path>DOWNx4,LEFTx5,RIGHTx5,UPx4</path>
        <onCollisionSpeech gap="4">Naiiiir!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="6" name="Dawn" randomRotation="true" sprite="60" x="13" y="14">
        <speech>Oh, hello there, dear. The Pokémon around this town are part of the Safari Zone.</speech>
        <speech>They've been lovingly cared for over the years just like family.</speech>
    </npc>
    <movingNpc direction="LEFT" id="7" name="Amara" speed="1" sprite="7" type="npc" x="22" y="7">
        <path>LEFTx4,UPx1,RIGHTx4,DOWNx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>If you find any Vitamins on your adventure, you can use them to boost your Pokémon's stats.</speech>
        <speech>Or, if you're in need of quick cash, they sell well Poké Marts!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="8" name="Ethan" speed="1" sprite="35" type="npc" x="32" y="36">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Watch yourself against Koga.</speech>
        <speech>The guy's no joke intimidating, precise and every bit the ninja he claims to be.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="9" name="Nidoking" speed="1" sprite="34" type="pokemon" x="25" y="27">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Kiiiiiiiiiiing!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="10" name="Anthony" randomRotation="false" sprite="58" x="17" y="26">
        <speech>One day, I'm totally gonna work for Koga!</speech>
        <speech>I've already got a Beedrill, a Nidorina, and an Ekans and I train with them every single day, no matter what!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="11" name="Naruto" randomRotation="false" sprite="58" x="62" y="9">
        <speech>Hey wait!</speech>
        <speech>Don't walk away from me... I'm not done yet!</speech>
        <speech>I don't quit, and I never go back on my word because that's my ninja way!</speech>
    </npc>
    <movingNpc direction="DOWN" id="12" name="Beedrill" speed="1" sprite="15" type="pokemon" x="51" y="44">
        <path>RIGHTx3,DOWNx3,RIGHTx3,LEFTx3,UPx3,LEFTx3</path>
        <onCollisionSpeech gap="4">drillllll!</onCollisionSpeech>
        <speech>drilll!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Alex" randomRotation="false" sprite="80" x="5" y="21">
        <speech>Hey, welcome to Fuchsia City, dude.</speech>
        <speech>Came in from Route 18? Nice, right?</speech>
        <speech>Feels good riding through with the wind in your hair.</speech>
    </npc>
    <movingNpc direction="LEFT" id="14" name="Golbat" speed="1" sprite="42" type="pokemon" x="65" y="39">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Golbaaaat!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="15" name="Lucas" randomRotation="true" sprite="49" x="41" y="20">
        <speech>What's jammin, dude?</speech>
        <speech>I rolled in here hunting for a Scyther, but those bad boys are so rare, not even the Safari Zone can claim them.</speech>
        <speech>Word is, they only hit the scene in swarms once in a blue moon.</speech>
    </npc>

    <conversation id="3">
        <speeches id="1">
            <speech>Hey! I can't believe it's you again!</speech>
            <speech>I just finished exploring the Safari Zone - caught some amazing Pokemon in there!</speech>
            <speech>Fuchsia City is such a cool place! All the ninjas and poison-type specialists really keep you on your toes!</speech>
            <speech>My team keeps getting stronger! Charizard's been practicing some new moves, and Pikachu's electric attacks are incredible now!</speech>
            <speech>I've been thinking about our battles since Viridian Forest - we've both grown so much as trainers!</speech>
            <speech>Ready for another epic showdown? Let's see what we've both learned!</speech>
        </speeches>
        <speeches id="2">
            <speech>Amazing! That battle was absolutely incredible!</speech>
            <speech>You and your Pokemon have such perfect teamwork - it's inspiring to watch!</speech>
            <speech>Hey, I found these {COLOR=GOLD}Wise Glasses{ENDCOLOR} in the Safari Zone - they boost special attacks!</speech>
            <speech>I think they'd be perfect for your team! And here's some prize money too!</speech>
            <speech>Keep pushing forward - I have a feeling we're both destined for greatness!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hey there! Still exploring Fuchsia City?</speech>
            <speech>The Safari Zone is amazing, isn't it? How are those Wise Glasses working out?</speech>
            <speech>I love running into fellow trainers who share the same passion!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yes! That was such an intense battle!</speech>
            <speech>Even though Pikachu and I managed to win, you really pushed us to our absolute limits!</speech>
            <speech>Here, take these {COLOR=GOLD}Wise Glasses{ENDCOLOR} and prize money anyway - you've earned them!</speech>
            <speech>5,000 Pokedollars for being such an amazing trainer!</speech>
            <speech>Battles like this remind me why I love being a Pokemon trainer!</speech>
        </speeches>
    </conversation>
</npcs>
