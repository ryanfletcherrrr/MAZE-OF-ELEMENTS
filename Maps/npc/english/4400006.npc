<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>The adrenaline is pumping in my team! Me, too! I'll make this an awesome battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>I did what I came to do, and this is how it turned out. There's nothing else to say.</speech>
        </speeches>
        <speeches id="3">
            <speech>I did what I came to do, and this is how it turned out. There's nothing else to say.</speech>
        </speeches>
        <speeches id="4">
            <speech>How about it? We're awesome, right? You were able to explode, weren't you?</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Experience begets power! Isn't that what they say?! Anyway, won't you battle me?</speech>
        </speeches>
        <speeches id="2">
            <speech>This battle was a valuable experience. I still need to gain more experience!</speech>
        </speeches>
        <speeches id="3">
            <speech>This battle was a valuable experience. I still need to gain more experience!</speech>
        </speeches>
        <speeches id="4">
            <speech>Even an amateur like me can win! Experience is the best teacher, so they say.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Time for a battle haiku! This is really good. My opponent is a kid. I will win for sure.</speech>
        </speeches>
        <speeches id="2">
            <speech>Time for a battle haiku! I can't believe it. I can still continue on. I can still battle.</speech>
        </speeches>
        <speeches id="3">
            <speech>Time for a battle haiku! I can't believe it. I can still continue on. I can still battle.</speech>
        </speeches>
        <speeches id="4">
            <speech>Time for a battle haiku! I knew I would win. Yes, my Pokémon and I are really this strong.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>My last ever battle... That's the way I'd like us to view this match...</speech>
        </speeches>
        <speeches id="2">
            <speech>It's been fun... Let's have another last battle again someday...</speech>
        </speeches>
        <speeches id="3">
            <speech>It's been fun... Let's have another last battle again someday...</speech>
        </speeches>
        <speeches id="4">
            <speech>We will meet again someday... Heh. If only that were true...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Hehe, I fooled you, didn't I?</speech>
        </speeches>
        <speeches id="2">
            <speech>Well I should go back to hiding.</speech>
        </speeches>
        <speeches id="3">
            <speech>Well I should go back to hiding.</speech>
        </speeches>
        <speeches id="4">
            <speech>As a trainer you should take every step with precaution.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>The battles continue forever! Welcome to the world with no end!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ahaha! There it is! That's right! You're already right at home in this world!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahaha! There it is! That's right! You're already right at home in this world!</speech>
        </speeches>
        <speeches id="4">
            <speech>If you're already losing, maybe it'd be better to turn back now.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Talent? Hah! It's just a convenient excuse lazy Trainers use to explain away their losses.</speech>
        </speeches>
        <speeches id="2">
            <speech>OK, OK... I lose. Maybe I'll just keep working kind of hard.</speech>
        </speeches>
        <speeches id="3">
            <speech>OK, OK... I lose. Maybe I'll just keep working kind of hard.</speech>
        </speeches>
        <speeches id="4">
            <speech>So-called talent is no more than an illusion... The efforts of one's own are all that is real.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>My old lady done left me... I reckon it's all my fault...</speech>
        </speeches>
        <speeches id="2">
            <speech>I got too hooked on Pokémon battles, so's I never did nothin' around the house.</speech>
        </speeches>
        <speeches id="3">
            <speech>I got too hooked on Pokémon battles, so's I never did nothin' around the house.</speech>
        </speeches>
        <speeches id="4">
            <speech>Now there ain't nobody buggin' me about stuff, so's I can battle as much as I want!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Have we met or not? I don't really remember. Well, I guess it's nice to meet you anyway!</speech>
        </speeches>
        <speeches id="2">
            <speech>No way... NO WAY! How could I lose again...</speech>
        </speeches>
        <speeches id="3">
            <speech>No way... NO WAY! How could I lose again...</speech>
        </speeches>
        <speeches id="4">
            <speech>Yahoo! YAHOO! I did it! I won again!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>I am here to get tanned. The heat of the battle might just speed up the process ;)
</speech>
        </speeches>
        <speeches id="2">
            <speech>Should have stayed home and used a spray.</speech>
        </speeches>
        <speeches id="3">
            <speech>Should have stayed home and used a spray.</speech>
        </speeches>
        <speeches id="4">
            <speech>Don't I look pretty?</speech>
        </speeches>
    </conversation>
</npcs>
