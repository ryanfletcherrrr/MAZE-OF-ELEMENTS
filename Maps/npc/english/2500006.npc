<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Please select a floor.{ENDCOLOR}</speech>
            <speech>The buttons await your input, ready to take you where you need.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GREEN}The lift console closes itself with a soft click.{ENDCOLOR}</speech>
            <speech>You'll need to activate it again if you wish to use it.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Whoa, you're here too?{ENDCOLOR} Good! This place is a disaster!</speech>
            <speech>Team Rocket's swarmed the building, {COLOR=RED}locking up scientists and stealing tech!{ENDCOLOR}</speech>
            <speech>I heard their {COLOR=PURPLE}boss{ENDCOLOR} is holed up at the {COLOR=CYAN}top floor{ENDCOLOR}. If we don’t stop them, who knows what’ll happen?</speech>
            <speech>I'm gonna check around for a way up. {COLOR=GREEN}You should do the same—let’s take these guys down!{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}They're back!{ENDCOLOR} Team Rocket has locked down Silph HQ and is experimenting on Porygon!</speech>
            <speech>They're using fragments of an old prototype called {COLOR=YELLOW}Project T.E.R.A.{ENDCOLOR} to corrupt our systems!</speech>
            <speech>Our {COLOR=CYAN}Porygon units{ENDCOLOR} are turning hostile, and the entire building is compromised!</speech>
            <speech>The security systems are completely overrun - they've taken control of floors 2 through 11!</speech>
            <speech>Please, can you infiltrate the building and {COLOR=RED}stop Team Rocket{ENDCOLOR} before something catastrophic happens?</speech>
        </speeches>
        <speeches id="2">
            <speech>Thank you! Be extremely careful in there!</speech>
            <speech>Team Rocket has {COLOR=RED}weaponized{ENDCOLOR} our Porygon using unstable {COLOR=YELLOW}Tera Energy{ENDCOLOR}!</speech>
            <speech>You'll face multiple grunts throughout the building, and their leader is somewhere on the upper floors!</speech>
            <speech>The fate of Silph Co. - and possibly all of Kanto - depends on you!</speech>
            <speech>Good luck, trainer!</speech>
        </speeches>
        <speeches id="3">
            <speech>I understand this is dangerous, but we're running out of time!</speech>
            <speech>Every minute they're in there, more {COLOR=CYAN}Porygon{ENDCOLOR} are being corrupted!</speech>
            <speech>Please reconsider - we need your help!</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm still working on repairing the damage caused by Team Rocket's invasion.</speech>
            <speech>The {COLOR=CYAN}Porygon systems{ENDCOLOR} are slowly being restored to their normal state.</speech>
            <speech>My repairs will be complete in {COLOR=YELLOW}$DURATION{ENDCOLOR}, then we can assess if they've returned.</speech>
            <speech>Thank you for your patience while I restore our security protocols.</speech>
        </speeches>
        <speeches id="5">
            <speech>Wait! You need to be properly prepared before facing Team Rocket!</speech>
            <speech>They're using {COLOR=RED}advanced technology{ENDCOLOR} and {COLOR=YELLOW}Tera Energy{ENDCOLOR}!</speech>
            <speech>Make sure you're ready for this challenge!</speech>
        </speeches>
        <speeches id="6">
            <speech>The building is still under Team Rocket control!</speech>
            <speech>I'm detecting hostile signals from the upper floors - their leader is still in there!</speech>
            <speech>You need to {COLOR=RED}defeat their commander{ENDCOLOR} to fully liberate Silph Co.!</speech>
        </speeches>
        <speeches id="7">
            <speech>The {COLOR=YELLOW}Project T.E.R.A.{ENDCOLOR} systems are still active somewhere in the building!</speech>
            <speech>Team Rocket must have a {COLOR=RED}major operation{ENDCOLOR} running on the upper floors!</speech>
            <speech>Until their main force is defeated, our Porygon will remain corrupted!</speech>
            <speech>Please, find and stop their leader before they complete their plans!</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Receptionist Elva" randomRotation="false" sprite="7" x="37" y="17">
        <speech>Welcome to Silph Co., Home of innovation and stress-induced breakthroughs!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Intern Jayson" shouldSleep="" speed="1" sprite="8" type="npc" x="21" y="6">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>I was hired this morning and already lost in the elevator.</speech>
        <speech>Please send help.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Executive Mina" randomRotation="false" sprite="19" x="27" y="24">
        <speech>If one more tourist asks where the 'Mega Stone Department' is, I'm jumping out the window.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Conspiracy Guy Dennis" shouldSleep="" speed="1" sprite="37" type="npc" x="2" y="11">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>You think Silph just makes Poké Balls?</speech>
        <speech>Open your eyes, kid. I've seen a Slowpoke with Bluetooth.</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="5" name="" randomRotation="true" sprite="162" x="36" y="17">
        <speech>Welcome to Silph Co., Home of innovation and stress-induced breakthroughs!</speech>
    </npc>
</npcs>
