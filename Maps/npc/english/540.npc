<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Have you seen a Cleffa anywhere?</speech>
            <speech>Sutta Gang Members has taken my master hostage inside the mansion and Cleffa got scared and ran off
                with the spare key.
            </speech>
            <speech>Can you please help me find it. I will go and search for it as well.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Thank you for finding Cleffa for me!</speech>
            <speech>Will you help save Mr Backlot please?</speech>
            <speech>I will try and gather more people to help.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>The door appears to be locked!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>You could have just walked away, you know!</speech>
        </speeches>
        <speeches id="2">
            <speech>Leave me alone</speech>
        </speeches>
        <speeches id="3">
            <speech>Leave me alone</speech>
        </speeches>
        <speeches id="4">
            <speech>Your fault that you lost.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>I wish I could live in that mansion. Let's race to see who can go there.</speech>
        </speeches>
        <speeches id="2">
            <speech>*sob*</speech>
        </speeches>
        <speeches id="3">
            <speech>*sob*</speech>
        </speeches>
        <speeches id="4">
            <speech>Let's go there together next time.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>What s wrong with my rod? or is it my bait? I can't find any fish. Show me how you do it.</speech>
        </speeches>
        <speeches id="2">
            <speech>I feel stupid for fishing in an empty lake.</speech>
        </speeches>
        <speeches id="3">
            <speech>I feel stupid for fishing in an empty lake.</speech>
        </speeches>
        <speeches id="4">
            <speech>That's not how we do it.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>This is full of bugs, isn't that cool.</speech>
        </speeches>
        <speeches id="2">
            <speech>I will be as strong as you next time.</speech>
        </speeches>
        <speeches id="3">
            <speech>I will be as strong as you next time.</speech>
        </speeches>
        <speeches id="4">
            <speech>Yay I can be the champion.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>I will not lose to Team Milotic . I AM THE BEST.
                All hail lord Gyarados.</speech>
        </speeches>
        <speeches id="2">
            <speech>Why did you butt in to begin with!</speech>
        </speeches>
        <speeches id="3">
            <speech>Why did you butt in to begin with!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yeah! this what happens when you're not Team Gyarados.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Hello trainer! Join our team, for the love of Milotic we will win.</speech>
        </speeches>
        <speeches id="2">
            <speech>Traitor!!</speech>
        </speeches>
        <speeches id="3">
            <speech>Traitor!!</speech>
        </speeches>
        <speeches id="4">
            <speech>So? You joining us now ?</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>I feel like I got replaced by Eevee! </speech>
        </speeches>
        <speeches id="2">
            <speech>Not like you'll understand anyway!</speech>
        </speeches>
        <speeches id="3">
            <speech>Not like you'll understand anyway!</speech>
        </speeches>
        <speeches id="4">
            <speech>Okey! Back to staring!!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>You think I'll find any Eevees around here? Eevee Eevee where are you!!</speech>
        </speeches>
        <speeches id="2">
            <speech>Battles should have been 8v8. I can't be serious without using all my Eevees. *sob* </speech>
        </speeches>
        <speeches id="3">
            <speech>Battles should have been 8v8. I can't be serious without using all my Eevees. *sob* </speech>
        </speeches>
        <speeches id="4">
            <speech>You scaring my Eevees.</speech>
        </speeches>
    </conversation>
</npcs>
