<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>You've come here to challenge Elite 4?</speech>
            <speech>Before that, let's see if you're even worth their time!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, alright. You're not too bad, you know.</speech>
        </speeches>
        <speeches id="3">
            <speech>They are a lot stronger than me, that's for sure.</speech>
        </speeches>
        <speeches id="4">
            <speech>Go back, you'll just waste their time.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Guided by this motivation, you shall not pass.</speech>
            <speech>I'm warning you!</speech>
        </speeches>
        <speeches id="2">
            <speech>You may pass.</speech>
        </speeches>
        <speeches id="3">
            <speech>You won't get much far.</speech>
        </speeches>
        <speeches id="4">
            <speech>You shall not pass.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I am just testing my skills.</speech>
            <speech>You are my prey!</speech>
        </speeches>
        <speeches id="2">
            <speech>I am really bad.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sorry for wasting your time.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sorry for wasting your time.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>What should I do now?</speech>
            <speech>Ahhhhhhhhh!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ahhhhh!</speech>
        </speeches>
        <speeches id="3">
            <speech>I am so lost.</speech>
        </speeches>
        <speeches id="4">
            <speech>I feel better now!!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>This pressure. I can't get over it.</speech>
            <speech>Let me try something!</speech>
        </speeches>
        <speeches id="2">
            <speech>It didn't work.</speech>
        </speeches>
        <speeches id="3">
            <speech>It didn't work.</speech>
        </speeches>
        <speeches id="4">
            <speech>Go away.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I am the last one.</speech>
            <speech>Brrrrrrrrrrrrrraw!</speech>
        </speeches>
        <speeches id="2">
            <speech>Good luck, you will need it.</speech>
        </speeches>
        <speeches id="3">
            <speech>Brrrrrrrrrrrraw!</speech>
        </speeches>
        <speeches id="4">
            <speech>You will have to walk back stronger next time.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Your Pokémon look tired. Would you like me to heal them&gt;</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go, all healthy and happy!</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww, I'm sure they would have liked to rest.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, I can only heal your pokemon if you have PBO membership. You can buy one from donator shop.</speech>
        </speeches>
    </conversation>
</npcs>
