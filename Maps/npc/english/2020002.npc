<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>Ah, perfect timing! I have an urgent {COLOR=PURPLE}research parcel{ENDCOLOR} that needs to reach {COLOR=BLUE}Professor Oak{ENDCOLOR} immediately.</speech>
            <speech>It contains critical data from our latest field studies — time-sensitive material that can't wait for regular delivery.</speech>
            <speech>You look like a capable trainer. Would you be willing to deliver this to the {COLOR=BLUE}Professor{ENDCOLOR} personally?</speech>
            <speech>He should be at his lab in {COLOR=CYAN}Pallet Town{ENDCOLOR}. This would be a tremendous help to our research efforts.</speech>
        </speeches>
        <speeches id="2">
            <speech>Excellent! {COLOR=BLUE}Professor Oak{ENDCOLOR} will be so relieved to receive this data on schedule.</speech>
            <speech>Your assistance ensures our research can continue without delays. Thank you, truly.</speech>
            <speech>Safe travels to {COLOR=CYAN}Pallet Town{ENDCOLOR} — and please, handle that parcel with care!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Sophia" speed="1" sprite="104" type="npc" x="14" y="10">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>You should always stock up on Antidotes before heading into the forest.</speech>
    </movingNpc>
</npcs>
