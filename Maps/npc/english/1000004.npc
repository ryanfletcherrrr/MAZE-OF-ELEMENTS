<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey, you and your Pokémon must have been tired hunting Pokémon on easter Island. Do you want me to heal them?</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go, all healthy and happy! Enjoy your easter vacations.</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww, You are a tough one.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, I can only heal your Pokémon if you have PBO membership. You can buy one from PBO donator shop.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <!-- First Encounter -->
        <speeches id="1">
            <speech>{COLOR=PINK}Greetings, traveler... I am Sakura Shaymin, guardian of petals and peace.{ENDCOLOR}</speech>
            <speech>In the hush of the spring breeze, I hear your heart blooming like the flowers around us.</speech>
            <speech>I hold the power to awaken light where it once hid—summoning a {COLOR=CYAN}Shiny Pichu{ENDCOLOR}, gentle as the dawn.</speech>
            <speech>If you bring me {COLOR=GREEN}3 Easter Exeggcute lvl 40 and above{ENDCOLOR}, blessed by the season, I shall grant you this radiant gift.</speech>
        </speeches>

        <!-- Prompt for Trade -->
        <speeches id="2">
            <speech>{COLOR=PINK}Ah... you carry the spring’s promise with you. The Easter Exeggcute are ready.{ENDCOLOR}</speech>
            <speech>Shall we let the ritual of bloom begin and call forth the spark of joy?</speech>
            <speech>Do you want to give away the {COLOR=GREEN}3 Easter Exeggcute{ENDCOLOR} for a {COLOR=CYAN}Shiny Pichu{ENDCOLOR}?</speech>
        </speeches>

        <!-- Player Declines -->
        <speeches id="3">
            <speech>All blossoms bloom in their time. When your heart is ready, so shall I be.</speech>
            <speech>The petals will not fall without your return, gentle one.</speech>
        </speeches>

        <!-- Trade Confirmed -->
        <speeches id="4">
            <speech>*Sakura Shaymin closes its eyes... A warm wind stirs, carrying petals that glow with quiet power.*</speech>
            <speech>*“Hahnaei veysha luminelle…”*</speech>
            <speech>*In the silence that follows, a shimmer dances in the air...*</speech>
        </speeches>

        <!-- Post Summon -->
        <speeches id="5">
            <speech>{COLOR=CYAN}There it is... a Shiny Pichu, light as laughter, born beneath the sakura’s blessing.{ENDCOLOR}</speech>
            <speech>Treat it with kindness, $PLAYER_NAME... it carries the warmth of the season and a spark of me within it.</speech>
        </speeches>
    </conversation>

</npcs>