<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Welcome back. Have you noticed anything unusual about the mist that's settled over our town?
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Do you have any information to share about this mysterious mist? Every detail could be crucial.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>I understand you might want to investigate further before sharing. Our town's safety is in your
                hands. Be cautious and thorough.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>So it's an unnatural mist, you say?</speech>
            <speech>This is concerning. I'll need you to consult with our town's scientist at the Pokecenter right
                away.
            </speech>
            <speech>Thank you for your diligence. I will also leave to notify others in the Town.</speech>
            <speech>Please stay alert and safe in the meantime. We'll resolve this together.</speech>
        </speeches>
        <speeches id="5">
            <speech>Your findings are concerning, but essential.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Welcome back, and well done on clearing the mist! However, there's another concern.</speech>
            <speech>Despite the mist's disappearance, Santa hasn't arrived, and the town still lacks the usual holiday cheer.</speech>
            <speech>Could you find Santa and see what's holding up our Christmas? It's unlike him to be late.</speech>
            <speech>In the meantime, I'll check with the townspeople to see if there's anything else amiss.</speech>
            <speech>We need to bring back the Christmas spirit.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>It's an honor to have you here, $PLAYER_NAME.</speech>
            <speech>Your heroic deeds have brought back the festive spirit to CrystalPeak Town, and with it, Kyurem has also returned to the town.</speech>
            <speech>As the Mayor, and on behalf of all our townspeople, I have something special for you.</speech>
            <speech>It's a symbol of our heartfelt gratitude for your efforts.</speech>
        </speeches>
        <speeches id="2">
            <speech>Thank you, $PLAYER_NAME. Your actions have truly captured the spirit of Christmas.</speech>
            <speech>We are all deeply grateful.</speech>
        </speeches>
    </conversation>
</npcs>