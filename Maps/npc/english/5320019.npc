<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I praise your courage in challenging me! For I am the one with the strongest kick!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. The Pokémon did the fighting. My strong kick didn't help a bit.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>'Sup! I'll give it all I've got! Let's do our best!!</speech>
        </speeches>
        <speeches id="2">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="3">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="4">
            <speech>'Sup! Good work. I tried everything I could, but I'm still pretty disappointed, yo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yo!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>The sweat that drips before a battle... Don't you love how cool it is?</speech>
        </speeches>
        <speeches id="2">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="3">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="4">
            <speech>Being tired from battle with disheveled clothing... It's cool! Isn't it actually the coolest?
            </speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Hello. I'm pleased to meet you.</speech>
            <speech>I'm Maylene, and I'm the Gym Leader.</speech>
            <speech>I don't really know what it means to be strong, or how I got to be the Gym Leader.</speech>
            <speech>But I will do the best I can as the Gym Leader.</speech>
            <speech>I take battling very seriously. Whenever you're ready!</speech>
        </speeches>
        <speeches id="2">
            <speech>...OK. You win. That was a tough loss.</speech>
            <speech>I learned a lot from it. Please, accept this Gym Badge.</speech>
            <speech>Also please take this as well.</speech>
            <speech>That TM60 contains the move Drain Punch.</speech>
            <speech>Um... That move inflicts damage, and it robs the target's HP.</speech>
        </speeches>
        <speeches id="3">
            <speech>Gee, I'm hungry... Oh, sorry, it's nothing. I didn't say anything.</speech>
            <speech>$PLAYER_NAME, I can't explain what it means to be strong.</speech>
            <speech>I don't know how much effort goes into being strong...</speech>
            <speech>But being with Pokémon lets us keep making the effort, doesn't it?</speech>
        </speeches>
        <speeches id="4">
            <speech>This battle was too easy for me. Nevertheless, I am happy to give you another chance.</speech>
        </speeches>
    </conversation>
</npcs>
