<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Let's dive into battle! My water Pokémon are unbeatable!</speech>
        </speeches>
        <speeches id="2">
            <speech>I need a lifebuoy</speech>
        </speeches>
        <speeches id="3">
            <speech>I need a lifebuoy</speech>
        </speeches>
        <speeches id="4">
            <speech>You're in over your head! Maybe you should stick to the kiddie pool.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>You're in deep water now! My Pokémon are the rulers of the sea!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm all washed up... You're the true ruler of the sea.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm all washed up... You're the true ruler of the sea.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're sunk! Maybe you should take some swimming lessons.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Let's make this a whirlpool of a battle! My Pokémon will suck you into defeat!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's drained... You've escaped my whirlpool.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's drained... You've escaped my whirlpool.</speech>
        </speeches>
        <speeches id="4">
            <speech>You got sucked into my whirlpool! Better luck next time.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>You're going to flounder in this battle! My Pokémon are like sharks!</speech>
        </speeches>
        <speeches id="2">
            <speech>I can't believe it.</speech>
        </speeches>
        <speeches id="3">
            <speech>I can't believe it.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're just a small fry in my big ocean!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>If you lose, I'll have you help me with my latest experiment!</speech>
        </speeches>
        <speeches id="2">
            <speech>Just because you know a lot about battles, it doesn't mean that you know anything about Pokémon !</speech>
        </speeches>
        <speeches id="3">
            <speech>Just because you know a lot about battles, it doesn't mean that you know anything about Pokémon !</speech>
        </speeches>
        <speeches id="4">
            <speech>Pah. I was sooo close to signing you up as my new test subject!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Woo-hoo! I'm looking forward to this! I've always dreamed of battling here!</speech>
        </speeches>
        <speeches id="2">
            <speech>I don't want to go home! I want to stay here forever! I want to live here for the rest of my life!</speech>
        </speeches>
        <speeches id="3">
            <speech>I don't want to go home! I want to stay here forever! I want to live here for the rest of my life!</speech>
        </speeches>
        <speeches id="4">
            <speech>Marvelous! Fantastic! This feels like a dream! This is paradise for Trainers!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Let's make waves! My Pokémon are ready to surf all over you!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh no</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh no</speech>
        </speeches>
        <speeches id="4">
            <speech>You're just a ripple in my ocean of victory!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>You're going to sink like a stone when you face my water Pokémon!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're at the bottom of the ocean now!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>You'll be swimming in defeat when my water Pokémon wash over you!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's buoyant... You've sunk my hopes of winning.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's buoyant... You've sunk my hopes of winning.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're drowning in my wave of victory!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>In my pursuit of success, I became lonely beyond all imagining...</speech>
        </speeches>
        <speeches id="2">
            <speech>Those with overwhelming abilities can welcome loneliness at times.</speech>
        </speeches>
        <speeches id="3">
            <speech>Those with overwhelming abilities can welcome loneliness at times.</speech>
        </speeches>
        <speeches id="4">
            <speech>The loneliness of genius... There's no way you could possibly comprehend it.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Ha! You think you can catch up to us? Team Aqua is always a wave ahead of you!</speech>
            <speech>We've got the ship and Peeko, and there's nothing you can do about it. My job here is to stall you, and I plan to do it well.</speech>
        </speeches>
        <speeches id="2">
            <speech>You got through me, but you're too late! The ship's already far out at sea. You'll never catch it now!</speech>
            <speech>Team Aqua's mission is greater than you can understand. We're doing this for the future of all water Pokémon!</speech>
        </speeches>
        <speeches id="3">
            <speech>Trying again? You're persistent, I'll give you that. But it won't change anything. Team Aqua's plan is already in motion.</speech>
            <speech>Go ahead, chase after shadows. The sea is vast, and Peeko is long gone by now.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're strong, I'll admit. But strength alone can't alter the course we've set. The ocean's call can't be ignored.</speech>
            <speech>Come back when you've truly understood the depth of our resolve. Maybe then you'll see we're not the villains here.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Corphish" shouldSleep="" speed="1" sprite="341" type="pokemon" x="16" y="48">
        <path>LEFTx1,UPx2,DOWNx2,RIGHTx1</path>
        <onCollisionSpeech gap="4">Corphish!</onCollisionSpeech>
        <speech>Corphish!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Relicanth" speed="1" sprite="369" type="pokemon" x="11" y="37">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Relicanth!</onCollisionSpeech>
        <speech>Relicanth!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wailmer" speed="1" sprite="320" type="pokemon" x="43" y="16">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Barboach" shouldSleep="" speed="1" sprite="339" type="pokemon" x="7" y="62">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Barboach!</onCollisionSpeech>
        <speech>Barboach!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Wailmer" speed="1" sprite="320" type="pokemon" x="44" y="72">
        <path>UPx11,DOWNx11</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="8" y="6">
        <path>DOWNx6,RIGHTx1,UPx6,LEFTx1</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="20" y="2">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="33" y="26">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="31" y="29">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="32" y="28">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="22" y="33">
        <path>DOWNx9,UPx9</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="12" name="Mathis" randomRotation="true" sprite="93" x="32" y="54">
        <speech>What is there to say about this route?</speech>
        <speech>This is a direct link between Petalburg City and Dewford Town!</speech>
    </npc>
    <movingNpc direction="DOWN" id="13" name="Wingull" speed="1" sprite="278" type="pokemon" x="43" y="71">
        <path>LEFTx11,RIGHTx11</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Wingull" speed="1" sprite="278" type="pokemon" x="0" y="66">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Wailmer" speed="1" sprite="320" type="pokemon" x="21" y="65">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4">Wailmer!</onCollisionSpeech>
        <speech>Wailmer!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Wingull" speed="1" sprite="278" type="pokemon" x="15" y="34">
        <path>UPx4,RIGHTx5,DOWNx4,LEFTx5</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
</npcs>
