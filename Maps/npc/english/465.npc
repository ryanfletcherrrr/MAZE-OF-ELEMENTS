<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey there, Trainer! Have you heard about Officer Jenny? She's in a bit of a pickle.</speech>
            <speech>Some trouble down by the Shoal Cave left her worse for wear. She's resting up in the Pokécenter now.</speech>
            <speech>If you're looking to lend a hand or just pay your respects, that's where you'll find her.</speech>
        </speeches>
        <speeches id="2">
            <speech>Still concerned about Officer Jenny? It's kind of you. She's at the Pokécenter, recovering.</speech>
            <speech>Nothing beats a good rest for recovery, but I'm sure she'd appreciate a visit from a brave Trainer like you.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Luffy" randomRotation="true" sprite="25" x="38" y="23">
        <speech>Who needs a map when you've got the heart of a true adventurer? I'm gonna be the Pirate King! But first, let's eat MEAT!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Nami" randomRotation="false" sprite="28" x="40" y="23">
        <speech>Who needs a map? That's how we ended here in the first place!</speech>
        <speech>Also, it appears Zoro is missing...</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Sanji" randomRotation="true" sprite="75" x="36" y="23">
        <speech>Captain, have you seen Nurse Joy? She's truly an angel of healing.</speech>
        <speech>My heart races just being near her, and I find myself longing to offer her my culinary delights.</speech>
        <speech>She's the epitome of grace and compassion.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Diver Yohan" randomRotation="true" sprite="325" x="19" y="23">
        <speech>Whoa, do you see those Sharpedos circling around? They're like sleek shadows gliding through the water, powerful and majestic.</speech>
        <speech>It's both awe-inspiring and a little bit intimidating, isn't it?</speech>
        <speech>Living here, we're used to sharing our home with all kinds of sea Pokémon, but there's something about Sharpedos that just commands respect.</speech>
        <speech>You definitely don't want to get on their bad side!</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="16" y="22">
        <path>UPx4,LEFTx7,RIGHTx7,DOWNx4</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="22" y="13">
        <path>DOWNx7,RIGHTx4,LEFTx4,UPx7</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="18" y="25">
        <path>DOWNx6,RIGHTx8,UPx6,LEFTx8</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Miguel" shouldSleep="" speed="1" sprite="11" type="npc" x="23" y="35">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Caution!</onCollisionSpeech>
        <speech>Careful there! The balance is key, or you might just end up taking an unexpected swim!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Crawdaunt" shouldSleep="" speed="1" sprite="342" type="pokemon" x="42" y="41">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Crawdaunt!</onCollisionSpeech>
        <speech>Crawdaunt!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Crawdaunt" shouldSleep="" speed="1" sprite="342" type="pokemon" x="50" y="40">
        <path>RIGHTx2,UPx1,RIGHTx2,LEFTx2,DOWNx1,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wailmer" speed="1" sprite="320" type="pokemon" x="57" y="17">
        <path>LEFTx5,DOWNx5,UPx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Wailmer!</onCollisionSpeech>
        <speech>Wailmer!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="39" y="30">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Relicanth" shouldSleep="" speed="1" sprite="369" type="pokemon" x="16" y="38">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Relicanth!</onCollisionSpeech>
        <speech>Relicanth!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Relicanth" shouldSleep="" speed="1" sprite="369" type="pokemon" x="20" y="38">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Relicanth!</onCollisionSpeech>
        <speech>Relicanth!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Wingull" speed="1" sprite="278" type="pokemon" x="45" y="2">
        <path>LEFTx20,RIGHTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Wingull" speed="1" sprite="278" type="pokemon" x="13" y="4">
        <path>RIGHTx20,LEFTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Whiscash" speed="1" sprite="340" type="pokemon" x="37" y="9">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4">Whiscash!</onCollisionSpeech>
        <speech>Whiscash!</speech>
    </movingNpc>
</npcs>
