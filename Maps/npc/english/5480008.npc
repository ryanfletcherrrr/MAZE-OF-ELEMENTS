<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hm! Everyone's here finally. $PLAYER_NAME, everyone, listen.</speech>
            <speech>You may forgotten it already, but I study the evolution of Pokémon. But the more I study, the more mysteries appear and multiply.</speech>
            <speech>Pokémon that evolve, and those that don't... What makes them different from each other?</speech>
            <speech>Do those that are immature as living beings evolve to once more mature? If so, what do we make of the legendary Pokémon that don't evolve?</speech>
            <speech>Are we to assume that the legendary Pokémon are complete as creatures? This is where you three come in.</speech>
            <speech>In the three lakes of Sinnoh, there are said to be mirage Pokémon.</speech>
            <speech>If we can obtain data on them, it may shed some light on how the process of Pokémon evolution works.</speech>
            <speech>I need help from each one of you on this grand undertaking. Help me find these Pokémon that are considered to be mirages.</speech>
            <speech>...And who was is that bolted from the lab before I had a chance to give you a Pokédex?</speech>
            <speech>But that's water under the bridge! Seeing Pokémon with your own eyes is important for you in becoming a better Trainer, too.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hm! I would have made all of you go regardless...</speech>
            <speech>Anyway. Now, there are three lakes. Fortuitously, there are three of you.</speech>
            <speech>You should therefore split up and investigate the lakes individually.</speech>
            <speech>Dawn, you go to Lake Verity.</speech>
        </speeches>
        <speeches id="3">
            <speech>Barry, I want you to investigate Lake Acuity. That would take you almost to Snowpoint City.</speech>
            <speech>The road there is harsh. I need a tough Trainer to go.</speech>
        </speeches>
        <speeches id="4">
            <speech>Very well. I'm counting on you. And that leaves $PLAYER_NAME with Lake Valor.</speech>
            <speech>The lake is between Veilstone and Pastoria, if memory serves...</speech>
        </speeches>
        <speeches id="5">
            <speech>... ...Has it stopped? Are all of you unharmed?</speech>
        </speeches>
        <speeches id="6">
            <speech>Hm... But why at Lake Valor...? Let's get outside.</speech>
            <speech>I'm concerned about the town. You kids, be careful going down the stairs.</speech>
            <speech>$PLAYER_NAME. You should leave now, too.</speech>
            <speech>...There may be aftershocks, however. Be alert always</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Uh, sure, Gramps, you know how to call it! You can tell I'm the hotness!</speech>
        </speeches>
        <speeches id="2">
            <speech>What was that about?!</speech>
            <speech>No, wait, I mean, TV! The TV! News! Anything!</speech>
        </speeches>
        <speeches id="3">
            <speech>Gramps! They say it was an explosion!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>You can count on me! It will help with my Pokédex, too. $PLAYER_NAME, you'll go too, won't you?</speech>
        </speeches>
        <speeches id="2">
            <speech>Will do!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>DOOOOOOOOOOOOOOM!!!</speech>
        </speeches>
        <speeches id="2">
            <speech>What you have just witnessed is actual footage from the scene.</speech>
            <speech>It was taken by a cameraman who happened to be there.</speech>
            <speech>It's certainly impressive.</speech>
            <speech>Who knows what exploded at the Lake?</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Chrollo Lucilfer" sprite="35" x="17" y="4">
        <speech>Together, we are the Spider. I'm its head, and you're the legs. The legs do what the head says.</speech>
        <speech>But there will be times when the legs are more important than the head. If I die, someone else will take over.</speech>
        <speech>My orders are of utmost priority. My life is not. Be sure to make the right decision.</speech>
        <speech>I'm only a part of the Spider. What's important is the survival of the crew, not the individual.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Kangaskhan" shouldSleep="" speed="1" sprite="115" type="pokemon" x="20" y="9">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">*The Kangaskhan pushes you.*</onCollisionSpeech>
        <speech>*This Kangaskhan does not wish to interact with you.*</speech>
    </movingNpc>
</npcs>
