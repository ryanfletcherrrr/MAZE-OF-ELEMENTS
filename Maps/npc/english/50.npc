<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I live a healthy lifestyle, which reflects in my battling style.</speech>
            <speech>You don't believe me? Well, then see for yourself!</speech>
        </speeches>
        <speeches id="2">
            <speech>Health decreased by over 9000!</speech>
        </speeches>
        <speeches id="3">
            <speech>Health decreased by over 9000!</speech>
        </speeches>
        <speeches id="4">
            <speech>HEALTHY POWER!!!!</speech>
        </speeches>
    </conversation>
    <npc direction="UP" id="1000" name="Lass Angelique" randomRotation="true" sprite="41" x="52" y="25">
        <speech>EEEEK! Did you just touch me?</speech>
        <speech>Creep alert!</speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Kindler Andrew" sprite="52" x="26" y="13">
        <speech>Do you know the key to making a successful bonfire?</speech>
        <speech>Dry wood! That's what you need.</speech>
    </npc>
    <npc direction="LEFT" id="1002" name="Kindler Kurt" sprite="52" x="28" y="15">
        <speech>Nothing beats sitting around a campfire!</speech>
        <speech>Wouldn't you agree?</speech>
    </npc>
    <npc direction="RIGHT" id="1003" name="Kindler Adam" sprite="52" x="22" y="16">
        <speech>Marsh-mellow. Mellow marsh. Yellow mellow. Harsh marsh.</speech>
        <speech>Don't mind me, whahaha!</speech>
    </npc>
    <npc direction="RIGHT" id="1004" name="Kindler Matt" sprite="52" x="23" y="13">
        <speech>Fire, such a beautiful yet destructive force of nature.</speech>
    </npc>
    <npc direction="DOWN" id="1005" name="Expert Neo" sprite="38" x="4" y="19">
        <speech>These lands are ideal for agriculture.</speech>
        <speech>The volcano nourishes the soil around the island, which is perfect for the ranches and farms in the
            neighbourhood.
        </speech>
    </npc>
    <npc direction="DOWN" id="1006" name="Tourist Leo" randomRotation="true" sprite="35" x="51" y="36">
        <speech>There's a town on this island that hosts Pokémon races!</speech>
        <speech>Who should I bet on: Rapidash or Arcanine?</speech>
    </npc>
    <npc direction="LEFT" id="1007" name="Tourist Zena" randomRotation="true" sprite="6" x="13" y="37">
        <speech>There's a Ranger HQ in the northern part of this island.</speech>
        <speech>It houses some of Jvaloh's best rangers!</speech>
    </npc>
    <npc direction="DOWN" id="1008" name="Ruin Maniac Steev" sprite="20" x="5" y="44">
        <speech>It's magnificent, stunningly beautiful and yet so enigmatic.</speech>
        <speech>Hm? What am I talking about, you ask?</speech>
        <speech>The crystal at Moonshine City of course! It's a large, glowing crystal. Truly marvelous, if I may
            say so!
        </speech>
        <speech>Legend has it that it has special powers...</speech>
    </npc>
</npcs>
