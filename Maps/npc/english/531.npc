<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>You don't want to hear about Pokémon from people who know nothing about Pokémon, do you?</speech>
        </speeches>
        <speeches id="2">
            <speech>Just because you know a lot about battles, it doesn't mean that you know anything about Pokémon!</speech>
        </speeches>
        <speeches id="3">
            <speech>Just because you know a lot about battles, it doesn't mean that you know anything about Pokémon!</speech>
        </speeches>
        <speeches id="4">
            <speech>You haven't studied enough, but you have potential. I could train you, if you'd like...</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I may not get a runner's high, but I get a Roller Skater's rush, so I'm always all smiles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Battles make you feel good, too. Maybe that's also the work of endorphins.</speech>
        </speeches>
        <speeches id="3">
            <speech>Battles make you feel good, too. Maybe that's also the work of endorphins.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hahaha... It just feels so good... I want to keep on skating like this forever...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>'Sup! I'll give it all I've got! Let's do our best!!</speech>
        </speeches>
        <speeches id="2">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="3">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="4">
            <speech>'Sup! Good work. I tried everything I could, but I'm still pretty disappointed, yo!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yo!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>The sweat that drips before a battle... Don't you love how cool it is?</speech>
        </speeches>
        <speeches id="2">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="3">
            <speech>At the end of a battle, out of breath... How cool is it? Totally!</speech>
        </speeches>
        <speeches id="4">
            <speech>Being tired from battle with disheveled clothing... It's cool! Isn't it actually the coolest?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I'm gonna dive right into your heart! If you don't catch me, I won't forgive you!</speech>
        </speeches>
        <speeches id="2">
            <speech>I told you to catch me, didn't I? You threw me back! Why did you throw me back?!</speech>
        </speeches>
        <speeches id="3">
            <speech>I told you to catch me, didn't I? You threw me back! Why did you throw me back?!</speech>
        </speeches>
        <speeches id="4">
            <speech>You can't catch me with a feeble set of muscles like that!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>A person who wants to fight, fight, and fight forever. That's the way of the Ace.</speech>
        </speeches>
        <speeches id="2">
            <speech>You can't become an Ace Trainer battling like that.</speech>
        </speeches>
        <speeches id="3">
            <speech>You can't become an Ace Trainer battling like that.</speech>
        </speeches>
        <speeches id="4">
            <speech>Your fighting style suits you very well. You could be an Ace Trainer.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>To challenge me you must be a reckless, fearless person who doesn't know his/her place!</speech>
        </speeches>
        <speeches id="2">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="3">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hmmph... To challenge me must mean that even ignorance has its limit!</speech>
        </speeches>
    </conversation>
</npcs>
