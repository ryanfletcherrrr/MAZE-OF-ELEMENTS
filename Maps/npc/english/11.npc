<npcs>
    <npc direction="DOWN" id="1000" name="Youngster Hara" sprite="4" x="25" y="35">
        <speech>I'm just taking a walk with my Rattata.</speech>
        <speech>By the way, have you heard of Joey? I heard he has the top percentage of Rattata.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>Hey, wait a second!</speech>
            <speech>You look like a new Pokémon trainer, which can only mean that you're about to go challenge the gyms?</speech>
            <speech>Great! In that case, follow this path right here, and it will lead you to Rockshore City.</speech>
            <speech>After that, keep moving towards the east until you reach Patthar Village.</speech>
            <speech>That's where the first gym is. Good luck!</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>Also, you can try to follow this path after you get your first badge.</speech>
            <speech>It leads to Oozy Forest, where an old lady will exchange Combee's honey drops for an actual jar of honey.</speech>
            <speech>I've heard that using honey can actually attract some special, rare Pokémon. Hope that helps.</speech>
            <speech>Anyway, Michu, it's time to head back. Good luck, trainer!</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1002" name="Hiker Smith" shouldSleep="" speed="1" sprite="10" type="npc" x="45" y="14">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Erm...</onCollisionSpeech>
        <speech>I'm so lost. If only i used the quest tracker properly!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="1003" name="Rattata" shouldSleep="" speed="1" sprite="19" type="pokemon" x="46" y="31">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>Huh that's strange. This seems to be someone elses Pokémon</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="1004" name="Caterpie" shouldSleep="" speed="1" sprite="10" type="pokemon" x="26" y="35">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>This caterpie seems confused</speech>
    </movingNpc>
</npcs>
