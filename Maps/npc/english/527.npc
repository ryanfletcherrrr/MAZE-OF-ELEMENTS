<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Fantina is currently away to compete in a contest. Please come back later Trainer.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Abra... Kadabra..... Alakazam.......</speech>
            <speech>Want to see magic and travel to another land?</speech>
        </speeches>
        <speeches id="2">
            <speech>That's unfortunate. Please come back whenever you wish to travel elsewhere.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Oh my god, you have Crew Wars Tokens, don't you? Please trade them to me!! I'll give you great
                goodies in return!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>But why?...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh hello youngster, isn't this city beautiful?</speech>
            <speech>Wow, you are just like me. Here, have 5 Pokéballs which will definitely come in handy.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh you met them? Yep, they are all good but they are too much into battling.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Angie" shouldSleep="" speed="1" sprite="14" type="npc" x="7" y="24">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Hey.</onCollisionSpeech>
        <speech>I'd like to live in Hearthome when I get married.</speech>
        <speech>But my boyfriend wants to live in Veilstone 'cause of its Game Corner...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Roger" sprite="10" x="6" y="20">
        <speech>I went for a stroll in Amity Square with my Machop today.</speech>
        <speech>We came across a Pokémon feather while we walked.</speech>
        <speech>Do you think it'd make my Machop look any cuter?</speech>
    </npc>
    <movingNpc direction="LEFT" id="3" name="Machop" shouldSleep="" speed="1" sprite="66" type="pokemon" x="6" y="21">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Maaachop!</onCollisionSpeech>
        <speech>Maaaachop! Machop seems to like you!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Miguel" speed="1" sprite="37" type="npc" x="22" y="28">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Do you have a lighter?</onCollisionSpeech>
        <speech>They call me Mr. Goods.</speech>
        <speech>Mr. Goods doesn't need a Clan.</speech>
        <speech>Don't be like Mr. Goods.</speech>
        <speech>Exploring the Pokémon World without friends is a path you don't wanna follow.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Everly" sprite="18" x="27" y="27">
        <speech>I can't decide what Crew I should join.</speech>
        <speech>There are just so many kinds.</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Elcio" shouldSleep="" speed="1" sprite="4" type="npc" x="39" y="29">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">What do you want?</onCollisionSpeech>
        <speech>This city is full of ladies. I can't resist.</speech>
        <speech>I will search for a Crew with lots of cute girls, for sure.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Addison" sprite="19" x="45" y="21">
        <speech>At the Lost Tower, people unburden themselves of unbearable sorrow...</speech>
        <speech>You'll understand what I mean if you visit the Lost Tower on Route 209.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="8" name="Jorge" sprite="34" x="34" y="19">
        <speech>Did you know that you can gather your friends in a Crew?!</speech>
        <speech>That's right! The time has come for me to join a Crew!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="9" name="Willow" sprite="41" x="58" y="25">
        <speech>Are you going to challenge the Gym Leader?</speech>
        <speech>$PLAYER_NAME , good luck!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="10" name="Jaxson" shouldSleep="" speed="1" sprite="101" type="npc" x="50" y="36">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Excuse me, sir!</onCollisionSpeech>
        <speech>I love Ghost type Pokémon!</speech>
        <speech>...but Gengar is really my favorite one.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Cooper" shouldSleep="" speed="1" sprite="16" type="npc" x="40" y="39">
        <path>DOWNx3, UPx3</path>
        <onCollisionSpeech gap="4">Ah!!!</onCollisionSpeech>
        <speech>I'm visiting here all the way from the Hoenn region.</speech>
        <speech>I had been hoping to find the Crew Headquarters, but being new, I lost my way.</speech>
        <speech>Fortunately, the local people very kindly led me to my destination.</speech>
        <speech>I was impressed by their kindness and generosity to a complete stranger.</speech>
        <speech>Now, I suggest you to visit the Headquarters.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="12" name="Samantha" shouldSleep="" speed="1" sprite="6" type="npc" x="28" y="37">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">Aw!</onCollisionSpeech>
        <speech>Are you going to challenge the Pokémon League?</speech>
        <speech>Sweeet!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="13" name="Gastly" shouldSleep="" speed="1" sprite="92" type="pokemon" x="21"
               y="41">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Boooo!</onCollisionSpeech>
        <speech>*Booooo*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="14" name="Paul" sprite="10" x="57" y="42">
        <speech>The Ghost Pokémon that you see in this city are friendly!</speech>
    </npc>
    <movingNpc direction="UP" id="15" name="Gianna" shouldSleep="" speed="1" sprite="12" type="npc" x="14" y="37">
        <path>UPx2, DOWNx2</path>
        <onCollisionSpeech gap="4">Whoa!</onCollisionSpeech>
        <speech>I used a Fire Stone on my Eevee, and it evolved into a Flareon!</speech>
    </movingNpc>

    <conversation id="6">
        <speeches id="2">
            <speech>Hi! I'm a PBO Tutorial campaign clown. Let's roll out my question!</speech>
            <speech>Would you recommend PBO to a friend?</speech>
        </speeches>

        <speeches id="3">
            <speech>That's not the correct answer. Let's try again.</speech>
        </speeches>

        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>You're absolutely correct.</speech>
            <speech>PBO is the best game ever!</speech>
            <speech>We really wish you a great adventure</speech>
        </speeches>

        <speeches id="5">
            <speech>Here you go! Please accept this Sitrus Berry!</speech>
            <speech>If held by a Pokémon, it heals the user's HP a little.</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Hmm, I don't see you holding any Blaze Coin. Come back to me with Blaze Coin, and I can give you some Crew Wars Tokens.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh my god, you have Blaze Coins, don't you? I will give you 5 Crew Wars Tokens for 1 Blaze Coin.</speech>
            <speech>Do you want to trade with me? 5 Crew Wars Tokens for 1 Blaze Coin?</speech>
        </speeches>
        <speeches id="3">
            <speech>But why? ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Thank you. Thank you. Thank You. Thank youuuuuuu!!</speech>
        </speeches>
    </conversation>
</npcs>
