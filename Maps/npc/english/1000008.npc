<npcs>
    <conversation id="1" canSkip="false">
        <speeches id="1">
            <speech>{COLOR=RED}There you are, $PLAYER_NAME. I knew I smelled ambition.{ENDCOLOR}</speech>
            <speech>I am {COLOR=ORANGE}Psychic Incineroar{ENDCOLOR}, bearer of flame-vision from the village of {COLOR=CYAN}Nuzbar{ENDCOLOR}.</speech>
            <speech>I’ll forge your senses through fire—but only if you can handle the heat.</speech>
            <speech>{COLOR=ORANGE}What trial do you choose? Easy, Normal, or Hard? Pick your blaze, and I’ll turn it into battle.{ENDCOLOR}</speech>
        </speeches>

        <speeches id="2">
            <speech>Well fought. You danced in fire and didn't flinch.</speech>
            <speech>{COLOR=RED}But fire never rests, and neither do I. Next time will be hotter, I promise you that.{ENDCOLOR}</speech>
            <speech>Keep your edge sharp, $PLAYER_NAME. We'll meet again in the flame’s heart.</speech>
        </speeches>

        <speeches id="3">
            <speech>Heh, not yet. The embers haven't cooled since our last clash.</speech>
            <speech>Come back in $DURATION, once the fire's ready to flare up again.</speech>
            <speech>Patience, Trainer. Even wildfires wait for the right moment to burn.</speech>
        </speeches>

        <speeches id="4">
            <speech>You gave it your all... but sometimes, the fire bites back.</speech>
            <speech>{COLOR=ORANGE}Don't lick your wounds too long. Come back fiercer—and make me sweat next time.{ENDCOLOR}</speech>
        </speeches>

        <speeches id="5">
            <speech>{COLOR=RED}Double-check your team, $PLAYER_NAME. This isn’t showmanship—it’s raw, vision-forged battle.{ENDCOLOR}</speech>
            <speech>Once we light the flame, there’s no backing down.</speech>
            <speech>Are you ready to see through fire?</speech>
        </speeches>
    </conversation>


    <conversation id="4">
        <speeches id="1">
            <speech>Hello there! I'm Mallow, guardian of these rare blooms from the Easter Islands.</speech>
            <speech>These aren't just any flowers—they hold the power to evolve Shaymin into unique forms found only here.</speech>
            <speech>I can sense you’re traveling with Shaymin... that’s wonderful!</speech>
            <speech>Since you've earned its trust, you've earned mine. Let me show you the flowers I’ve been tending.</speech>
        </speeches>

        <speeches id="2">
            <speech>No worries! Feel free to return if you change your mind.</speech>
            <speech>The flowers will be waiting, and so will I.</speech>
        </speeches>
    </conversation>
</npcs>