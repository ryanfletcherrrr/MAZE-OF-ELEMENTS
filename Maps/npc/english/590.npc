<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="Cameraman Kyle" randomRotation="false" sprite="110" x="23" y="31">
        <speech>I recently filmed a documentary on the red Gyarados.</speech>
        <speech>My next one will be on Lopunny</speech>
        <speech>I hope its just as good!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="2" name="Lopunny" shouldSleep="" speed="1" sprite="428" type="pokemon" x="22" y="34">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Lopunnyyyy</onCollisionSpeech>
        <speech>Lopunnyyyyy</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Jane" randomRotation="true" sprite="53" x="18" y="17">
        <speech>I just love the trees here</speech>
        <speech>They remind me of home</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Sophie" randomRotation="false" sprite="44" x="43" y="13">
        <speech>I just love coming here</speech>
        <speech>It's such a pretty town and so from the rest of the world</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Spinda" shouldSleep="" speed="1" sprite="327" type="pokemon" x="46" y="25">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Spinda</onCollisionSpeech>
        <speech>Spinnnn daaa</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="6" name="Snorlax" shouldSleep="" speed="1" sprite="143" type="pokemon" x="24" y="26">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Snorlaxxxx</onCollisionSpeech>
        <speech>Snorlax likes it here. Its so quiet and not alot of people disturb his naps</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="7" name="Stunky" speed="1" sprite="434" type="pokemon" x="10" y="27">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Stunkyyy</onCollisionSpeech>
        <speech>Stunkyyyy</speech>
    </movingNpc>
    <conversation id="2">
        <speeches id="1">
            <speech>Hey Kid, the masked guy is hiding somewhere here in this area</speech>
            <speech>we surrounded this area he can't escape now</speech>
            <speech>Report us immediately if you see anything.</speech>
            <speech>The police appreciates your cooperation.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>South sight secured sir!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Area towards stark mountain</speech>
            <speech>Secured!</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Sir!</speech>
            <speech>I just saw him running towards stark mountain!</speech>
            <speech>Lets Go!</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Hey kid go talk to leader if you want to leave this area</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Listen, I don't have time to deal with you right now.</speech>
            <speech>I have to leave, don't follow me.</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>I should inform the situation to Police Force Leader.</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>West sight secured Sir!</speech>
        </speeches>
    </conversation>

</npcs>
