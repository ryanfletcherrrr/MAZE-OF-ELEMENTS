<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>...Cyrus disappeared. Mars and Jupiter quit. Saturn said he would look after what remains of Team
                Galactic.
            </speech>
            <speech>But he won't join me. So foolish of him! So very foolish of the rest of them!</speech>
            <speech>Throwing away Team Galactic! After all the effort we took as a team to make it grow...</speech>
            <speech>That power could have made us rich beyond imagination. But, enough of that. The Magma Stone will be
                mine.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>You're too late. With this Magma Stone, I will awaken the legendary Heatran!</speech>
        </speeches>
        <speeches id="3">
            <speech>You're too late. With this Magma Stone, I will awaken the legendary Heatran!</speech>
        </speeches>
        <speeches id="4">
            <speech>No! The Magma Stone! What?! What is going on?!</speech>
            <speech>I don't think I am worthy enough of it. Here have it.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Trann.. Hea Hea.....</speech>
            <speech>*Heatran roars in anger.**</speech>
        </speeches>
        <speeches id="2">
            <speech>Hea Hea.....</speech>
        </speeches>
        <speeches id="3">
            <speech>Hea Hea.....</speech>
        </speeches>
        <speeches id="4">
            <speech>Trann.. Hea Hea... Heatrannnnnnnnnnnnnnnnn!!!</speech>
            <speech>*Heatran ran away.*</speech>
        </speeches>
    </conversation>

    <conversation id="3" canSkip="false">
        <speeches id="1">
            <speech>*Heatran emits a deep, resonant growl, its eyes glowing fiercely in the volcanic chamber. It seems
                to recognize a kindred spirit in your party.*
            </speech>
            <speech>*A rumble vibrates through the ground, as if Heatran is acknowledging your journey and the presence
                of another Heatran with you.*
            </speech>
            <speech>*With a fiery burst, Heatran signals its readiness to battle. It seems to be asking for the
                intensity of the challenge you desire.*
            </speech>
        </speeches>
        <speeches id="2">
            <speech>*Heatran roars triumphantly, the flames around it dancing wildly.*</speech>
            <speech>*It seems to express respect for your battle skills and the bond with your Heatran.*
            </speech>
            <speech>*The heat around Heatran subsides slightly, signaling its approval of your journey and encouraging
                your future endeavors.*
            </speech>
        </speeches>
        <speeches id="3">
            <speech>*Heatran's growl softens, and the lava around it calms.*</speech>
            <speech>*It seems to suggest a period of reflection and growth after the intense battle.*</speech>
            <speech>*The volcano's rumbling echoes Heatran's sentiments.*</speech>
            <speech>*It signals to meet again after $DURATION, giving you time to strengthen your bond with your Pokémon.*</speech>
        </speeches>
        <speeches id="4">
            <speech>*A low, empathetic growl from Heatran. It acknowledges the challenge was too much this time, but
                sees potential in you.*
            </speech>
            <speech>*Heatran's flames flicker with encouragement, urging you to gather your strength and return when you
                are ready for another challenge.*
            </speech>
        </speeches>
        <speeches id="5">
            <speech>*Heatran pauses, sensing something missing. It seems to be searching for the [GOLD]presence of another
                Heatran in your party[].*
            </speech>
            <speech>*With a series of deep growls, Heatran communicates the need for a [GOLD]companion Heatran in your team[].
                Only then will it accept the challenge.*
            </speech>
        </speeches>
    </conversation>
</npcs>
