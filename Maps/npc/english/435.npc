<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Where are we supposed to be, um...</speech>
            <speech>Where are we going, again?</speech>
            <speech>Ah its Mt. Chimney!</speech>
            <speech>Stay spaced out, and you will be scolded by Maxie!</speech>
            <speech>It'll be a long walk going along Route 112 to get there.</speech>
            <speech>I wonder if we should buy lunch first...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Before we waste our time on idle chat, please show me your skills.</speech>
        </speeches>
        <speeches id="2">
            <speech>What excellent Pokémon you have! Please become my model!</speech>
        </speeches>
        <speeches id="3">
            <speech>What excellent Pokémon you have! Please become my model!</speech>
        </speeches>
        <speeches id="4">
            <speech>Umm-hmmm... Thanks. If that's all you got, then never mind.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>I'm bursting with dreams and desires! I'm just a bundle of youthful vigor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ha... Are you telling me that your legend just started?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ha... Are you telling me that your legend just started?</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm so full of dreams and desires that I'm about to burst! But that's what it means to be young!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>A globe-trotting young adventurer. That's me!</speech>
        </speeches>
        <speeches id="2">
            <speech>Adventure is calling me. Farewell! See you again!</speech>
        </speeches>
        <speeches id="3">
            <speech>Adventure is calling me. Farewell! See you again!</speech>
        </speeches>
        <speeches id="4">
            <speech>Seeing Pokémon from all over the world is the purpose of my journey.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>The pretty-suited Pokémon soldier who sprinkles love on the world appears!</speech>
        </speeches>
        <speeches id="2">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="3">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="4">
            <speech>I can't be defeated yet... I still have to protect all that is pretty in the world...</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>The clear blue water at the beach! All the bikinis! That's the kind of place I was hoping to get to!</speech>
        </speeches>
        <speeches id="2">
            <speech>This isn't a resort it's like torture! There are battles everywhere you go!</speech>
        </speeches>
        <speeches id="3">
            <speech>This isn't a resort it's like torture! There are battles everywhere you go!</speech>
        </speeches>
        <speeches id="4">
            <speech>What makes this place a resort? There's nothing but serious Trainers here!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>There aren't as many people battling at work these days because they've moved on to the Contest Spectacular.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm tired of losing battles. Maybe I'll try going to the Contest Spectacular...</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm tired of losing battles. Maybe I'll try going to the Contest Spectacular...</speech>
        </speeches>
        <speeches id="4">
            <speech>The Contest Spectacular is just superficial. It's just not in my nature at all.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Skarmory" speed="1" sprite="227" type="pokemon" x="18" y="82">
        <path>LEFTx12,DOWNx0,UPx5,RIGHTx12,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Skarmory" speed="1" sprite="227" type="pokemon" x="44" y="76">
        <path>DOWNx9,RIGHTx3,UPx9,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Goldeen" shouldSleep="" speed="1" sprite="118" type="pokemon" x="10" y="69">
        <path>DOWNx5,RIGHTx5,UPx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Goldeen</onCollisionSpeech>
        <speech>Goldeen, deen.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Goldeen" shouldSleep="" speed="1" sprite="118" type="pokemon" x="11" y="55">
        <path>RIGHTx8,LEFTx8</path>
        <onCollisionSpeech gap="4">Goldeen!</onCollisionSpeech>
        <speech>Goldeen!</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="5" name="Fisher" randomRotation="false" sprite="16" x="14" y="61">
        <speech>Hmm, am I on the right path for a Clamperl? The ocean's whispers are hard to follow...</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Skarmory" speed="1" sprite="227" type="pokemon" x="1" y="54">
        <path>UPx8,RIGHTx12,UPx8,DOWNx8,LEFTx12,DOWNx8</path>
        <onCollisionSpeech gap="4">Skarmory!</onCollisionSpeech>
        <speech>Skarmory!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Swellow" speed="1" sprite="277" type="pokemon" x="6" y="17">
        <path>DOWNx10,RIGHTx9,UPx10,LEFTx9</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="10" y="31">
        <path>UPx3,RIGHTx3,DOWNx1,UPx1,LEFTx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Graveler" speed="1" sprite="75" type="pokemon" x="24" y="41">
        <path>LEFTx3,DOWNx3,UPx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Cubone" shouldSleep="" speed="1" sprite="104" type="pokemon" x="27" y="57">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Cuuuuuuu!</onCollisionSpeech>
        <speech>Cubone is crying because it can't find it's mother.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Marowak" shouldSleep="" speed="1" sprite="105" type="pokemon" x="43" y="63">
        <path>RIGHTx2,DOWNx4,UPx4,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Cacnea" shouldSleep="" speed="1" sprite="331" type="pokemon" x="24" y="32">
        <path>RIGHTx3,UPx3,DOWNx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Cacnea!</onCollisionSpeech>
        <speech>Cacnea!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Baltoy" shouldSleep="" speed="1" sprite="343" type="pokemon" x="16" y="6">
        <path>DOWNx1,RIGHTx2,UPx1,LEFTx2</path>
        <onCollisionSpeech gap="4">Baltoy!</onCollisionSpeech>
        <speech>Baltoy!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="47" y="14">
        <path>LEFTx6,DOWNx4,UPx4,RIGHTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Camerupt" shouldSleep="" speed="1" sprite="323" type="pokemon" x="43" y="27">
        <path>DOWNx4,RIGHTx4,LEFTx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>
