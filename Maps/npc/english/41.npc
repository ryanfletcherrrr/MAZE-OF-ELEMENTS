<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Who are you, and what's a kid like you doing here?</speech>
        </speeches>
        <speeches id="2">
            <speech>Urgh ...</speech>
        </speeches>
        <speeches id="3">
            <speech>Just go away before you get seriously hurt.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ohh, so you came here to get your butt kicked.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>What are WE doing here? None of your business!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph!</speech>
        </speeches>
        <speeches id="3">
            <speech>You're not wanted here.</speech>
        </speeches>
        <speeches id="4">
            <speech>I told you it's none of your business.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>We're busy here, so go away.</speech>
            <speech>You won't? Then I guess I'll make you!</speech>
        </speeches>
        <speeches id="2">
            <speech>Damn it!</speech>
        </speeches>
        <speeches id="3">
            <speech>Why must you be such a pest?</speech>
        </speeches>
        <speeches id="4">
            <speech>Now run away!</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>
   <!-- <conversation id="5">
        <speeches id="1">
            <speech>This may seem like rubble and ruins to you, but to me it doesn't.</speech>
            <speech>It is quitessential to study what's happened in the past, to prevent failures in the future.</speech>
            <speech>We must cherish the past, while looking to the future.</speech>
            <speech>Is there something else I can help you with, young trainer?</speech>
            <speech>*$PLAYER_NAME explains what happened*</speech>
            <speech>Oh, is that so?</speech>
            <speech>Nothing would make me more happy than giving my special prayer bead to you, $PLAYER_NAME...</speech>
            <speech>But I cannot do so. An I'll-meaning stranger stole the bead from me and ran off.</speech>
            <speech>I believe if you thoroughly search the vicinity, you'll find him deeper in the cave. </speech>
            <speech>Would you be so kind as to retreive the special prayer bead, $PLAYER_NAME?</speech>
        </speeches>
        <speeches id="2">
            <speech>By Ho-Oh, you found it! Marvelous, young trainer!</speech>
            <speech>Can you please bring this bead to Head Monk Xha Le?</speech>
        </speeches>
    </conversation>-->
    <conversation id="5">
        <speeches id="1">
            <speech>So you are the kid who brought balance back to Jvaloh...</speech>
            <speech>Quite young I must say...</speech>
            <speech>Anyway, I have meditated for a whole 50 years of my life in order to speak telepathically to Raikou.</speech>
            <speech>I did it so that I could protect Jvaloh from any unseen danger. And look how that went</speech>
            <speech>You want to take care of the Raikou? Hmm, after what happened in Jvaloh I think Raikou won't mind a master.</speech>
            <speech>But for me to summon it for you, I need to test your strength.</speech>
            <speech>Defeat me and I will summon Raikou for you!</speech>
        </speeches>
        <speeches id="2">
            <speech>Step aside!</speech>
            <speech>...</speech>
            <speech>Raikou has now appeared in Jvaloh.</speech>
            <speech>Good luck trainer!</speech>
        </speeches>
        <speeches id="3">
            <speech>Not too soon kid. It takes me time to gather energy to communicate telepathically.</speech>
            <speech>Come back after $DAYS.</speech>
        </speeches>
        <speeches id="4">
            <speech>You need to train further. Come back once you are ready.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>
</npcs>
