<npcs>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>Yo! $PLAYER_NAME! You're still struggling along back here? I'm doing great!</speech>
            <speech>I caught a bunch of strong and smart Pokémon! Here, let me see what you caught, $PLAYER_NAME!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hey! Take it easy! You won already!</speech>
            <speech>Hey, guess what? I went to Bill's and got him to show me his rare Pokémon!</speech>
            <speech>That added a lot of pages to my Pokédex! After all, Bill's world-famous as a PokéManiac!</speech>
            <speech>He invented the Pokémon Storage System on PC! Since you're using his system, go thank him!</speech>
            <speech>Well, I better go rolling! Smell ya later!</speech>
            <speech>Oh yeah, right. I feel sorry for you. No, really.</speech>
            <speech>You're always plodding behind me. So here, I'll give you a little present as a favor. A chatty gossip like you...</speech>
            <speech>That thing's perfect. I don't need it because I don't give a hoot about others.</speech>
            <speech>All right, this time I really am gone. Smell ya!</speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>Heh! You're no match for my genius!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Trainer... I sense great potential in you, but you're not ready for this burden yet.</speech>
            <speech>My name is Dr. Fuji. Years ago, I made a terrible mistake that haunts me to this day.</speech>
            <speech>Cerulean Cave has been sealed for good reason. Inside lies {COLOR=RED}Mewtwo{ENDCOLOR} - a Pokemon born from my unethical experiments.</speech>
            <speech>Recent seismic activity and psychic pulses suggest it has awakened from its slumber.</speech>
            <speech>Mewtwo possesses power beyond imagination, and {COLOR=RED}rage to match{ENDCOLOR}. Only a {COLOR=GOLD}Champion{ENDCOLOR} could hope to face such a force.</speech>
            <speech>Defeat the Elite Four first. Prove your strength, then return to me.</speech>
            <speech>Until then, the cave remains sealed for everyone's safety.</speech>
        </speeches>
        <speeches id="2">
            <speech>Champion... I've been waiting for you.</speech>
            <speech>My name is Dr. Fuji. Years ago, I made a terrible mistake that haunts me to this day.</speech>
            <speech>Cerulean Cave has been sealed for good reason. Inside lies {COLOR=RED}Mewtwo{ENDCOLOR} - a Pokemon born from my unethical experiments.</speech>
            <speech>Recent seismic activity and psychic pulses suggest it has awakened from its slumber.</speech>
            <speech>As Champion, you may be the only one strong enough to face what I created.</speech>
            <speech>But I must warn you - this is no ordinary Pokemon. Mewtwo possesses power beyond imagination, and {COLOR=RED}rage to match{ENDCOLOR}.</speech>
            <speech>Are you willing to enter Cerulean Cave and confront the consequences of my sins?</speech>
        </speeches>
        <speeches id="3">
            <speech>I understand your hesitation. The weight of my mistakes should not fall upon your shoulders.</speech>
            <speech>But know this - Mewtwo will not remain dormant forever. When you're ready to face this threat...</speech>
            <speech>I'll be here, waiting with the truth you need to hear.</speech>
        </speeches>
        <speeches id="4">
            <speech>I understand your courage, Champion. The cave entrance will unlock for you now.</speech>
            <speech>Be careful in there... Team Rocket remnants still lurk in the depths, and Giovanni himself guards the way.</speech>
            <speech>But remember - Mewtwo is not evil, just... {COLOR=SKY}lost{ENDCOLOR}. Born into a world that saw it only as a weapon.</speech>
            <speech>If there's any hope of reaching it, that hope lies with you.</speech>
            <speech>I cannot face my creation again. This burden... this responsibility... I leave to you.</speech>
            <speech>May you succeed where I have failed. Good luck, Champion.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>*An invisible force pushes you back from the cave entrance*</speech>
            <speech>The air itself seems to reject your presence. Powerful psychic energy crackles around the sealed entrance.</speech>
            <speech>Whatever lies within this cave is far beyond the reach of ordinary trainers.</speech>
            <speech>You'll need special permission - or extraordinary strength - to breach this barrier.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Psyduck" speed="1" sprite="54" type="pokemon" x="29" y="25">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Psyyyy!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="42" y="3">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Luuuvdiiisc!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Staryu" speed="1" sprite="120" type="pokemon" x="14" y="10">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Tyaaah!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Kingler" speed="1" sprite="99" type="pokemon" x="16" y="5">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4">Kiiiing!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="5" name="Jackson" speed="1" sprite="95" type="npc" x="43" y="11">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Wooooo! Cerulean City is so pretty!</speech>
        <speech>My father's taking me fishing later, I'm so excited!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="6" name="Nathan" randomRotation="false" sprite="16" x="40" y="8">
        <speech>My son and I are on holiday!</speech>
        <speech>We came here hoping to fish up some Luvdisc to get Heart Scales then our Pokémon can relearn some moves!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="7" name="Lucy" randomRotation="false" sprite="27" x="8" y="28">
        <speech>Welcome to Cerulean City!</speech>
        <speech>It's always a pleasure to see fresh-faced adventurers passing through.</speech>
    </npc>
    <movingNpc direction="LEFT" id="9" name="Pidgeot" speed="1" sprite="18" type="pokemon" x="60" y="16">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Kree-aaaah!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="10" name="Dorothy" randomRotation="false" sprite="18" x="29" y="55">
        <speech>Slowking and I have been here most of our lives, my dear.</speech>
        <speech>In fact, they still know the move Dig!</speech>
    </npc>
    <movingNpc direction="DOWN" id="11" name="Slowking" speed="1" sprite="199" type="pokemon" x="33" y="56">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Slooow... king!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="12" name="Marill" speed="1" sprite="183" type="pokemon" x="25" y="34">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Marrr!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Denis" randomRotation="true" sprite="39" x="58" y="27">
        <speech>Get outta here, kid!</speech>
        <speech>I'm really annoyed about these bike prices in todays economy.</speech>
    </npc>
    <movingNpc direction="DOWN" id="14" name="Psyduck" shouldSleep="" speed="1" sprite="54" type="pokemon" x="51" y="33">
        <path>DOWNx7,UPx7</path>
        <onCollisionSpeech gap="4">Psyyyyy...?</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="15" name="Elizabeth" randomRotation="true" sprite="28" x="5" y="16">
        <speech>..................</speech>
        <speech>..........................</speech>
        <speech>....................................</speech>
        <speech>Wait! Sorry, I was deep in thought, admiring the beauty of this city.</speech>
        <speech>Are you sure you want to go into the cave? It's scary!</speech>
    </npc>
    <movingNpc direction="DOWN" id="8" name="Mike" speed="1" sprite="80" type="npc" x="9" y="34">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4"/>
        <speech>Red, blue, green... ahh, so many cool bikes.</speech>
    </movingNpc>
</npcs>
