<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Training Pokémon isn't just about strength; it's about nurturing their potential.</speech>
        </speeches>
        <speeches id="2">
            <speech>That was a tough one, but we'll keep working together to grow even stronger!</speech>
        </speeches>
        <speeches id="3">
            <speech>That was a tough one, but we'll keep working together to grow even stronger!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, I can see the bond you share with your Pokémon. A little love and care goes a long way!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I've walked many miles through this land, but I'm always ready for a good battle to break up the journey!</speech>
        </speeches>
        <speeches id="2">
            <speech>Guess I'll need to take a longer rest... but every trail has its bumps.</speech>
        </speeches>
        <speeches id="3">
            <speech>Guess I'll need to take a longer rest... but every trail has its bumps.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sometimes the road gets tough, but I'm still standing strong. Onward to the next adventure!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Out here in the wild, it's just me, my Pokémon, and the open range.</speech>
        </speeches>
        <speeches id="2">
            <speech>Well, partner, I reckon I'll have to wrangle up a better strategy next time!</speech>
        </speeches>
        <speeches id="3">
            <speech>Well, partner, I reckon I'll have to wrangle up a better strategy next time!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Just like taming a wild stallion, once you've got control, it's smooth ridin' all the way!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>The path ahead might be steep, but It's nothing compared to the battles I've had to face. Ready to climb with me?</speech>
        </speeches>
        <speeches id="2">
            <speech>That was a rough one. But every hiker knows, you rise and try again.</speech>
        </speeches>
        <speeches id="3">
            <speech>That was a rough one. But every hiker knows, you rise and try again.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ha! This mountain won't defeat me! I'll keep going, no matter what.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Birds have a unique way of soaring through the skies, just as I aim to soar in battle. Let's see if you can keep up!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, it's okay. Even the best fliers have to face strong winds now and then.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, it's okay. Even the best fliers have to face strong winds now and then.</speech>
        </speeches>
        <speeches id="4">
            <speech>Just as I expected! A true battle of flight and strategy!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Gengar" speed="1" sprite="94" type="pokemon" x="33" y="36">
        <path>DOWNx4,LEFTx1,RIGHTx1,UPx4</path>
        <onCollisionSpeech gap="4">Gengggaaar!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Sandslash" speed="1" sprite="28" type="pokemon" x="0" y="2">
        <path>DOWNx8,UPx8</path>
        <onCollisionSpeech gap="4">Slaaaaaash!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="3" name="Blake" randomRotation="false" sprite="20" x="33" y="10">
        <speech>What's this? A traveler made it through Rock Tunnel?</speech>
        <speech>I must've taken a wrong turn somewhere and ended up near Lavender Town...</speech>
        <speech>Time to head back and catch a Nacli!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="5" name="Golem" speed="1" sprite="75" type="pokemon" x="19" y="22">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Gollleeeem!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="6" name="Eric" randomRotation="true" sprite="49" x="6" y="26">
        <speech>Whaaats uuuuuup!?</speech>
        <speech>Me and my Electabuzz shred together, check out this riff!</speech>
        <speech>They're holding an Electirizer, and let me tell you those sparks scream pure power!</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Electabuzz" speed="1" sprite="125" type="pokemon" x="10" y="25">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">taaaaa-buzzz!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="8" name="Haunter" speed="1" sprite="93" type="pokemon" x="7" y="45">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Haaaaunt!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="9" name="Magnus" speed="1" sprite="10" type="npc" x="18" y="25">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Golem, use Rock Blast! Once more!</speech>
    </movingNpc>
</npcs>
