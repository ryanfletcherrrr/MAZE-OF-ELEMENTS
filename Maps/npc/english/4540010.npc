<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Heh heh heh... Were you surprised?</speech>
            <speech>That there are two Gym Leaders?</speech>
            <speech>We're twins!</speech>
            <speech>We don't need to talk because...</speech>
            <speech>...we can each tell...</speech>
            <speech>...what the other is thinking...</speech>
            <speech>..all in our minds!</speech>
            <speech>This combination of ours...</speech>
            <speech>Can you beat it?</speech>
        </speeches>
        <speeches id="2">
            <speech>It can't be helped. You've won...</speech>
            <speech>...so take this in recognition!</speech>
            <speech>The Mind Badge is a symbol of mind and body coming together!</speech>
            <speech>It also enables Pokémon to use the HM move called Dive!</speech>
            <speech>And take this, too!</speech>
            <speech>Psyshock!</speech>
            <speech>It attacks your opponent on their Def. instead of Sp. Def.</speech>
            <speech>It's a perfect move for Psychic-type Pokémon to take down those "Pink Blobs".</speech>
            <speech>Looks like the bond between you and your Pokémon is far stronger than the bond we share as twins...</speech>
            <speech>But you'll go on from here to form even more bonds! That's the future I see for you!</speech>
            <speech>There may be a harsh ordeal ahead for you and your Pokémon...</speech>
            <speech>But that's all right! You and your Pokémon aren't alone! You have each other!</speech>
            <speech>That's why we want you to face whatever troubles may come your way head-on and full of courage!</speech>
        </speeches>
        <speeches id="3">
            <speech>Looks like the bond between you and your Pokémon is far stronger than the bond we share as twins...</speech>
            <speech>But you'll go on from here to form even more bonds! That's the future I see for you!</speech>
            <speech>There may be a harsh ordeal ahead for you and your Pokémon...</speech>
            <speech>But that's all right! You and your Pokémon aren't alone! You have each other!</speech>
            <speech>That's why we want you to face whatever troubles may come your way head-on and full of courage!</speech>
        </speeches>
        <speeches id="4">
            <speech>This battle was too easy for us. Nevertheless, We are happy to give you another chance.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I let it slip that I'm a greenhorn right before the battle.</speech>
        </speeches>
        <speeches id="2">
            <speech>Because I'm a greenhorn, I'm not worth mentioning.</speech>
        </speeches>
        <speeches id="3">
            <speech>Because I'm a greenhorn, I'm not worth mentioning.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're not well enough prepared yet.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Heh-heh-heh. If you lose, I'll turn you into a Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm disappointed, but it can't be helped... My prophecies are absolute...</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm disappointed, but it can't be helped... My prophecies are absolute...</speech>
        </speeches>
        <speeches id="4">
            <speech>Next time I see you, I will turn you into a Pokémon with my power.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>I may look like this now, but I was once a Beauty, too, you know!</speech>
        </speeches>
        <speeches id="2">
            <speech>Call me negative or whatever you like. This is just who I am.</speech>
        </speeches>
        <speeches id="3">
            <speech>Call me negative or whatever you like. This is just who I am.</speech>
        </speeches>
        <speeches id="4">
            <speech>After I was dumped by my boyfriend, I fell into depression. Before I knew it, I looked like this!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I grow stronger with each tear I cry.</speech>
        </speeches>
        <speeches id="2">
            <speech>Now I can get even stronger. I grow with every grudge.</speech>
        </speeches>
        <speeches id="3">
            <speech>Now I can get even stronger. I grow with every grudge.</speech>
        </speeches>
        <speeches id="4">
            <speech>Don't get hung up on sadness or frustration. You can use your grudges to motivate yourself.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Speech can be utter nonsense. Pretty words only taint battles...</speech>
        </speeches>
        <speeches id="2">
            <speech>Because I'm a greenhorn, I'm not worth mentioning.</speech>
        </speeches>
        <speeches id="3">
            <speech>Because I'm a greenhorn, I'm not worth mentioning.</speech>
        </speeches>
        <speeches id="4">
            <speech>Defeat is worth nothing. Losers don't need words...</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>I shall make a prophecy... This battle... You will emerge victorious...</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm disappointed, but it can't be helped... My prophecies are absolute...</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm disappointed, but it can't be helped... My prophecies are absolute...</speech>
        </speeches>
        <speeches id="4">
            <speech>You... Are you so weak as to reverse my prophecy?</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Heheh... I see it all clearly... You are a doctor from an evil planet, aren't you?</speech>
        </speeches>
        <speeches id="2">
            <speech>Eh...radio waves... There are radio waves coming from your nose...</speech>
        </speeches>
        <speeches id="3">
            <speech>Eh...radio waves... There are radio waves coming from your nose...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ugh... My powers... My powers are... I think I need a nurse...</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Scary places are the best to me. I'd love to live in a cemetery...</speech>
        </speeches>
        <speeches id="2">
            <speech>Defeating me is amazing! You must be kinda cursed, too!</speech>
        </speeches>
        <speeches id="3">
            <speech>Defeating me is amazing! You must be kinda cursed, too!</speech>
        </speeches>
        <speeches id="4">
            <speech>In a cemetery where the party begins after the day ends. Yes, that's the life for me...</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Hi! Focus!</speech>
        </speeches>
        <speeches id="2">
            <speech>My hypnotic powers don't work on you?! What mental fortitude you must possess!</speech>
        </speeches>
        <speeches id="3">
            <speech>My hypnotic powers don't work on you?! What mental fortitude you must possess!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eeeeek!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>I normally only ever listen to classical music, but if I lose, I think I shall try a bit of new age!</speech>
        </speeches>
        <speeches id="2">
            <speech>Now I can get even stronger. I grow with every grudge.</speech>
        </speeches>
        <speeches id="3">
            <speech>Now I can get even stronger. I grow with every grudge.</speech>
        </speeches>
        <speeches id="4">
            <speech>Is this the dawning of the age of Aquarius?</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>I started battling just to be cool, but I became an Ace before I knew it.</speech>
        </speeches>
        <speeches id="2">
            <speech>In the end, being good at battling alone isn't enough, no matter how strong you are.</speech>
        </speeches>
        <speeches id="3">
            <speech>In the end, being good at battling alone isn't enough, no matter how strong you are.</speech>
        </speeches>
        <speeches id="4">
            <speech>But I'm still not cool even though I've been recognized as an Ace...</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Gym Guide" randomRotation="false" sprite="5" x="36" y="49">
        <speech>Greetings, Champion in the making!</speech>
        <speech>Mossdeep Gym's a real head-scratcher with Tate and Liza's Psychic-types,</speech>
        <speech>but you've got the brains to crack this puzzle.</speech>
        <speech>Dark, Ghost, or Bug Pokémon will be your allies in this mental marathon.</speech>
        <speech>Keep your wits about you, stay sharp, and you'll be the master of minds!</speech>
    </npc>
</npcs>
