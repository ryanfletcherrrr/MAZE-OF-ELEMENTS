<npcs>
    <npc direction="DOWN" id="1000" name="Mrs. Motokawa" sprite="18" x="7" y="8">
        <speech>The Arong beach up north was a famous tourist hotspot, especially during summers.</speech>
        <speech>Our family used to visit it every year, at least before those large boulders fell down and blocked the
            entire path.
        </speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Mr. Motokawa" sprite="63" x="3" y="7">
        <speech>Without access to Arong Village and their port, travel for Rockshore citizens is really restricted.
        </speech>
        <speech>Caves on one side, a huge forest on the other, and then those boulders. It's really troublesome.
        </speech>
    </npc>
    <npc direction="RIGHT" id="1003" name="Preschooler Kira" randomRotation="true" sprite="82" x="13" y="8">
        <speech>This book says that Donphan can destroy an entire house if it uses Rollout.</speech>
        <speech>If that's true, then why does no one ask a Donphan to break those big boulders near Oozy Forest?</speech>
    </npc>
</npcs>
