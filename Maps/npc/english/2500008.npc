<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Please select a floor.{ENDCOLOR}</speech>
            <speech>The buttons await your input, ready to take you where you need.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GREEN}The lift console closes itself with a soft click.{ENDCOLOR}</speech>
            <speech>You'll need to activate it again if you wish to use it.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>You shouldn't be here! If Team Rocket finds out I spoke to you, I'm finished... but maybe you can put a stop to this madness.</speech>
        </speeches>
        <speeches id="2">
            <speech>I knew I should've spent more time training... not just in the lab.</speech>
        </speeches>
        <speeches id="3">
            <speech>I knew I should've spent more time training... not just in the lab.</speech>
        </speeches>
        <speeches id="4">
            <speech>I don't want to fight, but I can't risk getting caught helping you. Be careful!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Hah! You have no idea who you're messing with. Silph Co. is just the beginning I'm climbing to the top of Team Rocket!</speech>
        </speeches>
        <speeches id="2">
            <speech>No, no, no! This wasn't supposed to happen! My big break, ruined!</speech>
        </speeches>
        <speeches id="3">
            <speech>No, no, no! This wasn't supposed to happen! My big break, ruined!</speech>
        </speeches>
        <speeches id="4">
            <speech>See? I am going places! Soon, I'll be the one giving the orders!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>You shouldn't have come here, kid! {COLOR=YELLOW}Project T.E.R.A.{ENDCOLOR} is {COLOR=RED}Team Rocket property{ENDCOLOR} now!</speech>
            <speech>These {COLOR=CYAN}Porygon units{ENDCOLOR} are responding beautifully to our {COLOR=GOLD}Tera Energy modifications{ENDCOLOR}!</speech>
            <speech>My {COLOR=YELLOW}electric terrain{ENDCOLOR} will fry your Pokemon before you can even blink!</speech>
            <speech>Time to see what {COLOR=PURPLE}weaponized technology{ENDCOLOR} can really do!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impossible! My {COLOR=YELLOW}electric systems{ENDCOLOR} were supposed to be foolproof!</speech>
            <speech>The {COLOR=CYAN}Porygon-Z prototype{ENDCOLOR} still needs more calibration...</speech>
            <speech>But don't think this is over! {COLOR=RED}Team Rocket{ENDCOLOR} has bigger plans for this place!</speech>
        </speeches>
        <speeches id="3">
            <speech>My equipment is fried... The {COLOR=YELLOW}electric terrain generator{ENDCOLOR} is completely busted.</speech>
            <speech>You may have stopped me, but the other {COLOR=RED}Rocket operatives{ENDCOLOR} won't be so easy!</speech>
            <speech>{COLOR=GOLD}Project T.E.R.A.{ENDCOLOR} is too valuable to abandon now!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ha! {COLOR=YELLOW}Electric superiority{ENDCOLOR} wins again!</speech>
            <speech>My {COLOR=CYAN}Porygon-Z{ENDCOLOR} and {COLOR=PURPLE}Magneton{ENDCOLOR} make an unstoppable {COLOR=GOLD}technological duo{ENDCOLOR}!</speech>
            <speech>Now get out of here before I call for backup!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Intern Mina" shouldSleep="" speed="1" sprite="7" type="npc" x="7" y="6">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>I spilled coffee on a warp tile once and teleported into a closet.</speech>
        <speech>Stayed there for 3 hours. No regrets.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Guardian Ryu" shouldSleep="" speed="1" sprite="126" type="npc" x="25" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Used to mop these floors when the original Game Boy dropped. Caught a Clefairy on a break.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Executive Taro" randomRotation="false" sprite="75" x="36" y="14">
        <speech>If anyone asks, I'm in a crucial meeting.</speech>
        <speech>If they insist, tell them it's about Rattata-brand toothpaste.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Rattata" shouldSleep="" speed="1" sprite="19" type="pokemon" x="32" y="16">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>
