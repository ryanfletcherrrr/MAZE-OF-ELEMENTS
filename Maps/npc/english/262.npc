<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Feast your eyes on the most graceful aerial performers in all the land!</speech>
        </speeches>
        <speeches id="2">
            <speech>The show must go on even after a stumble.</speech>
        </speeches>
        <speeches id="3">
            <speech>The show must go on even after a stumble.</speech>
        </speeches>
        <speeches id="4">
            <speech>Flawless! A perfect display of skill and elegance!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I let the wind guide my battles...just like my Pokémon!</speech>
        </speeches>
        <speeches id="2">
            <speech>Looks like I got caught in a bad draft.</speech>
        </speeches>
        <speeches id="3">
            <speech>Looks like I got caught in a bad draft.</speech>
        </speeches>
        <speeches id="4">
            <speech>The wind was in my favor! Feels good to ride the breeze to victory!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Flying-type battles are all about positioning. Can you keep up?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... I miscalculated. Next time, I won't be so careless.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... I miscalculated. Next time, I won't be so careless.</speech>
        </speeches>
        <speeches id="4">
            <speech>Just as planned. Victory is about knowing when to strike!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>One day, I'll fly alongside my Pokémon. Until then, I battle with them!</speech>
        </speeches>
        <speeches id="2">
            <speech>Grounded but I'll find my wings again.</speech>
        </speeches>
        <speeches id="3">
            <speech>Grounded but I'll find my wings again.</speech>
        </speeches>
        <speeches id="4">
            <speech>Every victory is one step closer to touching the sky!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>I wrangle tough Pokémon every day. Think you got what it takes to outmatch me?</speech>
        </speeches>
        <speeches id="2">
            <speech>Well shoot, looks like I got bucked right off this battle!</speech>
        </speeches>
        <speeches id="3">
            <speech>Well shoot, looks like I got bucked right off this battle!</speech>
        </speeches>
        <speeches id="4">
            <speech>That's how you handle a fight! Now, don't go cryin' into your hat, ya hear?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Out here, it's survival of the fittest. Let's see if you can handle the heat, partner!</speech>
        </speeches>
        <speeches id="2">
            <speech>Well now, looks like I've been outdueled. Guess I'll tip my hat to ya.</speech>
        </speeches>
        <speeches id="3">
            <speech>Well now, looks like I've been outdueled. Guess I'll tip my hat to ya.</speech>
        </speeches>
        <speeches id="4">
            <speech>Heh, around these parts, experience wins the day. Better luck next time!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>You think you can keep up with me? My team and my ride are built for speed!</speech>
        </speeches>
        <speeches id="2">
            <speech>Guess I hit a speed bump Ill be back, faster than ever!</speech>
        </speeches>
        <speeches id="3">
            <speech>Guess I hit a speed bump Ill be back, faster than ever!</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! You're eating my dust, rookie!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Battling and biking it's all about knowing when to hit the gas and when to take it easy.</speech>
        </speeches>
        <speeches id="2">
            <speech>Whew...Maybe I took it too easy that time.</speech>
        </speeches>
        <speeches id="3">
            <speech>Whew...Maybe I took it too easy that time.</speech>
        </speeches>
        <speeches id="4">
            <speech>See? A smooth ride leads to victory!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>No brakes, no fear! Just me, my ride, and a full-speed battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>Urgh! Guess I should've slowed down a bit...</speech>
        </speeches>
        <speeches id="3">
            <speech>Urgh! Guess I should've slowed down a bit...</speech>
        </speeches>
        <speeches id="4">
            <speech>That's how you burn rubber! You can't stop me!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>The road is endless but for you, this battle will be a dead end.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph...Every loss is just another road to travel.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph...Every loss is just another road to travel.</speech>
        </speeches>
        <speeches id="4">
            <speech>Another battle, another victory. The road calls me forward.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Chansey" speed="1" sprite="113" type="pokemon" x="8" y="4">
        <path>DOWNx4,LEFTx4,DOWNx1,UPx1,RIGHTx4,UPx4</path>
        <onCollisionSpeech gap="4">Chaaanseeey!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Pidgeotto" speed="1" sprite="17" type="pokemon" x="24" y="18">
        <path>DOWNx18,UPx18</path>
        <onCollisionSpeech gap="4">KREEEEH!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="3" name="Tropius" speed="1" sprite="357" type="pokemon" x="22" y="53">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">THROOOH-HAAAW!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Liam" randomRotation="false" sprite="34" x="14" y="16">
        <speech>My Primeape evolved into an Annihilape after using Rage Fist three times in one battle.</speech>
        <speech>Now it's way more of a badass!</speech>
    </npc>
    <movingNpc direction="UP" id="4" name="Mason" speed="1" sprite="86" type="npc" x="8" y="52">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>According to my friend, there's more than one type of EXP Share.</speech>
    </movingNpc>
</npcs>
