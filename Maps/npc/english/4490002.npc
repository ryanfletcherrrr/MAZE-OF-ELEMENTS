<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I praise your courage in challenging me! For I am the one with the strongest kick!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... If I was going to lose anyway, I was hoping to get totally messed up in the process.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. The Pokémon did the fighting. My strong kick didn't help a bit.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Like a fragment of a forgotten dream, a mysterious Pokémon beckons to you...</speech>
        </speeches>
        <speeches id="2">
            <speech>My Fairy says that you're crazy dangerous!</speech>
        </speeches>
        <speeches id="3">
            <speech>My Fairy says that you're crazy dangerous!</speech>
        </speeches>
        <speeches id="4">
            <speech>Being defeated by you makes this waking world seem even less believable than my dreams...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>My big brother who never comes out of his room told me to come check this place out for him.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'll let my big brother know that this is a scary place.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'll let my big brother know that this is a scary place.</speech>
        </speeches>
        <speeches id="4">
            <speech>I'll let my big brother know that this is a fun place.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Whispers of ancient power echo through the night. Do you dare to heed their call?</speech>
            <speech>Under the watchful gaze of the moon, our covenant assembles. The challenge of the ages awaits your courage.</speech>
        </speeches>

        <speeches id="2">
            <speech>Though you triumph, the eternal darkness weaves its patience. Our resolve remains unshaken, undimmed.</speech>
            <speech>The shadows part, revealing a path to our enigmatic leader. A reward for the brave, the strong, the victorious.</speech>
        </speeches>

        <speeches id="3">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
            <speech>Our rituals, bound to the celestial dance, find no favor at this hour. The right moment eludes us still.</speech>
            <speech>Return when the moon reigns supreme over the night, in $DURATION. Only then shall the veil lift.</speech>
        </speeches>

        <speeches id="4">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
        </speeches>

        <speeches id="5">
            <speech>The celestial bodies have yet to align; our power lies dormant, awaiting the ordained time.</speech>
            <speech>Return on Friday, when the moon's glow pierces the veil of reality, and our power is at its zenith.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh, you're looking for me? I'm Xueying. Do you have something from my dad?</speech>
        </speeches>
        <speeches id="2">
            <speech>You met my dad? And he sent something for me? What is it? Can I have it, please?</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, you're not giving it? That's... disappointing. I thought it might be something from home.</speech>
        </speeches>
        <speeches id="4">
            <speech>This... it's my doll! I can't believe he kept it safe for me. Thank you for bringing it all the way here.</speech>
            <speech>Here, take this as a token of my gratitude. I'll go see him soon. I've missed him so much.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Duskull" speed="1" sprite="355" type="pokemon" x="2" y="17">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Shuppet" speed="1" sprite="353" type="pokemon" x="23" y="18">
        <path>LEFTx7,UPx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Chimecho" speed="1" sprite="358" type="pokemon" x="25" y="4">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Chimecho!</onCollisionSpeech>
        <speech>Chimecho!</speech>
    </movingNpc>
</npcs>
