<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Psst! Here. Over here. This gathering of the Team Galactic... What is the meaning of it?</speech>
        </speeches>
        <speeches id="2">
            <speech>...Whew. So, that was Cyrus, the boss of the Team Galactic.</speech>
            <speech>Quite the performance, no?</speech>
            <speech>Mesmerizing for one of only 27 years old.</speech>
            <speech>...But to make a world for Team Galactic and none other?</speech>
            <speech>It is preposterous. So much so that it makes my head spin. A new world?</speech>
            <speech>What is that? And what is this incomplete world?</speech>
            <speech>Very well. To investigate such matters is the job of the International Police.</speech>
            <speech>Of which I am a member in good stead. And it is my job, therefore.</speech>
            <speech>We shall part ways here. Take extra care, my friend!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Fellow members of Team Galactic! Hear me! My name, as I appear to you today, is Cyrus.</speech>
            <speech>This world of ours is a crude one. In a word, it is incomplete.</speech>
            <speech>It has been, and always will be, a struggle to survive in this world.</speech>
            <speech>We humans and Pokémon are likewise incomplete. Because we are all so lacking, we fight, we maim...</speech>
            <speech>It is ugly. I hate the incompleteness. That we are all incomplete, I hate it with my entire body and being.</speech>
            <speech>The world should be complete. The world must change.</speech>
            <speech>Then, who will change it? Me, Cyrus. And Team Galactic.</speech>
            <speech>Yes, all of you. Together we pored over myths and exposed their secrets.</speech>
            <speech>Together we captured legendary Pokémon.</speech>
            <speech>And now, Team Galactic has obtained the energy to change the world!</speech>
            <speech>The power of dreams is within our grasp! Understand it, fellow members!</speech>
            <speech>My long-held dreamworld is on the verge of becoming reality.</speech>
            <speech>All those headed to Mt. Coronet, and those who remain here...</speech>
            <speech>Though our missions may differ, our hearts beat as one.</speech>
            <speech>Let there be glory for Team Galactic!</speech>
        </speeches>
    </conversation>
</npcs>
