<npcs>
    <conversation id="2">
        <speeches id="1">
            <speech>Yo! If it isn't $PLAYER_NAME! Out training right away, are you?</speech>
            <speech>So, uh, since you're training anyway, can you do me a favor? I'd like you to patrol Stark Mountain
                for me.
            </speech>
            <speech>Up past here, there's this volcano. It's Stark Mountain. Deep inside is this special rock called the
                Magma Stone.
            </speech>
            <speech>I can't explain it well, but it's really important. It keeps a Pokémon asleep.</speech>
            <speech>But lately, I've been hearing rumors about vandals in Stark Mountain. They say goons in space suits
                are causing trouble there.
            </speech>
            <speech>Huh? What, me? I was on my way to the Pokémon Center because my Pokémon's low on HP.</speech>
            <speech>So, if you could get up to Stark Mountain now, that'd be great. Thanks!</speech>
        </speeches>
        <speeches id="2">
            <speech>OK! You're in charge! Patrol Stark Mountain for me! Don't worry about me. Not even a little,
                OK?
            </speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>This is it! Stark Mountain!</speech>
            <speech>Now I need to go deep inside.</speech>
            <speech>Can that old guy really take over I wonder...</speech>
            <speech>Can he replace Master Cyrus?</speech>
            <speech>Maybe this is a good time for me to be done with this Team Galactic thing...</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Did you look thoroughly inside the Stark Mountain?</speech>
            <speech>There is something fishy going on.</speech>
        </speeches>
        <speeches id="2">
            <speech>That! That is a Magma Stone!! How did you manage to get that?</speech>
            <speech>Oh!!!</speech>
            <speech>Always knew that old man did not enter the mountain for getting a tan.</speech>
            <speech>Give me the stone, I will put restore it.</speech>
        </speeches>
        <speeches id="3">
            <speech>You are kidding, right?</speech>
        </speeches>
        <speeches id="4">
            <speech>Thanks for the help kid.</speech>
            <speech>Also, since you have now encountered Heatran, why don't you go and give Professor Rowan a visit?</speech>
            <speech>He would love to learn more about Heatran.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>


    <movingNpc direction="DOWN" id="1" name="Fearow" shouldSleep="false" speed="1" sprite="22" type="pokemon" x="33"
               y="20">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">....</onCollisionSpeech>
        <speech>*Fearow looks angry*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Golem" speed="1" sprite="76" type="pokemon" x="12" y="27">
        <path>UPx2, LEFTx2, UPx1, LEFTx2, RIGHTx3, DOWNx1, RIGHTx1, DOWNx2</path>
        <onCollisionSpeech gap="4">.....</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="3" name="Scientist Stacy" randomRotation="false" sprite="7" x="28" y="7">
        <speech>I'm here to study the Pokémon here on Stark Mountain. I hear there are some great ones to be seen!
        </speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Hiker Glen" randomRotation="true" sprite="10" x="11" y="32">
        <speech>Shhh be quiet...</speech>
        <speech>Team Galactic is around here!</speech>
    </npc>
    <movingNpc direction="LEFT" id="5" name="Numel" speed="1" sprite="322" type="pokemon" x="26" y="11">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="UP" hidden="false" id="6" name="Rey" randomRotation="false" sprite="34" x="14" y="22">
        <speech>I came here to train my Marowak, But its not going well with Team Galactic about.</speech>
    </npc>

</npcs>