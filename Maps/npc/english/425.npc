<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ah! $PLAYER_NAME!</speech>
            <speech>Ralts and I have gotten a lot stronger since we first met.</speech>
            <speech>Growing together! I want to prove that to you</speech>
            <speech>Please...help me once more... And have a battle with me!</speech>
            <speech>We're going to win this, Ralts! We have to</speech>
        </speeches>
        <speeches id="2">
            <speech>Wow... You really are strong, $PLAYER_NAME!</speech>
            <speech>I'll go back to Verdanturf...</speech>
            <speech>$PLAYER_NAME, thank you... Being a Trainer is tough, isn't it?</speech>
            <speech>It's not enough just to battle with your Pokémon. I can't become a true Trainer like that... Not really...</speech>
            <speech>I... I'm definitely... I'm going to get stronger. Much, much stronger!</speech>
            <speech>I feel like I learned a lot from just one Pokémon battle with you... About my own limits...and Ralts's...</speech>
            <speech>So...um... That's why... $PLAYER_NAME... If it's all right... Could I...</speech>
            <speech>Could I call you...my r-riv—</speech>
            <speech>Ah, never mind! S-sorry! It was nothing! Please forget about it!</speech>
            <speech>Guh...good-bye!</speech>
        </speeches>
        <speeches id="3">
            <speech>Wow... You really are strong, $PLAYER_NAME!</speech>
            <speech>I'll go back to Verdanturf...</speech>
            <speech>$PLAYER_NAME, thank you... Being a Trainer is tough, isn't it?</speech>
            <speech>It's not enough just to battle with your Pokémon. I can't become a true Trainer like that... Not really...</speech>
            <speech>I... I'm definitely... I'm going to get stronger. Much, much stronger!</speech>
            <speech>I feel like I learned a lot from just one Pokémon battle with you... About my own limits...and Ralts's...</speech>
            <speech>So...um... That's why... $PLAYER_NAME... If it's all right... Could I...</speech>
            <speech>Could I call you...my r-riv—</speech>
            <speech>Ah, never mind! S-sorry! It was nothing! Please forget about it!</speech>
            <speech>Guh...good-bye!</speech>
        </speeches>
        <speeches id="4">
            <speech>Wow! Did I just beat you...?</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Phew... It's actually pretty far, isn't it?</speech>
            <speech>All the way here to Mauville...</speech>
            <speech>So that must be Route 118 ahead...</speech>
            <speech>I wonder what kind of Pokémon I'll meet there. I can't wait to find out!</speech>
            <speech>I'll see you later, $PLAYER_NAME! I'm going straight to Route 118!</speech>
            <speech>Let's definitely have a battle next time we meet! It's a promise, OK? And you can't break a promise!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>I'm afraid I can't let anyone pass through to the north until this is resolved. It's too dangerous.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Oh! Hello there, $PLAYER_NAME. You've arrived at quite a troublesome time.</speech>
            <speech>We're facing a bit of a crisis here in New Mauville. The powerplant's generator is failing.</speech>
            <speech>I'm afraid I can't let anyone pass through to the north until this is resolved. It's too dangerous.</speech>
            <speech>Would you be able to investigate the situation for us? You've shown great skill at the Gyms.</speech>
            <speech>There are a few trainers inside the powerplant who might know more. Please be careful.</speech>
            <speech>If you can find the Generator Battery and fix the issue, it would be a tremendous help.</speech>
            <speech>It's a challenging task, but I believe someone of your caliber can handle it. Good luck, $PLAYER_NAME!</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Marvelous, $PLAYER_NAME! You've restored power to New Mauville! The whole town is buzzing with energy again.</speech>
            <speech>Your expertise in handling such a critical situation is truly commendable.</speech>
            <speech>As a token of our town's gratitude, I have something special for you.</speech>
        </speeches>
        <speeches id="2">
            <speech>This Thunder Stone is a small symbol of our immense appreciation. It holds the power to evolve certain Pokémon.</speech>
            <speech>May it help you on your journey as much as you've helped New Mauville.</speech>
            <speech>Thank you again, $PLAYER_NAME. You've been a real spark of hope for us all!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Stop!</speech>
            <speech>Stop! This is not a joke you foolish little girl!</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>Ah, you're back! But it looks like you haven't found the Badge Case yet.</speech>
            <speech>The safety of our badges is paramount for the gym's honor.</speech>
            <speech>Could you continue your search? I'm counting on you to bring it back. </speech>
            <speech>The future challengers won't be able to compete without those badges.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh! Is that my Badge Case you have there? Splendid work, Trainer!</speech>
            <speech>I knew I could count on someone as reliable as you.</speech>
            <speech>Would you kindly return it? With the badges back, we can ensure the gym's legacy continues untarnished.</speech>
        </speeches>
        <speeches id="3">
            <speech>I understand you might want to hold onto it a bit longer. Maybe you feel there's more to be done?</speech>
            <speech>Well, the gym and I will be here waiting.</speech>
            <speech>Just remember, the sooner we have those badges back, the sooner we can get back to normal.</speech>
            <speech>Take your time, but don't keep us waiting too long!</speech>
        </speeches>
        <speeches id="4">
            <speech>Thank you, truly! With the Badge Case back in safe hands, we can continue to challenge and inspire trainers from all over.</speech>
            <speech>You've done Mauville City a great service today.</speech>
            <speech>As a token of my gratitude, let me offer you something special. Have this TM82, Thunder wave!</speech>
            <speech>Your bravery and determination remind me of the very essence of what it means to be a Pokémon Trainer.</speech>
            <speech>Thank you, and do come back anytime you wish to challenge the gym!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>Ah, $PLAYER_NAME! I'm in a right pickle, I am. My beloved ship, the one I've sailed for years, has been nicked by Team Aqua goons!</speech>
            <speech>They dashed off towards Route 104, and with my Peeko also taken, I'm stuck here, landlocked and worried sick.</speech>
            <speech>I've never felt so helpless... You've shown such bravery before, I must ask, could you lend me your strength once more?</speech>
            <speech>Meet me at Route 104, by the edge of the woods. We'll start our search from there. I'm counting on you, $PLAYER_NAME!</speech>
            <speech>Together, I believe we can right this wrong and set the seas right again. Peeko and I, we'll be waiting for your help.</speech>
        </speeches>
    </conversation>

    <npc direction="DOWN" hidden="false" id="1" name="Laxus" randomRotation="false" sprite="49" x="21" y="8">
        <speech>My old man Makarov in Sinnoh? That's unexpected.</speech>
        <speech>I wonder how he's holding up in a place like that. Knowing him, he's probably stirring up trouble or getting caught in some wild adventure.</speech>
        <speech>Well, whatever he's up to, I hope he's doing alright</speech>
        <speech>Can't have Fairy Tail's master wandering off without a good reason.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Rolland" speed="1" sprite="35" type="npc" x="36" y="9">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">More inside!</onCollisionSpeech>
        <speech>Pedal on over to our bike shop today! Whether you're a seasoned rider or just starting out, we've got wheels for every journey.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Todd" randomRotation="false" sprite="2" x="29" y="39">
        <speech>Your smile's brighter than a Pikachu using Flash! Keep spreading that joy, Trainer!</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Bug Catcher Bert" shouldSleep="" speed="1" sprite="25" type="npc" x="43" y="23">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Oi!</onCollisionSpeech>
        <speech>Oi, Bug Catcher Bert here. If you're lookin' for real bug action, head outta Mauville and hit the routes 'round Petalburg.</speech>
        <speech>That's where the bugs really swarm!</speech>
        <speech>But don't discount Mauville entirely, you might just stumble upon somethin' special in these urban jungles!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Erlend" shouldSleep="" speed="1" sprite="20" type="npc" x="38" y="42">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Move out of the way.</onCollisionSpeech>
        <speech>Ah, exquisite craftsmanship! This sculpture speaks volumes with its intricate details and masterful technique.</speech>
        <speech>A true masterpiece that captures the essence of beauty in every curve and line.</speech>
        <speech>A work of art to be admired for generations to come.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Pachirisu" shouldSleep="" speed="1" sprite="417" type="pokemon" x="9" y="18">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4">Pachirisu!</onCollisionSpeech>
        <speech>Pachirisu!</speech>
    </movingNpc>
</npcs>
