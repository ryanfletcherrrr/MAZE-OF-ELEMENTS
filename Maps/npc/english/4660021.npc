<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>You look kind of feeble. How about I put you through the wringer?</speech>
        </speeches>
        <speeches id="2">
            <speech>You did it! Next time, you'll put me through the wringer, huh?</speech>
        </speeches>
        <speeches id="3">
            <speech>You did it! Next time, you'll put me through the wringer, huh?</speech>
        </speeches>
        <speeches id="4">
            <speech>Ahaha! Not yet! I'm not done yet!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Yo, kid! Are you new? I'm the Dragon Tamer that everybody's always talking about.</speech>
        </speeches>
        <speeches id="2">
            <speech>Guess I've started to soften up. Hey, can't expect to stay on top of my game forever.</speech>
        </speeches>
        <speeches id="3">
            <speech>Guess I've started to soften up. Hey, can't expect to stay on top of my game forever.</speech>
        </speeches>
        <speeches id="4">
            <speech>Kid! Remember me! I am the Worker everybody talks about!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Let's dive into battle! My dragon Pokémon are unbeatable!</speech>
        </speeches>
        <speeches id="2">
            <speech>I need a lifebuoy</speech>
        </speeches>
        <speeches id="3">
            <speech>I need a lifebuoy</speech>
        </speeches>
        <speeches id="4">
            <speech>You're in over your head! Maybe you should stick to the kiddie pool.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>You're going to sink like a stone when you face my water Pokémon!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're at the bottom of the ocean now!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Let's make this a whirlpool of a battle! My Pokémon will suck you into defeat!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's drained... You've escaped my whirlpool.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's drained... You've escaped my whirlpool.</speech>
        </speeches>
        <speeches id="4">
            <speech>You got sucked into my whirlpool! Better luck next time.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>You're going to be all washed up when this battle is over!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's parched... You've drained my chances of winning.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's parched... You've drained my chances of winning.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're waterlogged and sinking fast!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>You're going to be all washed up when this battle is over!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's parched... You've drained my chances of winning.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's parched... You've drained my chances of winning.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're waterlogged and sinking fast!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>You're going to get wet and wild in this battle! My Pokémon will soak you!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's dry... You've soaked me in defeat.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's dry... You've soaked me in defeat.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're soaked! Time to dry off and rethink your strategy.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>My middle-age spread has given me as much gravitas as the mountains I hike!</speech>
        </speeches>
        <speeches id="2">
            <speech>At least I cannot lose when it comes to BMI!</speech>
        </speeches>
        <speeches id="3">
            <speech>At least I cannot lose when it comes to BMI!</speech>
        </speeches>
        <speeches id="4">
            <speech>Bwahaha! You'll win, too, if you just up your calorie intake a bit!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Let's make waves! My Pokémon are ready to surf all over you!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh no</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh no</speech>
        </speeches>
        <speeches id="4">
            <speech>You're just a ripple in my ocean of victory!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yo!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Let's make this a whirlpool of a battle! My Pokémon will suck you into defeat!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's drained... You've escaped my whirlpool.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's drained... You've escaped my whirlpool.</speech>
        </speeches>
        <speeches id="4">
            <speech>You got sucked into my whirlpool! Better luck next time.</speech>
        </speeches>
    </conversation>
</npcs>
