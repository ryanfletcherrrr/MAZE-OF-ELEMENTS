<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>A voyage on the S.S. Anne is best enjoyed with a spot of fine battling. Care to indulge me?</speech>
        </speeches>
        <speeches id="2">
            <speech>Splendid! That was an invigorating exchange! Perhaps I should rethink my team's composition.</speech>
        </speeches>
        <speeches id="3">
            <speech>Splendid! That was an invigorating exchange! Perhaps I should rethink my team's composition.</speech>
        </speeches>
        <speeches id="4">
            <speech>A brilliant display on both sides. A gentleman always appreciates a worthy challenge!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>This ship is sooo fancy! I bet my Pokémon battle just as elegantly as I do!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh no! My perfect record... ruined!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh no! My perfect record... ruined!</speech>
        </speeches>
        <speeches id="4">
            <speech>That was graceful, wasn't it? A true performance of skill and beauty!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I'm on vacation, but that doesn't mean I'm slacking! My Pokémon and I have been training every day!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... maybe I should've taken a break after all..</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... maybe I should've taken a break after all..</speech>
        </speeches>
        <speeches id="4">
            <speech>See? Hard work always pays off! Even on vacation!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Madison" speed="1" sprite="31" type="npc" x="9" y="8">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Ugh... I'm starting to feel seasick.</speech>
        <speech>Wish I could just pop a Full Heal and be done with it..</speech>
        <speech>Too bad it doesn't work on real-life problems!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Lucas" randomRotation="true" sprite="58" x="19" y="11">
        <speech>I'm having a hard time choosing what to evolve my Eevee into...</speech>
        <speech>There are just so many awesome options!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="3" name="Eevee" speed="1" sprite="133" type="pokemon" x="19" y="13">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Eeevvveeee!</onCollisionSpeech>
    </movingNpc>
</npcs>
