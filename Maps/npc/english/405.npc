<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>School is boring. I've got nothing to do. Yawn. I'm only battling to kill the time.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm actually getting tired of battling... There's gotta be something new to do...</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm actually getting tired of battling... There's gotta be something new to do...</speech>
        </speeches>
        <speeches id="4">
            <speech>Am I supposed to be all, like, Yay! when I win? It's too late to get excited now.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I've already got most of the Pokémon and more money than I know what to do with.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm so well off that life has become tedious. Even experiences like this are fun for me.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm so well off that life has become tedious. Even experiences like this are fun for me.</speech>
        </speeches>
        <speeches id="4">
            <speech>I just win all my Pokémon battles, too. I feel like my life is already over.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>We'll lift anchor anytime for you! So tell me, my friend, where are we bound?</speech>
        </speeches>
        <speeches id="2">
            <speech>You sure about that? Well, Peeko owes her life to you.</speech>
            <speech>You just go on and tell me anytime you want to set sail. I'll brave any tide for you!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>$PLAYER_NAME, thank goodness you're here. It seems Team Aqua has taken my ship and Peeko further south from Route 104.</speech>
            <speech>I'm at my wits' end without Peeko and my ship. We must catch up to them before it's too late. Will you help me track them down?</speech>
            <speech>I'm truly grateful for your bravery and assistance. Let's head south immediately. Every second counts in our pursuit.</speech>
        </speeches>
        <speeches id="2">
            <speech>Have you uncovered any leads on Peeko and my ship, $PLAYER_NAME? We mustn't let Team Aqua slip through our fingers.</speech>
            <speech>They're out there somewhere south of Route 104. Every moment we delay gives them a further lead. Let's keep up the chase!</speech>
        </speeches>
    </conversation>



    <movingNpc direction="DOWN" id="3" name="Surskit" speed="1" sprite="283" type="pokemon" x="9" y="23">
        <path>DOWNx8,LEFTx5,UPx8,RIGHTx5</path>
        <onCollisionSpeech gap="4">Surskit! Surskit!</onCollisionSpeech>
        <speech>Surskit is walking on water, it's so unreal!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Mrs. Turner" randomRotation="true" sprite="60" x="14" y="4">
        <speech>Maybe I'm not fitted to grow berries.</speech>
        <speech>Everthing I touch dies.</speech>
        <speech>*sobs.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Patrick" randomRotation="false" sprite="71" x="16" y="27">
        <speech>Look at these two going.</speech>
        <speech>Aren't they awesome?</speech>
        <speech>Bob is my best friend.</speech>
    </npc>
    <movingNpc direction="DOWN" id="1" name="Bob" speed="1" sprite="4" type="npc" x="16" y="30">
        <path>RIGHTx1,LEFTx1,RIGHTx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Gary! Return! please....</onCollisionSpeech>
        <speech>Come on Gary! Get back in the ball!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Shellos (Gary)" speed="1" sprite="422" type="pokemon" x="15" y="30">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">mewmeow!</onCollisionSpeech>
        <speech>Meow!</speech>
    </movingNpc>
</npcs>
