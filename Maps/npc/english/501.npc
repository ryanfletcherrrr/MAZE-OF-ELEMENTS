<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Too slow! All right! Let's get moving to Prof. Rowan's lab</speech>
        </speeches>
        <speeches id="2">
            <speech>.....</speech>
            <speech>What? Don't go into the grass, right? No worries! No problem!</speech>
            <speech>It doesn't matter that we don't have any Pokémon. Trust me on this one.</speech>
            <speech>I've got an idea! Now listen.</speech>
            <speech>You know how wild Pokémon jump out when you go into tall grass?</speech>
            <speech>So, what you do is, you scoot over to the next patch of grass before any wild Pokémon can appear!
            </speech>
            <speech>If we just keep dashing, we can get to Sandgem Town without running into wild Pokémon!</speech>
            <speech>OK, stick with me! OK, here goes!</speech>
        </speeches>
        <speeches id="3">
            <speech>On your marks...</speech>
        </speeches>
        <speeches id="4">
            <speech>Hey, $PLAYER_NAME This old guy... It's Prof. Rowan, isn't it? What's he doing here...?</speech>
        </speeches>
        <speeches id="5">
            <speech>You can ask a hundred times! The answer will never change!</speech>
            <speech>We'll both answer a hundred times, we love Pokémon! Right, $PLAYER_NAME</speech>
        </speeches>
        <speeches id="6">
            <speech>...Uh... Well, I, uh... ... ...</speech>
            <speech>Well, then forget about me, but give a Pokémon to my friend here!</speech>
            <speech>I mean, it was me who tried to go into the tall grass and all...</speech>
        </speeches>
        <speeches id="7">
            <speech>Really?! Prof. Rowan! I can't believe it! I'm so happy now that I can't keep a straight face!
            </speech>
            <speech>Hey, $PLAYER_NAME. You can choose first. Hey, I'm practically a grown-up. I have to show some class
                here.
            </speech>
        </speeches>
        <speeches id="8">
            <speech>Then, I choose you! I'm picking this Piplup.</speech>
        </speeches>
        <speeches id="9">
            <speech>Then, I choose you! I'm picking this Turtwig.</speech>
        </speeches>
        <speeches id="10">
            <speech>Then, I choose you! I'm picking this Chimchar.</speech>
        </speeches>
        <speeches id="11">
            <speech>How do you like that?</speech>
            <speech>Prof. Rowan's really nice. On TV, he seems so stern and scary. Heheh, $PLAYER_NAME!</speech>
            <speech>We've both got Pokémon now. There's only one thing to do, right? Are you up for this?</speech>
        </speeches>
        <speeches id="12">
            <speech>What are you saying?! We ended up losing?!</speech>
        </speeches>
        <speeches id="13">
            <speech>You weren't bad. I am just naturally good at this.!</speech>
        </speeches>
        <speeches id="14">
            <speech>Whew! Let's go home. I'm beat after that battle. My Pokémon needs rest, too. See ya, $PLAYER_NAME!
            </speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>Hold it!</speech>
            <speech>You two don't seem to have any Pokémon between you? Then, what is the meaning of going into the tall
                grass?
            </speech>
        </speeches>
        <speeches id="2">
            <speech>... ... They tried to go into the tall grass because they wanted Pokémon...</speech>
            <speech>Hmm... What to do...? Their world would surely change if they were to meet Pokémon...</speech>
            <speech>Is it right for me to put them on that path...?</speech>
            <speech>... ... You two. You truly love Pokémon, do you?</speech>
        </speeches>
        <speeches id="3">
            <speech>...A pair of reckless kids who foolishly try to enter tall grass without Pokémon of their own...?
            </speech>
            <speech>It worries me what people like that would do with Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>How big of you... Very well, then! I will entrust you two with Pokémon!</speech>
            <speech>I apologize for putting you through that exercise.</speech>
            <speech>However! You must promise me that you will never recklessly endanger yourselves again.</speech>
            <speech>Now, then... Hm? Now, where...</speech>
        </speeches>
        <speeches id="5">
            <speech>Ah! There it is! Dawn, nice work. What I was about to do was to entrust these two with their own
                Pokémon.
            </speech>
        </speeches>
        <speeches id="6">
            <speech>Hm! We exist side by side with Pokémon.</speech>
            <speech>There comes a time when people should meet Pokémon.</speech>
            <speech>There is a world that should be explored together.</speech>
            <speech>For them, today is that time. The place, right here.</speech>
            <speech>Go on! Open the briefcase and choose a Pokémon!</speech>
        </speeches>
        <speeches id="7">
            <speech>Very well! Both of you have chosen a good Pokémon, it seems.</speech>
            <speech>Now, listen well! The Pokémon you have been entrusted with are unfamiliar with the world.</speech>
            <speech>In that regard, they’re much like you. As fellow newcomers to the world, I hope you’ll all do well
                together.
            </speech>
            <speech>If you have any trouble, come see me at my lab in Sandgem Town.</speech>
            <speech>And now, we’ll be on our way.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>Professor Rowan. You left your briefcase at the lake! Oh? Is something wrong here?</speech>
        </speeches>
        <speeches id="2">
            <speech>Pardon?! Those Pokémon are hard to replace. Are you sure about giving them away?</speech>
        </speeches>
        <speeches id="3">
            <speech>Professor! Wait for me, please!</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm sorry... Please let me pass.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>Too slow! $PLAYER_NAME, I'm sick of waiting!</speech>
            <speech>I'm going to go see Prof. Rowan, so I can thank him properly.</speech>
            <speech>So, I had this great idea. Listen up, OK? You know the lake where we always play at?</speech>
            <speech>You know they say a legendary Pokémon lives there?</speech>
            <speech>You guessed it! Let's catch that Pokémon.</speech>
            <speech>That'll make Prof. Rowan happy.</speech>
            <speech>I'm sure of that! Me and you together, we've got nothing to fear!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>Hey, $PLAYER_NAME! I said, the lake's not that way!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="true" id="6">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>Hey!</speech>
            <speech>I work at a Pokémon Mart.</speech>
            <speech>Did you know that a Pokémon's health is measured by their Hit Points (HP)</speech>
            <speech>if a Pokémon runs out of HP, it faints and can't battle anymore.</speech>
            <speech>If a Pokémon's Health gets low, you should heal it with a Potion</speech>
            <speech>Here, would you like to have a potion? The first one is free!</speech>
        </speeches>
        <speeches id="3">
            <speech>Okay you can have it later, i don't mind.</speech>
        </speeches>
        <speeches id="4">
            <speech>Good luck in wild!</speech>
        </speeches>
        <speeches id="5">
            <speech>You can find a Pokémon Mart in cities and most major towns.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>I should visit mom and tell her about my new starter before I leave.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" id="1" name="" sprite="187" x="68" y="12">
        <speech>Don't be shy! Talk to anyone and everyone you happen to see.</speech>
        <speech>By talking to people, you will get invaluable information and advice.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Youngster Marcus" sprite="2" x="73" y="4">
        <speech>That ledge is one way. Jump down for a shortcut to Twinleaf Town!</speech>
    </npc>
    <npc direction="RIGHT" id="3" name="Young Girl Verena" sprite="12" x="58" y="11">
        <speech>If your Pokémon's health, that is to say it's HP is getting low, you should go to a Pokémon Center!
        </speech>
        <speech>They'll heal your Pokémon for free! Their building is identified by a red roof!</speech>
    </npc>
    <npc direction="UP" id="4" name="Young Trainer Ted" sprite="4" x="43" y="19">
        <speech>Wild Pokémon lurk in tall grass. They can come bursting out at any time.</speech>
        <speech>So, if you're wanting to battle a wild Pokémon, just walk in the tall grass.</speech>
        <speech>If you want to avoid wild Pokémon, then avoid the tall grass.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="5" name="Beedrill" shouldSleep="" speed="1" sprite="15" type="pokemon" x="17" y="19">
        <path>LEFTx4, DOWNx2, RIGHTx4, UPx2</path>
        <onCollisionSpeech gap="4">Buzzzzz</onCollisionSpeech>
        <speech>Beedrill....</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="6" name="Starly" shouldSleep="" speed="1" sprite="396" type="pokemon" x="72" y="21">
        <path>LEFTx4, DOWNx2, RIGHTx4, UPx2</path>
        <onCollisionSpeech gap="4">Starrr</onCollisionSpeech>
        <speech>Starly..Starly..</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Gentleman Mark" sprite="5" x="12" y="5">
        <speech>To the left of us is Lake Verity! It's quite a beautiful place.</speech>
        <speech>They say that you can occasionally hear an unfamiliar cry there...</speech>
    </npc>
    <movingNpc direction="RIGHT" id="8" name="Youngster Atlas" shouldSleep="" speed="1" sprite="24" type="npc" x="41" y="6">
        <path>RIGHTx4, LEFTx4</path>
        <onCollisionSpeech gap="4">I'm walking here!!</onCollisionSpeech>
        <speech>I'm trying to find a really nice Starly!</speech>
        <speech>If you want to be a successful Pokémon Trainer then you need to understand Natures!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="9" name="Chloe" speed="1" sprite="17" type="npc" x="23" y="6">
        <path>LEFTx3, DOWNx3, RIGHTx3, UPx3</path>
        <onCollisionSpeech gap="4">Hi!</onCollisionSpeech>
        <speech>I love to grind here! The spawns change depending on the time of day!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Shinx" shouldSleep="" speed="1" sprite="403" type="pokemon" x="19" y="13">
        <path>RIGHTx5, LEFTx5</path>
        <onCollisionSpeech gap="4">Shiiiinx</onCollisionSpeech>
        <speech>Shinx!</speech>
    </movingNpc>
</npcs>
