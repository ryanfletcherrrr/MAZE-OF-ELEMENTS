<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="" randomRotation="false" sprite="187" x="27" y="9">
        <speech>Snowpoint Temple is currently under lockdown.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="" randomRotation="false" sprite="187" x="28" y="9">
        <speech>Snowpoint Temple will be open Soon "tm"</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Lost Grunt" randomRotation="true" sprite="197" x="19" y="65">
        <speech>Ok... I'm lost... Remember what Jupiter taught me...</speech>
        <speech>There are only four rules you need to remember.</speech>
        <speech>1- Make the plan.</speech>
        <speech>2- Execute the plan.</speech>
        <speech>3- Expect the plan to go off the rails.</speech>
        <speech>4- Throw away the plan.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Weavile" shouldSleep="" speed="1" sprite="461" type="pokemon" x="29"
               y="70">
        <path>
            DOWNx2,LEFTx1,DOWNx1,LEFTx4,UPx9,RIGHTx3,DOWNx9,LEFTx1,UPx7,LEFTx2,DOWNx1,LEFTx1,DOWNx3,UPX3,LEFTx7,DOWNx2,RIGHTx2,UPx1,LEFTx2,RIGHTx5,UPx4,RIGHTx4,DOWNx6,RIGHTx4
        </path>
        <onCollisionSpeech gap="4">Weavile!</onCollisionSpeech>
        <speech>*This Weavile looks lost*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="6" name="Worker Brett" randomRotation="true" sprite="102" x="25" y="71">
        <speech>Another one of you? I thought I told you folks: stop trying to sneak into the work area.</speech>
        <speech>Oh my apologies, I thought you were one of those adolscent bums trying to sneak into the work area.
        </speech>
        <speech>These troublemakers keep sneaking in, to play that silly card game; the work area is dangerous, they
            could get hurt.
        </speech>
    </npc>
    <npc direction="UP" hidden="false" id="7" name="Ben" randomRotation="false" sprite="10" x="13" y="73">
        <speech>Did you know from the sky Snowpoint City is shaped like a snowflake!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="8" name="" randomRotation="false" sprite="162" x="11" y="70">
        <speech>Snowpoint City.</speech>
    </npc>
    <movingNpc direction="DOWN" id="9" name="Eevee" shouldSleep="" speed="1" sprite="133" type="pokemon" x="4" y="69">
        <path>DOWNx1,UPx1</path>
        <onCollisionSpeech gap="4">Eevee!</onCollisionSpeech>
        <speech>*An Eevee? What's this doing here in such a snowy place.*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Swinub" shouldSleep="" speed="1" sprite="220" type="pokemon" x="8" y="72">
        <path>UPx1,LEFTX2,RIGHTx2,DOWNx1</path>
        <onCollisionSpeech gap="4">Swinub! Swi!</onCollisionSpeech>
        <speech>*This Swinub looks excited to go on the ship.*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="11" name="Sam" randomRotation="false" sprite="2" x="13" y="50">
        <speech>I think my Butterfree likes the Beautifly over there, they have been like that for hours!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="12" name="Karen" randomRotation="false" sprite="41" x="6" y="53">
        <speech>I sent my Beautifly to go play in the snow</speech>
        <speech>Doesn't she look so happy?</speech>
    </npc>
    <movingNpc direction="DOWN" id="13" name="Skater Todd" speed="1" sprite="80" type="npc" x="28" y="15">
        <path>LEFTx4,DOWNx2,RIGHTx3,UPx1,LEFTx2,DOWNx5,RIGHTx2,UPx3,RIGHTx1,UPX3</path>
        <onCollisionSpeech gap="4"/>
        <speech>I heard Candice's Gym is a giant ice rink.</speech>
        <speech>It has 3 Floors!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Mamoswine" shouldSleep="" speed="1" sprite="473" type="pokemon" x="27"
               y="14">
        <path>LEFTx3,UPx1,RIGHTx4,DOWNx1,RIGHTx1,UPx2,LEFTx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Mamoswine!!</onCollisionSpeech>
        <speech>*This Mamoswine is social distancing.*</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="17" name="Butterfree" speed="1" sprite="12" type="pokemon" x="13" y="54">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Free! Free!</onCollisionSpeech>
        <speech>*Sweetheart Sam's Butterfree plays with Lovedove Karen's Beautifly.*</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="18" name="Beautifly" speed="1" sprite="267" type="pokemon" x="10" y="54">
        <path>RIGHTx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Fly! Fly!</onCollisionSpeech>
        <speech>*Lovedove Karen's Beautifly plays with Sweetheart Sam's Butterfree .*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Lori" speed="1" sprite="33" type="npc" x="5" y="34">
        <path>RIGHTx4,DOWNx1,RIGHTx6,DOWNx1,RIGHTx1,DOWNx1,RIGHTx2,UPx5,LEFTx1,DOWNx3,LEFTx4,UPx1,LEFTx8</path>
        <onCollisionSpeech gap="4">I'm trying to walk here!</onCollisionSpeech>
        <speech>Just keep walking..</speech>
        <speech>Just keep walking..</speech>
        <speech>Just keep walking..</speech>
        <speech>What do we do?</speech>
        <speech>We walk, walk, walk.</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="20" name="Trainer Purple" randomRotation="false" sprite="4" x="38" y="56">
        <speech>Go Gengar, use Double-Edge!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="21" name="Gengar" speed="1" sprite="94" type="pokemon" x="39" y="56">
        <path>RIGHTx1,LEFTx1</path>
        <onCollisionSpeech gap="4">*Gengar used Double-Edge.*</onCollisionSpeech>
        <speech>*Gengar used Double-Edge.*</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="22" name="Nidorino" speed="1" sprite="33" type="pokemon" x="42" y="56">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">*Poison Sting from Nidorino.*</onCollisionSpeech>
        <speech>*Poison Sting from Nidorino.*</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="23" name="Trainer Pink" randomRotation="false" sprite="23" x="43" y="56">
        <speech>Nidorino, retaliate with Poison Sting!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="24" name="Anna" randomRotation="true" sprite="17" x="42" y="30">
        <speech>Hey Snover.... Do you wanna build a snowman?</speech>
    </npc>
    <movingNpc direction="DOWN" id="25" name="Snover" shouldSleep="" speed="1" sprite="459" type="pokemon" x="43"
               y="30">
        <path>DOWNx1,UPx2,DOWNx1</path>
        <onCollisionSpeech gap="4">Sno! Sno!</onCollisionSpeech>
        <speech>Snover is rolling a snowball</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="26" name="Cubchoo" shouldSleep="" speed="1" sprite="613" type="pokemon" x="33"
               y="39">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Cubchoo!</onCollisionSpeech>
        <speech>Cub...Cub....Chooo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="28" name="Glaceon" shouldSleep="" speed="1" sprite="471" type="pokemon" x="41"
               y="23">
        <path>LEFTx2,DOWNx1,RIGHTx4,DOWNx1,LEFTx5,DOWNx1,LEFTx2,UPx3,RIGHTx1,DOWNx2,RIGHTx4,UPx2</path>
        <onCollisionSpeech gap="4">Glaceon!</onCollisionSpeech>
        <speech>*The Glaceon looks beautiful if only you could catch it.*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="30" name="Van" randomRotation="false" sprite="49" x="31" y="25">
        <speech>Hey Dood, I hear the house over here is giving away a Gible to the first trainer that goes there!
        </speech>
    </npc>
    <conversation id="3">
        <speeches id="1">
            <speech>Welcome aboard, $PLAYER_NAME! Are we setting sail for the transit island?</speech>
            <speech>It's the gateway to Littleroot Town.</speech>
            <speech>Our vessel will make a brief stop there, where you'll find transportation directly to your new home in Littleroot.</speech>
            <speech>Are you ready to embark?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hello, traveler!</speech>
            <speech>This ship is en route to a transit island, which is part of the journey to Littleroot Town.</speech>
            <speech>You'll need a specific ticket to come aboard.</speech>
            <speech>Without it, I'm sorry, but you won't be able to join us on this trip.</speech>
        </speeches>
    </conversation>
</npcs>
