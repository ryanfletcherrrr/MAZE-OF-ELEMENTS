<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ooh la la! Little Trainer! Graceful blossom! I'm going to snippety-snip you right at the stem!</speech>
        </speeches>
        <speeches id="2">
            <speech>If only my Ability were Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>If only my Ability were Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>N-non! Not so fast! I mean you to be the prize bloom in my garden!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Um, this is what you call a battle, right? Why do we do stuff like this again?</speech>
        </speeches>
        <speeches id="2">
            <speech>Umm, that was what you call a battle, right? I lost, so now do I have to be your servant?</speech>
        </speeches>
        <speeches id="3">
            <speech>Umm, that was what you call a battle, right? I lost, so now do I have to be your servant?</speech>
        </speeches>
        <speeches id="4">
            <speech>Um, that was what you call a battle, right? You lost, so now you have to be my servant!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I don't believe in things like good luck charms, but times like these make me want to pray!</speech>
        </speeches>
        <speeches id="2">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="3">
            <speech>Maybe I lose because I'm paying more attention to praying than to battling.</speech>
        </speeches>
        <speeches id="4">
            <speech>My view is that whether your prayers get answered all depends on your own talents!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>A globe-trotting young adventurer. That's me!</speech>
        </speeches>
        <speeches id="2">
            <speech>Adventure is calling me. Farewell! See you again!</speech>
        </speeches>
        <speeches id="3">
            <speech>Adventure is calling me. Farewell! See you again!</speech>
        </speeches>
        <speeches id="4">
            <speech>Seeing Pokémon from all over the world is the purpose of my journey.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>A person who wants to fight, fight, and fight forever. That's the way of the Ace.</speech>
        </speeches>
        <speeches id="2">
            <speech>You can't become an Ace Trainer battling like that.</speech>
        </speeches>
        <speeches id="3">
            <speech>You can't become an Ace Trainer battling like that.</speech>
        </speeches>
        <speeches id="4">
            <speech>Your fighting style suits you very well. You could be an Ace Trainer.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I'm sick and tired of being called a Beauty.</speech>
        </speeches>
        <speeches id="2">
            <speech>You have to make a lot of sacrifices to be a Beauty. I'm done with that effort. Moving on!</speech>
        </speeches>
        <speeches id="3">
            <speech>You have to make a lot of sacrifices to be a Beauty. I'm done with that effort. Moving on!</speech>
        </speeches>
        <speeches id="4">
            <speech>When people call me a Beauty, they don't realize how much pressure that puts on me.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>I'm gonna give you an experience so sweet that your eyes are gonna spin!</speech>
        </speeches>
        <speeches id="2">
            <speech>It's not like you really lose anything when you lose. As long as you enjoy it, that's enough.</speech>
        </speeches>
        <speeches id="3">
            <speech>It's not like you really lose anything when you lose. As long as you enjoy it, that's enough.</speech>
        </speeches>
        <speeches id="4">
            <speech>Phew... You are smoking hot! It's like a sweltering summer night in here!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>I inherited this big-boned body from my parents... I'm like a living mountain range...</speech>
        </speeches>
        <speeches id="2">
            <speech>It's not enough... It's never enough. My bad cholesterol isn't high enough...</speech>
        </speeches>
        <speeches id="3">
            <speech>It's not enough... It's never enough. My bad cholesterol isn't high enough...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ha ha! Now I can consume some more calories...</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Larissa" randomRotation="false" sprite="60" x="6" y="16">
        <speech>Route 123 is a hidden gem, teeming with Pokémon diversity and natural beauty.</speech>
        <speech>Its lush greenery and serene streams make it a haven for trainers seeking both adventure and tranquility.</speech>
        <speech>Keep your eyes peeled for Wingull, Roselia, and the majestic Altaria dancing among the treetops.</speech>
        <speech>Every step offers a chance for discovery and wonder.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Wingull" speed="1" sprite="278" type="pokemon" x="13" y="9">
        <path>UPx5,RIGHTx0,LEFTx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Feebas" shouldSleep="" speed="1" sprite="349" type="pokemon" x="46" y="4">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Feebas!</onCollisionSpeech>
        <speech>Feebas!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Masquerain" shouldSleep="" speed="1" sprite="284" type="pokemon" x="42" y="5">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Masquerain!</onCollisionSpeech>
        <speech>Masquerain!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Chimecho" shouldSleep="" speed="1" sprite="358" type="pokemon" x="43" y="24">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Chimecho!</onCollisionSpeech>
        <speech>Chimecho!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Roselia" shouldSleep="" speed="1" sprite="315" type="pokemon" x="60" y="10">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Roselia!</onCollisionSpeech>
        <speech>Roselia!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Absol" shouldSleep="" speed="1" sprite="359" type="pokemon" x="61" y="20">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Absol!</onCollisionSpeech>
        <speech>Absol!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Altaria" speed="1" sprite="334" type="pokemon" x="64" y="5">
        <path>RIGHTx9,UPx3,LEFTx9,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Duskull" shouldSleep="" speed="1" sprite="355" type="pokemon" x="98" y="12">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Shuppet" shouldSleep="" speed="1" sprite="353" type="pokemon" x="108" y="8">
        <path>RIGHTx2,DOWNx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Tropius" shouldSleep="" speed="1" sprite="357" type="pokemon" x="132" y="21">
        <path>UPx2,RIGHTx5,DOWNx2,LEFTx5</path>
        <onCollisionSpeech gap="4">Tropius!</onCollisionSpeech>
        <speech>Tropius!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Taillow" shouldSleep="" speed="1" sprite="276" type="pokemon" x="119" y="14">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Taillow!</onCollisionSpeech>
        <speech>Taillow!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Oko" randomRotation="true" sprite="62" x="99" y="20">
        <speech>Route 123 connects Mauville City and Fortree City.</speech>
        <speech>It's the path that takes you from the city buzz to the calm of the countryside.</speech>
    </npc>
    <movingNpc direction="DOWN" id="14" name="Taillow" shouldSleep="" speed="1" sprite="276" type="pokemon" x="82" y="4">
        <path>UPx2,DOWNx2,LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Taillow!</onCollisionSpeech>
        <speech>Taillow!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="31" y="16">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Swablu!</onCollisionSpeech>
        <speech>Swablu!</speech>
    </movingNpc>
</npcs>
