<npcs>
    <npc direction="DOWN" id="1000" name="Black Belt Master Miles" randomRotation="true" sprite="34" x="19" y="72">
        <speech>I am Miles, the strongest Black Belt of Jvaloh.</speech>
        <speech>Currently, I am challenging Elite 4, since my training came to its peak.</speech>
        <speech>They say: 'accept the challenges so that you can feel the exhilaration of victory.'</speech>
        <speech>I, for sure, accepted the challenge to accomplish what no other Black Belt has ever achieved.</speech>
        <speech>I, Miles, will make sure that my legacy will remain, as the strongest Black Belt of all time!</speech>
    </npc>
    <npc direction="UP" id="1001" name="Police Executive Jo" sprite="126" x="23" y="76">
        <speech>Police Executive Jo on duty, sir!</speech>
        <speech>Far better is it to dare mighty things, to win glorious triumphs, even though checkered by failure...
        </speech>
        <speech>...than to rank with those poor spirits who neither enjoy nor suffer much, because they live in a gray twilight that knows not victory nor defeat.
        </speech>
        <speech>Me and Arcanine, Arcanine and me!</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Advanced Pokémon Collector Clinton" randomRotation="true" sprite="33" x="34" y="76">
        <speech>As far as I saw, I am really close to accomplish my dream goal which was to collect every specie of Pokémon around all Regions.</speech>
        <speech>Do you think it was easy? It took me a lifetime. I visited tons of different Regions, some places you won't ever imagine of.</speech>
        <speech>But here I am. It is better to conquer yourself than to win a thousand battles.</speech>
        <speech>Then, the victory is yours. It cannot be taken from you, not by angels or by demons, heaven or hell.</speech>
        <speech>Even if the Elite 4 trainers are considered the strongest around this Region, I will surpass them, no matter what.</speech>
    </npc>
    <npc direction="UP" id="1003" name="Hiker Veteran Deandre" randomRotation="true" sprite="10" x="38" y="36">
        <speech>I've reached that state that no other Hiker has reached. Would you ever think I, Dreandre, ever gave up?</speech>
        <speech>You shouldn't too. I know perfectly who you are, $PLAYER_NAME, you are becoming quite famous around this Region.</speech>
        <speech>You know... there is an amazing power getting to know your inner silf and learning how to use it and not fight with the world.</speech>
        <speech>Just do whatever makes you happy, and success will eventually come.</speech>
        <speech>This Elite 4 challenge makes me quite happy, you know. I will use my capabilities and personality, and the rest will flow beautifully.</speech>
    </npc>
    <npc direction="UP" id="1004" name="Master Dragon Tamer Willie" sprite="173" x="62" y="76">
        <speech>You seem quite strong, welcome to the Elite 4.</speech>
        <speech>I am a Dragon Tamer. The mystery of power of Dragon enlights my soul, very deep inside, since I was a kid.
        </speech>
        <speech>The first time I saw a Salamence I felt this tears going so fast out of me...the pressure, the mystery, the power.
        </speech>
        <speech>At that time, there were sacredness in tears. They were at that time the mark of weakness. Now, they are the mark of power.
        </speech>
        <speech>They speak more elonquently than ten thousand tongues. They are the messengers of overwhelming grief, of deep contrition, and of unspeakable love.
        </speech>
        <speech>The best advice I can give you, among these strong, no, actually, among the strongest trainers of Jvaloh is:</speech>
        <speech>never lose hope on your Pokémon, or they will eventually lose hopes on you aswell.
        </speech>
    </npc>
</npcs>
