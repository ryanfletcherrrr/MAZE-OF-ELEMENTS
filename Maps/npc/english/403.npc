<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I just want to be successful and grow rich someday.</speech>
        </speeches>
        <speeches id="2">
            <speech>When I'm a big, important man, I'll make you regret this.</speech>
        </speeches>
        <speeches id="3">
            <speech>When I'm a big, important man, I'll make you regret this.</speech>
        </speeches>
        <speeches id="4">
            <speech>I will be rich someday and put you to shame.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I had no plans for the weekend, so I ended up wandering here before I knew what I was about.</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa, for reals? Did I, like, lose for reals?! Whoa, life. Like, life is woe.</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa, for reals? Did I, like, lose for reals?! Whoa, life. Like, life is woe.</speech>
        </speeches>
        <speeches id="4">
            <speech>Before I knew it, I'd been here for ages. But I'm not lonesome. Of...of course not.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I am a genius Preschooler! I'm already prepping for college.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm confident in studying, but I'm just a beginner in Pokémon battles.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm confident in studying, but I'm just a beginner in Pokémon battles.</speech>
        </speeches>
        <speeches id="4">
            <speech>You lost to a Preschooler... And how old are you again?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Um, um, um, you know what? These Pokémon are my friends.</speech>
        </speeches>
        <speeches id="2">
            <speech>Just being with my Pokémon makes me happy, so it's OK!</speech>
        </speeches>
        <speeches id="3">
            <speech>Just being with my Pokémon makes me happy, so it's OK!</speech>
        </speeches>
        <speeches id="4">
            <speech>I...I'm sorry. I just wanted to show you my friends...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh hey! Who are you?</speech>
            <speech>You are Norman's son? Norman sent you to help me out?</speech>
            <speech>That's so nice of him.</speech>
            <speech>$PLAYER_NAME… Pokémon hide in tall grass like this, don't they?</speech>
            <speech>Please watch me and see if I can catch one properly.</speech>
            <speech>…Whoa!</speech>
            <speech>I did it… It's my… My Pokémon! $PLAYER_NAME, thank you!</speech>
            <speech>I will return the Pokémon Norman lent me. Let's go back to the Gym!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Barboach" shouldSleep="" speed="1" sprite="339" type="pokemon" x="39" y="3">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Barboaaach!</onCollisionSpeech>
        <speech>Barboaaach!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Tiffany" randomRotation="false" sprite="17" x="43" y="9">
        <speech>So many trainers... I can't face them with only one Pokémon.</speech>
        <speech>I will need to catch a few more.</speech>
        <speech>Let's go Azurill!</speech>
    </npc>
    <movingNpc direction="DOWN" id="3" name="Azurill" shouldSleep="" speed="1" sprite="298" type="pokemon" x="40" y="9">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Azurill! ^_^</onCollisionSpeech>
        <speech>Azuzu!!!</speech>
    </movingNpc>
</npcs>
