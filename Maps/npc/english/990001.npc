<npc>
    <conversation id="1" canSkip="false">
        <speeches id="1">
            <speech>Don't try to be sneaky. Where do you think you are going?</speech>
        </speeches>
        <speeches id="2">
            <speech>I couldn't stop you.. I don't belong to Sutta gang.</speech>
        </speeches>
        <speeches id="3">
            <speech>Go away, stop making me feel bad.</speech>
        </speeches>
        <speeches id="4">
            <speech>Never come back here again.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="2" canSkip="false">
        <speeches id="1">
            <speech>What are you doing here? Do you know whom you are up against now?</speech>
        </speeches>
        <speeches id="2">
            <speech>You were up against a loser..</speech>
        </speeches>
        <speeches id="3">
            <speech>Do you some tissues so that I can wipe my tears?</speech>
        </speeches>
        <speeches id="4">
            <speech>You were up against a future champion.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="3" canSkip="false">
        <speeches id="1">
            <speech>Are you after the legendary dragons? You can try, but later don't cry.</speech>
        </speeches>
        <speeches id="2">
            <speech>Every time, I cry.</speech>
        </speeches>
        <speeches id="3">
            <speech>Please go away. Bye Bye.</speech>
        </speeches>
        <speeches id="4">
            <speech>You never know how bad you are until you try.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="4" canSkip="false">
        <speeches id="1">
            <speech>Intruder... Argh, I can't eat fries in peace.</speech>
        </speeches>
        <speeches id="2">
            <speech>If and only if I trained during the times I was eating junk food.</speech>
        </speeches>
        <speeches id="3">
            <speech>If and only if I trained during the times I was eating junk food.</speech>
        </speeches>
        <speeches id="4">
            <speech>Were you planning to join sutta gang? You don't deserve that. Now let me eat my fries.</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>
</npc>