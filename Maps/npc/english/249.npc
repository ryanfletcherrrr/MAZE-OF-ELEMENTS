<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>Whoa there, buddy! Vermilion Gym’s closed for now.</speech>
            <speech>Lt. Surge? Yeah, he ain't here. He’s over on the S.S. Anne, handling some top-secret military security checkups.</speech>
            <speech>If you’re lookin’ to battle him, you’d best head over to the harbor and get on that ship.</speech>
            <speech>Once he’s back, I’ll let ya through. Until then, you ain’t gettin’ in.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Captain Lars" randomRotation="false" sprite="11" x="13" y="24">
        <speech>The sea never leaves you or the smell. Sorry about that.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Mimi" shouldSleep="" speed="1" sprite="12" type="npc" x="51" y="18">
        <path>RIGHTx4,DOWNx2,UPx2,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>My uncle talks a lot about Rapidash. I think he's writing fanfiction now.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Zack" randomRotation="false" sprite="49" x="18" y="9">
        <speech>One day I'll evolve into a rock legend. For now I only know the Poké Flute theme.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Granny Lala" randomRotation="false" sprite="38" x="20" y="22">
        <speech>Lt. Surge? Hmph. Calls himself the 'Lightning American', but he can't even fix a simple power outage!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="5" name="Gil" randomRotation="false" sprite="16" x="46" y="35">
        <speech>Shhh... if you hum the Poké Mart jingle, the Magikarp come right to you.</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="49" y="38">
        <path>DOWNx3,RIGHTx6,UPx3,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Shellder" shouldSleep="" speed="1" sprite="90" type="pokemon" x="20" y="41">
        <path>DOWNx4,UPx2,LEFTx5,RIGHTx5,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Pikachu" shouldSleep="" speed="1" sprite="25" type="pokemon" x="38" y="13">
        <path>RIGHTx4,DOWNx1,LEFTx4,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <conversation id="5">
        <speeches id="1">
            <speech>Aloha! I'm Kala, a geologist from the {COLOR=CYAN}Alola region{ENDCOLOR} studying volcanic formations.</speech>
            <speech>In Alola, our Geodude are quite unique - they're {COLOR=BLUE}Rock/Electric{ENDCOLOR} types due to the magnetic fields from our volcanoes!</speech>
            <speech>The constant volcanic activity and magnetic fields caused them to develop electric properties over generations.</speech>
            <speech>Their magnetic bodies help them navigate through the complex cave systems near active volcanoes.</speech>
            <speech>If you have a {COLOR=GREEN}Kanto Geodude{ENDCOLOR} that you caught yourself, I'd love to trade you an {COLOR=CYAN}Alolan Geodude{ENDCOLOR} to show you this amazing adaptation!</speech>
            <speech>This would be a one-time trade for my research - I need to study the differences between regional variants.</speech>
        </speeches>
        <speeches id="2">
            <speech>Perfect! You have a {COLOR=GREEN}Kanto Geodude{ENDCOLOR} that you caught yourself!</speech>
            <speech>Would you like to trade your {COLOR=GREEN}Kanto Geodude{ENDCOLOR} for my {COLOR=CYAN}Alolan Geodude{ENDCOLOR}?</speech>
            <speech>Remember, this is a {COLOR=YELLOW}one-time only{ENDCOLOR} trade for my geological research.</speech>
        </speeches>
        <speeches id="3">
            <speech>I understand - it's a big decision to trade away a Pokémon you caught yourself.</speech>
            <speech>Take your time to think about it, but remember this is a {COLOR=YELLOW}one-time opportunity{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="4">
            <speech>{COLOR=GOLD}Excellent!{ENDCOLOR} This will greatly help my research!</speech>
            <speech>Let me take your {COLOR=GREEN}Kanto Geodude{ENDCOLOR} and give you this special {COLOR=CYAN}Alolan Geodude{ENDCOLOR} in return.</speech>
            <speech>This Alolan Geodude has developed {COLOR=BLUE}electric properties{ENDCOLOR} due to living near magnetic volcanic fields.</speech>
            <speech>You'll notice it's much more energetic and can generate small electric currents!</speech>
        </speeches>
        <speeches id="5">
            <speech>Thank you so much for contributing to my research!</speech>
            <speech>This {COLOR=GREEN}Kanto Geodude{ENDCOLOR} will help me understand the geological differences between our regions.</speech>
            <speech>Take good care of your new {COLOR=CYAN}Alolan Geodude{ENDCOLOR} - it's truly a unique specimen!</speech>
            <speech>My research here in Vermilion City is now complete thanks to you!</speech>
        </speeches>
    </conversation>
</npcs>
