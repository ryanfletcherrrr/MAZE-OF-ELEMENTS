<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Please select a floor.{ENDCOLOR}</speech>
            <speech>The buttons await your input, ready to take you where you need.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GREEN}The lift console closes itself with a soft click.{ENDCOLOR}</speech>
            <speech>You'll need to activate it again if you wish to use it.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>You think you can walk in here and play hero? We own this place now!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tch...You got lucky. Just wait    'til the boss hears about this.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tch...You got lucky. Just wait    'til the boss hears about this.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! You're not as tough as you thought. Should've turned back while you had the chance</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>You don't understand..I didn't choose to help them. It was either this or worse.</speech>
        </speeches>
        <speeches id="2">
            <speech>Maybe this is a sign...maybe I can fight back.</speech>
        </speeches>
        <speeches id="3">
            <speech>Maybe this is a sign...maybe I can fight back.</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm sorry, but I can't afford to lose. Not when my life is on the line.</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Silph Co. has so many goodies! I might just pocket a few rare PokeBalls while I'm at it.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh! That was supposed to be my win! Now I won't get a bonus...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh! That was supposed to be my win! Now I won't get a bonus...</speech>
        </speeches>
        <speeches id="4">
            <speech>See? I deserve the best rare Pokémon, rare items, and rare victories!</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>Another {COLOR=GREEN}test subject{ENDCOLOR} wanders into my laboratory... Perfect!</speech>
            <speech>I've been experimenting with {COLOR=PURPLE}Tera Energy{ENDCOLOR} and {COLOR=GREEN}toxic compounds{ENDCOLOR} - the results are {COLOR=RED}lethal{ENDCOLOR}!</speech>
            <speech>My {COLOR=GREEN}poison specialists{ENDCOLOR} will slowly drain the life from your team!</speech>
            <speech>Let's see how long you last against my {COLOR=PURPLE}chemical warfare{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="2">
            <speech>My {COLOR=GREEN}toxic formulas{ENDCOLOR} weren't potent enough...</speech>
            <speech>The {COLOR=PURPLE}Tera modifications{ENDCOLOR} to my {COLOR=GREEN}Weezing{ENDCOLOR} need more refinement!</speech>
            <speech>You may have survived my {COLOR=RED}chemical assault{ENDCOLOR}, but others won't be so lucky!</speech>
        </speeches>
        <speeches id="3">
            <speech>My lab equipment is ruined... Years of {COLOR=GREEN}poison research{ENDCOLOR} down the drain!</speech>
            <speech>But the {COLOR=PURPLE}Tera Energy{ENDCOLOR} experiments will continue elsewhere in this building!</speech>
            <speech>{COLOR=RED}Team Rocket's{ENDCOLOR} chemical division won't forget this setback!</speech>
        </speeches>
        <speeches id="4">
            <speech>Excellent! My {COLOR=GREEN}toxic strategy{ENDCOLOR} worked perfectly!</speech>
            <speech>{COLOR=PURPLE}Weezing{ENDCOLOR} and {COLOR=CYAN}Toxapex{ENDCOLOR} make such a {COLOR=RED}deadly combination{ENDCOLOR}!</speech>
            <speech>Now you'll serve as data for my next {COLOR=GREEN}chemical experiment{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Tourist Kent" shouldSleep="" speed="1" sprite="4" type="npc" x="25" y="6">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>I thought this was the Celadon Department Store... how many floors does this place have?!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Researcher Noelle" shouldSleep="" speed="1" sprite="7" type="npc" x="35" y="16">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>We tried putting a Moon Stone in the coffee machine.</speech>
        <speech>The results were... strangely aggressive.</speech>
    </movingNpc>
</npcs>
