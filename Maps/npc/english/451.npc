<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Heeey! $PLAYER_NAME!</speech>
            <speech>Don't tell me... Are you here for the shopping, too, $PLAYER_NAME?</speech>
            <speech>We're right in front of the famous Lilycove Department Store, after all!</speech>
            <speech>When I saw you, I figured maybe you'd come here to do some shopping, same as me.</speech>
            <speech>I'm afraid I already bought up tons of stuff! Like Pokémon Dolls...and posters...and... B-but— That's not all I've been doing, of course!</speech>
            <speech>I've also caught tons of different Pokémon, and I've been raising them well, too!</speech>
            <speech>I think the bigger question here is whether you're raising your Pokémon right, not me!</speech>
            <speech>S-so that settles it! Let's have a battle!</speech>
            <speech>Let's test my team and see how they stack up against your passion for Pokémon, $PLAYER_NAME</speech>
        </speeches>
        <speeches id="2">
            <speech>Ahhh, this reminds me of the battle I had with you back on Route 103!</speech>
            <speech>You were able to become this strong because you battled me back then, right?</speech>
            <speech>What would you think if I said something like that?</speech>
            <speech>... Hee hee... I'm actually thinking that it's about time I went back to Littleroot, though.</speech>
            <speech>I've caught a lot of different Pokémon, and my Pokédex is pretty complete, so I think I should go show it to my dad.</speech>
            <speech>...Huh? Did something just...sparkle in your Bag? It was like the light from that Meteorite...</speech>
            <speech>...Oh, nothing! Sorry! Just forget it! I'm probably just imagining things!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahhh, this reminds me of the battle I had with you back on Route 103!</speech>
            <speech>You were able to become this strong because you battled me back then, right?</speech>
            <speech>What would you think if I said something like that?</speech>
            <speech>... Hee hee... I'm actually thinking that it's about time I went back to Littleroot, though.</speech>
            <speech>I've caught a lot of different Pokémon, and my Pokédex is pretty complete, so I think I should go show it to my dad.</speech>
            <speech>...Huh? Did something just...sparkle in your Bag? It was like the light from that Meteorite...</speech>
            <speech>...Oh, nothing! Sorry! Just forget it! I'm probably just imagining things!</speech>
        </speeches>
        <speeches id="4">
            <speech>Well I guess you are better off shopping than training Pokémon.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="2">
            <speech>You should not wander around here kid.</speech>
            <speech>Our hideout is nearby, and it will be naive of you to check it out.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="2">
            <speech>Hey you! Don't go near that cave.</speech>
            <speech>Why? You don't need a reason why!</speech>
            <speech>I'm an adult, so you just listen to me!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Wail! Waillll..</speech>
            <speech>*Those Wailmers are blocking the path...*</speech>
            <speech>*I guess I should stop Team Magma before going further...*</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="2">
            <speech>I'm just a grunt, so I have no idea what the boss is thinking...</speech>
            <speech>If I just stay on Team Magma, someday I'll be able to do something awesome!</speech>
            <speech>Who are you?</speech>
            <speech>I was just talking to myself!</speech>
        </speeches>
    </conversation>

    <conversation id="13">
        <speeches id="1">
            <speech>You must be the {COLOR=GOLD}Champion{ENDCOLOR} who cleared the skies! Harren told me all about it.</speech>
            <speech>I've been itching to sail to {COLOR=YELLOW}Kanto{ENDCOLOR} for weeks now. {COLOR=CYAN}Pallet Town{ENDCOLOR} is a perfect landing spot — quiet coastal town, good for newcomers.</speech>
            <speech>The eastern waters are calm now, perfect sailing conditions. What do you say? Ready to set sail for {COLOR=YELLOW}Kanto{ENDCOLOR}?</speech>
        </speeches>
    </conversation>

    <conversation id="14">
        <speeches id="1">
            <speech>Hey there, {COLOR=GOLD}Champion{ENDCOLOR}! Word reached me about what you did up at {COLOR=PURPLE}Sky Pillar{ENDCOLOR}.</speech>
            <speech>Thanks to you, we can finally get ships moving again. The crews were getting restless with all that supernatural turbulence.</speech>
            <speech>My best sailor, {COLOR=CYAN}Captain Marcus{ENDCOLOR}, will be happy to take you to {COLOR=YELLOW}Kanto{ENDCOLOR} as a gesture of thanks.</speech>
            <speech>I will leave now and resume what was stopped during this disaster.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="RIGHT" id="1" name="Katie" shouldSleep="" speed="1" sprite="82" type="npc" x="43" y="32">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Don't mess with our Sand Castle!</onCollisionSpeech>
        <speech>I'm building a super sand tower! Did you know there is a Pokémon that looks like a sand castle? It's called Palossand!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Ship Foreman" randomRotation="true" sprite="11" x="13" y="34">
        <speech>You see all of these crates and barrels? I use these things to perform maintenance on the ship!</speech>
        <speech>It's a pretty unique opportunity for someone like me. I love it!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="6" name="Cindra" shouldSleep="" speed="1" sprite="12" type="npc" x="18" y="8">
        <path>RIGHTx6, LEFTx6, RIGHTx4, LEFTx4, DOWNx2, UPx2</path>
        <onCollisionSpeech gap="4">Hello!</onCollisionSpeech>
        <speech>Lilycove City is the home of Hoenn's great Department Store, you can buy many unique items here that will aid you in your journey!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Noah" randomRotation="true" sprite="2" x="44" y="33">
        <speech>Katie and I are building a sandcastle.</speech>
        <speech>While she gets water and brings it over, I'm shaping the sand and creating the structures. It's a team effort!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="4" name="Swimmer Daniel" shouldSleep="" speed="1" sprite="21" type="npc" x="63" y="13">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">stroke... stroke... stroke...</onCollisionSpeech>
        <speech>Heh, beyond this city lies the wide, joyous ocean of the Hoenn region.</speech>
        <speech>Heading in this direction will take you to Mossdeep City and Sootopolis City.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Wingull" speed="1" sprite="278" type="pokemon" x="58" y="39">
        <path>RIGHTx8,UPx8,DOWNx8,LEFTx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="35" y="43">
        <path>RIGHTx8,UPx3,LEFTx8,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Wingull" speed="1" sprite="278" type="pokemon" x="49" y="39">
        <path>RIGHTx8,DOWNx3,LEFTx8,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Luvdisc" shouldSleep="" speed="1" sprite="370" type="pokemon" x="56" y="2">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="72" y="19">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Tentacool!</onCollisionSpeech>
        <speech>Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Wailmer" speed="1" sprite="320" type="pokemon" x="2" y="40">
        <path>RIGHTx20,UPx6,DOWNx6,LEFTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wailord" speed="1" sprite="321" type="pokemon" x="77" y="22">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Wailmer" speed="1" sprite="320" type="pokemon" x="21" y="31">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Salamanca" shouldSleep="" speed="1" sprite="12" type="npc" x="35" y="20">
        <path>DOWNx3, UPx3</path>
        <onCollisionSpeech gap="4">Please, don't step on my berries!</onCollisionSpeech>
        <speech>In Lilycove, life is diverse as the ocean.</speech>
        <speech>Amidst bustling markets and tranquil beaches, our love for berries remains.</speech>
        <speech>With sea breeze and fertile soil, we cultivate nature's treasures, adding sweetness to coastal life.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="16" name="Sebastian" randomRotation="true" sprite="11" x="63" y="37">
        <speech>The Lilycove Lighthouse? It's more than just a towering structure. It's a lifeline for sailors, guiding them through the darkness and safely back to shore.</speech>
        <speech>Without it, navigating these waters would be a perilous task indeed.</speech>
        <speech>So, let's raise a toast to the humble lighthouse, keeper of our safety and guardian of the seas!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="17" name="Miley" randomRotation="false" sprite="38" x="35" y="30">
        <speech>Have you seen my grandchildren playing in the sand? Ah, they're just the cutest, don't you think?</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="18" name="Rolo" randomRotation="true" sprite="16" x="16" y="27">
        <speech>Do you reckon my fishing line's strong enough to snag a Wailmer or a Wailord? That'd be the catch of a lifetime!</speech>
    </npc>
    <movingNpc direction="DOWN" id="19" name="Gina" shouldSleep="" speed="1" sprite="53" type="npc" x="44" y="17">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Life in Lilycove's coastal charm is serene. Seagulls' cries fill the air as I daydream by the shore.</speech>
        <speech>Yet, when adventure calls, hunting wild Pokémon in these waters is an exhilarating pursuit.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Azurill" shouldSleep="" speed="1" sprite="298" type="pokemon" x="18" y="13">
        <path>DOWNx1,RIGHTx2,UPx1,DOWNx1,LEFTx2,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Jessica" shouldSleep="" speed="1" sprite="12" type="npc" x="5" y="16">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Every morning, I wake up to the sound of Seagulls and the gentle lapping of waves against the shore.</speech>
        <speech>It's a reminder of the beauty that surrounds us here in Lilycove.</speech>
        <speech>Sometimes, I spend hours just watching Pokémon play in the surf.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Vicky" shouldSleep="" speed="1" sprite="94" type="npc" x="56" y="26">
        <path>RIGHTx2,DOWNx3,UPx3,LEFTx2</path>
        <onCollisionSpeech gap="4">The water is cold!</onCollisionSpeech>
        <speech>These shallow waters are perfect to learn to swim. It will be ok.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Wailord" speed="1" sprite="321" type="pokemon" x="75" y="24">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Wailord!</onCollisionSpeech>
        <speech>Wailord!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="25" name="Wailord" speed="1" sprite="321" type="pokemon" x="73" y="26">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>
