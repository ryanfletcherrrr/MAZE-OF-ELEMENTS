<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>You've caught the eye of Team Magma, eh? Let's test your mettle against our fiery passion!</speech>
        </speeches>
        <speeches id="2">
            <speech>So, you've bested me... Team Magma's resolve is only strengthened by such challenges!</speech>
            <speech>We'll retreat for now, but this isn't the last you've seen of us. The flames of Team Magma can't be extinguished so easily!</speech>
        </speeches>
        <speeches id="3">
            <speech>Your strength is commendable, but don't think this is over. Team Magma will rise from these ashes stronger than before!</speech>
            <speech>We will regroup and refine our strategies. The next time we meet, the outcome shall be different.</speech>
        </speeches>
        <speeches id="4">
            <speech>Victory is ours. Don't show up here again.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Oops, almost showed my newbie side there. Let’s battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>So, the rookie's luck runs out. Back to training for me!</speech>
        </speeches>
        <speeches id="3">
            <speech>Guess it's back to basics. A newbie's journey is never done!</speech>
        </speeches>
        <speeches id="4">
            <speech>Looks like I overestimated you.!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I normally only ever listen to classical music, but if I lose, I think I shall try a bit of new age!</speech>
        </speeches>
        <speeches id="2">
            <speech>Now I can get even stronger. I grow with every grudge.</speech>
        </speeches>
        <speeches id="3">
            <speech>Now I can get even stronger. I grow with every grudge.</speech>
        </speeches>
        <speeches id="4">
            <speech>Guess I'll stick to my classics. You're not ready for my new age yet!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>...Ha.</speech>
            <speech>... ...Analyzing.</speech>
            <speech>...Hah.</speech>
        </speeches>
        <speeches id="2">
            <speech>...Funny.</speech>
            <speech>...Again? That's unanticipated. ...I knew it. You...are interesting! ...Haha.</speech>
            <speech>I'm looking forward to... When we...can meet again.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Humph. So it was you... I'm sorry that I had to postpone my defeat of you at Mt. Chimney.</speech>
            <speech>And now, I am sorry that I have to postpone it once more.</speech>
            <speech>I cannot afford to waste even a single second now. For the Red Orb which has been enshrined here at Mt. Pyre... </speech>
            <speech>Now belongs to me, the great Maxie!</speech>
        </speeches>
        <speeches id="2">
            <speech>Courtney. You must see to it that our dear visitor is not neglected due to my inability to battle now...</speech>
            <speech>Do be so kind as to battle him/her with the full measure of your strength...</speech>
            <speech>and crush this kid so that they will never again for a single-moment dream of defying our team!</speech>
            <speech>Fufufu... With this Red Orb in my possession, I have no need for the power of the Meteorite to awaken the beast from the deep!</speech>
            <speech>All that I need now is a way to reach the place where it sleeps...</speech>
            <speech>The only task remaining is obtaining the submarine being constructed in Slateport!</speech>
            <speech>We move out at once, team! Our next destination...Slateport City!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Aye, me, what a disaster...</speech>
            <speech>The Red Orb... Stolen from our safekeeping...</speech>
            <speech>The Red Orb and Blue Orb must never be separated.</speech>
            <speech>They belong together...</speech>
            <speech>Mmm...</speech>
            <speech>I will entrust you with remaining Blue Orb.</speech>
        </speeches>
        <speeches id="2">
            <speech>And I beg you... Chase after those thieves and take back their orb!</speech>
            <speech>The wretched leader of theirs...</speech>
            <speech>I am sure he said they were headed for Slateport City next...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Greetings, traveler! I am renowned across Hoenn as the Eon Flute Expert, a master of summoning the legendary Latios and Latias.</speech>
            <speech>However, I must inform you that such a rare and mystical service comes at a cost. My fee is 50,000F, and it appears you don't have enough at the moment.</speech>
            <speech>Summoning these majestic creatures requires not only skill but also a deep connection with their ancient energy.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, welcome! I see you possess an Eon Flute.</speech>
            <speech>A remarkable instrument, but it demands unique skills to harness its true power — skills that I have perfected over years.</speech>
            <speech>For a fee of 50,000F, I can use your Eon Flute to weave a melody that resonates with the soul of either Latios or Latias.</speech>
            <speech>This ancient flute, when played correctly, can bridge worlds, calling upon the Eon Duo from the farthest reaches of the sky.</speech>
            <speech>So, tell me, which of these celestial beings would you like to summon? Choose wisely, for each offers an experience as timeless as the stars themselves.</speech>
        </speeches>
        <speeches id="3">
            <speech>The Eon Flute's melody now dances upon the winds, a song older than Hoenn itself, reaching out to the Eon Duo.</speech>
            <speech>Look to the skies, as soon the majestic Latios or Latias will answer our call, gracing us with their legendary presence.</speech>
            <speech>A sight few have ever beheld.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Whispers of ancient power echo through the night. Do you dare to heed their call?</speech>
            <speech>Under the watchful gaze of the moon, our covenant assembles. The challenge of the ages awaits your courage.</speech>
        </speeches>
        <speeches id="2">
            <speech>Though you triumph, the eternal darkness weaves its patience. Our resolve remains unshaken, undimmed.</speech>
            <speech>The shadows part, revealing a path to our enigmatic leader. A reward for the brave, the strong, the victorious.</speech>
        </speeches>
        <speeches id="3">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
            <speech>Our rituals, bound to the celestial dance, find no favor at this hour. The right moment eludes us still.</speech>
            <speech>Return when the moon reigns supreme over the night, in $DURATION. Only then shall the veil lift.</speech>
        </speeches>
        <speeches id="4">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
        </speeches>
        <speeches id="5">
            <speech>The celestial bodies have yet to align; our power lies dormant, awaiting the ordained time.</speech>
            <speech>Return on Friday, when the moon's glow pierces the veil of reality, and our power is at its zenith.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Whispers of ancient power echo through the night. Do you dare to heed their call?</speech>
            <speech>Under the watchful gaze of the moon, our covenant assembles. The challenge of the ages awaits your courage.</speech>
        </speeches>
        <speeches id="2">
            <speech>Though you triumph, the eternal darkness weaves its patience. Our resolve remains unshaken, undimmed.</speech>
            <speech>The shadows part, revealing a path to our enigmatic leader. A reward for the brave, the strong, the victorious.</speech>
        </speeches>
        <speeches id="3">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
            <speech>Our rituals, bound to the celestial dance, find no favor at this hour. The right moment eludes us still.</speech>
            <speech>Return when the moon reigns supreme over the night, in $DURATION. Only then shall the veil lift.</speech>
        </speeches>
        <speeches id="4">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
        </speeches>
        <speeches id="5">
            <speech>The celestial bodies have yet to align; our power lies dormant, awaiting the ordained time.</speech>
            <speech>Return on Friday, when the moon's glow pierces the veil of reality, and our power is at its zenith.</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="2">
            <speech>Behold! Against the vast silence of the unknown, through realms twisted and maps uncharted, you've triumphed.</speech>
            <speech>A hundred Ethereal Wisps, each a whisper of the world's hidden heart, now thrum with power in your grasp.</speech>
            <speech>This act, a testament to your unwavering resolve and courage, binds us in a pact of ancient magic.</speech>
            <speech>In exchange for this feat, the Sabletite, enshrouded in mysteries as old as the cosmos, I bestow upon you.</speech>
            <speech>May it serve as a beacon, guiding you through darkness, a companion in battles unseen and challenges unspoken.</speech>
            <speech>Do you accept this gift, bound by the ethereal pact, to carry forth its legacy into the shadows and beyond?</speech>
        </speeches>

        <speeches id="3">
            <speech>Your hesitation speaks, traveler. The path of destiny is myriad, and not all roads must be walked at once.</speech>
            <speech>Should your heart find resolve, and your steps lead you back, the pact remains, waiting, in the silent shadow.</speech>
        </speeches>

        <speeches id="4">
            <speech>With a word, the future is woven, and the pact sealed. The Sabletite, ancient and enigmatic, is now yours to command.</speech>
            <speech>Carry it with honor, for its power is matched only by the depth of your determination. May it illuminate your darkest hours.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Wingull" speed="1" sprite="278" type="pokemon" x="3" y="4">
        <path>RIGHTx18,DOWNx3,LEFTx18,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Wingull" speed="1" sprite="278" type="pokemon" x="17" y="21">
        <path>UPx10,LEFTx9,DOWNx10,RIGHTx9</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wingull" speed="1" sprite="278" type="pokemon" x="2" y="28">
        <path>UPx8,RIGHTx15,LEFTx15,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Wingull" speed="1" sprite="278" type="pokemon" x="35" y="2">
        <path>DOWNx4,RIGHTx16,LEFTx16,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Wingull" speed="1" sprite="278" type="pokemon" x="47" y="13">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Duskull" speed="1" sprite="355" type="pokemon" x="15" y="56">
        <path>DOWNx4,RIGHTx1,LEFTx1,UPx4</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Chimecho" speed="1" sprite="358" type="pokemon" x="41" y="57">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Chimecho!</onCollisionSpeech>
        <speech>Chimecho!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Shuppet" speed="1" sprite="353" type="pokemon" x="59" y="50">
        <path>LEFTx2,UPx1,DOWNx1,RIGHTx2</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Duskull" speed="1" sprite="355" type="pokemon" x="11" y="36">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Duskull</onCollisionSpeech>
        <speech>Duskull</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Vulpix" shouldSleep="" speed="1" sprite="37" type="pokemon" x="51" y="25">
        <path>DOWNx1,RIGHTx2,UPx1,DOWNx1,LEFTx2,UPx1</path>
        <onCollisionSpeech gap="4">Vulpix!</onCollisionSpeech>
        <speech>Vulpix!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Shuppet" speed="1" sprite="353" type="pokemon" x="32" y="41">
        <path>RIGHTx9,LEFTx9</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Duskull" speed="1" sprite="355" type="pokemon" x="34" y="62">
        <path>UPx1,RIGHTx18,LEFTx18,DOWNx1</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Hex Maniac Xanthe" randomRotation="true" sprite="169" x="34" y="49">
        <speech>Amidst the silent shadows of Mt. Pyre, where spirits roam and whispers linger, I walk with my Pokémon.</speech>
        <speech>In this ghostly sanctuary, the air is thick with the echo of lost souls, and every step is haunted by the past.</speech>
        <speech>Together, we navigate the spectral realm, seeking solace in the embrace of the unknown.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="14" name="Hex Maniac Valencia" randomRotation="true" sprite="171" x="44" y="41">
        <speech>In the eerie mist of Mt. Pyre, where spirits linger and shadows play, my Pokémon and I roam.</speech>
        <speech>Amidst whispers of the departed, we tread softly, for the ethereal realm holds its secrets close.</speech>
        <speech>In this ghostly sanctuary, each step is a venture into the unknown, where reality bends and the spectral veil grows thin.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="15" name="Hex Maniac Isolde" randomRotation="true" sprite="170" x="13" y="46">
        <speech>In the heart of Hoenn's lore lies the tale of a lost trainer, drawn to Mt. Pyre in search of solace.</speech>
        <speech>Legend speaks of their entrapment within its spectral embrace, condemned to wander its shadowy halls eternally.</speech>
        <speech>As I journey with my Pokémon, I sense the lingering presence of that tormented spirit, a reminder of the thin veil between our world and the next.</speech>
    </npc>
    <movingNpc direction="DOWN" id="16" name="Bisharp" speed="1" sprite="625" type="pokemon" x="15" y="38">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Bisharp!</onCollisionSpeech>
        <speech>Bisharp!</speech>
    </movingNpc>
</npcs>
