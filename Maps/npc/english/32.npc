<npcs>
    <npc direction="UP" id="1004" name="Beauty Shauna" randomRotation="true" sprite="104" x="38" y="40">
        <speech>Do you know the president of PBO (Snakes) has a crush on me since 2017 and he left me unchaged because of that?</speech>
    </npc>
    <npc direction="UP" id="1005" name="Gentleman Shayek" sprite="5" x="95" y="91">
        <speech>You see this statue of Deoxys? It was built over four decades ago, back when Glassmoor was still a small
            city of traders.
        </speech>
        <speech>It was built for a reason, you see. A long time ago, this land was hit by a series of meteors.</speech>
        <speech>While they weren't large enough to cause Armageddon, they did do some serious damage.</speech>
        <speech>However, even more interesting were the strange beings that seemed to have landed here with those meteorites.
        </speech>
        <speech>They were, as we would come to find out later, the Pokémon species known as Deoxys. Though there have
            been rumors of Deoxys being dangerous, they never harmed the people of this city.
        </speech>
        <speech>In fact, they disappeared from here not long after they first arrived. But they left behind something
            very valuable for us.
        </speech>
        <speech>You see, the meteorite that crashed was rich in certain minerals, particularly silica.</speech>
        <speech>It was actually the main reason a glasswork factory even became viable at Glassmoor City.</speech>
        <speech>And after that, everything changed.</speech>
        <speech>With the boom in glass production and trade came economic prosperity, and as a result, Glassmoor City became the corporate behemoth it is today.</speech>
    </npc>
    <npc direction="DOWN" id="1006" name="Pokefan Joao" sprite="63" x="82" y="23">
        <speech>I'm taking my wife to the movie today. It's called "Volcanion and the Mechanical Marvel".</speech>
        <speech>What about you? Are you here for the movie too, or perhaps the auction house</speech>
        <speech>I see. Good to know!</speech>
    </npc>
    <npc direction="LEFT" id="1007" name="Gardener Manolo" sprite="48" triggerX="57" triggerY="20" x="57" y="19">
        <speech>We must always try our best to maintain a balance between nature and humanity's own desires. I mean,
            consider all these huge towers.
        </speech>
        <speech>While they do serve a purpose, we cannot forget the impact they have on natural resources, such as the soil and water.</speech>
        <speech>But most of all, it's the trees and forests that suffer due to industrial expansion.</speech>
        <speech>That's why I feel we have a duty towards nature, and I try to fulfill this duty by nourishing these
            plants and trees throughout the city. You should try and help too, whenever you can.
        </speech>
    </npc>
    <npc direction="DOWN" id="1008" name="Interviewer Fiona" sprite="51" x="97" y="17">
        <speech>Hello there! You look like a promising young trainer.</speech>
        <speech>We're currently on the lookout for new talent like yourself, who we hope to broadcast on our upcoming TV
            show. So, what's your name?
        </speech>
        <speech>I see, so you're called $PLAYER_NAME.</speech>
        <speech>Good to know. We'll keep an eye out on your achievements, $PLAYER_NAME. Good luck!</speech>
    </npc>
    <npc direction="DOWN" id="1009" name="Cameraman Manny" sprite="110" x="98" y="17">
        <speech>One sec, could you a shift a little towards the left?</speech>
        <speech>... There, that's a great shot! Do your best $PLAYER_NAME, we'll be watching.</speech>
    </npc>
    <npc direction="RIGHT" id="1010" name="Rich Boy Joe" randomRotation="true" sprite="75" x="51" y="61">
        <speech>Please don't bother me.</speech>
    </npc>
    <npc direction="DOWN" id="1011" name="Lady Mito" sprite="6" x="47" y="61">
        <speech>This is so relaxing.</speech>
    </npc>
    <npc direction="UP" id="1012" name="Bird Keeper Raj" sprite="35" x="79" y="49">
        <speech>One sec, could you a shift a little towards the left?</speech>
        <speech>... There, that's a great shot! Do your best $PLAYER_NAME, we'll be watching.</speech>
    </npc>
    <npc direction="LEFT" id="1013" name="Policeman Skand" sprite="126" x="14" y="89">
        <speech>If you see anyone suspicious, make sure to report them.</speech>
    </npc>
    <npc direction="DOWN" id="1014" name="Policeman Raphael" sprite="126" x="35" y="73">
        <speech>There's some shady people around here, kid. Make sure to stay on your guard at all times.</speech>
    </npc>
    <npc direction="DOWN" id="1015" name="Guitarist Jonas" sprite="49" x="58" y="62">
        <speech>Playing my guitar on a warm, sunny morning. I'm living the dream, woooooooh!</speech>
    </npc>
    <npc direction="DOWN" id="1016" name="" sprite="162" x="79" y="51">
        <speech>This poster seems to have a list of upcoming events.</speech>
        <speech>Ooh, there's an auction on the 8th of August! That sound exciting!</speech>
    </npc>
    <npc direction="DOWN" id="1017" name="" sprite="162" x="64" y="69">
        <speech>Glassmoor City - The shining land of opportunity</speech>
    </npc>
    <npc direction="DOWN" id="1018" name="Rich Guy Iago" sprite="75" x="66" y="34">
        <speech>Could you leave us alone, we're trying to build chemistry here.</speech>
    </npc>
    <npc direction="DOWN" id="1019" name="Lady Ellaria" sprite="53" x="67" y="34">
        <speech>Please don't disturb us, we're busy right now.</speech>
    </npc>
    <conversation id="6">
        <speeches id="1">
            <speech>You're here for that old goof's "treasure", huh?</speech>
            <speech>Too bad, all you're going to get is a great deal of pain!</speech>
        </speeches>
        <speeches id="2">
            <speech>Bloody hell! I got beaten by this little punk, bleh ...</speech>
            <speech>Whatever ... take the thing back. It's got no value, anyway.</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
        <speeches id="4">
            <speech>Now go run to your mommy, you little pest!</speech>
        </speeches>
        <speeches id="5">
            <speech>Go away, brat!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>You and your team are all worthless Tikku.</speech>
            <speech>I don't know how you were hired.</speech>
            <speech>You could not defend yourself from a kid?</speech>
            <speech>Pathetic. You are dismissed!</speech>
        </speeches>
        <speeches id="2">
            <speech>You little brat. Yes you. I am talking to you.</speech>
            <speech>This was a stupid idea.</speech>
            <speech>What you have done is really stupid.</speech>
            <speech>My boss will not be happy with us failing at this minute task of kidnapping kids for him.</speech>
            <speech>I don't have time right now else I would have taught you a lesson.</speech>
            <speech>You can keep these worthless kids with yourself.</speech>
            <speech>I will now focus on the main project and head to the Old Powerplant.</speech>
            <speech>Don't try to interfere with our plans next time or else I will teach you a lesson.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>Hello $PLAYER_NAME.</speech>
            <speech>I was trying to find you and saw everything that went on here.</speech>
            <speech>Thank you so much for saving those kids from those evil people.</speech>
            <speech>I overheard Horus talking about the Old Powerplant.</speech>
            <speech>Old Powerplant is the abandoned Powerplant which once used to power every region.</speech>
            <speech>Due to the aftermath of a big asteroid impact, it sunk beneath the land.</speech>
            <speech>Today it has no use except some Pokémon using it as shelter.</speech>
            <speech>I am not sure why Horus is headed there, but I can prepare you for the battle against him and his team.</speech>
            <speech>Give me a visit in Grayroot Town (South of Glassmoor City).</speech>
            <speech>I will see you soon.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>I should try and find Grunt Tikku and his supervisor before I try to leave Glassmoor.</speech>
        </speeches>
    </conversation>
    <conversation id="18">
        <speeches id="1">
            <speech>I should follow Nushkie to the Old Powerplant before I try to go anywhere else.</speech>
        </speeches>
    </conversation>
</npcs>
