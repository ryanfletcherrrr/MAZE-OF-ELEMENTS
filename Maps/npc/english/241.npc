<npcs>
    <npc direction="DOWN" id="1000" name="Guide Hari" sprite="23" x="21" y="44">
        <speech>Greetings, challenger! Izumi uses water-type Pokémon.</speech>
        <speech>I suggest you train some electric or grass-types for her.</speech>
        <speech>Oh and watch-out for her Dewgong, it is incredibly bulky.</speech>
        <speech>Good luck! And may the odds be ever in your favour.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Welcome to the Lehar Gym..</speech>
            <speech>Thank you for investigating the reason behind the blast and defeating all the Grunts.</speech>
            <speech>Lets battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>So that's who you are. I see passion and determination in your battling style, $PLAYER_NAME.
            </speech>
            <speech>I feel that you believe in your Pokémon, which is absolutely vital in any relationship between
                Pokémon and humans.
            </speech>
            <speech>Oh and, as my way of saying thanks for earlier, take this TM. It's TM19-Rain Dance, so it should be
                useful if you choose to rely on the rains for success.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>I'm glad to have battled you, $PLAYER_NAME. It's always a pleasure to see trainers who have a strong
                bond with their Pokémon.
            </speech>
            <speech>I wish you well.</speech>
        </speeches>
        <speeches id="4">
            <speech>I notice a lack of faith in the bond between you and your Pokémon. You should work on that.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I'm not here just to swim, but also to train my Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm drowning ...</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm drowning ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Did you drown?</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I want to be as good a water-type trainer as Izumi.</speech>
        </speeches>
        <speeches id="2">
            <speech>This is not enough.</speech>
        </speeches>
        <speeches id="3">
            <speech>This is not enough.</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm getting better!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Patthar Village Pokémon Gym</speech>
            <speech>Certified trainers: Sai, Ayaan</speech>
        </speeches>
        <speeches id="2">
            <speech>Patthar Village Pokémon Gym</speech>
            <speech>Certified trainers: Sai, Ayaan, $PLAYER_NAME</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Lehar Town Pokémon Gym</speech>
            <speech>Certified trainers: Sai, Ayaan</speech>
        </speeches>
        <speeches id="2">
            <speech>Lehar Town Pokémon Gym</speech>
            <speech>Certified trainers: Sai, Ayaan, $PLAYER_NAME</speech>
        </speeches>
    </conversation>
</npcs>
