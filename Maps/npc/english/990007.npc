<npc>

    <conversation id="1">
        <speeches id="1">
            <speech>Your Pokémon look tired. Would you like me to Heal them?</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go, all healthy and happy!</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww, I'm sure they would have liked to rest.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, I can only heal your Pokémon if you have PBO membership. You can buy one from donator shop.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Dragonite......!!</speech>
        </speeches>
        <speeches id="2">
            <speech>Dragon.. Drag Drag..!!!</speech>
        </speeches>
        <speeches id="3">
            <speech>*Dragoniteeeee*.</speech>
        </speeches>
        <speeches id="4">
            <speech>Dragon!! Drago Nite!!</speech>
        </speeches>
        <speeches id="5">
            <speech>*Dragonite doesn't seem to acknowledge you yet*.</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>You again? You are a bit too late.</speech>
            <speech>Can't you see my Isis is with me again?</speech>
            <speech>I won't let you ruin my moment.</speech>
            <speech>Horus, finish with this little brat once and for all.</speech>
            <speech>I need to get my beloved Isis away from her pet Rayquaza because it's out of control.</speech>
        </speeches>
        <speeches id="2">
            <speech>This is how you pay me?</speech>
            <speech>You are my worst mistake, and you will suffer together as a family now.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ha Ha Ha! I picked you up from trash and made you what you are.</speech>
            <speech>There is nothign special about you or your family. Let me show you who I am.</speech>
            <speech>Alright kid, let’s go!</speech>
        </speeches>
        <speeches id="4">
            <speech>You have won against me! But I don't care because I have my wife with me now.</speech>
            <speech>Isis my love, lets go.</speech>
        </speeches>
        <speeches id="5">
            <speech>She doesn't seem to be in her sense right now.</speech>
            <speech>I guess Ho-Oh is better at resurrecting Pokémon than humans, but I will love my wife anyway.</speech>
            <speech>Now let's get out of here Isis… we will go somewhere they will never find us and this is about to explode.</speech>
        </speeches>
    </conversation>

    <conversation id="14">
        <speeches id="1">
            <speech>No, I am thankful for everything you have done for me.</speech>
            <speech>But this is going too far, and they are going to wreck this place if we don't do something.</speech>
            <speech>$PLAYER_NAME, please fight Osiris while I will free Suicune, Raikou and Entei.</speech>
        </speeches>
        <speeches id="2">
            <speech>Good luck with that Osiris.</speech>
            <speech>I am $PLAYER_NAME's brother, and I know $GENDER_HE_SHE will be able to take care of you alone.</speech>
        </speeches>
    </conversation>

    <conversation id="15">
        <speeches id="1">
            <speech>Grrr... Grrr...</speech>
        </speeches>
        <speeches id="2">
            <speech>Grrr... Grrr...</speech>
        </speeches>
    </conversation>

    <conversation id="16">
        <speeches id="1">
            <speech>$PLAYER_NAME. I know we could not fully stop Osiris but that battle was intense.</speech>
            <speech>I could have never accepted my real $BROTHER_SISTER to be so strong.</speech>
            <speech>That aside, the tower is about to collapse.</speech>
            <speech>Ho-Oh is not able to hold itself against that Rayquaza.</speech>
            <speech>We need to defeat that Rayquaza before it destroys everything including Ho-Oh.</speech>
            <speech>Yes, I will go and help clear the Dragon Tower in the meantime I am counting on you to defeat that Rayquaza.</speech>
            <speech>I will see you outside.</speech>
        </speeches>
    </conversation>

    <conversation id="17">
        <speeches id="1">
            <speech>QUAAAAAAA..........</speech>
        </speeches>
        <speeches id="2">
            <speech>QUAAAAAAA..........</speech>
        </speeches>
        <speeches id="3">
            <speech>QUAAAAAAA..........</speech>
        </speeches>
    </conversation>

    <conversation id="18">
        <speeches id="1">
            <speech>Atop the Dragon Tower, where only the brave dare to climb. You've certainly earned my respect.</speech>
            <speech>My Altaria soars above, mastering the skies. Let's see if your team can match the heights we've reached.</speech>
        </speeches>
        <speeches id="2">
            <speech>Defeated again! Your mastery of dragons, including Kingdra and Altaria, is truly remarkable.</speech>
            <speech>But the journey of a Dragon Master never ends. There's one more challenge I have for you.</speech>
            <speech>Your victory reaches as high as the clouds. This battle will be a guiding wind for your future challenges.</speech>
            <speech>Meet me where the meteors touch the earth, and the dragons' roar echoes through the falls. Our final test awaits.</speech>
        </speeches>
        <speeches id="3">
            <speech>Retreating? The wind's lessons are harsh, but necessary. Return when you're ready to soar.</speech>
            <speech>Your Kingdra and Altaria must be as one with the wind. That's when you'll truly understand.</speech>
        </speeches>
        <speeches id="4">
            <speech>The winds whisper tales of untested strength. Your journey with us is not yet complete.</speech>
            <speech>When ready, return to these heights, where dragon spirits soar, and challenge us anew.</speech>
        </speeches>
        <speeches id="5">
            <speech>To conquer the skies, a bond with your Altaria and Kingdra is essential. Yet, one more ally awaits to complete our tale.</speech>
            <speech>Seek the place where earth meets the heavens, and the dragons' cry resonates. Only then will your trial be complete.</speech>
        </speeches>
    </conversation>

</npc>