<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I don't think you can pass this barrier without answering the question..</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>I believe it's time for a puzzle?</speech>
        </speeches>
        <speeches canSkip="false" id="2">
            <speech>This poisonous Pokémon scares many people and gets fun out of their terror.</speech>
            <speech>It's not in his final form, part because he has no owner, part because he doesn't want to get a new weakness. Which Pokémon is it?</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh my, oh my, oh my. That's absolutely, definitely not the right correct wrong answer, it's not.
            </speech>
            <speech>In others words, you have failed.</speech>
        </speeches>
        <speeches id="4">
            <speech>No, no, no, hahahahaha. That's not the wrong answer!</speech>
            <speech>Silly you, continue!</speech>
        </speeches>
        <speeches id="5">
            <speech>Silly you, continue!</speech>
        </speeches>
        <speeches id="6">
            <speech>Come back in 2 minutes.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Would you like to refresh souls of those poor Pokémon?</speech>
        </speeches>
        <speeches id="2">
            <speech>Brm Brm Brm..</speech>
        </speeches>
        <speeches id="3">
            <speech>Please come back whenever you please</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Shuppet" shouldSleep="" speed="1" sprite="353" type="pokemon" x="49" y="44">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Venonat" shouldSleep="" speed="1" sprite="48" type="pokemon" x="10" y="39">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Shuppet" shouldSleep="" speed="1" sprite="353" type="pokemon" x="38" y="28">
        <path>DOWNx1,LEFTx1,RIGHTx1,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Misdreavus" speed="1" sprite="200" type="pokemon" x="41" y="4">
        <path>DOWNx1,RIGHTx1,DOWNx1,UPx1,LEFTx1,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Pumpkaboo" shouldSleep="" speed="1" sprite="710" type="pokemon" x="38" y="18">
        <path>RIGHTx1,DOWNx4,LEFTx1,RIGHTx1,UPx4,LEFTx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Drifloon" shouldSleep="" speed="1" sprite="425" type="pokemon" x="12" y="4">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Poochyena" shouldSleep="" speed="1" sprite="261" type="pokemon" x="5" y="14">
        <path>LEFTx2,DOWNx1,RIGHTx2,UPx1</path>
        <onCollisionSpeech gap="4">Poochyena!</onCollisionSpeech>
        <speech>Poochyena!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Phantump" shouldSleep="" speed="1" sprite="708" type="pokemon" x="20" y="31">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Phantump" shouldSleep="" speed="1" sprite="708" type="pokemon" x="30" y="39">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Phantump" shouldSleep="" speed="1" sprite="708" type="pokemon" x="49" y="23">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="11" name="" randomRotation="true" sprite="162" x="52" y="22">
        <speech>After a lost child perished in the forest, their spirit possessed a tree stump, causing the spirit's rebirth as Phantump.</speech>
    </npc>
</npcs>
