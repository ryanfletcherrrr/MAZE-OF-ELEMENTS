<npcs>
    <npc id="1000" name="Guard" type="speech" hidden="false" sprite="126" x="1" y="7" direction="RIGHT"
         triggerX="3" triggerY="7">
        <speech>Welcome to Bijli City!</speech>
    </npc>
    <npc id="1001" name="Guard" type="speech" hidden="false" sprite="126" x="8" y="7" direction="LEFT"
         triggerX="6" triggerY="7">
        <speech>Please visit again!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
          <speech>Yo, are you $PLAYER_NAME?</speech>
          <speech>You are? Sweet! I'm known as Niji, and I'm Ichi's older bro.</speech>
          <speech>I've been waiting for you, cause my brother said that you'd be coming here to challenge me.</speech>
          <speech>Well, what are we waiting for? Let's start!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, gosh! I can't get over how strong you are!</speech>
            <speech>I didn't see that coming, honestly. Guess that means I need to train more.</speech>
        </speeches>
        <speeches id="3">
            <speech>You could come back tomorrow, if you want. We could battle again!</speech>
        </speeches>
        <speeches id="4">
            <speech>We ain't on the same level just yet!</speech>
        </speeches>
        <speeches id="5">
            <speech>Uhm, why are you talking to me?</speech>
        </speeches>
    </conversation>
</npcs>
