<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ahahaha! How pathetic you appear now. The fool, Archie.</speech>
        </speeches>
        <speeches id="2">
            <speech>Fuhahaha! Just as I predicted.</speech>
        </speeches>
        <speeches id="3">
            <speech>Even I, the great Maxie, have found myself wishing for something I cannot justify.</speech>
            <speech>And the illogical desire that I harbored was to have you present here at this moment.</speech>
            <speech>Hahaha... And now that fool's wish has come true. Fantastic!</speech>
            <speech>Nothing could please me more! I suppose I should make introductions...</speech>
            <speech>I present to you my incomparable partner, who will assist Team Magma in driving humanity forward to
                its next level!
            </speech>
            <speech>The super-ancient Pokémon...</speech>
            <speech>Groudon! Behold! This great form slumbering in defiance of even the broiling lava surrounding it!
            </speech>
            <speech>So long have I waited for this day...</speech>
            <speech>Immeasurably long!</speech>
            <speech>This foolish world has held back humanity's progress out of misguided idealism regarding the
                coexistence of humans and Pokémon.
            </speech>
            <speech>But this ancient creature can bring that to its rightful end, creating a new land upon which
                humanity may stride freely forward.
            </speech>
            <speech>Now that I have at last obtained the power of Primal Groudon!</speech>
            <speech>And now, you are the final obstacle remaining between me and my goals.</speech>
            <speech>It behooves me to use every tool at my disposal to eliminate you.</speech>
            <speech>Indeed! Even Mega Evolution! Do not delude yourself that you and your Pokémon are the only ones
                capable of it.
            </speech>
            <speech>I must apologize for making you wait through our encounters at Mt. Chimney and Mt. Pyre without
                treating you to this sight.
            </speech>
            <speech>Brace yourself for my ultimate attack! Fuhahaha!</speech>
        </speeches>
        <speeches id="4">
            <speech>You've really done it, child. You've shown a power that exceeds that of the great Maxie!</speech>
        </speeches>
        <speeches id="5">
            <speech>Hah... Hah... Hahhh...</speech>
            <speech>... Ah. Aha... Fuhahaha... Kahahahaha!</speech>
            <speech>GAHAHAHAHAHAHA!</speech>
            <speech>Splendid. Just splendid, my young Trainer.</speech>
            <speech>No, it is more than that! I should be calling you my young hero!</speech>
            <speech>Believing until the very end that a world where humanity and Pokémon coexist must be the best...
            </speech>
            <speech>Rejecting my ideals without a second thought...</speech>
            <speech>Yes, watching you struggle desperately to halt the beginning of the world's end...</speech>
            <speech>You are undoubtedly a hero! So noble... And yet.</speech>
            <speech>I will not yield! I will not bend! My ideals will not be shaken!</speech>
            <speech>My dream for the world's next step forward will never change!</speech>
            <speech>I will use the Red Orb to awaken Groudon, revert it to its primal form, and put an end to all
                else!
            </speech>
        </speeches>
        <speeches id="6">
            <speech>Buh?! Tabitha?!</speech>
            <speech>Humph. Did you think I had not noticed?</speech>
            <speech>That I had somehow failed to realize you were after my spot? Such a sad development indeed.</speech>
            <speech>To be betrayed by my number two...</speech>
            <speech>In the end, there is only one being upon which I can depend! Now, Groudon!</speech>
            <speech>Absorb all the power resting in this Red Orb, and reclaim yourself!</speech>
            <speech>Revert to your primal form! This is the time to take back the great Evolution you lost in the
                ancient past!
            </speech>
            <speech>Reclaim the possibility you once held!</speech>
        </speeches>
        <speeches id="7">
            <speech>Gahahahaha! At last... AT LAST!</speech>
            <speech>I've finally done it!!!</speech>
            <speech>A new world for human evolution will be born!!! We shall stride forward!!!</speech>
        </speeches>
        <speeches id="8">
            <speech>... Hm?</speech>
            <speech>A message from our members outside?</speech>
            <speech>What is it? So the sun has turned mercilessly fierce in its heat.</speech>
            <speech>I should expect so. That is what I have long— No, what WE have long wished for.</speech>
            <speech>What?! The heat is greater than simulations predicted?</speech>
            <speech>It will be a risk to our own safety if it continues?!</speech>
            <speech>That cannot be... It has only just awoken... Where is it getting so much power from?</speech>
            <speech>And how much more will it gain when it does undergo Primal Reversion...</speech>
            <speech>C-continue your readings! Then report back!</speech>
        </speeches>
        <speeches id="9">
            <speech>All that matters is... That I have used the red orb to awaken Groudon.</speech>
            <speech>And now... I will transform this planet to a land ideal for humanity.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Ugh...</speech>
            <speech>Ugh! Arghhh... M-Maxie...you...!</speech>
        </speeches>
        <speeches id="2">
            <speech>L-little scamp...</speech>
        </speeches>
        <speeches id="3">
            <speech>Hey, Maxie. Looks like we underestimated the power of the super-ancient Pokémon...</speech>
            <speech>The power of Primal Reversion...</speech>
            <speech>Primal Groudon brings about an "end," all right.</speech>
            <speech>But you don't get to choose what end.</speech>
            <speech>It's gonna drive every living thing on this planet to its death!</speech>
            <speech>The only thing waiting for us is despair. A despair we can't even run from.</speech>
            <speech>A despair that's gonna crush humanity.</speech>
            <speech>You blasted fool...</speech>
            <speech>And it's all happening 'cause you were cocky enough to think you could control the super-ancient Pokémon's power!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Wait! Maxie!</speech>
            <speech>Do stop that now...</speech>
            <speech>Please! Maxie! You just don't understand!</speech>
            <speech>What Groudon will bring about upon awakening is an end to the world!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ohh... What have you done... Boss... What...</speech>
        </speeches>
        <speeches id="3">
            <speech>Boss?! Maxie?! Just what's happening on the surface?!</speech>
        </speeches>
        <speeches id="4">
            <speech>So the information we received from the Weather Institute was true...</speech>
            <speech>Boss Maxie! We'll never get anywhere just standing around here like this!</speech>
            <speech>There isn't a moment to spare! We must confirm the situation on the outside!</speech>
            <speech>Child! You're coming, too! Hurry up!</speech>
        </speeches>
    </conversation>
</npcs>