<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey, $PLAYER_NAME! Did you come to study, too?</speech>
            <speech>I went ahead and memorized everything that was up on the blackboard.</speech>
            <speech>After all, it's the Trainer's job to avoid having their precious Pokémon hurt in battle, right?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hey, $PLAYER_NAME! Did you come to study, too?</speech>
            <speech>I went ahead and memorized everything that was up on the blackboard.</speech>
            <speech>After all, it's the Trainer's job to avoid having their precious Pokémon hurt in battle, right?</speech>
            <speech>So, $PLAYER_NAME, what brings you here? Huh? You've got something for me?</speech>
        </speeches>
        <speeches id="3">
            <speech>I hope to see you around.</speech>
        </speeches>
        <speeches id="4">
            <speech>So, what is this...? Score! It's a Town Map!</speech>
            <speech>Huh?! Why are there two in here? I like it a lot, but I don't need two. Here, $PLAYER_NAME, you take one!</speech>
            <speech>Hmm... Well, according to the Town Map, I guess Oreburgh City is where I should be going next.</speech>
            <speech>There's a Gym, so it'd be perfect for raising the Pokémon I just caught.</speech>
            <speech>Well, I'm on the road to becoming the greatest Trainer of all time! See you around!</speech>
        </speeches>
        <speeches id="5">
            <speech>Hmm... Well, according to the Town Map, I guess Oreburgh City is where I should be going next.</speech>
            <speech>There's a Gym, so it'd be perfect for raising the Pokémon I just caught.</speech>
            <speech>Well, I'm on the road to becoming the greatest Trainer of all time! See you around!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>...Heehee. I’m confident in my calculations and analysis.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ohhhh... Calculation and analysis are perhaps no match for chance...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ohhhh... Calculation and analysis are perhaps no match for chance...</speech>
        </speeches>
        <speeches id="4">
            <speech>Heheh. Exactly as I planned... There’s no way I would lose.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Ah... You look strong... I hope I’ll be all right...</speech>
        </speeches>
        <speeches id="2">
            <speech>I could tell you are a strong Trainer! What you see is what you get, right?</speech>
        </speeches>
        <speeches id="3">
            <speech>I could tell you are a strong Trainer! What you see is what you get, right?</speech>
        </speeches>
        <speeches id="4">
            <speech>Oops, you weren’t as strong as I expected. Looks can be deceiving. </speech>
        </speeches>
    </conversation>
    <npc direction="UP" hidden="false" id="1" name="Willie" sprite="4" x="9" y="11">
        <speech>I wrote an essay in my notebook on what makes a true Pokémon Trainer.</speech>
        <speech>Some people say that it takes a trainer obtaining all of the regional gym badges...</speech>
        <speech>Others will tell you that it's how many different Pokémon you collect...</speech>
        <speech>I personally think though that it's what makes you happiest that defines whether or not you are a true Pokémon trainer!</speech>
        <speech>My teacher gave me a B- for grammar and punctuation though...</speech>
    </npc>
    <npc direction="UP" hidden="false" id="2" name="Theresa" sprite="12" x="4" y="11">
        <speech>Pokémon are smart enough to use items they're holding.</speech>
        <speech>But they won't know what to do with man-made items like Potions and Antidotes.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Julia" sprite="53" x="17" y="5">
        <speech>It's perfectly fine for Trainers and Pokémon to develop at their own pace.</speech>
        <speech>If there is anything you're not familiar with, you can look it up here.</speech>
        <speech>Many trainers of varying skill levels pop by here to brush up on the basics!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="4" name="Noah" sprite="26" x="14" y="11">
        <speech>We learned about Pokémon types today.</speech>
        <speech>Umm...</speech>
        <speech>Grass is weak to Fire,</speech>
        <speech>Fire is weak to Water,</speech>
        <speech>and Water is weak to Grass!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Bruce" sprite="4" x="27" y="15">
        <speech>I love bugs...</speech>
        <speech>and I hate rocks!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="6" name="Roger" sprite="8" x="22" y="10">
        <speech>I've been studying about Pokémon's Abilities lately. They're quite interesting.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="7" name="Lee" sprite="2" x="27" y="17">
        <speech>I love rocks...</speech>
        <speech>and I hate bugs!</speech>
    </npc>
</npcs>
