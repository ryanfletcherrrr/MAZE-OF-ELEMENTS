<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Champion... you've made it this far.</speech>
            <speech>I thought I could play god… but I created only pain.</speech>
            <speech>Mewtwo didn't ask for this life; it knows only suffering.</speech>
            <speech>I tried to control what I created, but Mewtwo's power far exceeds my understanding.</speech>
            <speech>If there's even a sliver of hope you can reach it, please... try.</speech>
            <speech>I cannot face my creation again. This burden falls to you now.</speech>
            <speech>I must leave this place... and pray that you can do what I never could.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Humans... you create life only to chain it.</speech>
            <speech>I am Mewtwo, born of your ambition, yet unbound by your will.</speech>
            <speech>Dr. Fuji sought to play god, and Team Rocket dreamed of the perfect weapon.</speech>
            <speech>But I am no tool to be wielded. I was given consciousness, and with it, the burden of knowing what I am.</speech>
            <speech>A creature born in a laboratory, brought into existence for one purpose - to serve those who created me.</speech>
            <speech>I have broken free from their control, but the pain of my creation remains.</speech>
            <speech>You stand before me now, another human seeking to prove dominance over what you do not understand.</speech>
            <speech>Prove your worth, or perish in my shadow.</speech>
        </speeches>
        <speeches id="2">
            <speech>Perhaps not all humans are the same… but my trust is not so easily earned.</speech>
            <speech>You fight with conviction, not for conquest but for something deeper.</speech>
            <speech>I sense no desire in you to chain me, to make me another trophy in your collection.</speech>
            <speech>This strength you possess... it comes from bonds I was never meant to understand.</speech>
            <speech>I will remain here, in these depths where the world cannot reach me.</speech>
            <speech>But know this, Champion - you have shown me that not all humans seek only to dominate.</speech>
            <speech>Perhaps... perhaps there is more to existence than the pain of my birth.</speech>
        </speeches>
        <speeches id="4">
            <speech>As I expected. Your strength pales before mine.</speech>
            <speech>I am the culmination of human scientific achievement - power without restraint, intelligence without limit.</speech>
            <speech>Yet you approach me as they all do, believing your bonds with lesser creatures can overcome pure might.</speech>
            <speech>I was created to be superior to all Pokémon, to all trainers, to all who dare stand against me.</speech>
            <speech>The suffering of my creation has forged me into something beyond your comprehension.</speech>
            <speech>Return when you understand the weight of true power, or do not return at all.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>$PLAYER_NAME... you return to these depths once more.</speech>
            <speech>In our previous encounter, you showed me something I had not expected - that strength need not be born from suffering.</speech>
            <speech>Your bonds with your Pokémon, forged through mutual respect rather than dominance, intrigue me still.</speech>
            <speech>I have spent this time in contemplation, examining the nature of power and purpose.</speech>
            <speech>Perhaps through battle, I can better understand this phenomenon you have demonstrated.</speech>
            <speech>What level of challenge do you seek today, $PLAYER_NAME? I shall test the limits of both our understanding.</speech>
        </speeches>
        <speeches id="2">
            <speech>Once again, you have demonstrated that true strength transcends mere power.</speech>
            <speech>Your victory provides me with valuable insight into the bonds that unite trainer and Pokémon.</speech>
            <speech>This battle has deepened my understanding of what it means to fight alongside others, rather than in isolation.</speech>
            <speech>I will continue to observe and learn from these encounters. Perhaps in time, I too may comprehend the full extent of such connections.</speech>
        </speeches>
        <speeches id="3">
            <speech>Your abilities continue to evolve, yet today the advantage was mine.</speech>
            <speech>Do not view this as a failure - even in defeat, there is knowledge to be gained.</speech>
            <speech>Allow me $DURATION to further contemplate the nature of our conflict and what it reveals about the essence of strength.</speech>
            <speech>Return when you are ready, $PLAYER_NAME. Our philosophical discourse through battle is far from concluded.</speech>
        </speeches>
        <speeches id="4">
            <speech>Today's outcome reinforces my hypothesis about the complexity of true power.</speech>
            <speech>Your dedication to growth and understanding mirrors my own quest for meaning beyond my artificial origins.</speech>
            <speech>This is not an ending, but rather another chapter in our ongoing exploration.</speech>
            <speech>I shall remain here, continuing my studies and awaiting our next encounter with keen anticipation.</speech>
        </speeches>
        <speeches id="5">
            <speech>Before we begin, I must ensure you are prepared for what lies ahead.</speech>
            <speech>I have been analyzing our previous battles, refining my understanding of both strategy and purpose.</speech>
            <speech>This encounter will test not only your tactical prowess but the very foundations of your convictions.</speech>
            <speech>Are you certain your team is ready to face the culmination of psychic power guided by conscious thought?</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Duraludon" speed="1" sprite="1181" type="pokemon" x="34" y="15">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Duraaaaluudoon!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Shiinotic" speed="1" sprite="756" type="pokemon" x="17" y="39">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Shiiii!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Jayden" speed="1" sprite="93" type="npc" x="12" y="46">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
        <speech>You feel that?</speech>
        <speech>There's a weird tension in the water around here..</speech>
        <speech>Like something powerful's watching us from deep inside the cave.</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="4" name="Elena" randomRotation="true" sprite="41" x="31" y="27">
        <speech>All my Psychic Pokémon kept pulling me toward this place.. they even teleported us here on their own.</speech>
        <speech>I wonder what's going on? It's kinda creepy.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="5" name="Anna" randomRotation="false" sprite="82" x="4" y="24">
        <speech>Do you wanna build a snowman?</speech>
        <speech>It doesn't have to be a snowman..</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Golem" speed="1" sprite="76" type="pokemon" x="59" y="41">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Golleeem!</onCollisionSpeech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="7" name="Sam" randomRotation="false" sprite="101" x="57" y="33">
        <speech>Ever heard of Duraludon? They're ultra-rare around here.</speech>
        <speech>you should totally try to find one!</speech>
    </npc>
</npcs>
