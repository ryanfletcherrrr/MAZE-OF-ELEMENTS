<npcs>
    <!--<npc id="1000" x="7" y="7" direction="LEFT" name="Ruin Maniac Shira" sprite="20">
        <speech>The Jhil river flows right across the $REGION_NAME region, but, surprisingly, no one has ever seen all of it.
        </speech>
        <speech>It’s not like no one has ever tried. In fact, there have been several attempts to chart a course through the entire river, but none have been successful.
        </speech>
        <speech>The explorers almost always return unharmed, although none of them ever remembers a thing about what they saw.
        </speech>
        <speech>To me, that’s the thrill of exploration - finding out the hidden mysteries of our universe.</speech>
        <speech>Alas, I wonder if I can ever find what’s hidden down on that riverbank ...</speech>
    </npc>-->
    <conversation id="1">
        <speeches id="1">
            <speech>Who are you?</speech>
            <speech>Could you please help me?</speech>
            <speech>Some wierd looking people came in and kidnapped my child.</speech>
            <speech>I spoke with my neighbour, and they kidnapped their kid too.</speech>
            <speech>My husband has gone looking for him, but he is not a Pokémon trainer.</speech>
            <speech>Please help me. Please...</speech>
        </speeches>
    </conversation>
</npcs>
