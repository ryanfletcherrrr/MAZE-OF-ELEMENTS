<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Welcome to Zorg Cafe! Would you like me to make something that will rejuvenate your Pokémon?</speech>
        </speeches>
        <speeches id="2">
            <speech>Here you go! C'est la vie!</speech>
        </speeches>
        <speeches id="3">
            <speech>Come back whenever they get the need to rejuvenate</speech>
        </speeches>
    </conversation>
    <npc direction="UP" id="1000" name="Gentleman Harkley" randomRotation="true" sprite="5" triggerX="3" triggerY="5" x="2" y="5">
        <speech>I've been coming here ever since this cafe opened up a decade ago.</speech>
        <speech>God, that makes me feel old now.</speech>
        <speech>I remember when Glassmoor used to be a smaller and friendlier city, full of traders and happy locals.</speech>
        <speech>How the times have changed ...</speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Lady Myra" sprite="55" triggerX="3" triggerY="3" x="2" y="3">
        <speech>This city has considerably changed, that's for sure.</speech>
        <speech>All these big corporations and fancy skyscrapers dominating the skyline, its just so different.</speech>
        <speech>Now I don't mind change or progress per se, but I cannot condone the horrible change in social
            attitudes.
        </speech>
        <speech>I mean ... it feels like the city has become this cold, emotionless concrete jungle.</speech>
        <speech>It's gotten a lot worse since 'those' people came here though ...</speech>
    </npc>
    <npc direction="LEFT" id="1002" name="Waitress Jenna" randomRotation="true" sprite="56" triggerX="12" triggerY="8" x="12" y="6">
        <speech>Hi there!</speech>
        <speech>You look like a traveller. If that's the case, then you should rest up here for a while.</speech>
        <speech>Glassmoor City is just across the bridge, so you can relax without worries.</speech>
        <speech>Our chef makes some delicious food, if you're interested.</speech>
        <speech>Serving travellers is our speciality!</speech>
    </npc>
    <npc direction="LEFT" id="1003" name="Waiter Jim" randomRotation="true" sprite="133" x="1" y="9">
        <speech>One Pepperoni Pizza for Table 1 and Moo Moo Milkshake for Table 3 ...</speech>
        <speech>Oh, hello! Welcome to the cafe.</speech>
        <speech>Since we often get travellers from all across the region, I'm sure you'll usually find someone</speech>
        <speech>interesting to speak to.</speech>
        <speech>The world's full of mysteries, with each of them having their own histories.</speech>
        <speech>Was that dope, or what?</speech>
    </npc>
    <npc direction="DOWN" id="1004" name="Gentleman Marley" sprite="5" triggerX="3" triggerY="11" x="2" y="11">
        <speech>Say, youngster, are you new here?</speech>
        <speech>Oh, you're from New Dawn Town. That's quite far away, so I take it you're on a journey then?</speech>
        <speech>Good. Then tell me, what do you know about the 'Dank Corporation'?</speech>
        <speech>Hmm ... not much, it seems. Well, fret not and listen up. Trust me, this could be useful information.
        </speech>
        <speech>You see, Dank Corp. is this big company that makes Pokémon accessories, from Pokeballs to Poffins etc.
        </speech>
        <speech>They've got a foothold all across the $REGION_NAME region, and even some foreign lands too.</speech>
        <speech>But, I believe this is just a front for their real activities, which are far less legal.</speech>
        <speech>How do I know this? Why, I'm a detective, of course. I'm from the International Police.</speech>
        <speech>If you've heard of Agent Looker, then you'd know who we are. Me and my partner Bob here are
            investigating Dank Corp.
        </speech>
        <speech>We have sufficient reason to believe that they're hiding something big, and we need to find out what.
        </speech>
        <speech>I only told you this because you looked trustworthy, kid. I'm a decent judge of character, so I hope I'm
            not wrong here.
        </speech>
    </npc>
    <npc direction="UP" id="1005" name="Gentleman Bob" sprite="5" triggerX="3" triggerY="13" x="2" y="13">
        <speech>Although it seems odd that the International Police are investigating Dank Corp, there is simply no
            other option.
        </speech>
        <speech>Some officers in the local Police departments seem to be oblivious to their dealings, and I'm sure money
            is involved in a big way.
        </speech>
        <speech>While we trust a majority of the Police force, these select few are, unfortunately, high-up in the
            hierarchy.
        </speech>
        <speech>This means that the local Police are effectively incapable of investigating Dank Corp, with all those
            vested interests.
        </speech>
        <speech>That's why, as members of the International Police, we were assigned to this case.</speech>
        <speech>Keep an eye out for Dank Corp, kid. But most of all, don't try anything alone - it's dangerous.</speech>
    </npc>

    <conversation id="2">
        <speeches id="1">
            <speech>I saw some priests entering Nova Condominios in orange colored outfits.</speech>
            <speech>I have never seen a bunch of priests in Glassmoor, I mean the city is too modern for priests I feel.</speech>
            <speech>I wonder what's going on there.</speech>
        </speeches>

        <speeches id="2">
            <speech>I saw some priests entering Nova Condominios in orange colored outfits.</speech>
            <speech>I have never seen a bunch of priests in Glassmoor, I mean the city is too modern for priests I feel.</speech>
            <speech>I wonder what's going on there.</speech>
        </speeches>
    </conversation>
</npcs>
