<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey there. My name's Saito, and I've got the rare talent of helping Pokémon learn moves they would only have learnt via breeding.</speech>
            <speech>I'm willing to help your Pokémon learn their 'egg' moves too, if you want.</speech>
            <speech>But, my help comes at a price. I want an Egg Move Voucher every time you want a Pokémon to learn an egg move.</speech>
            <speech>Man's gotta do something to fulfill his desires, you know.</speech>
            <speech>Come back to me when you've got two Egg Move Voucher, and I'll help your Pokémon learn egg moves.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ooh, so you have a Egg Move Voucher. Say, you want one of your Pokémon to learn an 'egg move'?</speech>
        </speeches>
        <speeches id="3">
            <speech>Alrighty, no worries. Come back whenever you need my help.</speech>
        </speeches>
    </conversation>
</npcs>
