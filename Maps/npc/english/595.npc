<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey! You! Tell us where Master Cyrus went.</speech>
            <speech>Where were you after you disappeared at the Spear Pillar?</speech>
            <speech>Huh? The Distortion World!? Where Giratina was?</speech>
            <speech>You're not making any sense! Don't play that card with me!</speech>
            <speech>Fine! You don't want to talk? I'll bash you and make you talk!</speech>
        </speeches>
        <speeches id="2">
            <speech>What's with you?! Do you have a vendetta against me?!</speech>
            <speech>My Pokémon let me down again! How am I supposed to get information about our missing Master Cyrus?
            </speech>
            <speech>OK! That's it for me! I'm going to look for Master Cyrus.</speech>
            <speech>The Distortion World, was it called? I should go there, right? I'm quits with Team Galactic.
            </speech>
            <speech>Jupiter, you can deal with it!</speech>
            <speech>There you have it. We're going back to being ordinary girls. You can mop up whichever way you
                want.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>What's with you?! Do you have a vendetta against me?!</speech>
            <speech>My Pokémon let me down again! How am I supposed to get information about our missing Master Cyrus?
            </speech>
            <speech>OK! That's it for me! I'm going to look for Master Cyrus.</speech>
            <speech>The Distortion World, was it called? I should go there, right? I'm quits with Team Galactic.
            </speech>
            <speech>Jupiter, you can deal with it!</speech>
            <speech>There you have it. We're going back to being ordinary girls. You can mop up whichever way you
                want.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>... What a waste of time ...</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>


    <conversation id="2">
        <speeches id="1">
            <speech>...Mars. You really are weak. Pitifully so. You make me embarrassed to be a Commander like you.
            </speech>
            <speech>Fine. I'll go up next. I want to know what became of Master Cyrus, too.</speech>
        </speeches>
        <speeches id="2">
            <speech>Humph! Quit flaunting your toughness! It's not cute in the least!</speech>
            <speech>...How dare you!</speech>
            <speech>Following Mars's lead at anything irks me, but... I'm quitting to do my own thing, too.</speech>
            <speech>Team Galactic's just no fun without Master Cyrus around. So, old-timer, go ahead.</speech>
            <speech>Do what you want with Team Galactic.</speech>
        </speeches>
        <speeches id="3">
            <speech>Humph! Quit flaunting your toughness! It's not cute in the least!</speech>
            <speech>...How dare you!</speech>
            <speech>Following Mars's lead at anything irks me, but... I'm quitting to do my own thing, too.</speech>
            <speech>Team Galactic's just no fun without Master Cyrus around. So, old-timer, go ahead.</speech>
            <speech>Do what you want with Team Galactic.</speech>
        </speeches>
        <speeches id="4">
            <speech>... What a waste of time ...</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Sigh... So impressionable and impetuous. What do they see in Cyrus? Immature, overthinking
                buffoon.
            </speech>
            <speech>He goes through the trouble of assembling Team Galactic for what? Ultimately, he destroys his own
                creation for his ludicrous vision.
            </speech>
            <speech>It's no thanks to him that I have to struggle with the pieces.</speech>
            <speech>...But that's fine. The young can live with their dreams. I prefer to remain firmly in reality.
            </speech>
            <speech>And for that, money is paramount. You there, child. I'm not dealing with you.</speech>
            <speech>After all, the other Galactic members who did all suffered consequences.</speech>
            <speech>We'll be off to collect the Magma Stone. It's all for the money!"</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Gravler" shouldSleep="" speed="1" sprite="75" type="pokemon" x="8" y="19">
        <path>UPx3, DOWNx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Onix" speed="1" sprite="95" type="pokemon" x="29" y="7">
        <path>DOWNx4, UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>*Onix ignores you*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Bill" randomRotation="false" sprite="20" x="22" y="5">
        <speech>I wonder what I can find if I keep going deeper in the caves!</speech>
    </npc>
</npcs>
