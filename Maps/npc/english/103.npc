<npcs>
    <npc id="1" x="3" y="5" triggerX="3" triggerY="7" direction="DOWN" name="Receptionist Stella" sprite="19">
        <speech>Good morning! Professor Blaze is inside his lab.</speech>
    </npc>

    <conversation id="1">
        <speeches id="1">
            <speech>Hey, are you $PLAYER_NAME?</speech>
            <speech>Yes, Mai told me about you. She got a call from your mom who asked her to inform me about you.</speech>
            <speech>I am Professor Blaze, you can call me Blaze.</speech>
            <speech>Yes, Rowan told me about the Suicine situation.</speech>
            <speech>I am not sure what exactly made Suicune go to Jvaloh, but I have a theory.</speech>
            <speech>There is a clan of evil people terrorizing Jvaloh.</speech>
            <speech>I have heard from others that they are after Jvaloh's protectors.</speech>
            <speech>I think that might have led to the entire Suicune situation, but I am just guessing.</speech>
            <speech>You will have to investigate yourself. Would you like to offer your help?</speech>
            <speech>Great! Can you also help me fill in Jvaloh's Pokédex?</speech>
            <speech>Lovely!!</speech>
        </speeches>
        <speeches id="2">
            <speech>Before you start your journey in Jvaloh, you will need a companion for your adventure.</speech>
            <speech>Come in my room, and I will let you pick one for your journey.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Oh hey young trainer!</speech>
            <speech>What brings you to Jvaloh?</speech>
            <speech>Oh... That is very ambitious and unique. I have not heard any other trainer saying that before.</speech>
            <speech>Here, keep these 10 Storage Boxes, they will help you to expand your storage slots.</speech>
            <speech>You are going to need all those additional slots, Jvaloh is full of new and unique Pokémon you would have never seen before.</speech>
        </speeches>
        <speeches id="2">
            <speech>Good luck with your journey!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>That's not a problem. Come back later if you change your mind.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hello young trainer.</speech>
            <speech>I see you have recently arrived to Jvaloh.</speech>
            <speech>I understand that the bans in Jvaloh are really frustrating especially not being able to use Pokémon from previous region.</speech>
            <speech>I can help you with it though. I can convert upto 5 of your Pokémon to be Jvaloh native.</speech>
            <speech>That means you can use them freely without worrying about region bans.</speech>
            <speech>You can update any Pokémon which is below the max level cap which is calculated by the formula (Total Badges * 10) + 5</speech>
            <speech>In your case you can update Pokémon upto level $LEVEL.</speech>
            <speech>You currently have $REGION_CHANGE_POKES_LEFT Pokémon you can get updated.</speech>
            <speech>Do you want to do that?</speech>
        </speeches>
        <speeches id="3">
            <speech>Hello young trainer.</speech>
            <speech>I see you have recently arrived to Jvaloh.</speech>
            <speech>I understand that the bans in Jvaloh are really frustrating especially not being able to use Pokémon from previous region.</speech>
            <speech>I can help you with it though. I can convert upto 5 of your Pokémon to be Jvaloh native.</speech>
            <speech>That means you can use them freely without worrying about region bans.</speech>
            <speech>You can update any Pokémon which is below the max level cap which is calculated by the formula (Total Badges * 10) + 5</speech>
            <speech>In your case you can update Pokémon upto level $LEVEL and total of $REGION_CHANGE_POKES_LEFT Pokémon.</speech>
            <speech>Unfortunately you either don't have any eligible Pokémon in your party of you have reached your max limit.</speech>
            <speech>Sorry but I cannot help here any further.</speech>
        </speeches>
        <speeches id="4">
            <speech>There you go. Your companion is now free to roam around with you across Jvaloh and Sinnoh.</speech>
        </speeches>
    </conversation>
</npcs>
