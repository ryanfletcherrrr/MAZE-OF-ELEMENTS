<npcs>
    <conversation id="7">
        <speeches id="1">
            <speech>Oh, Trainer! It's a relief to see a friendly face. I had a bit of a run-in near Shoal Cave... left me in this sorry state.</speech>
            <speech>I'm on the mend, thanks to the folks here. But there's still so much to do, and I'm stuck in here for now.</speech>
            <speech>If you're willing to lend a hand, there might be something you could help with. The situation's a bit... complicated.</speech>
            <speech>It's a bit of a blur, but I'll tell you what I remember. I was on the trail of my stolen Prison Key.</speech>
            <speech>The clues led me to the Shoal Cave Inner Room during high tide. It seemed like I was on the right path.</speech>
            <speech>But then, everything went dark... When I came to, I found myself here, back in the safety of the Pokécenter.</speech>
            <speech>I can't shake the feeling that something or someone was watching me there. It's all still so foggy.</speech>
        </speeches>
        <speeches id="2">
            <speech>Back so soon? I'm touched by your concern. As you can see, I'm still here, making the best of the Pokécenter's hospitality.</speech>
            <speech>Recovery's slow but sure. I've been keeping busy planning my next moves... once I'm back on my feet, that is.</speech>
            <speech>Thanks for checking in on me. Don't worry, I'll be back in action in no time.</speech>
            <speech>There's a lot of work waiting for me out there!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Your findings jogged my memory... There was a sudden, blinding flash of purple or pink, and then nothing. I was out cold.</speech>
            <speech>That flash... it could be key to understanding what happened. It's not much to go on, but it's all we have right now.</speech>
            <speech>I've heard of Grimers in the Fiery Path exhibiting unusual behavior recently. Could there be a connection?</speech>
            <speech>I also remember there was someone after that Ooze in the Shoal Caves, but again I don't remember much...</speech>
            <speech>Perhaps the Grimers have the Prison Key, or know where it is. It's a long shot, but could you check it out?</speech>
        </speeches>
        <speeches id="2">
            <speech>Did you have any luck with the Grimers in Fiery Path? That purple or pink flash I mentioned must be related somehow.</speech>
            <speech>I also remember there was someone after that Ooze in the Shoal Caves, but again I don't remember much...</speech>
            <speech>I can't shake the feeling that we're close to a breakthrough. Any piece of evidence could help crack this case wide open.</speech>
            <speech>Keep an eye out for anything out of the ordinary. We're dealing with something... or someone very cunning.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Yes, low tide, the imposter... I remember it all now!</speech>
            <speech>It's all making sense; the ambush, the disguise, the trickery. How could I have missed it?</speech>
            <speech>I need to confront this directly. I'll head to the Shoal Cave Inner Room at low tide.</speech>
            <speech>There's something crucial I overlooked.</speech>
            <speech>Your assistance has been invaluable. Thanks to you, I'm one step closer to unraveling this mystery.</speech>
            <speech>I must go now, duty calls!</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Leopold" randomRotation="false" sprite="39" x="16" y="4">
        <speech>Arrogance diminishes wisdom.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Sumi" randomRotation="false" sprite="38" x="9" y="5">
        <speech>Truth enlightens the mind, but won't always bring happiness to your heart.</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="4" name="Gunther" randomRotation="false" sprite="5" x="26" y="16">
        <speech>Fear is a disease; hope is its only cure.</speech>
    </npc>
</npcs>
