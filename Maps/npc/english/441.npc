<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>If they expand the sea, there'll be fewer habitats for Pokémon and people!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>If they expand the land, there'll not be enough water for Pokémon and people!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>We don't need water as much as we need space for Pokémon and people to live.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Water was deposited on Earth by ancient Coments and Meteors.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Step away!!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Get out of my blasted way, ye scurvy Team Magma knaves! Or face a keelhauling!</speech>
            <speech>Confound the lot of you! Let me through, you bilge rats!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="" randomRotation="true" sprite="187" x="36" y="47">
        <speech>Mt. Chimney (Up)</speech>
        <speech>Jagged Pass (Down)</speech>
    </npc>
    <!---->
    <conversation id="15">
        <speeches id="1">
            <speech>We of Team Magma are working hard for everyone's sake.</speech>
            <speech>Like, if there's more land, there will be more places to live.</speech>
            <speech>Everyone would be happy!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Hunh? What do you mean I lost!
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Hunh? What do you mean I lost!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Now don't come back.</speech>
        </speeches>
        <speeches id="5">
            <speech>We of Team Magma are working hard for everyone's sake.</speech>
            <speech>Like, if there's more land, there will be more places to live.</speech>
            <speech>Everyone would be happy!</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>Hyahyahya?! It's you! You're the one who tried to interrupt me, Tabitha, at Meteor Falls!</speech>
            <speech>D-d-do you intend to get in my way once more?</speech>
            <speech>Unngh!</speech>
            <speech>You're really... really, really, really, really, really, really...</speech>
            <speech>really, really, really, really, really, really, really, really, really, really... reeeallllyyyy...
                an obnoxious child, aren't you?!
            </speech>
            <speech>Ahh... Ah... I will...crush you. So that you... never get in my way... again.</speech>
        </speeches>
        <speeches id="2">
            <speech>Yet again? Hyuhn!</speech>
            <speech>I knew you would be strong.</speech>
            <speech>What a shame, though! The Meteorite we got from Professor Whoever is already in our Boss's hands!
            </speech>
            <speech>Where's the Boss, you ask? Ah, yes, yes, right this way!</speech>
            <speech>Oh, I do hope that you can be shown Team Magma's true power! Ahya! Ahyahyahyahya!</speech>
        </speeches>
        <speeches id="3">
            <speech>What a shame, though! The Meteorite we got from Professor Whoever is already in our Boss's hands!</speech>
            <speech>Where's the Boss, you ask? Ah, yes, yes, right this way!</speech>
            <speech>Oh, I do hope that you can be shown Team Magma's true power! Ahya! Ahyahyahyahya!</speech>
        </speeches>
        <speeches id="4">
            <speech>Don't try again.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>The power contained in the Meteorite...</speech>
            <speech>If we merge the explosive energy contained within the planet's core with the Meteorite's power...
            </speech>
            <speech>I remember those eyes. And the indomitable will that seems to burn behind them. Ahhh. Now I
                recall.
            </speech>
            <speech>You are the one who defied us at Slateport's Oceanic Museum.</speech>
            <speech>And, your presence here tells me that you have defeated Tabitha.</speech>
            <speech>Yes, I see now that the stirring of interest I felt was not misplaced.</speech>
            <speech>Hmph. You show true promise. Fine. I will attempt to educate you.</speech>
            <speech>Thousands of years ago, there lived a most powerful being that was said to be capable of creating
                new lands on the planet.
            </speech>
            <speech>The power which we in Team Magma seek— This power, which can expand the available landmass, belongs
                to a legendary and super-ancient Pokémon.
            </speech>
            <speech>Though now it slumbers, having lost the source of its power and been trapped in a deep sleep.</speech>
            <speech>So what is it that we must do to awaken this slumbering giant?</speech>
            <speech>Our research has led us here, to Mt. Chimney. Yes, here...to this very Meteorite.</speech>
            <speech>If we create the right conditions, we should find ourselves able to alter this Meteorite's
                qualities.
            </speech>
            <speech>Yes, even into a Mega Stone. Even into a Key Stone.</speech>
            <speech>And here, at Mt. Chimney— Hmph... I should not say too much. That is the end of today's lesson.
            </speech>
            <speech>Now then. I believe it is time we begin. The time for the purge has come.</speech>
            <speech>I do believe that I made myself quite clear when we were last in Slateport.</speech>
            <speech>I warned you that any fool standing in our way would be met without mercy!</speech>
            <speech>I will bury you by my own hand. I hope you appreciate this honor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh! You are...quite capable... I fell behind, but only by an inch...</speech>
            <speech>Oh? So you repulsed the great Maxie in battle. Haha... You never fail to entertain me!</speech>
            <speech>An excellent start! This time, permit me to unleash my full strength!</speech>
            <speech>Once you've tasted my Pokémon's Mega Evolved power, you will say goodbye to your last shred of hope!</speech>
            <speech>Hm? Yes, it's me. ...Oh? Then it is Mt. Pyre. I understand. I will come at once.</speech>
            <speech>I am sorry to cut our battle short, but I'm afraid I must excuse myself.</speech>
            <speech>Such rudeness demands reparation. Take this Meteorite as my apologies.</speech>
            <speech>You may do with it what you like.</speech>
            <speech>And I will not again forget the face of the Trainer who managed to thwart me in battle!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh! You are...quite capable... I fell behind, but only by an inch...</speech>
            <speech>Oh? So you repulsed the great Maxie in battle. Haha... You never fail to entertain me!</speech>
            <speech>An excellent start! This time, permit me to unleash my full strength!</speech>
            <speech>Once you've tasted my Pokémon's Mega Evolved power, you will say goodbye to your last shred of hope!</speech>
            <speech>Hm? Yes, it's me. ...Oh? Then it is Mt. Pyre. I understand. I will come at once.</speech>
            <speech>I am sorry to cut our battle short, but I'm afraid I must excuse myself.</speech>
            <speech>Such rudeness demands reparation. Take this Meteorite as my apologies.</speech>
            <speech>You may do with it what you like.</speech>
            <speech>And I will not again forget the face of the Trainer who managed to thwart me in battle!</speech>
        </speeches>
        <speeches id="4">
            <speech>Don't try again.</speech>
        </speeches>
    </conversation>
    <conversation id="18">
        <speeches id="1">
            <speech>Huh? If it ain't that little scamp!</speech>
            <speech>But blast that Maxie! He just escaped us!</speech>
            <speech>And he just left behind the Meteorite that he's been crazy about finding?</speech>
            <speech>Can't be—! Could he have found out where the real orbs are hidden?!</speech>
            <speech>That sneaky little scientific so-and-so!</speech>
            <speech>I'm always left watching his bony backside run two steps ahead of me!</speech>
        </speeches>
    </conversation>
    <conversation id="22">
        <speeches id="1">
            <speech>Hey, $PLAYER_NAME! It's been a while, hasn't it? I've been training non-stop up here on Mt. Chimney Peak.</speech>
            <speech>The view's amazing, but that's not why I'm here.</speech>
            <speech>I've set my sights on becoming an Elite Four champion, just like you.</speech>
            <speech>But to get there, I need to push my team further, especially Blaziken.</speech>
            <speech>While training, I stumbled upon this incredible item.</speech>
            <speech>It's unlike anything I've ever seen, and Blaziken reacted to it immediately. It's some kind of... mega stone, I think.</speech>
            <speech>But there's a problem. Ever since finding it, Blaziken's been... different, more intense and difficult to calm.</speech>
            <speech>That's where you come in. I need your help.</speech>
            <speech>I remember this old friend near Route 113, a master of calming melodies and flutes.</speech>
            <speech>I'm hoping a special flute could help Blaziken return to normal.</speech>
            <speech>Could you visit him for me? He's known for crafting flutes from Red, Green, and Blue Shards.</speech>
            <speech>For this task, we'll need a Red Flute, made specifically from Torchic claws.</speech>
            <speech>Catching high IV Torchics from the Safari and trading them at his shop should do the trick.</speech>
            <speech>Once you have the flute, come back here. We'll use it to reach Blaziken and, hopefully, help him control this new power.</speech>
            <speech>Are you in?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hey, $PLAYER_NAME! How's the quest for the Red Flute going? Have you managed to catch enough high IV Torchics from the Safari for it?</speech>
            <speech>My friend near Route 113 is the best when it comes to crafting those special flutes.</speech>
            <speech>I'm sure he can forge the perfect Red Flute from the Torchic claws.</speech>
            <speech>Blaziken and I are counting on you. This flute is the key to calming Blaziken down and helping him master the power of the mega stone.</speech>
            <speech>Don't worry, I know it's a big ask. But I believe in you, $PLAYER_NAME.</speech>
            <speech>We're in this together, right? Let me know as soon as you have the flute. Time is of the essence!</speech>
        </speeches>
    </conversation>
    <conversation id="23">
        <speeches id="1">
            <speech>**The Red Flute's melody struggles to pierce the chaos as Mega Blaziken's untamed fire roars against the calming tune.**</speech>
            <speech>**Wild flames dance around, reflecting a creature lost to its own power. Can the melody reach the heart of the tempest?**</speech>
            <speech>**Mega Blaziken's cries, sharp and relentless, cut through the air, challenging the very essence of your resolve.**</speech>
        </speeches>
        <speeches id="2">
            <speech>**Gradually, the chaotic flames simmer down, a testament to your unwavering spirit and the Red Flute's ancient melody.**</speech>
            <speech>**'You have calmed the storm within me, Trainer. Your strength... it resonates even through my frenzy,' the silence seems to whisper.**</speech>
            <speech>**Acknowledging your might, Mega Blaziken steps back, its wild energy now a controlled blaze, retreating with dignity into the volcano's embrace.**</speech>
        </speeches>
        <speeches id="3">
            <speech>**Your hesitation stokes Mega Blaziken's fury further. 'The battle is lost to those who falter,' the inferno around you bellows.**</speech>
            <speech>**'Return only when your spirit burns as fiercely as mine. Until then, we are but shadows to one another,' the heat crackles.**</speech>
        </speeches>
        <speeches id="4">
            <speech>**Mega Blaziken's fiery laughter mocks your departure. 'Does the blaze scare you, Trainer?' it seems to taunt amidst the flames.**</speech>
            <speech>**'Seek strength within the fire's heart. Only then, dare to challenge me again,' the embers hiss as you step away.**</speech>
        </speeches>
        <speeches id="5">
            <speech>**Mega Blaziken's presence dominates the area, its control lost to the wild flames engulfing it.**</speech>
            <speech>**The cries it emits are a mix of power and desperation, a call for a worthy opponent or a savior.</speech>
            <speech>**Without the Red Flute, any attempt to communicate or calm it seems futile.**</speech>
        </speeches>
    </conversation>
    <conversation id="24">
        <speeches id="1">
            <speech>It looks like Blaziken is still restless. We haven't managed to calm it down yet. But I haven't lost hope, $PLAYER_NAME.</speech>
            <speech>Perhaps we need to try again, or maybe there's another way to reach Blaziken. Let's not give up just yet.</speech>
        </speeches>
        <speeches id="2">
            <speech>You did it! The Red Flute... it actually worked! Blaziken is calming down. I can't believe it, $PLAYER_NAME!</speech>
            <speech>This means so much to me. Thank you. With Blaziken calmed, I feel like we can overcome anything together.</speech>
            <speech>Would you come to visit me in Lilycove Supermarket for a battle? It would mean a lot to have you there.</speech>
        </speeches>
        <speeches id="3">
            <speech>You won't? I see... Maybe I'm not ready yet. I'll keep training until I'm strong enough to earn your visit.</speech>
            <speech>Thank you, $PLAYER_NAME. For everything. You've helped me more than you know. I'll be stronger next time we meet.</speech>
            <speech>Till then, I will keep training here!</speech>
        </speeches>
        <speeches id="4">
            <speech>Really? That's amazing! I'll be waiting for you in Lilycove Supermarket, then. It's a date!</speech>
            <speech>Thank you, $PLAYER_NAME, not just for helping Blaziken, but for giving me something to look forward to. See you there!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="DOWN" id="2" name="Slugma" shouldSleep="" speed="1" sprite="218" type="pokemon" x="36" y="58">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Slugma" shouldSleep="" speed="1" sprite="218" type="pokemon" x="36" y="2">
        <path>DOWNx7,UPx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Slugma" shouldSleep="" speed="1" sprite="218" type="pokemon" x="34" y="12">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Magcargo" shouldSleep="" speed="1" sprite="219" type="pokemon" x="22" y="12">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Magcargo" shouldSleep="" speed="1" sprite="219" type="pokemon" x="28" y="12">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="49" y="31">
        <path>UPx6,DOWNx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="4" y="23">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="11" y="37">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="22" y="43">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Koffing" shouldSleep="" speed="1" sprite="109" type="pokemon" x="45" y="42">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Koffing" shouldSleep="" speed="1" sprite="109" type="pokemon" x="48" y="55">
        <path>UPx6,DOWNx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="19" y="25">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Skarmory" speed="1" sprite="227" type="pokemon" x="13" y="0">
        <path>DOWNx4,LEFTx10,UPx4,RIGHTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Machoke" shouldSleep="" speed="1" sprite="67" type="pokemon" x="44" y="16">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4">Machoke!</onCollisionSpeech>
        <speech>Machoke!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Machamp" shouldSleep="" speed="1" sprite="68" type="pokemon" x="52" y="13">
        <path>UPx6,RIGHTx4,LEFTx4,DOWNx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Koffing" speed="1" sprite="109" type="pokemon" x="32" y="43">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Koffing!</onCollisionSpeech>
        <speech>Koffing!</speech>
    </movingNpc>
</npcs>
