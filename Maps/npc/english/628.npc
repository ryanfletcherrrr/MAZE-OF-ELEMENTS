<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Welcome, brave challenger, to the heart of the forest. The trees speak of your arrival.</speech>
            <speech>In this realm of nature, only those in harmony with the wild can prevail. Are you prepared to face the trials of the forest?</speech>
            <speech>Brace yourself for a battle as untamed and relentless as the wilderness.</speech>
            <speech>Choose your level of difficulty. How deep into the forest are you willing to venture?</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>Remarkable! You have conquered the wild. Like a true guardian of the forest, you have shown resilience and strength.</speech>
            <speech>But remember, nature is ever-changing. Next time, the forest might not be so forgiving.</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>Leaving already? Even the strongest must sometimes retreat to grow stronger. The forest will always be here, waiting.</speech>
            <speech>Return when you are ready to face the untamed wild once more. Perhaps after $DURATION?</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>As I suspected, the forest's challenges are too great for you right now. But do not lose heart.</speech>
            <speech>Strengthen your bond with nature and return when you are ready to embrace the wild.</speech>
        </speeches>
        <speeches id="5">
            <!-- Generic Speech -->
            <speech>The forest is a place of wonder and danger, just like the challenges that await you.</speech>
            <speech>Whenever you are ready, come and test your strength against the wilderness.</speech>
            <speech>I will always be here, waiting for a worthy opponent, perhaps after $DURATION.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>*Pika Pikaaaaaaaaaaaaaa!!*</speech>
            <speech>*AND... THE PIKACHU RUNS AWAY AGAIN......*</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>You've made it this far, but your journey ends here. The Rangers' mission is unstoppable!</speech>
            <speech>With Pikachu's Summer Form, we will awaken Kartana and ensure the island's ultimate protection!</speech>
        </speeches>
        <speeches id="2">
            <speech>How could you defeat me? Is our vision of harnessing Kartana's power misguided?</speech>
            <speech>Pikachu was meant to be our key... Perhaps we underestimated your tenacity.</speech>
        </speeches>
        <speeches id="3">
            <speech>Back for more? You fail to understand the gravity of our mission. You won't succeed!</speech>
            <speech>Only those who truly understand power can control Kartana.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're still not ready to face the true power of the Rangers. Come back when you've grown stronger.</speech>
            <speech>The challenges of this island are relentless, and so are we. Train harder if you wish to stand a chance against us!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>You've defeated my comrades, but you won't get past me. The Rangers' mission will prevail!</speech>
            <speech>With Pikachu's power, we'll awaken Kartana and protect this island from any threat!</speech>
        </speeches>
        <speeches id="2">
            <speech>This can't be! Defeated by you? Is our plan to awaken Kartana flawed?</speech>
            <speech>Pikachu was our beacon of hope... Maybe we misjudged your determination.</speech>
        </speeches>
        <speeches id="3">
            <speech>Here to challenge me again? You still don't comprehend the significance of our mission. You will fail!</speech>
            <speech>Only the truly deserving can command the might of Kartana.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're not ready to face the full strength of the Rangers. Return when you've gained more power.</speech>
            <speech>This island tests all who dare face it, and so do we. You need to train more if you hope to defeat us!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Ah, so you've made it past my rangers. Impressive.</speech>
            <speech>I am Sylvaris, the guardian of this island and its secrets.</speech>
            <speech>We plan to harness Pikachu's Summer Form to awaken Kartana.</speech>
            <speech>Kartana's power will ensure the protection and dominance of this island.</speech>
            <speech>Only those with true strength can face what lies ahead.</speech>
            <speech>If you can defeat me, I will release Pikachu Summer.</speech>
            <speech>Are you prepared to prove your worth in battle?</speech>
            <speech>Let's see if you can handle this challenge!</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>Remarkable! You've shown true strength and resilience.</speech>
            <speech>Few have managed to impress me as you have today.</speech>
            <speech>As promised, Pikachu Summer is now free.</speech>
            <speech>But remember, nature is ever-changing.</speech>
            <speech>The challenges will only grow harder from here.</speech>
        </speeches>
        <speeches id="3">
            <!-- Defeated Speech -->
            <speech>Hah... You fought well, but it's not enough.</speech>
            <speech>Even in defeat, there's much to learn.</speech>
            <speech>Strengthen your bond with your Pokémon and return.</speech>
            <speech>The island will be waiting for your next attempt.</speech>
        </speeches>
        <speeches id="4">
            <!-- After Battle Speech -->
            <speech>You've proven yourself, but the mission continues.</speech>
            <speech>Pikachu's power is still within our reach.</speech>
            <speech>Prepare yourself for the next challenge that awaits.</speech>
        </speeches>
        <speeches id="5">
            <speech>In order to challenge me, you need to prove your strength by defeating my five rangers.</speech>
            <speech>Don't come to me before you have done that!</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Welcome, trainer. I am an Aroma Lady, a guardian of nature's mysteries.</speech>
            <speech>In the Valley of Blossoms, we have discovered a way to summon alternate-colored Pokémon.</speech>
            <speech>These rare beauties, known as "shiny Pokémon," are a testament to the harmony between trainer and nature.</speech>
            <speech>I can summon a shiny Cutiefly, a symbol of delicate beauty.</speech>
            <speech>If you wish to witness this wonder, bring me 3 Torterra in their Summer Forms.</speech>
            <speech>Each at least Level 50, and I shall perform the summoning.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, I see you have brought the 3 Torterra Summer Forms as requested. Are you ready to see the magic unfold?</speech>
            <speech>Do you want to give away the 3 Summer Torterra for Shiny Cutiefly?</speech>
        </speeches>
        <speeches id="3">
            <speech>That's a pity. The beauty of nature's magic will have to wait for another time.</speech>
        </speeches>
        <speeches id="4">
            <speech>Very well. Let me show you the harmony of nature - *Whisper of the blossoms, reveal your hidden beauty!*</speech>
        </speeches>
        <speeches id="5">
            <speech>And there it is, a 'shiny' Cutiefly! May it remind you of the delicate balance of nature. Take great care of it!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Your Pokémon look tired. Would you like me to heal them?</speech>
        </speeches>
        <speeches id="2">
            <speech>There you go, all healthy and happy!</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww, I'm sure they would have liked to rest.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Oranguru" shouldSleep="" speed="1" sprite="765" type="pokemon" x="2" y="21">
        <path>DOWNx2,RIGHTx1,UPx2,LEFTx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Poor Soul" randomRotation="true" sprite="2" x="15" y="10"/>
    <npc direction="DOWN" hidden="false" id="3" name="Marty" randomRotation="true" sprite="48" x="18" y="9">
        <speech>Oh, you poor soul... I told you not to venture too deep into the woods...</speech>
        <speech>Did you listen? Of course not.</speech>
        <speech>Now, how are we going to get you out of there?</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="" randomRotation="false" sprite="162" x="19" y="39">
        <speech>Hey Trainers! As you venture out to catch Pokémon this summer, remember to stay hydrated.</speech>
        <speech>Keep plenty of water with you, take breaks in the shade, and protect yourself with sunscreen.</speech>
        <speech>Let's keep our health bars full while we enjoy the hunt!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="" randomRotation="false" sprite="162" x="20" y="39">
        <speech>Hey Trainers! As you venture out to catch Pokémon this summer, remember to stay hydrated.</speech>
        <speech>Keep plenty of water with you, take breaks in the shade, and protect yourself with sunscreen.</speech>
        <speech>Let's keep our health bars full while we enjoy the hunt!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Seviper" shouldSleep="" speed="1" sprite="336" type="pokemon" x="19" y="33">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Isssssssss!</onCollisionSpeech>
        <speech>Isssssssss!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Jean" randomRotation="false" sprite="26" x="22" y="40">
        <speech>Finally, a sign that gives useful information!</speech>
    </npc>
    <movingNpc direction="DOWN" id="8" name="Venipede" shouldSleep="" speed="1" sprite="543" type="pokemon" x="43" y="43">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Weedle" shouldSleep="" speed="1" sprite="13" type="pokemon" x="43" y="35">
        <path>UPx1,LEFTx1,DOWNx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Weedle!</onCollisionSpeech>
        <speech>Weedle!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Hoothoot" shouldSleep="" speed="1" sprite="163" type="pokemon" x="19" y="26">
        <path>RIGHTx1,DOWNx1,RIGHTx2,LEFTx2,UPx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Hoothoot!</onCollisionSpeech>
        <speech>Hoothoot!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Psyduck" shouldSleep="" speed="1" sprite="54" type="pokemon" x="41" y="14">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Psy-ya-yaille!</onCollisionSpeech>
        <speech>Psy-ya-yaille!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Surskit" speed="1" sprite="283" type="pokemon" x="34" y="6">
        <path>LEFTx3,DOWNx1,LEFTx3,RIGHTx3,UPx1,RIGHTx3</path>
        <onCollisionSpeech gap="4">Surskit!</onCollisionSpeech>
        <speech>Surskit!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Gabriel" randomRotation="true" sprite="21" x="32" y="12">
        <speech>Nothing more relaxing than dipping in a pond to cool down. Perfect way to beat the summer heat!</speech>
        <speech>Come join me, the water is perfect!</speech>
    </npc>
    <movingNpc direction="DOWN" id="14" name="Noctowl" speed="1" sprite="164" type="pokemon" x="4" y="5">
        <path>UPx3,LEFTx1,DOWNx3,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Pansage" shouldSleep="" speed="1" sprite="511" type="pokemon" x="14" y="16">
        <path>LEFTx3,DOWNx3,UPx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Pansage!</onCollisionSpeech>
        <speech>Pansage!</speech>
    </movingNpc>
        
    <movingNpc direction="DOWN" id="17" name="Wormadam" shouldSleep="" speed="1" sprite="413" type="pokemon" x="13" y="46">
        <path>DOWNx1,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Aipom" shouldSleep="" speed="1" sprite="190" type="pokemon" x="30" y="46">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Bellsprout" shouldSleep="" speed="1" sprite="69" type="pokemon" x="34" y="26">
        <path>RIGHTx4,DOWNx1,UPx1,LEFTx4</path>
        <onCollisionSpeech gap="4">Sprout!</onCollisionSpeech>
        <speech>Sprout!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Pikipek" shouldSleep="" speed="1" sprite="731" type="pokemon" x="41" y="19">
        <path>DOWNx1,RIGHTx1,LEFTx1,UPx1</path>
        <onCollisionSpeech gap="4">Pikipiki!</onCollisionSpeech>
        <speech>Pikipiki!</speech>
    </movingNpc>
</npcs>
