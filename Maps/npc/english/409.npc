<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ohhh, what am I to do?</speech>
            <speech>We were on our walk, Peeko and I, when we were jumped by an odd thug...</speech>
            <speech>The scoundrel made off with my darling Peeko! Wrrrooooooaaaar! Peeko!</speech>
        </speeches>
        <speeches id="2">
            <speech>Peeko! My darling Peeko!</speech>
            <speech>Can you please find it for me young trainer?</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Ohhh, what am I to do?</speech>
            <speech>We were on our walk, Peeko and I, when we were jumped by an odd thug... The scoundrel made off with my darling Peeko! Wrrrooooooaaaar! Peeko!</speech>
        </speeches>
        <speeches id="2">
            <speech>Peeko! Am I glad to see you're safe! Peeko owes her life to you! </speech>
            <speech>Can I have her back?</speech>
        </speeches>
        <speeches id="3">
            <speech>What? I need her...</speech>
        </speeches>
        <speeches id="4">
            <speech>They call me Mr. Briney. And, you are? Ah, so you are $PLAYER_NAME!</speech>
            <speech>I sincerely thank you! Now, if there's anything that troubles you, don't hesitate to tell me!</speech>
            <speech>You can usually find me in my cottage by the sea near Petalburg Woods.</speech>
            <speech>Come, Peeko, we should make our way home.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Haw haw haw... I'll show you how hawesome my Pokémon are!</speech>
        </speeches>
        <speeches id="2">
            <speech>Could it be... How... My Pokémon and I are the strongest, though...</speech>
        </speeches>
        <speeches id="3">
            <speech>Could it be... How... My Pokémon and I are the strongest, though...</speech>
        </speeches>
        <speeches id="4">
            <speech>What do you think?! Hawesome, huh? My Pokémon and I are the strongest!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>No need to waste time saying hello. Bring it on whenever you're ready!</speech>
        </speeches>
        <speeches id="2">
            <speech>I won't lose next time! Let's battle again sometime!</speech>
        </speeches>
        <speeches id="3">
            <speech>I won't lose next time! Let's battle again sometime!</speech>
        </speeches>
        <speeches id="4">
            <speech>What a match! I'm quite satisfied with the result.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Close my eyes... Sharpen my senses... I have to trust my instincts...</speech>
        </speeches>
        <speeches id="2">
            <speech>My judgment wasn't off, though...</speech>
        </speeches>
        <speeches id="3">
            <speech>My judgment wasn't off, though...</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm glad I trusted my instincts...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>My middle-age spread has given me as much gravitas as the mountains I hike!</speech>
        </speeches>
        <speeches id="2">
            <speech>At least I cannot lose when it comes to BMI!</speech>
        </speeches>
        <speeches id="3">
            <speech>At least I cannot lose when it comes to BMI!</speech>
        </speeches>
        <speeches id="4">
            <speech>Bwahaha! You'll win, too, if you just up your calorie intake a bit!</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>I came here to goof off. I don't want to cram for the big test...</speech>
        </speeches>
        <speeches id="2">
            <speech>No! I don't want to go home! I don't want to have to study!</speech>
        </speeches>
        <speeches id="3">
            <speech>No! I don't want to go home! I don't want to have to study!</speech>
        </speeches>
        <speeches id="4">
            <speech>I can't lose now... I don't want to study anymore!</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>I'm prepared to protect nature by any means necessary!</speech>
        </speeches>
        <speeches id="2">
            <speech>Are you listening? Remember this... Never underestimate the power of nature...</speech>
        </speeches>
        <speeches id="3">
            <speech>Are you listening? Remember this... Never underestimate the power of nature...</speech>
        </speeches>
        <speeches id="4">
            <speech>Everything has its origin in nature! Everyone should revere it!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Nincada" shouldSleep="" speed="1" sprite="290" type="pokemon" x="37" y="15">
        <path>RIGHTx3,DOWNx2,LEFTx3,UPx2</path>
        <onCollisionSpeech gap="4">cadacada!</onCollisionSpeech>
        <speech>Nincada is trying to feed on roots, and you are in its way.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Joltik" shouldSleep="" speed="1" sprite="595" type="pokemon" x="12" y="6">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">tiktiktik</onCollisionSpeech>
        <speech>Oh a joltik! That's a rare sight.</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="3" name="Alexander" randomRotation="false" sprite="71" x="22" y="13">
        <speech>Hahaha!!</speech>
        <speech>I wish I could read that sign.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Swellow" shouldSleep="" speed="1" sprite="277" type="pokemon" x="35" y="8">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Swellolololow</onCollisionSpeech>
        <speech>LOWWW!</speech>
    </movingNpc>
    <conversation id="20">
        <speeches id="1">
            <speech>Bax! Baxca! Baxcalibur!</speech>
        </speeches>
        <speeches id="2">
            <speech>Bax? Baxca-li!</speech>
        </speeches>
        <speeches id="3">
            <speech>Baxca? Bax, Bax!</speech>
        </speeches>
        <speeches id="4">
            <speech>Baxcalibur! Bax, Baxca!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="5" name="Abra" shouldSleep="" speed="1" sprite="63" type="pokemon" x="63" y="4">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Whismur" shouldSleep="" speed="1" sprite="293" type="pokemon" x="83" y="15">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>
