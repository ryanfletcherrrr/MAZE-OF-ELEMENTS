<npcs>
    <npc id="1001" x="25" y="11" direction="DOWN" name="Sailor Silva" sprite="11">
        <speech>I come from a very far town - Sunshire Town. </speech>
        <speech>This city seems quite a good place to spend my vacations with my family.</speech>
    </npc>

    <npc id="1002" x="27" y="31" direction="LEFT" name="Explorer Monteiro" sprite="20">
        <speech>I had no clue how to solve Scorched's Desert mysteries, so I decided to ask my friend Silva to travel with me.</speech>
        <speech>My goal is to play the detective, and I might find anything useful all around the world.</speech>
        <speech>Until I solve all mysteries of my native town...</speech>
    </npc>

    <npc id="1003" x="54" y="20" direction="DOWN" name="Kendrick" sprite="81">
        <speech>My mother doesn't allow me to talk with strangers, I have to go, sorry. Studies always first. </speech>
    </npc>

    <conversation id="3">
        <speeches id="1">
            <speech>My friends inside are just obsessed with Zangoose and Seviper.</speech>
            <speech>I left the house because they want me to pick a side.</speech>
            <speech>I love every Pokémon, so I don't like to pick sides.</speech>
            <speech>If you want to be friends with them make sure you have your mind made up about which side you want to pick.</speech>
            <speech>I am sure they will help you befriend whichever Pokémon you chose.</speech>
        </speeches>
    </conversation>
</npcs>
