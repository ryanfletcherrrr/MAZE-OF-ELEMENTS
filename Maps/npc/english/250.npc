<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}Hah! No entry, punk. Boss's orders—come back when you're stronger!{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}Go away! City belongs to us!{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Abra" speed="1" sprite="63" type="pokemon" x="42" y="18">
        <path>RIGHTx1,UPx1,RIGHTx4,DOWNx1,UPx1,LEFTx4,DOWNx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Abraaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Hitmonchan" speed="1" sprite="107" type="pokemon" x="47" y="5">
        <path>DOWNx2,LEFTx3,RIGHTx3,UPx2</path>
        <onCollisionSpeech gap="4">Chhhhaaaan!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="3" name="Mary" randomRotation="false" sprite="50" x="4" y="21">
        <speech>You caught me? Or maybe, I let you find me..</speech>
        <speech>Since you're clever enough to track me down, Here's a little tip: try using Dark or Ghost-types against Sabrina.</speech>
        <speech>Her Psychic Pokémon won't stand a chance!</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Eric" speed="1" sprite="101" type="npc" x="30" y="26">
        <path>DOWNx1,LEFTx4,RIGHTx4,UPx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Saffron City is usually the perfect place to take a break and recharge.</speech>
        <speech>There's a Pokémon Fan Club here that you'll have to check out yourself, It's quite the lively spot!</speech>
        <speech>Sabrina's Gym is just around the corner, and nearby is the Dojo for training.</speech>
        <speech>Not to mention Silph Co., which people are very proud of here.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Meowth" speed="1" sprite="52" type="pokemon" x="48" y="25">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Meooowth!</onCollisionSpeech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="6" name="Madeline" randomRotation="true" sprite="60" x="16" y="11">
        <speech>They say this train station can take you to another region!</speech>
        <speech>I've been waiting here for quite a while now, hoping to catch that mysterious train..</speech>
    </npc>
    <movingNpc direction="LEFT" id="7" name="Blaire" speed="1" sprite="41" type="npc" x="17" y="48">
        <path>LEFTx5,UPx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Alakazam is my favorite Pokémon.</speech>
        <speech>Can you imagine if it could Mega Evolve?</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="8" name="Maya" randomRotation="true" sprite="55" x="21" y="44">
        <speech>Oh, you know that item Expert Belt? It makes your super-effective moves hit harder.</speech>
        <speech>Perfect for giving your Pokémon that extra edge in battle!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="9" name="Arthur" randomRotation="false" sprite="39" x="40" y="22">
        <speech>A lot of trainers pass through Saffron City on their way to other places.</speech>
        <speech>If you're lost, just remember this..</speech>
        <speech>The north gate leads to Cerulean City, the east gate to Lavender Town, the south gate to Vermilion City, and the west gate to Celadon City.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="10" name="Meowth" speed="1" sprite="52" type="pokemon" x="10" y="18">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Meoowth!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="11" name="Starmie" speed="1" sprite="121" type="pokemon" x="44" y="48">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Staar!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="12" name="Rabbit" speed="1" sprite="5" type="npc" x="12" y="36">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>I'm late, I'm late, for a very important date!</speech>
    </movingNpc>
    <conversation id="7">
        <speeches id="1">
            <speech>Aloha! I'm Akamu, a psychic researcher from the {COLOR=CYAN}Alola region{ENDCOLOR} studying mental evolution.</speech>
            <speech>In Alola, our Raichu are incredible - they're {COLOR=PURPLE}Electric/Psychic{ENDCOLOR} types that can surf on their tails!</speech>
            <speech>The unique electromagnetic fields in Alola caused Raichu to develop psychic powers over generations.</speech>
            <speech>Their enhanced psychic abilities allow them to levitate and surf through the air on their electrified tails!</speech>
            <speech>If you have a {COLOR=GREEN}Kanto Raichu{ENDCOLOR} that you caught yourself, I'd love to trade you an {COLOR=CYAN}Alolan Raichu{ENDCOLOR}!</speech>
            <speech>I'm collecting specimens to study how electromagnetic fields affect psychic development in Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>Excellent! You have a {COLOR=GREEN}Kanto Raichu{ENDCOLOR} that you caught yourself!</speech>
            <speech>Would you like to trade your {COLOR=GREEN}Kanto Raichu{ENDCOLOR} for my {COLOR=CYAN}Alolan Raichu{ENDCOLOR}?</speech>
            <speech>The Alolan ones can actually {COLOR=PURPLE}surf through the air{ENDCOLOR} using psychic powers!</speech>
        </speeches>
        <speeches id="3">
            <speech>No problem! Raichu are such loyal companions, I understand the hesitation.</speech>
            <speech>I'll be here studying electromagnetic fields whenever you're ready!</speech>
        </speeches>
        <speeches id="4">
            <speech>{COLOR=GOLD}Fantastic!{ENDCOLOR} Another specimen for my psychic evolution research!</speech>
            <speech>Let me take your {COLOR=GREEN}Kanto Raichu{ENDCOLOR} and give you this amazing {COLOR=CYAN}Alolan Raichu{ENDCOLOR}.</speech>
            <speech>This Alolan Raichu has developed {COLOR=PURPLE}psychic abilities{ENDCOLOR} from Alola's unique electromagnetic environment!</speech>
            <speech>You'll be amazed watching it surf through the air on its electrified tail!</speech>
            <speech>I'm studying how electromagnetic fields trigger psychic evolution, so if you find more {COLOR=GREEN}Kanto Raichu{ENDCOLOR}, please bring them!</speech>
            <speech>Each trade helps my {COLOR=BLUE}psychic research{ENDCOLOR} and gives you another incredible {COLOR=CYAN}Alolan Raichu{ENDCOLOR}!</speech>
        </speeches>
    </conversation>
</npcs>
