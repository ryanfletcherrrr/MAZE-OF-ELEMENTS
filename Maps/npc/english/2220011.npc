<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Only the best trainers push beyond their limits. Let's see if you have what it takes to stand at the top!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph...You're stronger than I expected.  I'll remember this.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph...You're stronger than I expected.  I'll remember this.</speech>
        </speeches>
        <speeches id="4">
            <speech>Just as expected. Strength, strategy, and control..without all three, victory is out of reach.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Speed, endurance, and adaptability..three keys to success in a race..and in battle! Let's see if you can keep up!</speech>
        </speeches>
        <speeches id="2">
            <speech>Guess I ran out of stamina..but next time, I'll be ready to go the distance!</speech>
        </speeches>
        <speeches id="3">
            <speech>Guess I ran out of stamina..but next time, I'll be ready to go the distance!</speech>
        </speeches>
        <speeches id="4">
            <speech>That was just a warm-up! In a real race, I'd leave you in the dust!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>This old mansion may be falling apart, but my flames are stronger than ever! Let's turn up the heat!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa...Guess my fire wasn't hot enough to handle you.</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa...Guess my fire wasn't hot enough to handle you.</speech>
        </speeches>
        <speeches id="4">
            <speech>Burnt to a crisp! You should've known better than to challenge a fire master!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="" randomRotation="false" sprite="162" x="40" y="9">
        <speech>You read a note that said:</speech>
        <speech>"Dusk replaced by morning's light..."</speech>
    </npc>
    <movingNpc direction="LEFT" id="2" name="Ariados" speed="1" sprite="168" type="pokemon" x="30" y="6">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Skrrrrreeeeek!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wynaut" speed="1" sprite="360" type="pokemon" x="1" y="47">
        <path>DOWNx1,RIGHTx3,LEFTx3,UPx1</path>
        <onCollisionSpeech gap="4">Wyyyynaut!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="4" name="Justin" randomRotation="false" sprite="95" x="31" y="49">
        <speech>There are so many rare Pokémon here.</speech>
        <speech>I'm never leaving! Wynaut?</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Haunter" speed="1" sprite="93" type="pokemon" x="5" y="6">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Haaaunt</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="6" name="Emily" randomRotation="true" sprite="94" x="8" y="6">
        <speech>Why's everyone so freaked out?</speech>
        <speech>There's nothing wrong with a Haunter serving drinks! I personally love the Ariados Float. extra creepy, extra sweet!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="7" name="Cinderella" randomRotation="true" sprite="43" x="37" y="35">
        <speech>They can't order me to stop dreaming.</speech>
    </npc>
</npcs>
