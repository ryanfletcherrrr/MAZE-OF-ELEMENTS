<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>The weeping fills me. My Ghosts sing their pain. Can you silence them?</speech>
        </speeches>
        <speeches id="2">
            <speech>The wails turned on me! You've freed nothing. They cling still.</speech>
        </speeches>
        <speeches id="3">
            <speech>The wails turned on me! You've freed nothing. They cling still.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sorrow bends to me! My shadows weep louder. Hear them now!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>They tug at my bones. My Pokémon mirror their rage. Face their wrath!</speech>
        </speeches>
        <speeches id="2">
            <speech>You snapped their hold! The anger festers. I'll leash it again.</speech>
        </speeches>
        <speeches id="3">
            <speech>You snapped their hold! The anger festers. I'll leash it again.</speech>
        </speeches>
        <speeches id="4">
            <speech>Their fury lifts me! My spirit thrives. They'll haunt you next!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Cold hands guide me. My Ghosts drift in fog. Feel their grip?</speech>
        </speeches>
        <speeches id="2">
            <speech>The mist recoiled! You've stirred her pain. She'll call me back.</speech>
        </speeches>
        <speeches id="3">
            <speech>The mist recoiled! You've stirred her pain. She'll call me back.</speech>
        </speeches>
        <speeches id="4">
            <speech>Her breath empowers me! My chill deepens. The haze watches you!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>...You feel it too, don’t you?</speech>
            <speech>The presence above... it’s not meant to be seen with mortal eyes.</speech>
            <speech>Without the proper vision, all you’ll find up there is fear.</speech>
            <speech>Come back when you can truly see what haunts these halls...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>...You feel it too, don’t you?</speech>
            <speech>The presence above... it’s not meant to be seen with mortal eyes.</speech>
            <speech>Without the proper vision, all you’ll find up there is fear.</speech>
            <speech>Come back when you can truly see what haunts these halls...</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Gastly" speed="1" sprite="92" type="pokemon" x="28" y="11">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Gasssst!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="2" name="Shuppet" speed="1" sprite="353" type="pokemon" x="14" y="29">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Shuuuppeeet!</onCollisionSpeech>
    </movingNpc>
</npcs>
