<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="Slateport Market Guard" randomRotation="false" sprite="126" x="18" y="39">
        <speech>Disrespect the law, and you disrespect me.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Slateport Market guard" randomRotation="false" sprite="126" x="24" y="39">
        <speech>I used to be an adventurer like you. Then I took a Spearow in the knee...</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Slateport Market Guard" randomRotation="false" sprite="126" x="30" y="68">
        <speech>No lollygaggin'.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="4" name="Slateport Market Guard" randomRotation="false" sprite="126" x="17" y="53">
        <speech>Let me guess someone stole your sweetroll?</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="5" name="PP UP seller Lady" randomRotation="false" sprite="38" x="15" y="51">
        <speech>Oh my...</speech>
        <speech>I came here to sell those rare PP UP and someone already bought all my stock!</speech>
        <speech>I can finally retire with this money.</speech>
        <speech>Oh you wanted some? Well that's too bad honey...</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="6" name="Martha" randomRotation="true" sprite="28" x="26" y="58">
        <speech>It is happening now!</speech>
        <speech>Took me months to get the chance to sell my art in this market.</speech>
        <speech>I am so HYPED!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="7" name="Jonathan" randomRotation="true" sprite="20" x="26" y="51">
        <speech>Some people call this junk. Me? I call it a treasure.</speech>
        <speech>...</speech>
        <speech>...</speech>
        <speech>no this is just junk.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="8" name="Abraham" randomRotation="false" sprite="5" x="66" y="62">
        <speech>This lighthouse can guide ships miles away thanks to the power beam of light it produces.</speech>
        <speech>I'm not sure if it's a human construction that emits this light or the power of a Pokémon though...</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="9" name="Tiffany" randomRotation="true" sprite="6" x="14" y="60">
        <speech>Nothing beats shopping with the gentle breeze on the ocean.</speech>
        <speech>The weather is so nice!</speech>
    </npc>
    <movingNpc direction="DOWN" id="10" name="Yelena" shouldSleep="" speed="1" sprite="38" type="npc" x="39" y="44">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">oh im so sorry,you may pass</onCollisionSpeech>
        <speech>Where the water is clean, fruits of bountiful harvest gather.</speech>
        <speech>And where people gather, a market for exchange starts soon.</speech>
        <speech>This is how a town is formed.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="11" name="Marianna" shouldSleep="" speed="1" sprite="19" type="npc" x="14" y="30">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Hoenn boasts an abundance of seafood!</speech>
        <speech>The seaweed you get around Slateport is particularly fresh and full of life.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Julius" randomRotation="true" sprite="11" x="60" y="36">
        <speech>The sea is just so vast...</speech>
        <speech>Could the sea have been made by the tears shed by Pokémon?</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="14" name="Ringo" randomRotation="true" sprite="11" x="53" y="17">
        <speech>On the ocean's vast expanse, we chase the whispering breeze.</speech>
        <speech>Through the waves, our tales advance, 'neath the endless starry seas.</speech>
        <speech>We dance with the tides, with the seagulls we roam,</speech>
        <speech>Every sea chanty, a call to our home.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="15" name="George" randomRotation="true" sprite="11" x="53" y="19">
        <speech>A sailor's life is bold and free, with the horizon as our guide.</speech>
        <speech>Underneath the azure sky, on the ocean we do ride.</speech>
        <speech>Our songs echo in the salty air, as we journey far and wide,</speech>
        <speech>In search of tales, both fair and grand, across the great divide.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="16" name="John" randomRotation="true" sprite="11" x="55" y="17">
        <speech>With sails unfurled, we explore, where the sea meets the sky.</speech>
        <speech>Our hearts brim with lore, under the vast, open sky.</speech>
        <speech>We sing of the shores left behind, and of lands that we'll find,</speech>
        <speech>As we traverse the deep, with our fates intertwined.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="17" name="Paul" randomRotation="true" sprite="11" x="55" y="19">
        <speech>Over the deep blue, where the wild waves play,</speech>
        <speech>Our spirits soar high, we're on our way.</speech>
        <speech>In the heart of the sea, where the mysteries lie,</speech>
        <speech>We sing of the wonders, 'neath the open sky.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="18" name="Petri" randomRotation="true" sprite="26" x="36" y="29">
        <speech>This mart does have some interesting merchandise.</speech>
        <speech>But if you seek some more specific items, there are a few vendors who will trade you their rare merchandise for another type of currency.</speech>
    </npc>
    <movingNpc direction="DOWN" id="20" name="Electrike" shouldSleep="" speed="1" sprite="309" type="pokemon" x="35" y="6">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Eleclec!</onCollisionSpeech>
        <speech>HOOWWL!!!!</speech>
        <speech>Electrike is using Howl.</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="21" name="Rika" randomRotation="false" sprite="17" x="21" y="9">
        <speech>Oh noooo!</speech>
        <speech>The Pokémon contest halls are closed forever?!</speech>
        <speech>I will never get the chance to win wonderful prizes with my Pokémon as a Pokémon Coordinator...</speech>
        <speech>Ok then... better start training for Pokémon league, I guess.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Team Magma's policy is assembling and dispersing at the operation site.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Thank you for the interview Captain Stern.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Whew... That was my first time being filmed for TV. What a nerve-racking experience!.</speech>
            <speech>Oh! It's you again! You're looking well. Glad to see it.</speech>
            <speech>...</speech>
            <speech>{COLOR=GRAY}"We made a huge discovery on our latest expedition to the seafloor."{CLEARCOLOR}</speech>
            <speech>{COLOR=GRAY}"We found an underwater cavern on Route 128—and we think it may be the den of a super-ancient Pokémon long thought to have been extinct."{CLEARCOLOR}</speech>
            <speech>...</speech>
            <speech>Do you hear that voice? It's like someone is using a megaphone... But where is it coming from?</speech>
            <speech>It came from the Harbor! Our submarine!</speech>
            <speech>They took it! I'm sorry, but... Please come with me!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="12" name="Katriina" shouldSleep="" speed="1" sprite="31" type="npc" x="44" y="68">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4">Out of my way!</onCollisionSpeech>
        <speech>I missed the deadline to get a booth at the market...</speech>
        <speech>What am I to do with all these Pokedolls?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Wingull" speed="1" sprite="278" type="pokemon" x="40" y="65">
        <path>RIGHTx11,UPx3,RIGHTx5,UPx16,DOWNx16,LEFTx5,DOWNx3,LEFTx11</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Wingull" speed="1" sprite="278" type="pokemon" x="2" y="61">
        <path>RIGHTx10,DOWNx3,LEFTx10,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Wingull" speed="1" sprite="278" type="pokemon" x="10" y="71">
        <path>UPx12,LEFTx3,DOWNx12,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="25" name="Wingull" speed="1" sprite="278" type="pokemon" x="10" y="38">
        <path>DOWNx13,LEFTx10,UPx13,RIGHTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Plusle" shouldSleep="" speed="1" sprite="311" type="pokemon" x="23" y="14">
        <path>RIGHTx8,LEFTx8</path>
        <onCollisionSpeech gap="4">Plusle!</onCollisionSpeech>
        <speech>Plus!!! Plus plus, LELE!</speech>
    </movingNpc>

    <conversation id="7">
        <speeches id="1">
            <speech>Welcome to the bustling Slateport Market! I'm Ninja Boy Akari.</speech>
            <speech>The day nears its end, and so does my stall.</speech>
            <speech>In the spirit of generosity, I'm giving out Quick Balls for free. Care to grab some before I close up?</speech>
        </speeches>
        <speeches id="2">
            <speech>No interest in the ninja's way, huh? That's alright. The market's full of wonders; maybe you'll find something else that catches your eye.</speech>
        </speeches>
        <speeches id="3">
            <speech>Excellent choice! These Quick Balls are crafted with a ninja's precision. Use them well, and may they aid you swiftly in your captures.</speech>
        </speeches>
        <speeches id="4">
            <speech>Forgive me, but my stock is momentarily depleted. The night replenishes both our supplies and spirit.</speech>
            <speech>Return in $DURATION, and I'll see if I have anything left to give away.</speech>
        </speeches>
        <speeches id="5">
            <speech>Alas, my wares are reserved for the night's embrace.</speech>
            <speech>Come back when darkness falls over Slateport, and you might find I still have some Quick Balls to spare.</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>The {COLOR=CYAN}SS Neo Tidal at Lilycove{ENDCOLOR} was primed and ready to launch hours ago.</speech>
            <speech>Then the turbulence hit — ripped through our equipment like paper, tore half our instruments clean apart.</speech>
            <speech>Listen, I've been working these docks for thirty years. This isn't weather. This isn't natural.</speech>
            <speech>Something up there is {COLOR=RED}alive{ENDCOLOR}, and it doesn't want us sailing east.</speech>
        </speeches>
        <speeches id="2">
            <speech>I can't just stand here while that {COLOR=RED}thing{ENDCOLOR} terrorizes our waters.</speech>
            <speech>My colleagues back in {COLOR=CYAN}Lilycove{ENDCOLOR} — they need to know what we're dealing with here.</speech>
            <speech>I'm heading back to gather the crew. We'll get to the bottom of this mystery, mark my words.</speech>
            <speech>If you see any strange lights or hear anything unusual... {COLOR=YELLOW}stay away from the eastern waters{ENDCOLOR}.</speech>
        </speeches>
    </conversation>

    <conversation id="10">
        <speeches id="1">
            <speech>If {COLOR=PURPLE}Sky Pillar{ENDCOLOR} is stirring again... then we're well past the point of natural explanations.</speech>
            <speech>The ancient tower doesn't react to mere storms.</speech>
            <speech>Go to the summit, {COLOR=GOLD}Champion{ENDCOLOR}.</speech>
            <speech>Face whatever's up there. If anyone can convince the sky to stand down, it's you.</speech>
        </speeches>
    </conversation>
</npcs>
