<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I see that you've declared your loyalty to the Grass Ruler.</speech>
            <speech>The master feeds on Floral Essence which rejuvenates him. It's a quintessential process for him to stay alive.</speech>
            <speech>It would be mighty generous of you to collect 100 of these.</speech>
            <speech>I am sure the Floral Lord will reward you for it, muahahahaha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Will you donate this essence as an offer to the Grass Ruler?</speech>
        </speeches>
        <speeches id="3">
            <speech>Not a very wise decision.</speech>
        </speeches>
        <speeches id="4">
            <speech>Your prayers have been heard, you will be gifted accordingly!</speech>
        </speeches>
        <speeches id="5">
            <speech>Your prayers have been heard, you will be gifted accordingly!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>How is the bond between you and the Grass Ruler's minion?</speech>
            <speech>In order to fully succeed as a Pokémon trainer, nothing is more important than the bond with your Pokémon.</speech>
            <speech>Sometimes things just don't work out between you and your Pokémon.</speech>
            <speech>If that's the case, I will make sure the Grass Ruler will provide you with a fresh Dhelmise.</speech>
            <speech>All you have to do is bring your level 50 Dhelmise to me, and the Grass Ruler will spawn you a newly born minion.</speech>
        </speeches>
        <speeches id="2">
            <speech>Will you cut all ties with Dhelmise in order to start anew with another Dhelmise?</speech>
        </speeches>
        <speeches id="3">
            <speech>I understand, give it another shot.</speech>
        </speeches>
        <speeches id="4">
            <speech>The Grass Ruler has granted your request. I wish you good luck on your further travels.</speech>
        </speeches>
        <speeches id="5">
            <speech>Your prayers have been heard, you will be gifted accordingly!</speech>
        </speeches>
    </conversation>
</npcs>