<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>We'll lift anchor anytime for you! So tell me, my friend, where are we bound?</speech>
        </speeches>
        <speeches id="2">
            <speech>You sure about that? Well, Peeko owes her life to you.</speech>
            <speech>You just go on and tell me anytime you want to set sail. I'll brave any tide for you!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="2" name="Nina" randomRotation="true" sprite="53" x="45" y="10">
        <speech>Little kids can dart around so quickly.</speech>
        <speech>You don't dare take your eyes off them for an instant! It's very taxing.</speech>
        <speech>I guess I should not worry since mine is with its guardian pokemon , but you never know...</speech>
    </npc>
    <movingNpc direction="DOWN" id="3" name="Trapinch" speed="1" sprite="328" type="pokemon" x="59" y="11">
        <path>DOWNx2,RIGHTx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4">Trapin,pinch!</onCollisionSpeech>
        <speech>Trapinch looks focused on its task to create a huge sandcastle.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Aaricia" randomRotation="true" sprite="6" x="66" y="42">
        <speech>What is it?</speech>
        <speech>Can't a girl sunbath in peace?</speech>
        <speech>Get your own island!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Corphish" shouldSleep="" speed="1" sprite="341" type="pokemon" x="50" y="34">
        <path>RIGHTx7,UPx5,RIGHTx5,LEFTx5,DOWNx5,LEFTx7</path>
        <onCollisionSpeech gap="4">Cor, Phish?</onCollisionSpeech>
        <speech>Phish PHISH!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Corphish" shouldSleep="" speed="1" sprite="341" type="pokemon" x="31" y="21">
        <path>DOWNx6,RIGHTx5,DOWNx5,UPx5,LEFTx5,UPx6</path>
        <onCollisionSpeech gap="4">Cor. Phish! Cor. Phish!</onCollisionSpeech>
        <speech>Cor! Phish!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="8" name="Richard" randomRotation="true" sprite="48" x="29" y="5">
        <speech>I'm starting to think it was not my most brilliant idea to bring lunch to the beach when its filled with Wingull....</speech>
    </npc>
    <movingNpc direction="DOWN" id="9" name="Wingull" speed="1" sprite="278" type="pokemon" x="26" y="7">
        <path>RIGHTx5,UPx4,LEFTx5,DOWNx4</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull looks really interested in the food Richard is trying to hide...</speech>
        <speech>so are its friends.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Wingull" speed="1" sprite="278" type="pokemon" x="31" y="7">
        <path>UPx4,LEFTx5,DOWNx4,RIGHTx5</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull looks really interested in the food Richard is trying to hide...</speech>
        <speech>so are its friends.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wingull" speed="1" sprite="278" type="pokemon" x="31" y="3">
        <path>LEFTx5,DOWNx4,RIGHTx5,UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Wingull looks really interested in the food Richard is trying to hide...</speech>
        <speech>so are its friends.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="26" y="3">
        <path>DOWNx4,RIGHTx5,UPx4,LEFTx5</path>
        <onCollisionSpeech gap="4">Wingull!!</onCollisionSpeech>
        <speech>Wingull looks really interested in the food Richard is trying to hide...</speech>
        <speech>so are its friends.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="19" y="30">
        <path>DOWNx8,UPx8</path>
        <onCollisionSpeech gap="4">tacool, tentatenta ^^</onCollisionSpeech>
        <speech>Tentacool is floating in the waves.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Staryu" speed="1" sprite="120" type="pokemon" x="35" y="55">
        <path>RIGHTx15,LEFTx15</path>
        <onCollisionSpeech gap="4">Sta!</onCollisionSpeech>
        <speech>Staryu!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="15" name="Robinson" randomRotation="true" sprite="48" x="19" y="56">
        <speech>How did I get here???</speech>
        <speech>Where is my friend?</speech>
        <speech>WILSON!!!!! WIIIIIIILSSOOOOON!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="16" name="Collector Aaron" randomRotation="true" sprite="37" x="27" y="76">
        <speech>These seashells are mine.</speech>
        <speech>Go away!</speech>
    </npc>
    <movingNpc direction="DOWN" id="17" name="Wailmer" speed="1" sprite="320" type="pokemon" x="36" y="76">
        <path>RIGHTx15,DOWNx4,LEFTx15,UPx4</path>
        <onCollisionSpeech gap="4">Wailmer!</onCollisionSpeech>
        <speech>Wailmer looks surprised you have been able to catch up to it</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="18" name="Hugo" randomRotation="true" sprite="16" x="58" y="69">
        <speech>Look like I ended on Corphish island.</speech>
        <speech>There are so many of them.</speech>
    </npc>
    <movingNpc direction="DOWN" id="19" name="Corphish" speed="1" sprite="341" type="pokemon" x="55" y="66">
        <path>RIGHTx4,UPx4,RIGHTx2,UPx2,RIGHTx7,DOWNx2,RIGHTx2,DOWNx6,LEFTx2,DOWNx6,LEFTx13,UPx8</path>
        <onCollisionSpeech gap="4">Corphish!</onCollisionSpeech>
        <speech>Corphish enjoys walking in the sand</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="20" name="Artist Monica" randomRotation="true" sprite="28" x="66" y="64">
        <speech>So many Corphish all doing different things...</speech>
        <speech>I don't know which one should be the subject of my painting.</speech>
    </npc>
    <movingNpc direction="DOWN" id="21" name="Corphish" shouldSleep="" speed="1" sprite="341" type="pokemon" x="70" y="70">
        <path>LEFTx1,DOWNx1,RIGHTx1,UPx1</path>
        <onCollisionSpeech gap="4">Cor-corphish</onCollisionSpeech>
        <speech>Corphish is playing in a little puddle.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Corphish" shouldSleep="" speed="1" sprite="341" type="pokemon" x="62" y="67">
        <path>RIGHTx2,DOWNx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4">Cooooorrrr! Phish!</onCollisionSpeech>
        <speech>Corphish is trying to unearth this shell.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Corphish" speed="1" sprite="341" type="pokemon" x="70" y="68">
        <path>LEFTx2,DOWNx6,LEFTx13,UPx8,RIGHTx4,UPx4,RIGHTx2,UPx2,RIGHTx7,DOWNx2,RIGHTx2,DOWNx6</path>
        <onCollisionSpeech gap="4">Phish!</onCollisionSpeech>
        <speech>Corphish likes to walk in the sand.</speech>
    </movingNpc>
    <conversation id="2">
        <speeches id="1">
            <speech>Experience begets power! Isn't that what they say?! Anyway, won't you battle me?</speech>
        </speeches>
        <speeches id="2">
            <speech>This battle was a valuable experience. I still need to gain more experience!</speech>
        </speeches>
        <speeches id="3">
            <speech>This battle was a valuable experience. I still need to gain more experience!</speech>
        </speeches>
        <speeches id="4">
            <speech>Even an amateur like me can win! Experience is the best teacher, so they say.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I'm the heroine of justice! You mysterious, evil person! I'll drive you away!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa! The world is falling into the hands of evil! Are we headed for an unhappy ending?</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa! The world is falling into the hands of evil! Are we headed for an unhappy ending?</speech>
        </speeches>
        <speeches id="4">
            <speech>Huh? I went to the trouble of taking you down, but you didn't explode like on TV!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>I'm sick and tired of being called a Beauty.</speech>
        </speeches>
        <speeches id="2">
            <speech>You have to make a lot of sacrifices to be a Beauty. I'm done with that effort. Moving on!</speech>
        </speeches>
        <speeches id="3">
            <speech>You have to make a lot of sacrifices to be a Beauty. I'm done with that effort. Moving on!</speech>
        </speeches>
        <speeches id="4">
            <speech>When people call me a Beauty, they don't realize how much pressure that puts on me.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>It's no holds barred on this journey! Where's my adventure?!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sniff, sniff... This is no good... I can't smell the perfume of love. Bye!</speech>
        </speeches>
        <speeches id="3">
            <speech>Sniff, sniff... This is no good... I can't smell the perfume of love. Bye!</speech>
        </speeches>
        <speeches id="4">
            <speech>The journey isn't over. Just you wait! I'll show you the greatest adventure ever!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I've trained and trained myself without stopping, so now I'm as fast as the wind!</speech>
        </speeches>
        <speeches id="2">
            <speech>I bet guys who can surf get more girls than guys on Roller Skates. I wish I could surf...</speech>
        </speeches>
        <speeches id="3">
            <speech>I bet guys who can surf get more girls than guys on Roller Skates. I wish I could surf...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ow! Ow! Ow! My face! I'm the poster child for windburn!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>This isn't a uniform—it's just what I like to wear. I made it myself.</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa, that was a close one. I almost got my clothes dirty.</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa, that was a close one. I almost got my clothes dirty.</speech>
        </speeches>
        <speeches id="4">
            <speech>I wish I could live in the worlds that I see in games, anime, and comics.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Even if people call you an Ace Trainer, it's not like you get anything special for it.</speech>
        </speeches>
        <speeches id="2">
            <speech>In the end, being good at battling alone isn't enough, no matter how strong you are.</speech>
        </speeches>
        <speeches id="3">
            <speech>In the end, being good at battling alone isn't enough, no matter how strong you are.</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm just good at battling. I don't even have a job. I'm just another unemployed guy.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>I'm honestly not that good at Pokémon battles... When I think about my future, though, it seems like I have no choice but to battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>See... I knew I couldn't win. I'm not cut out for competition.</speech>
        </speeches>
        <speeches id="3">
            <speech>See... I knew I couldn't win. I'm not cut out for competition.</speech>
        </speeches>
        <speeches id="4">
            <speech>I hate to say this, but if you can't even beat me, the rest of the way is going to be really tough.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>I am four years old! I will do my best! Trainer, you should do your best, too!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa! That's what I expected from an experience trainer! Strong!</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa! That's what I expected from an experience trainer! Strong!</speech>
        </speeches>
        <speeches id="4">
            <speech>I'm four years old! I did my best! Trainer, you did your best, too!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>You know, the prices in this region are really quite something, aren't they!</speech>
        </speeches>
        <speeches id="2">
            <speech>I could live the high life in a country where everything costs so little!</speech>
        </speeches>
        <speeches id="3">
            <speech>I could live the high life in a country where everything costs so little!</speech>
        </speeches>
        <speeches id="4">
            <speech>I couldn't possibly live in a country where everything costs so much!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>I'm tired of serving my boss. You there! Serve me now!</speech>
        </speeches>
        <speeches id="2">
            <speech>Serving people is tough. You can't choose your boss, so it's stressful.</speech>
        </speeches>
        <speeches id="3">
            <speech>Serving people is tough. You can't choose your boss, so it's stressful.</speech>
        </speeches>
        <speeches id="4">
            <speech>All right! From now on I'm your boss.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Samuel" shouldSleep="" speed="1" sprite="71" type="npc" x="48" y="23">
        <path>RIGHTx8,DOWNx3,LEFTx8,UPx3</path>
        <onCollisionSpeech gap="4">ouch that hurts!</onCollisionSpeech>
        <speech>Hiya! Wanna see my Pokémon pals?</speech>
        <speech>I've got a super speedy Zigzagoon and a flying Wingull! They're my best buddies!</speech>
        <speech>I really wanna catch a super rare Pokémon, like a Corphish or a big Wailmer!</speech>
        <speech>I love playing by the waves and searching for hidden treasures in the sand!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Wingull" speed="1" sprite="278" type="pokemon" x="48" y="56">
        <path>UPx10,RIGHTx13,DOWNx10,LEFTx13</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="25" name="Wingull" speed="1" sprite="278" type="pokemon" x="4" y="72">
        <path>RIGHTx20,UPx20,LEFTx20,DOWNx20</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="26" name="Relicanth" speed="1" sprite="369" type="pokemon" x="43" y="95">
        <path>LEFTx17,RIGHTx17</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="27" name="Relicanth" speed="1" sprite="369" type="pokemon" x="70" y="88">
        <path>LEFTx20,RIGHTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="28" name="Wingull" speed="1" sprite="278" type="pokemon" x="84" y="67">
        <path>DOWNx11,LEFTx11,UPx11,RIGHTx11</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="29" name="Pelipper" speed="1" sprite="279" type="pokemon" x="68" y="35">
        <path>RIGHTx10,DOWNx4,LEFTx10,UPx4</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="30" name="Pelipper" speed="1" sprite="279" type="pokemon" x="82" y="51">
        <path>UPx15,LEFTx20,DOWNx15,RIGHTx20</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="31" name="Tentacruel" shouldSleep="" speed="1" sprite="73" type="pokemon" x="35" y="72">
        <path>UPx11,DOWNx11,LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Tentacruel!</onCollisionSpeech>
        <speech>Tentacruel!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Kira" speed="1" sprite="94" type="npc" x="62" y="12">
        <path>UPx2,LEFTx2,RIGHTx2,DOWNx2</path>
        <onCollisionSpeech gap="4">nooo!! leave our castle alone!</onCollisionSpeech>
        <speech>Building a castle in the sand is so much easier and fun with a ground typed pokemon.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="32" name="Tentacruel" speed="1" sprite="73" type="pokemon" x="5" y="4">
        <path>DOWNx20,UPx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="33" name="Wingull" speed="1" sprite="278" type="pokemon" x="2" y="28">
        <path>RIGHTx20,UPx5,LEFTx20,DOWNx5</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
</npcs>
