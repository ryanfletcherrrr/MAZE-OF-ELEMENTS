<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>$PLAYER!</speech>
            <speech>So you did come... I have been waiting for you... What terrible heat.</speech>
            <speech>It feels as though the entire world will be burnt away...</speech>
            <speech>Ah, yes. You need to hear what my friend has to say.</speech>
        </speeches>
        <speeches id="2">
            <speech>This sunlight... People and Pokémon need sunlight to live.</speech>
            <speech>So why does this sunlight fill us with so much dread?</speech>
            <speech>The blazing sun over Sootopolis is growing even more intense...</speech>
            <speech>Soon all of Hoenn will be caught under its withering glare... If that were to happen...</speech>
        </speeches>
        <speeches id="3">
            <speech>$PLAYER_NAME...</speech>
            <speech>To think that you had the Blue Orb...</speech>
            <speech>You'll be OK. You and your Pokémon can handle it, whatever happens. I believe that.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>My name is Wallace.</speech>
            <speech>I'm this town's Gym Leader.</speech>
            <speech>I've also been entrusted with the protection of the Cave of Origin.</speech>
            <speech>This drought is being caused by a power emanating from the Cave of Origin.</speech>
            <speech>That is the Blue Orb. I see.</speech>
        </speeches>
        <speeches id="2">
            <speech>There is nothing to fear. The Blue Orb this child bears...</speech>
            <speech>Its ancient powers will protect both the child and their Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yes. The energy overflowing from the Cave of Origin just now...</speech>
            <speech>It is the same energy that gives Groudon its power...</speech>
            <speech>With the Blue Orb, which contains the power to suppress that...</speech>
            <speech>It should be possible to calm the rage of this flood of magma.</speech>
            <speech>Of course the Blue Orb's power alone will not lead you to where Groudon waits.</speech>
            <speech>You will not reach Hoenn's Core that way. Use the suit that you were just given.</speech>
            <speech>With that, it will finally become possible to stand up against the forces of nature.</speech>
        </speeches>
        <speeches id="4">
            <speech>No man or woman from Sootopolis is permitted to enter the Cave of Origin.</speech>
            <speech>But you must go, together with your Blue Orb. You must go regardless of what waits for you inside
                that cave...
            </speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>...I know what must be done. I will entrust this to you now.</speech>
            <speech>It is the fruit of our collaboration with the Devon Corporation, and it represents the height of
                Hoenn's technological knowledge and skill.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>And yet... Even with that Magma Suit, is it probable that anyone could pass through that magma, now
                fiercer than ever due to the forces of nature?
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Child, you...</speech>
            <speech>No. I have no right to call you "child." Fellow Trainer.</speech>
            <speech>I have caused great harm, and for that I apologize most sincerely.</speech>
            <speech>But now we find ourselves at an impasse, and you and your Pokémon are all that humanity has to count
                on in its stand against Groudon...
            </speech>
            <speech>The fate of our world... The world upon which all humanity thrives... The fate of our world rests in
                your hands!
            </speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Leader Maxie...to that child...</speech>
        </speeches>
        <speeches id="2">
            <speech>We had actually been preparing that in anticipation of making contact with Groudon...</speech>
            <speech>But at this point, it doesn't look like there's any hope of that for us...</speech>
            <speech>There's nothing we can do except leave it to you.</speech>
        </speeches>
        <speeches id="3">
            <speech>That's true. It is very possible that its energy could be far greater than our calculations show.
            </speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>We've been waiting, ya scamp!</speech>
        </speeches>
        <speeches id="2">
            <speech>You've hit the nail on the head!</speech>
            <speech>Those old folks at Mt. Pyre did say something about that...</speech>
            <speech>That the Red Orb would unleash Groudon's primal powers... And trigger a Primal Reversion.</speech>
            <speech>While the Blue Orb had the power to reverse that and calm the beast.</speech>
        </speeches>
        <speeches id="3">
            <speech>We'll also get our people together up top here, to help any folks and Pokémon in trouble.</speech>
            <speech>My little scamp of a savior...</speech>
            <speech>Looks like we're making you bear all the burden on your little shoulders alone.</speech>
            <speech>I'm sorry for that... But I know you're going to see this through!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>$PLAYER!</speech>
            <speech>I heard on the news that things were going haywire around Sootopolis. And then I saw you on BuzzNav,
                $PLAYER!
            </speech>
            <speech>I couldn't just sit there and do nothing when I knew you were here in the thick of it, so I came
                flying!
            </speech>
            <speech>Bwuh?! Isn't that Team Magma? And Team Aqua?!</speech>
            <speech>OK, can I just say that I am, like, shocked and confused on so many levels right now?</speech>
            <speech>This is probably something way bigger than I can even imagine, isn't it?</speech>
            <speech>So I'm not even going to ask right now.</speech>
            <speech>I'm going to try to find what I can do to help, and then I'm going to do my best with that.</speech>
            <speech>And I'm going to keep on hoping and believing that y-you'll be OK out there.</speech>
            <speech>Because... Because you... You're the best friend I have!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>$PLAYER_NAME, we owe you a great thanks.</speech>
            <speech>Look above you. The sky over Sootopolis has returned to normal.</speech>
        </speeches>
        <speeches id="2">
            <speech>...</speech>
            <speech>Team Magma and Team Aqua are made up of people with completely opposing ideals and goals.</speech>
            <speech>But perhaps even they can learn to meet halfway... one small concession at a time.</speech>
            <speech>I know it's too much to expect that everything will change at once, but...</speech>
            <speech> I hope this crisis might at least help take them that first vital step forward.</speech>
            <speech>I imagine that many changes are happening now all across Hoenn.</speech>
            <speech>I hope you will be able to travel this world and see its richness with your own eyes—and revel in its newness in your own heart.</speech>
            <speech>But for the present, you may first wish to challenge this city's Pokémon Gym.</speech>
            <speech>There, you'll find the very same Wallace who helped us so much wait for you.</speech>
            <speech>He's strong. But the way you are now, you should be capable of battling him on an equal footing.</speech>
            <speech>$PLAYER_NAME...</speech>
            <speech>As you and your Pokémon live and grow in this changed world, I wonder what effect it will have on you.</speech>
            <speech>What will you think about? What ideals will you believe in?</speech>
            <speech>If we do get the chance to meet again, I hope you will be able to show me and my team the answers you've found.</speech>
            <speech>Until then...</speech>
            <speech>See you later...</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Is the energy that had been amassed deep within the Cave of Origin now flowing out to pour over the
                greater world?
            </speech>
            <speech>It's as if the uncertainty from moments ago never existed.</speech>
            <speech>My heart feels at ease now.</speech>
        </speeches>
        <speeches id="2">
            <speech>... I suppose...you may be right...</speech>
            <speech>However...</speech>
            <speech>Personally, in my case... Some wrongs cannot be atoned for, no matter how you try to right them.
            </speech>
            <speech>And I have committed wrongs so great as to bring the whole world to its knees.</speech>
            <speech>It may be that I... It may be too much to assume that I should deserve the chance to start anything
                over.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>T-Tabitha...</speech>
            <speech>...</speech>
            <speech>Thank you.</speech>
        </speeches>
        <speeches id="4">
            <speech>Your adept use of the Blue Orb has indeed left an impression upon me.</speech>
            <speech>Henceforth, I shall safeguard the Red Orb, to vigilantly watch over Groudon.</speech>
            <speech>Rest assured, I will not allow any force on this earth to disturb its slumber again.</speech>
            <speech>Until we meet again, farewell.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Leader... Without a doubt, you have committed an offense that can never be forgiven.</speech>
            <speech>You have wronged not only Team Magma but all living things on this planet, whether great or small.</speech>
            <speech>However, that is precisely why you must now set things right.</speech>
            <speech>You must continue to atone for the sins you have committed, even at the risk of your own life...</speech>
            <speech>To set right the wrongs you've done, without running away in fear—isn't that how an adult accepts responsibility?</speech>
            <speech>... Should you find the resolve to do so inside yourself, then I...</speech>
            <speech>Team Magma Admin Tabitha... I will serve at your side as counsel forever.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Somehow, it's...so warm...</speech>
        </speeches>
        <speeches id="2">
            <speech>... The sea or the land...</speech>
            <speech>Pokémon or humanity...</speech>
            <speech>All this time we've just been trying to grab onto happiness for one of them, even if it meant
                destroying the other...
            </speech>
            <speech>Look at how things have turned out, now the world's got its natural balance back...</speech>
            <speech>We've got to rethink this thing from the very start...</speech>
            <speech>We've got to redo everything we've done from scratch—and get it right this time. Whaddaya say?
                Maxie...
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Y'know...</speech>
            <speech>Someday we adults are gonna have to hand this world off to this little scamp and the rest of their generation.</speech>
            <speech>But what kinda world are we adults gonna make?</speech>
            <speech>What kinda world do we wanna pass to these kids?</speech>
            <speech>If we haven't even figured that out ourselves, we're never gonna get anywhere.</speech>
            <speech>So are we gonna make a world where everyone can coexist together?</speech>
            <speech>Or, after all, is it gonna be a world that we claim by force?</speech>
            <speech>One that we fight and scrabble over...</speech>
            <speech>I don't know, but I think we can at least start by giving it some time and thinking it over.</speech>
            <speech>All of us can do that, whether we're Team Aqua or Team Magma or whatever...</speech>
        </speeches>
        <speeches id="4">
            <speech>And that's it from me! Later, scamp!</speech>
        </speeches>
    </conversation>

    <conversation id="11">
        <speeches id="1">
            <speech>$PLAYER_NAME!</speech>
            <speech>So it's all over...</speech>
        </speeches>
        <speeches id="2">
            <speech>Phew!</speech>
            <speech>And it's finally just the two of us again.</speech>
            <speech>So I've got to say... thanks for everything you've done for our region, $PLAYER_NAME.</speech>
            <speech>You know, I thought we were supposed to have set out from Littleroot together, but...</speech>
            <speech>But you, $PLAYER_NAME... It seems like you just keep getting further and further ahead of me...</speech>
            <speech>I even started to feel like you'd gone somewhere that I can't even reach.</speech>
            <speech>It's pretty lonely, you know?</speech>
            <speech>Not! What would you think if I really said something like that?</speech>
            <speech>Hee hee! Anyway, you did something really amazing today, so try to take it easy for a while!</speech>
            <speech>See you later!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>The gym leader is currently not at the gym.</speech>
            <speech>Please come back later.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>The house seems to be locked.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>SWAMMMMPPPPP!!!</speech>
        </speeches>
    </conversation>
    <conversation id="18">
        <speeches id="1">
            <speech>{COLOR=PURPLE}Sky Pillar{ENDCOLOR} has {COLOR=RED}sealed itself{ENDCOLOR} again… The {COLOR=CYAN}winds{ENDCOLOR} twist like the sky's trying to {COLOR=ORANGE}push us back{ENDCOLOR}.</speech>
            <speech>{COLOR=ORANGE}Few dare approach{ENDCOLOR} when it {COLOR=RED}stirs{ENDCOLOR}. But you have the {COLOR=YELLOW}strength{ENDCOLOR} to try.</speech>
            <speech>I'll {COLOR=GREEN}open the way{ENDCOLOR} when you're ready — but first, investigate {COLOR=CYAN}Slateport Port{ENDCOLOR}. If the skies are this disturbed, ships may be grounded.</speech>
            <speech>Check on the travel situation, then return to me. The sky does {COLOR=RED}not grant mercy{ENDCOLOR}.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Zoro" randomRotation="true" sprite="339" x="43" y="43">
        <speech>Lost again, huh? Figures. Well, might as well make the most of it.</speech>
        <speech>Sootopolis City, huh? Not a bad place to be marooned. At least there's plenty of water to train near.</speech>
        <speech>Time to sharpen my skills and wait for the crew to catch up. They'll find me eventually... hopefully.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Relicanth" speed="1" sprite="369" type="pokemon" x="26" y="27">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Relicanth!</onCollisionSpeech>
        <speech>Relicanth!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Bagon" shouldSleep="" speed="1" sprite="371" type="pokemon" x="42" y="5">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Bagon!</onCollisionSpeech>
        <speech>Bagon!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="4" name="Mingyu" randomRotation="false" sprite="11" x="21" y="39">
        <speech>Welcome to the Sootopolis Gym, where battles are as unpredictable as the tides.</speech>
        <speech>The Gym Leader's Water-type Pokémon are fierce opponents, but with determination and strategy, you can make waves of your own!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Altaria" speed="1" sprite="334" type="pokemon" x="33" y="58">
        <path>LEFTx13,RIGHTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Shelgon" shouldSleep="" speed="1" sprite="372" type="pokemon" x="42" y="50">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Goldeen" speed="1" sprite="118" type="pokemon" x="21" y="51">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Goldeen!</onCollisionSpeech>
        <speech>Goldeen!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Chinchou" shouldSleep="" speed="1" sprite="170" type="pokemon" x="37" y="36">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Chinchou!</onCollisionSpeech>
        <speech>Chinchou!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Horsea" speed="1" sprite="116" type="pokemon" x="36" y="49">
        <path>UPx5,LEFTx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Horsea!</onCollisionSpeech>
        <speech>Horsea!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wingull" speed="1" sprite="278" type="pokemon" x="5" y="27">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="55" y="38">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Salamence" speed="1" sprite="373" type="pokemon" x="5" y="10">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="14" name="''Slim'' Shady Dealer" randomRotation="true" sprite="115" x="22" y="14">
        <speech>Hey! You there!</speech>
        <speech>Wanna buy some...berries?</speech>
        <speech>Oh I don't sell. But I know a guy....</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="6" y="44">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Tao" shouldSleep="" speed="1" sprite="48" type="npc" x="48" y="28">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Hey! Watch it!</onCollisionSpeech>
        <speech>Take a leisurely stroll through Sootopolis Park and enjoy the serene beauty of nature, right in the heart of the city.</speech>
    </movingNpc>
</npcs>
