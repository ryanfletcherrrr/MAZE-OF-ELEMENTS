<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>You're going to get wet and wild in this battle! My Pokémon  will soak you!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's dry... You've soaked me in defeat.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's dry... You've soaked me in defeat.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're soaked! Time to dry off and rethink your strategy.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Grumble, grumble...</speech>
        </speeches>
        <speeches id="2">
            <speech>Grumble, grumble... Oh? Was that it?</speech>
        </speeches>
        <speeches id="3">
            <speech>Grumble, grumble... Oh? Was that it?</speech>
        </speeches>
        <speeches id="4">
            <speech>Grumble, grumble... Huh? Did I win?</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>To challenge me you must be a reckless, fearless person who doesn't know his/her place!</speech>
        </speeches>
        <speeches id="2">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="3">
            <speech>You're a smart Trainer, considering you don't know very much.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hmmph... To challenge me must mean that even ignorance has its limit!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>You're going to be all washed up when this battle is over!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's parched... You've drained my chances of winning.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's parched... You've drained my chances of winning.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're waterlogged and sinking fast!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Prepare yourself! The sea's wrath will be upon you in this battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>I can't believe it.</speech>
        </speeches>
        <speeches id="3">
            <speech>I can't believe it.</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha, you got caught in my tide! Better swim faster next time!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>You'll be swimming in defeat when my water Pokémon wash over you!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's buoyant... You've sunk my hopes of winning.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's buoyant... You've sunk my hopes of winning.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're drowning in my wave of victory!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>You're going to sink like a stone when you face my water Pokémon!</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're at the bottom of the ocean now!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Let's dive into battle! My water Pokémon are unbeatable!</speech>
        </speeches>
        <speeches id="2">
            <speech>I need a lifebuoy</speech>
        </speeches>
        <speeches id="3">
            <speech>I need a lifebuoy</speech>
        </speeches>
        <speeches id="4">
            <speech>You're in over your head! Maybe you should stick to the kiddie pool.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>You're going to sink like a stone when you face my water Pokémon !</speech>
        </speeches>
        <speeches id="2">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="3">
            <speech>I'm the one who's surfaced... You've floated to victory.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're at the bottom of the ocean now!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>I've always wanted to be a Beauty, so I've made a fresh start, focusing on my appearance.</speech>
        </speeches>
        <speeches id="2">
            <speech>Six months' investment in the latest treatments... Look at me now! I glow like never before!
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Six months' investment in the latest treatments... Look at me now! I glow like never before!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Whatever your dream is, if you want to make it a reality, you have to do what it takes.</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>I shall present to you elegant moves worthy of the title of Rich Boy!</speech>
        </speeches>
        <speeches id="2">
            <speech>To think that anybody could be stronger than me! ...You're not just anybody!</speech>
        </speeches>
        <speeches id="3">
            <speech>To think that anybody could be stronger than me! ...You're not just anybody!</speech>
        </speeches>
        <speeches id="4">
            <speech>It's said that a Pokémon's strength depends on its training. It's not your fault. It can't be
                helped.
            </speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Seung " speed="1" sprite="93" type="npc" x="27" y="27">
        <path>LEFTx12,DOWNx3,RIGHTx12,UPx3</path>
        <onCollisionSpeech gap="4">Let's goooo!</onCollisionSpeech>
        <speech>Hey there, Trainer! Swimming on Route 129, are you? Keep pushing forward!</speech>
        <speech>Ever Grande City's not too far ahead. Just keep the waves behind you and the determination in your heart, and you'll reach your destination in no time. Best of luck on your journey!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Soo-Jin" speed="1" sprite="22" type="npc" x="42" y="13">
        <path>RIGHTx11,LEFTx11</path>
        <onCollisionSpeech gap="4">Let's gooooo!</onCollisionSpeech>
        <speech>Hey Trainer! Isn't it amazing how the waters around here feel so nice and warm?</speech>
        <speech>It's like a cozy embrace from the ocean itself. Just the perfect setting for a refreshing swim or a relaxing dive.</speech>
        <speech>Enjoy the warmth while you're here, because it's a feeling you won't forget!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Gyarados" speed="1" sprite="130" type="pokemon" x="39" y="37">
        <path>RIGHTx10,UPx3,LEFTx10,DOWNx3</path>
        <onCollisionSpeech gap="4">Gyarados!</onCollisionSpeech>
        <speech>Gyarados!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Pelipper" speed="1" sprite="279" type="pokemon" x="11" y="48">
        <path>RIGHTx16,LEFTx16</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Pelipper" speed="1" sprite="279" type="pokemon" x="51" y="51">
        <path>LEFTx14,RIGHTx14</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Pelipper" speed="1" sprite="279" type="pokemon" x="67" y="34">
        <path>RIGHTx11,UPx1,LEFTx11,DOWNx1</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Sandslash" shouldSleep="" speed="1" sprite="28" type="pokemon" x="81" y="52">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Wingull" speed="1" sprite="278" type="pokemon" x="60" y="39">
        <path>DOWNx11,RIGHTx3,UPx11,LEFTx3</path>
        <onCollisionSpeech gap="4">Wingull</onCollisionSpeech>
        <speech>Wingull</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="krokorok" speed="1" sprite="552" type="pokemon" x="56" y="6">
        <path>UPx2,DOWNx2,LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Gyarados" speed="1" sprite="130" type="pokemon" x="6" y="10">
        <path>RIGHTx13,LEFTx12</path>
        <onCollisionSpeech gap="4">Gyarados!</onCollisionSpeech>
        <speech>Gyarados!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Pelipper" speed="1" sprite="279" type="pokemon" x="91" y="23">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="100" y="45">
        <path>UPx20,DOWNx20</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="97" y="19">
        <path>DOWNx20,UPx20</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Corphish" shouldSleep="" speed="1" sprite="341" type="pokemon" x="78" y="40">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Corphish!</onCollisionSpeech>
        <speech>Corphish!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Crawdaunt" shouldSleep="" speed="1" sprite="342" type="pokemon" x="76" y="15">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Crawdaunt!</onCollisionSpeech>
        <speech>Crawdaunt!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Wailord" speed="1" sprite="321" type="pokemon" x="90" y="3">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4">Wailord!</onCollisionSpeech>
        <speech>Wailord!</speech>
    </movingNpc>
</npcs>
