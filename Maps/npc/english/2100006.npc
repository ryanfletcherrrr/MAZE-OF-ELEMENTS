<?xml version="1.0" encoding="UTF-8"?>
<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="Cheshire Cat" randomRotation="true" sprite="335" x="2" y="7">
        <speech>We're all mad here. I'm mad. You're mad.</speech>
    </npc>
    <movingNpc direction="UP" id="2" name="Polteageist" speed="1" sprite="1145" type="pokemon" x="12" y="7">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Geeeist!</onCollisionSpeech>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>Aloha! I'm Keoni, a researcher from the {COLOR=CYAN}Alola region{ENDCOLOR} studying regional variants.</speech>
            <speech>Back in Alola, our Rattata are quite different - they're {COLOR=PURPLE}Dark/Normal{ENDCOLOR} types that became {COLOR=YELLOW}nocturnal{ENDCOLOR}!</speech>
            <speech>This happened because we introduced {COLOR=ORANGE}Yungoos{ENDCOLOR} to control the Rattata population during the day.</speech>
            <speech>The Rattata adapted by becoming active at night when the Yungoos sleep!</speech>
            <speech>If you ever find a {COLOR=GREEN}Kanto Rattata{ENDCOLOR}, I'd love to trade you an {COLOR=CYAN}Alolan one{ENDCOLOR} to show you the difference!</speech>
        </speeches>

        <speeches id="2">
            <speech>Aloha! I'm Keoni, originally from the {COLOR=CYAN}Alola region{ENDCOLOR}.</speech>
            <speech>I've noticed that Rattata here in {COLOR=GREEN}Kanto{ENDCOLOR} are quite different from the ones back home.</speech>
            <speech>Would you like to trade your {COLOR=GREEN}Kanto Rattata{ENDCOLOR} for an {COLOR=CYAN}Alolan Rattata{ENDCOLOR}?</speech>
            <speech>The Alolan ones are {COLOR=PURPLE}Dark/Normal{ENDCOLOR} type and are {COLOR=YELLOW}nocturnal{ENDCOLOR} - quite fascinating!</speech>
        </speeches>

        <speeches id="3">
            <speech>Maybe another time then!</speech>
            <speech>Feel free to come back anytime you want to trade a Rattata.</speech>
        </speeches>

        <speeches id="4">
            <speech>{COLOR=GOLD}Excellent!{ENDCOLOR} Another specimen for my research!</speech>
            <speech>Perfect! Let me take your {COLOR=GREEN}Kanto Rattata{ENDCOLOR} and give you this {COLOR=CYAN}Alolan Rattata{ENDCOLOR} in return.</speech>
            <speech>Alolan Rattata adapted to the nighttime to avoid the {COLOR=ORANGE}Yungoos{ENDCOLOR} that were introduced to the islands.</speech>
            <speech>Here's your {COLOR=CYAN}Alolan Rattata{ENDCOLOR} - they're quite different from the {COLOR=GREEN}Kanto ones{ENDCOLOR}!</speech>
            <speech>I'm studying the behavioral differences between regional variants, so if you find more {COLOR=GREEN}Kanto Rattata{ENDCOLOR}, please bring them to me!</speech>
            <speech>Each trade helps my {COLOR=BLUE}research{ENDCOLOR} and gives you another unique {COLOR=CYAN}Alolan Rattata{ENDCOLOR}!</speech>
        </speeches>
    </conversation>
</npcs>
