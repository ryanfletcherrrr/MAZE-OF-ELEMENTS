<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Please select a floor.{ENDCOLOR}</speech>
            <speech>The buttons await your input, ready to take you where you need.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GREEN}The lift console closes itself with a soft click.{ENDCOLOR}</speech>
            <speech>You'll need to activate it again if you wish to use it.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{COLOR=RED}The door is locked. A special keycard might be needed.{ENDCOLOR}</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>You're messing with Team Rocket? Bad move, kid. I'm about to wipe the floor with you!</speech>
        </speeches>
        <speeches id="2">
            <speech>What?! No way! This has to be some kind of mistake!</speech>
        </speeches>
        <speeches id="3">
            <speech>What?! No way! This has to be some kind of mistake!</speech>
        </speeches>
        <speeches id="4">
            <speech>Tch, told you! You should've just handed over your PokÃ©mon and walked away.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>You don't understand... Science requires funding, and Team Rocket provides it. I have no choice but to fight!</speech>
        </speeches>
        <speeches id="2">
            <speech>Maybe... Maybe there's another way to continue my research.</speech>
        </speeches>
        <speeches id="3">
            <speech>Maybe... Maybe there's another way to continue my research.</speech>
        </speeches>
        <speeches id="4">
            <speech>You don't get it! Progress has a price, and sometimes, you have to make sacrifices.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Well, well, well! If it isn't some {COLOR=RED}pathetic twerp{ENDCOLOR} trying to ruin our {COLOR=GOLD}glorious comeback{ENDCOLOR}!</speech>
            <speech>I am the {COLOR=PURPLE}magnificent Jessie{ENDCOLOR} of {COLOR=RED}Team Rocket{ENDCOLOR} - and I look {COLOR=PINK}absolutely stunning{ENDCOLOR} while doing villainy!</speech>
            <speech>This {COLOR=GOLD}Project T.E.R.A.{ENDCOLOR} will make me the {COLOR=PURPLE}most beautiful{ENDCOLOR} and {COLOR=RED}powerful{ENDCOLOR} Rocket of all time!</speech>
            <speech>Prepare for trouble, because I'm about to {COLOR=RED}demolish{ENDCOLOR} you with {COLOR=PINK}style and grace{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="2">
            <speech>This is {COLOR=RED}impossible{ENDCOLOR}! My {COLOR=PINK}perfect strategy{ENDCOLOR} was {COLOR=PURPLE}flawless{ENDCOLOR}!</speech>
            <speech>How dare you make me look {COLOR=RED}bad{ENDCOLOR} in front of the {COLOR=GOLD}Tera Energy{ENDCOLOR} equipment!</speech>
            <speech>This is just a {COLOR=CYAN}tactical retreat{ENDCOLOR}! I'll be back with an even more {COLOR=PURPLE}fabulous{ENDCOLOR} plan!</speech>
            <speech>Mark my words - {COLOR=RED}Team Rocket{ENDCOLOR} will rise again, and I'll be {COLOR=PINK}more gorgeous{ENDCOLOR} than ever!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh! My {COLOR=PINK}beautiful hair{ENDCOLOR} is all messed up from that battle...</speech>
            <speech>You may have won this time, but {COLOR=RED}Team Rocket{ENDCOLOR} never gives up on our {COLOR=GOLD}dreams of grandeur{ENDCOLOR}!</speech>
            <speech>Next time I'll bring {COLOR=PURPLE}even more spectacular{ENDCOLOR} Pokemon to match my {COLOR=PINK}dazzling beauty{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="4">
            <speech>Of course I won! My {COLOR=PINK}radiant beauty{ENDCOLOR} and {COLOR=PURPLE}superior tactics{ENDCOLOR} are unbeatable!</speech>
            <speech>This {COLOR=GOLD}Tera Energy{ENDCOLOR} makes my Pokemon as {COLOR=RED}magnificent{ENDCOLOR} as I am!</speech>
            <speech>Now scram before I decide to make you my {COLOR=CYAN}personal training dummy{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="5">
            <speech>Excuse me! I don't waste my {COLOR=PINK}precious time{ENDCOLOR} on {COLOR=RED}amateurs{ENDCOLOR}!</speech>
            <speech>Clear out those {COLOR=PURPLE}inferior grunts{ENDCOLOR} first, then come back when you're {COLOR=GOLD}worthy{ENDCOLOR} of my attention!</speech>
            <speech>I have {COLOR=PINK}beauty treatments{ENDCOLOR} to attend to while you do the {COLOR=CYAN}grunt work{ENDCOLOR}!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Agent Reigns" shouldSleep="" speed="1" sprite="321" type="npc" x="7" y="10">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>You are not secretly a Rocket grunt in disguise, right?</speech>
        <speech>...Wait, don't answer. I don't want to update the paperwork again.</speech>
        <speech>Oh, and yes... Using a wig to be undercover be quiet!</speech>
    </movingNpc>
</npcs>
