<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Aiyeeeh!</speech>
            <speech>What are you doing here?</speech>
            <speech>Me? I am the Team Magma member you thumped before, remember?</speech>
            <speech>Here, take this! Forgive me!</speech>
            <speech>Aww, darn it! You so screwed up our plans!</speech>
            <speech>I was going to steal something to make up for it, but...</speech>
        </speeches>
        <speeches id="2">
            <speech>Just you wait! You will get yours one day!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>If our member didn't fail in Rustboro, we wouldn't have to come here!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>We might be able to make money by stealing things from here!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>I put my knowledge to use in nefarious deeds.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Cassie" shouldSleep="" speed="1" sprite="7" type="npc" x="10" y="19">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>The Oceanic Museum is a treasure trove of knowledge and wonder.</speech>
        <speech>It's a shame that Team Magma's misguided actions tainted its sanctity.</speech>
        <speech>But with Captain Stern at the helm, I have no doubt we'll weather this storm.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Charles" shouldSleep="" speed="1" sprite="26" type="npc" x="31" y="20">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>Visiting the Oceanic Museum is always a delight.</speech>
        <speech>Captain Stern and his team deserve our utmost respect for their dedication to preserving our maritime heritage.</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="3" name="Jake" randomRotation="false" sprite="32" x="21" y="27"/>
    <npc direction="DOWN" hidden="false" id="4" name="" randomRotation="true" sprite="162" x="20" y="27">
        <speech>Being behind this desk was only a part-time job.</speech>
        <speech>I was not prepared for a full team Magma invasion.</speech>
        <speech>Should I quit right now while I still have the chance?</speech>
    </npc>
</npcs>
