<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ah! $PLAYER_NAME! I bet you must be surprised to see me in a place like this!</speech>
            <speech>That promise that we made back then</speech>
            <speech>Thank you for keeping your end of it. It was really all thanks to you that I could make it this far, $PLAYER_NAME.</speech>
            <speech>It was only because I lost to you back then that I could become even stronger.</speech>
            <speech>I'm sure that you and your Pokémon must have had to overcome a lot, too</speech>
            <speech>To make it all the way here. Right, $PLAYER_NAME? Everyone's grown so much And now we'll get to see just what we all can do.</speech>
            <speech>Standing here facing you again gives me chills But I won't give up! I won't lose anymore.</speech>
            <speech>My Pokémon have given me the courage and strength to fight.</speech>
            <speech>I have to win for their sake! So get ready Here I come!</speech>
        </speeches>
        <speeches id="2">
            <speech>... Arghhh!!! ... ... Hah. $PLAYER_NAME, you And your Pokémon, too.</speech>
            <speech>Thank you for not holding back when you battled against us...</speech>
            <speech>For not holding back when you beat us And Gallade Everyone.</speech>
            <speech>Thank you so much I feel like I've been able to take another step forward thanks to you!</speech>
            <speech>Oh! I know! I'll give you this to keep.</speech>
            <speech>I hope it will always remind you of your battle with me and with Gallade and the rest of my team.</speech>
            <speech>If you have a male Kirlia as one of your partners, $PLAYER_NAME, I hope that you might use that Dawn Stone on it for me.</speech>
            <speech>I couldn't beat you this time, $PLAYER_NAME. But I'll stay here and continue training.</speech>
            <speech>And one day Look out! I swear I'll catch up to you one day!</speech>
            <speech>When I do, promise we'll battle again! That's a promise I intend to live up to!</speech>
        </speeches>
        <speeches id="3">
            <speech>... Arghhh!!! ... ... Hah. $PLAYER_NAME, you And your Pokémon, too.</speech>
            <speech>Thank you for not holding back when you battled against us...</speech>
            <speech>For not holding back when you beat us And Gallade Everyone.</speech>
            <speech>Thank you so much I feel like I've been able to take another step forward thanks to you!</speech>
            <speech>Oh! I know! I'll give you this to keep.</speech>
            <speech>I hope it will always remind you of your battle with me and with Gallade and the rest of my team.</speech>
            <speech>If you have a male Kirlia as one of your partners, $PLAYER_NAME, I hope that you might use that Dawn Stone on it for me.</speech>
            <speech>I couldn't beat you this time, $PLAYER_NAME. But I'll stay here and continue training.</speech>
            <speech>And one day Look out! I swear I'll catch up to you one day!</speech>
            <speech>When I do, promise we'll battle again! That's a promise I intend to live up to!</speech>
        </speeches>
        <speeches id="4">
            <speech>You are weak but I will let you try again $PLAYER_NAME.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>Hey, $PLAYER_NAME! It's amazing to see how much we've both grown since our adventures.</speech>
            <speech>I've been training with Mega Swampert, aiming to reach new heights.</speech>
            <speech>What do you say we test our strengths? I'm eager to see how we match up now!</speech>
        </speeches>
        <speeches id="2">
            <speech>Wow, that was intense! You really are as strong as ever, $PLAYER_NAME.</speech>
            <speech>But I'm not giving up! I'll keep training and next time, I'll be ready for you.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mega Swampert and I need to refine our tactics a bit more.</speech>
            <speech>Let's take $DURATION to train. I promise, we'll be a tougher challenge then!</speech>
        </speeches>
        <speeches id="4">
            <speech>Seems we've still got a long way to go to catch up to you, $PLAYER_NAME.</speech>
            <speech>But don't think this is over. We'll train harder and come back stronger!</speech>
        </speeches>
        <speeches id="5">
            <speech>Just checking before we start... You're ready for a challenge, right?</speech>
            <speech>I've been preparing for this battle, aiming to surpass my limits!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Jenna" randomRotation="true" sprite="33" x="34" y="9">
        <speech>Yo, I'm Jenna.</speech>
        <speech>Victory Road ain't for the faint of heart, but us trainers thrive on the adrenaline rush of battling tough Pokémon.</speech>
        <speech>It's like a rite of passage, ya know? Can't wait to see what other challengers are up against!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Seaking" speed="1" sprite="119" type="pokemon" x="3" y="14">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Seaking!" speed="1" sprite="119" type="pokemon" x="1" y="15">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Lumineon" speed="1" sprite="457" type="pokemon" x="4" y="29">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Lumineon!</onCollisionSpeech>
        <speech>Lumineon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="4" y="45">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="1" y="47">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="4" y="48">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="38" y="36">
        <path>RIGHTx16,LEFTx16</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="27" y="31">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="49" y="50">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="50" y="50">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="51" y="48">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="48" y="48">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="49" y="47">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Altaria" speed="1" sprite="334" type="pokemon" x="47" y="62">
        <path>LEFTx7,RIGHTx7,UPx9,DOWNx9</path>
        <onCollisionSpeech gap="4">Altaria!</onCollisionSpeech>
        <speech>Altaria!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Altaria" speed="1" sprite="334" type="pokemon" x="19" y="54">
        <path>UPx5,RIGHTx3,LEFTx3,DOWNx5</path>
        <onCollisionSpeech gap="4">Altaria!</onCollisionSpeech>
        <speech>Altaria!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="19" y="62">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Torkoal!</onCollisionSpeech>
        <speech>Torkoal!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Lairon" speed="1" sprite="305" type="pokemon" x="38" y="47">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Lairon!</onCollisionSpeech>
        <speech>Lairon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Rhyhorn" speed="1" sprite="111" type="pokemon" x="38" y="52">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Rhyhorn!</onCollisionSpeech>
        <speech>Rhyhorn!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Pelipper" speed="1" sprite="279" type="pokemon" x="30" y="3">
        <path>RIGHTx8,UPx1,LEFTx8,DOWNx1</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Seaking" speed="1" sprite="119" type="pokemon" x="58" y="18">
        <path>LEFTx5,UPx6,DOWNx6,RIGHTx5</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Sableye" shouldSleep="" speed="1" sprite="302" type="pokemon" x="45" y="17">
        <path>UPx2,LEFTx2,DOWNx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Sableye!</onCollisionSpeech>
        <speech>Sableye!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Mawile" shouldSleep="" speed="1" sprite="303" type="pokemon" x="18" y="36">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Mawile!</onCollisionSpeech>
        <speech>Mawile!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Skarmory" speed="1" sprite="227" type="pokemon" x="6" y="6">
        <path>RIGHTx8,UPx4,LEFTx8,DOWNx4</path>
        <onCollisionSpeech gap="4">Skarmory!</onCollisionSpeech>
        <speech>Skarmory!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="25" name="Golem" shouldSleep="" speed="1" sprite="76" type="pokemon" x="15" y="15">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Golem!</onCollisionSpeech>
        <speech>Golem!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="26" name="Mawile" shouldSleep="" speed="1" sprite="303" type="pokemon" x="23" y="24">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4">Mawile!</onCollisionSpeech>
        <speech>Mawile!</speech>
    </movingNpc>
</npcs>
