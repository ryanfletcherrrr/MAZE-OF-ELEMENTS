<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ah, so you have uncovered the {COLOR=GOLD}Hidden Labyrinth{ENDCOLOR} knowledge! I sense the ancient power stirring within you.</speech>
            <speech>My {COLOR=PURPLE}Absol{ENDCOLOR} finally settles - it knows you are now ready for what lies ahead.</speech>
            <speech>The path before you is treacherous, but you carry the wisdom of ages. May it guide you through the depths below.</speech>
            <speech>Go forth, seeker. The {COLOR=GOLD}Unknown Ruins{ENDCOLOR} await your return with newfound purpose.</speech>
        </speeches>
        <speeches id="2">
            <speech>The knowledge flows through you now. My {COLOR=PURPLE}Absol{ENDCOLOR} senses your readiness.</speech>
            <speech>The {COLOR=GOLD}Hidden Labyrinth{ENDCOLOR} calls to you - do not keep the ancients waiting.</speech>
        </speeches>
        <speeches id="3">
            <speech>Welcome to my humble sanctuary, traveler. These walls have sheltered countless secrets over the years.</speech>
            <speech>My {COLOR=PURPLE}Absol{ENDCOLOR} grows more restless by the hour - it senses something stirring in the depths.</speech>
            <speech>That bookshelf has been in my family for generations... it holds more than just stories, I assure you.</speech>
            <speech>Feel free to investigate. Sometimes the most profound truths are hidden in plain sight.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>As you approach the ancient bookshelf, the leather-bound tomes seem to whisper with forgotten knowledge.</speech>
            <speech>Your fingers trace along the weathered spines until one book radiates with mysterious energy...</speech>
            <speech>The pages flutter open on their own, revealing secrets of the {COLOR=GOLD}Hidden Labyrinth{ENDCOLOR}!</speech>
            <speech>"{COLOR=CYAN}Deep beneath the Unknown Ruins lies a labyrinth of trials, where ancient guardians test the worthy.{ENDCOLOR}"</speech>
            <speech>"{COLOR=CYAN}The entrance demands tribute - five Splash Plates to awaken the first gate...{ENDCOLOR}"</speech>
            <speech>The knowledge burns itself into your mind. You now understand the path that lies ahead!</speech>
        </speeches>
    </conversation>
</npcs>