<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>*Pika Pika!!*</speech>
            <speech>*Pikachu runs away again...*</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Passimian" speed="1" sprite="766" type="pokemon" x="23" y="49">
        <path>UPx3,RIGHTx3,LEFTx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Flabebe" shouldSleep="" speed="1" sprite="964" type="pokemon" x="30" y="37">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Sawsbuck" shouldSleep="" speed="1" sprite="938" type="pokemon" x="31" y="44">
        <path>LEFTx3,UPx2,DOWNx2,RIGHTx3</path>
        <onCollisionSpeech gap="4">Sawsbuck!</onCollisionSpeech>
        <speech>Sawsbuck!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Vivilion" speed="1" sprite="954" type="pokemon" x="38" y="34">
        <path>LEFTx10,RIGHTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Pidgeot" speed="1" sprite="18" type="pokemon" x="2" y="28">
        <path>DOWNx12,UPx12</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="6" name="Marisa" randomRotation="false" sprite="6" x="15" y="24">
        <speech>In the summer, even NPCs seem to enjoy the game more!</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Taillow" shouldSleep="" speed="1" sprite="276" type="pokemon" x="29" y="11">
        <path>LEFTx3,DOWNx2,UPx2,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Chatot" shouldSleep="" speed="1" sprite="441" type="pokemon" x="10" y="15">
        <path>RIGHTx2,LEFTx2,DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Chatot!</onCollisionSpeech>
        <speech>Chatot!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Braviary" speed="1" sprite="628" type="pokemon" x="5" y="15">
        <path>LEFTx2,UPx3,RIGHTx2,LEFTx2,DOWNx3,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Staravia" speed="1" sprite="397" type="pokemon" x="19" y="6">
        <path>UPx5,RIGHTx13,DOWNx5,UPx5,LEFTx13,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Stufful" shouldSleep="" speed="1" sprite="759" type="pokemon" x="18" y="4">
        <path>LEFTx3,UPx1,LEFTx3,RIGHTx3,DOWNx1,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Cacnea" shouldSleep="" speed="1" sprite="331" type="pokemon" x="5" y="4">
        <path>DOWNx2,RIGHTx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Billie Joe" randomRotation="false" sprite="24" x="23" y="12">
        <speech>When the weather's hot, find a shady spot and grind those levels.</speech>
        <speech>Beat the heat by finding a cool place to game and progress.</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Pidgeotto" speed="1" sprite="17" type="pokemon" x="43" y="1">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>

    <conversation id="2">
        <speeches id="1">
            <speech>You think you can thwart us? We Rangers have a mission that transcends your understanding!</speech>
            <speech>With Pikachu's unique Summer Form, we can awaken the legendary Kartana and harness its power to protect this island!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impossible! How did you manage to defeat me? Could our mission to awaken Kartana be misguided?</speech>
            <speech>We believed Pikachu was the key... It seems we underestimated your determination.</speech>
        </speeches>
        <speeches id="3">
            <speech>So, you're back for more? The secrets of this island are beyond your comprehension.</speech>
            <speech>You will not disrupt our mission!</speech>
            <speech>Only the worthy can handle the power of Kartana.</speech>
        </speeches>
        <speeches id="4">
            <speech>Still not strong enough to challenge us. Return when you've honed your skills further.</speech>
            <speech>The island is relentless, and so are we. You'll need to train harder to stand a chance against us!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>You’re persistent, I’ll give you that. But your efforts are futile against the will of the Rangers!</speech>
            <speech>By harnessing Pikachu’s Summer Form, we will awaken Kartana and ensure the island's eternal protection!</speech>
        </speeches>
        <speeches id="2">
            <speech>How could this be? Defeated by you? Is our vision of a safeguarded island through Kartana just a dream?</speech>
            <speech>We were certain Pikachu was the catalyst... Perhaps we misjudged your strength.</speech>
        </speeches>
        <speeches id="3">
            <speech>Returning for another round? You clearly don’t understand the depths of our mission. You will not succeed!</speech>
            <speech>Only those with true strength can command the might of Kartana.</speech>
        </speeches>
        <speeches id="4">
            <speech>It appears you’re still unprepared for the challenge that lies ahead. Come back when you’re truly ready.</speech>
            <speech>This island tests all who dare face it, and so do we. You need to train more if you wish to defeat us!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>You're brave, I'll give you that. But bravery alone won't stop the Rangers' mission!</speech>
            <speech>With Pikachu’s unique abilities, we will awaken Kartana and protect this island like never before!</speech>
        </speeches>
        <speeches id="2">
            <speech>Defeated? How could this happen? Is our goal of awakening Kartana flawed?</speech>
            <speech>Pikachu was supposed to be the answer... Maybe we underestimated your resolve.</speech>
        </speeches>
        <speeches id="3">
            <speech>Back again? You still don't grasp the significance of our mission. You will not prevail!</speech>
            <speech>Only the truly powerful can control Kartana's strength.</speech>
        </speeches>
        <speeches id="4">
            <speech>You're not yet ready to face the full might of the Rangers. Return when you've gained more strength.</speech>
            <speech>The island's trials are relentless, and so are we. You need to train harder if you wish to overcome us!</speech>
        </speeches>
    </conversation>
</npcs>
