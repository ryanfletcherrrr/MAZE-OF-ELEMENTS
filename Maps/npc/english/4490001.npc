<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ever faced the might of Magma's fire? Let's test your endurance!</speech>
        </speeches>
        <speeches id="2">
            <speech>Our fire's been quenched for now, but the ember of revenge burns on.</speech>
        </speeches>
        <speeches id="3">
            <speech>So, the tide turned against us. But Magma's fire never truly extinguishes.</speech>
        </speeches>
        <speeches id="4">
            <speech>BURNN!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>They say every Grunt has their day. Today, I prove that right!</speech>
        </speeches>
        <speeches id="2">
            <speech>Defeat's just a stepping stone on my path to greatness. Watch me rise!</speech>
        </speeches>
        <speeches id="3">
            <speech>Not my day, huh? No matter. Every Grunt has their comeback. I'll be waiting.</speech>
        </speeches>
        <speeches id="4">
            <speech>Underestimated a Grunt, did you? We have our moments of glory, too!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>A grunt with a taste for opera? That's me. Let's see if you can keep up with my rhythm!</speech>
        </speeches>
        <speeches id="2">
            <speech>Defeat's just the overture to my story. The finale's yet to come!</speech>
        </speeches>
        <speeches id="3">
            <speech>Another loss, but every opera has its dramatic turns. I'll be back on stage.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, victory is mine this time! Yet, as in opera, the tale's not over 'til the final act. Prepare for our next encounter!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Whispers of ancient power echo through the night. Do you dare to heed their call?</speech>
            <speech>Under the watchful gaze of the moon, our covenant assembles. The challenge of the ages awaits your courage.</speech>
        </speeches>

        <speeches id="2">
            <speech>Though you triumph, the eternal darkness weaves its patience. Our resolve remains unshaken, undimmed.</speech>
            <speech>The shadows part, revealing a path to our enigmatic leader. A reward for the brave, the strong, the victorious.</speech>
        </speeches>

        <speeches id="3">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
            <speech>Our rituals, bound to the celestial dance, find no favor at this hour. The right moment eludes us still.</speech>
            <speech>Return when the moon reigns supreme over the night, in $DURATION. Only then shall the veil lift.</speech>
        </speeches>

        <speeches id="4">
            <speech>Incredible! Your strength pierces the veil of night, rivaling the ancient powers we command.</speech>
            <speech>Veiled in secrecy, our leader awaits. Your victory has earned you an audience in the heart of shadows.</speech>
        </speeches>

        <speeches id="5">
            <speech>The celestial bodies have yet to align; our power lies dormant, awaiting the ordained time.</speech>
            <speech>Return on Friday, when the moon's glow pierces the veil of reality, and our power is at its zenith.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Please come back later as I currently do not have anything to sell.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh hello there, it's 19th of the month, and you are here with my favourite Gastly.</speech>
            <speech>Here is my vault of special items, tell me what do you want to buy.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh hello there, it's 19th of the month, I am Storyteller, and I am here to sell exclusive items.</speech>
            <speech>However I would like you to show me my favourite Pokémon Gastly before I show you my vault of items.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Meditite" shouldSleep="" speed="1" sprite="307" type="pokemon" x="22" y="14">
        <path>RIGHTx3,UPx3,DOWNx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Meditite!</onCollisionSpeech>
        <speech>Meditite!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Duskull" shouldSleep="" speed="1" sprite="355" type="pokemon" x="3" y="2">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Vulpix" shouldSleep="" speed="1" sprite="37" type="pokemon" x="19" y="3">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Vulpix!</onCollisionSpeech>
        <speech>Vulpix!</speech>
    </movingNpc>
</npcs>
