<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Oh, the sea whispers secrets, but none tell me where Caprio has gone. My heart aches for his return.</speech>
            <speech>Caprio, my beacon in the night, where do the waves carry you? When will our paths cross once more?</speech>
            <speech>Each dawn I wander the shore, hoping for a sign. Caprio, my love, the ocean's vastness holds our tale.</speech>
            <speech>In the quiet of the night, I listen for the echo of your laughter, carried by the sea's embrace.</speech>
            <speech>Come back to me.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Was it you who found Caprio's notebook? The sea has finally answered my prayers. Thank you.</speech>
            <speech>In the pages, Caprio wrote of his quest to become the greatest fisherman, to master the sea's bounty.</speech>
            <speech>He spoke of the need to upgrade his equipment, to match the sea's challenge. His dreams, so vividly captured.</speech>
            <speech>And now, with Caprio back, we can dream together. He's promised to enhance my fishing rod, a testament to his journey.</speech>
            <speech>Caprio's return, with tales of the sea and skills honed, has brought joy back to our hearts. We are complete once more.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Greetings. I'm Caprio, a fisherman whose soul was once lost to the ocean's depths, but fate returned me to these shores.</speech>
            <speech>My journey was a tapestry of sea tales, each wave a lesson, each storm a teacher.</speech>
            <speech>The sea's secrets became my quest.</speech>
            <speech>To truly master fishing, one must understand the sea's whispers.</speech>
            <speech>Achieve a fishing level of 50, and I'll share my art.</speech>
        </speeches>
        <speeches id="2">
            <speech>Greetings. I'm Caprio, a fisherman whose soul was once lost to the ocean's depths, but fate returned me to these shores.</speech>
            <speech>My journey was a tapestry of sea tales, each wave a lesson, each storm a teacher.</speech>
            <speech>Ah, you've reached the mastery of level 50. Your dedication mirrors my own past, a quest for the ocean's heart.</speech>
            <speech>During my odyssey, I realized the importance of a worthy rod, crafted from the ocean's bounty, tempered by its trials.</speech>
            <speech>This rod is more than a tool; it's a testament to perseverance, a bridge between you and the sea's endless mysteries.</speech>
            <speech>To upgrade your rod, a fee of 250,000F is required. It covers rare materials, my expertise, and a piece of the ocean's soul.</speech>
        </speeches>
        <speeches id="3">
            <speech>It seems the price of the sea's treasures is too steep today. No matter, the ocean waits for no one, but my offer remains.</speech>
        </speeches>
        <speeches id="4">
            <speech>Your rod is now reborn, imbued with the essence of my journey and the sea's deepest whispers.</speech>
            <speech>It's ready to write new tales.</speech>
            <speech>Let this upgraded rod guide you beyond the horizon, to where the sea's heart beats strongest.</speech>
            <speech>Your story with the ocean begins anew.</speech>
        </speeches>
        <speeches id="5">
            <speech>With each cast of your upgraded rod, I'm reminded of my own voyage.</speech>
            <speech>The sea's mysteries are endless, and now, within your reach.</speech>
            <speech>Carry on, brave angler. The ocean's depths are yours to explore, its legends yours to discover.</speech>
            <speech>Our shared journey continues with every tide.</speech>
        </speeches>
    </conversation>
</npcs>
