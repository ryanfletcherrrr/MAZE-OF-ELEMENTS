<npcs>
    <movingNpc direction="DOWN" id="1" name="Nuzleaf" shouldSleep="" speed="1" sprite="274" type="pokemon" x="28" y="70">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Nuz!</onCollisionSpeech>
        <speech>Nuzleaf!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Yvan" randomRotation="false" sprite="10" x="19" y="63">
        <speech>A plan is only as good as those who see it through.</speech>
    </npc>
    <movingNpc direction="DOWN" id="11" name="Tympole" shouldSleep="" speed="1" sprite="535" type="pokemon" x="42" y="40">
        <path>RIGHTx3,DOWNx3,LEFTx3,UPx3</path>
        <onCollisionSpeech gap="4">Tympopo</onCollisionSpeech>
        <speech>Popole!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Lombre" shouldSleep="" speed="1" sprite="271" type="pokemon" x="49" y="51">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Brrrbrrr</onCollisionSpeech>
        <speech>Lombre is playing near the lake.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="17" name="Priscilla" randomRotation="true" sprite="53" x="46" y="107">
        <speech>Wow! I've never seen a flock of Swablu.</speech>
        <speech>There are so many of them.</speech>
    </npc>
    <movingNpc direction="DOWN" id="21" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="42" y="101">
        <path>RIGHTx1,DOWNx2,LEFTx1,UPx2</path>
        <onCollisionSpeech gap="4">Swab..</onCollisionSpeech>
        <speech>Swabluuuuu ^_^</speech>
    </movingNpc>
    <conversation id="2">
        <speeches id="1">
            <speech>You guys are— Where are you taking the professor?! H-hey! Wait up!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>I'm a beginner, but I'll do my best! I'll give it everything I can. Watch me!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sorry if I bored you! I'll try harder next time!</speech>
        </speeches>
        <speeches id="3">
            <speech>Sorry if I bored you! I'll try harder next time!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh! I forgot to finish off our battle! I still need to study more...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Your Pokémon... Show them to me...</speech>
        </speeches>
        <speeches id="2">
            <speech>Yes... You have good Pokémon... Pokémon must be happy to be raised by you...</speech>
        </speeches>
        <speeches id="3">
            <speech>Yes... You have good Pokémon... Pokémon must be happy to be raised by you...</speech>
        </speeches>
        <speeches id="4">
            <speech>All within my expectations... Nothing to be surprised about...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>If you want to reach the peak as a Trainer, you'll have to climb over me!</speech>
        </speeches>
        <speeches id="2">
            <speech>Go! You've gotta go! Go on and leave me!</speech>
        </speeches>
        <speeches id="3">
            <speech>Go! You've gotta go! Go on and leave me!</speech>
        </speeches>
        <speeches id="4">
            <speech>Even if you run into me disastrously, there's no rescue team on its way!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>It's not like I'm calling to the mountains. It's the mountains that are calling to me!</speech>
        </speeches>
        <speeches id="2">
            <speech>I can hear a sobbing voice... The mountains are weeping...</speech>
        </speeches>
        <speeches id="3">
            <speech>I can hear a sobbing voice... The mountains are weeping...</speech>
        </speeches>
        <speeches id="4">
            <speech>A man who is loved by the mountains... Guilty as charged...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>I'll show you the ropes of how to really use Pokémon!</speech>
        </speeches>
        <speeches id="2">
            <speech>You actually taught me a lesson! You're pretty amazing!</speech>
        </speeches>
        <speeches id="3">
            <speech>You actually taught me a lesson! You're pretty amazing!</speech>
        </speeches>
        <speeches id="4">
            <speech>I guess we can stop training for today. You learned some new things, right?</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>I can see the despair in your eyes. Bring it on!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh! You did pretty well, didn't you? You're better than I thought!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh! You did pretty well, didn't you? You're better than I thought!</speech>
        </speeches>
        <speeches id="4">
            <speech>Did I underestimate you? Or was it your true ability that let you win?</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Hi! Focus!</speech>
        </speeches>
        <speeches id="2">
            <speech>My hypnotic powers don't work on you?! What mental fortitude you must possess!</speech>
        </speeches>
        <speeches id="3">
            <speech>My hypnotic powers don't work on you?! What mental fortitude you must possess!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eeeeek!</speech>
        </speeches>
    </conversation>
    <conversation id="14">
        <speeches id="1">
            <speech>My love for Pokémon is stronger than anybody else's. Love can do anything.</speech>
        </speeches>
        <speeches id="2">
            <speech>Love should conquer all. Love should've helped me win...right?</speech>
        </speeches>
        <speeches id="3">
            <speech>Love should conquer all. Love should've helped me win...right?</speech>
        </speeches>
        <speeches id="4">
            <speech>This victory proves my true love for Pokémon.</speech>
        </speeches>
    </conversation>
    <conversation id="15">
        <speeches id="1">
            <speech>Lalalala... Lalalala... I am a loner...</speech>
        </speeches>
        <speeches id="2">
            <speech>Lalalala... Lalalala... Till we meet again...</speech>
        </speeches>
        <speeches id="3">
            <speech>Lalalala... Lalalala... Till we meet again...</speech>
        </speeches>
        <speeches id="4">
            <speech>Lalalala... Lalalala... Drifting like clouds...</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>Go easy on me is not in my vocabulary.</speech>
        </speeches>
        <speeches id="2">
            <speech>Even if I give it my all, it's meaningless when I lose.</speech>
        </speeches>
        <speeches id="3">
            <speech>Even if I give it my all, it's meaningless when I lose.</speech>
        </speeches>
        <speeches id="4">
            <speech>To me, etiquette is mercilessly defeating my opponents in battle even the weak.</speech>
        </speeches>
    </conversation>
    <conversation id="20">
        <speeches id="1">
            <speech>Here at Meteor Falls, where earth and sky merge, our final clash awaits. Are you prepared to face the dragon's might?</speech>
            <speech>My Salamence, alongside Altaria and Kingdra, stands ready. Show me the depth of your bond with your dragons.</speech>
        </speeches>
        <speeches id="2">
            <speech>Astonishing! Your strength has truly surpassed even my expectations. You've mastered the heart of dragons.</speech>
            <speech>As a token of my respect, and for visiting these places dear to me, I entrust you with my most prized possession: Salamencite.</speech>
            <speech>May it serve you well in your journey. Remember, the spirit of the dragon is eternal, and now, you too are part of its legacy.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hesitation? Remember, the essence of a dragon lies not just in strength but in the courage to face any challenge head-on.</speech>
            <speech>When you feel the time is right, with Altaria, Kingdra, and Salamence by your side, I'll be here, waiting for a rematch.</speech>
        </speeches>
        <speeches id="4">
            <speech>The roar of the falls echoes our battle, yet it seems your journey with the dragons still has chapters unwritten.</speech>
            <speech>Gather your strength, for the path of the dragon master is a relentless climb.</speech>
            <speech>Return when your spirit matches the dragons' boundless sky.</speech>
        </speeches>
        <speeches id="5">
            <speech>True mastery of dragons requires understanding each one's unique essence. Kingdra, Altaria, and Salamence...</speech>
            <speech>Together, they complete the dragon's soul.</speech>
            <speech>Should you seek to surpass me, let these three dragons guide your path.</speech>
            <speech>Their unity is the key to unlocking the full might of dragons.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="28" name="Elwood" randomRotation="true" sprite="5" x="31" y="16">
        <speech>The best confidence builder is experience.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="29" name="Guitarist James" randomRotation="true" sprite="49" x="15" y="14">
        <speech>This Seaking is my inspiration for my next song.</speech>
        <speech>Searchiiiiing, Seaking Destroy! \m/</speech>
    </npc>
    <movingNpc direction="DOWN" id="30" name="Seaking" shouldSleep="" speed="1" sprite="119" type="pokemon" x="10" y="6">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="31" name="Swellow" speed="1" sprite="277" type="pokemon" x="26" y="5">
        <path>DOWNx5,RIGHTx6,UPx5,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="32" name="Lotad" shouldSleep="" speed="1" sprite="270" type="pokemon" x="19" y="24">
        <path>LEFTx5,DOWNx2,RIGHTx5,UPx2</path>
        <onCollisionSpeech gap="4">Lotad!</onCollisionSpeech>
        <speech>Lotad!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Masquerain" speed="1" sprite="284" type="pokemon" x="18" y="38">
        <path>RIGHTx10,DOWNx3,LEFTx10,UPx3</path>
        <onCollisionSpeech gap="4">Masmasmas!</onCollisionSpeech>
        <speech>Masquerain!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="33" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="36" y="27">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Magikarp!</onCollisionSpeech>
        <speech>Karp!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="34" name="Daniel" randomRotation="true" sprite="16" x="40" y="25">
        <speech>This poor Magikarp got stuck in this rain puddle somehow. I will try to save it with the help of my mighty fishing rod.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="35" name="Simone" randomRotation="true" sprite="53" x="54" y="16">
        <speech>A friend is a gift you give to yourself.</speech>
    </npc>
    <movingNpc direction="DOWN" id="36" name="Zangoose" speed="1" sprite="335" type="pokemon" x="9" y="51">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="37" name="Seviper" speed="1" sprite="336" type="pokemon" x="16" y="51">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="38" name="Seviper" speed="1" sprite="336" type="pokemon" x="19" y="53">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="39" name="Zangoose" speed="1" sprite="335" type="pokemon" x="19" y="60">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="40" name="Santos" randomRotation="true" sprite="34" x="23" y="55">
        <speech>Whoa, look over there! It's a Zangoose and a Seviper locked in a fierce stare-down.</speech>
        <speech>Those two have been at odds since ancient times, their rivalry legendary. It's like witnessing a clash of titans!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Zangoose" speed="1" sprite="335" type="pokemon" x="35" y="64">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">GOoose!</onCollisionSpeech>
        <speech>Zangoose is in a fight with Seviper.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Seviper" speed="1" sprite="336" type="pokemon" x="40" y="64">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">SEVIPEEEER!</onCollisionSpeech>
        <speech>Seviper is in a fight with Zangoose.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="41" name="Seedot" shouldSleep="" speed="1" sprite="273" type="pokemon" x="40" y="79">
        <path>LEFTx3,DOWNx3,UPx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Seedot!</onCollisionSpeech>
        <speech>Seedotdot!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="42" name="Golem" shouldSleep="" speed="1" sprite="76" type="pokemon" x="55" y="64">
        <path>RIGHTx5,UPx3,RIGHTx3,LEFTx3,DOWNx3,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="43" name="Graveler" shouldSleep="" speed="1" sprite="75" type="pokemon" x="56" y="73">
        <path>UPx5,RIGHTx3,LEFTx3,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="44" name="Geodude" shouldSleep="" speed="1" sprite="74" type="pokemon" x="26" y="121">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="46" name="Onix" shouldSleep="" speed="1" sprite="95" type="pokemon" x="5" y="81">
        <path>UPx6,DOWNx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="47" name="Geodude" shouldSleep="" speed="1" sprite="74" type="pokemon" x="10" y="97">
        <path>UPx3,LEFTx2,UPx3,DOWNx3,RIGHTx2,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="48" name="Pereira" randomRotation="true" sprite="108" x="25" y="92">
        <speech>Isn't it amazing? Route 114 is teeming with Pokémon from all walks of life. Nature's diversity never ceases to amaze me!</speech>
    </npc>
    <movingNpc direction="DOWN" id="49" name="Skorupi" shouldSleep="" speed="1" sprite="451" type="pokemon" x="32" y="92">
        <path>RIGHTx2,UPx2,DOWNx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Skoruru!</onCollisionSpeech>
        <speech>Skorupi is playing tag with another Skorupi. They seem to have fun.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="50" name="Skorupi" shouldSleep="" speed="1" sprite="451" type="pokemon" x="34" y="89">
        <path>LEFTx2,DOWNx2,UPx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Skoruru!!</onCollisionSpeech>
        <speech>Skorupi is playing tag with another Skorupi. They seem to have fun.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="31" y="104">
        <path>DOWNx2,RIGHTx2,UPx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Swablu!</onCollisionSpeech>
        <speech>Swablu!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="34" y="112">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Swablu!</onCollisionSpeech>
        <speech>Swablu!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="40" y="116">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Swablu!</onCollisionSpeech>
        <speech>Swablu!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="27" name="Swellow" speed="1" sprite="277" type="pokemon" x="27" y="6">
        <path>LEFTx18,DOWNx10,UPx10,RIGHTx18</path>
        <onCollisionSpeech gap="4">Swellow!</onCollisionSpeech>
        <speech>Swellow!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="45" name="Swellow" speed="1" sprite="277" type="pokemon" x="52" y="121">
        <path>RIGHTx13,UPx6,DOWNx6,LEFTx13</path>
        <onCollisionSpeech gap="4">Swellow!</onCollisionSpeech>
        <speech>Swellow!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="51" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="60" y="97">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Swablu!</onCollisionSpeech>
        <speech>Swablu!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="53" y="110">
        <path>LEFTx4,DOWNx3,UPx3,RIGHTx4</path>
        <onCollisionSpeech gap="4">Swablu!</onCollisionSpeech>
        <speech>Swablu!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="43" y="98">
        <path>LEFTx7,RIGHTx7</path>
        <onCollisionSpeech gap="4">Swablu!</onCollisionSpeech>
        <speech>Swablu!</speech>
    </movingNpc>
</npcs>
