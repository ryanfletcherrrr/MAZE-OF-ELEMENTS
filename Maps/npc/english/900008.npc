<npcs>
    <!--<conversation id="1">
        <speeches id="1">
            <speech>Please help me, I am lost here. Please find me an escape rope.</speech>
            <speech>I got one I am sure, but I don't know where I dropped it. Please find it for me.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Please help me, I am lost here. Please find me an escape rope.</speech>
            <speech>I got one I am sure, but I don't know where I dropped it. Please find it for me.</speech>
        </speeches>

        <speeches id="2">
            <speech>Can I have that escape rope please?</speech>
        </speeches>

        <speeches id="3">
            <speech>Why will you do this to me?</speech>
        </speeches>

        <speeches id="4">
            <speech>Thank you so much. I love you.</speech>
            <speech>Ao kabhi haveli par</speech>
            <speech>*The girl seems to be speaking some other language.*</speech>
        </speeches>

        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>I think I should find the rope for her. She is very cute. I can't leave someone like her in trouble.</speech>
        </speeches>
    </conversation>-->
</npcs>