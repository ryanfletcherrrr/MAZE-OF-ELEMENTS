<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>*An invisible force pushes you back from the cave entrance*</speech>
            <speech>The air itself seems to reject your presence. Powerful psychic energy crackles around the sealed entrance.</speech>
            <speech>Whatever lies within this cave is far beyond the reach of ordinary trainers.</speech>
            <speech>You'll need special permission - or extraordinary strength - to breach this barrier.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Team Rocket's about power, and you've got none!</speech>
        </speeches>
        <speeches id="2">
            <speech>You won't get away with this!</speech>
        </speeches>
        <speeches id="3">
            <speech>You won't get away with this!</speech>
        </speeches>
        <speeches id="4">
            <speech>Heh, another weakling crushed under Team Rocket's boots!</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>You think becoming Champion makes you special? You're just another obstacle!</speech>
        </speeches>
        <speeches id="2">
            <speech>No... Giovanni was supposed to return with Mewtwo!</speech>
        </speeches>
        <speeches id="3">
            <speech>No... Giovanni was supposed to return with Mewtwo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Pathetic. Mewtwo will be ours again, and there's nothing you can do.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>You think Mewtwo is just a Pokemon? No... it's a key to absolute control. You're not worthy to wield it.</speech>
        </speeches>
        <speeches id="2">
            <speech>I... I saw our future why didn't it come true...?</speech>
        </speeches>
        <speeches id="3">
            <speech>I... I saw our future why didn't it come true...?</speech>
        </speeches>
        <speeches id="4">
            <speech>Another mind reduced to dust. Mewtwo belongs to Rocket, not fools like you.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>I followed Giovanni into the shadows and I'll follow him straight to conquest. Mewtwo belongs to him.</speech>
        </speeches>
        <speeches id="2">
            <speech>Giovanni... forgive me... I wasn't strong enough.</speech>
        </speeches>
        <speeches id="3">
            <speech>Giovanni... forgive me... I wasn't strong enough.</speech>
        </speeches>
        <speeches id="4">
            <speech>This is the cost of betrayal. You turned on destiny and lost.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Beldum" speed="1" sprite="374" type="pokemon" x="58" y="36">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Bzzzt</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Klink" speed="1" sprite="599" type="pokemon" x="21" y="49">
        <path>RIGHTx1,DOWNx1,RIGHTx2,DOWNx1,UPx1,LEFTx2,UPx1,LEFTx1</path>
        <onCollisionSpeech gap="4">KliiiiiiiiiI!</onCollisionSpeech>
        <speech>KliiI!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Hariyama" speed="1" sprite="297" type="pokemon" x="34" y="8">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Hariiiiiiii!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="4" name="Stunfisk" speed="1" sprite="618" type="pokemon" x="36" y="31">
        <path>LEFTx1,UPx1,DOWNx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Stuuun!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Declan" randomRotation="true" sprite="101" x="28" y="27">
        <speech>If you've made it this far into Cerulean Cave, you've gotta be the real deal.</speech>
        <speech>Not just anyone can handle the kind of Pokémon lurking down here!</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Dean" speed="1" sprite="93" type="npc" x="39" y="15">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4"/>
        <speech>These freshwater passages hide more than just strong Pokémon..</speech>
        <speech>I've found all kinds of rare items left behind!</speech>
        <speech>Trainers must've dropped 'em while making a run for it.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Dragonite" randomRotation="false" sprite="176" x="37" y="33">
        <speech>Dragonite lets out a low, rumbling grunt and spreads its wings protectively as it stands guard over its friend.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="8" name="Eric" speed="1" sprite="39" type="npc" x="8" y="44">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>I've been hoping to find a Cufant for ages, but it seems like Beldums keep showing up instead.</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="9" name="Phoebe" randomRotation="false" sprite="82" x="50" y="30">
        <speech>Do you see that Dragonite?</speech>
        <speech>Supposedly, it's a friend of a really powerful Pokémon that lives here.</speech>
        <speech>that's so sweet!?</speech>
    </npc>
</npcs>
