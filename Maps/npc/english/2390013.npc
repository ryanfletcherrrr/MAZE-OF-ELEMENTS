<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Team Rocket always gets what we want!</speech>
        </speeches>
        <speeches id="2">
            <speech>Urgh... Boss isn't going to like this...</speech>
        </speeches>
        <speeches id="3">
            <speech>Urgh... Boss isn't going to like this...</speech>
        </speeches>
        <speeches id="4">
            <speech>Better luck next time, loser!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>You're walking straight into trouble, kid!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... You got lucky this time.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... You got lucky this time.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Team Rocket always wins in the end!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>No one crosses Team Rocket and gets away with it!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... This isn't over!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... This isn't over!</speech>
        </speeches>
        <speeches id="4">
            <speech>Nice try, but it was never gonna happen!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Hah! Another kid thinking they can mess with Team Rocket?</speech>
        </speeches>
        <speeches id="2">
            <speech>Tch... Maybe you're stronger than I thought.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tch... Maybe you're stronger than I thought.</speech>
        </speeches>
        <speeches id="4">
            <speech>Pathetic! Did you really think you had a chance?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>You're walking straight into trouble, kid!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... You got lucky this time.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... You got lucky this time.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Team Rocket always wins in the end!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Please select a floor.{ENDCOLOR}</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GREEN}The lift console closes itself with a soft click.{ENDCOLOR}</speech>
            <speech>You'll need to activate it again if you wish to use it.</speech>
        </speeches>
        <speeches id="3">
            <speech>{COLOR=RED}The lift refuses to budge—it seems to require a special key.{ENDCOLOR}</speech>
            <speech>Perhaps a Rocket Grunt nearby has what you need...</speech>
        </speeches>
    </conversation>
    <npc direction="UP" hidden="false" id="1" name="Eric" randomRotation="true" sprite="49" x="13" y="14">
        <speech>Ugh... I'm stuck here paying off my gambling debt.</speech>
        <speech>Tried to take on those Rocket thugs, but they're way too strong for me.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="2" name="Joshua" speed="1" sprite="101" type="npc" x="23" y="31">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Be careful around these parts, kid.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Porygon" speed="1" sprite="137" type="pokemon" x="2" y="25">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">porrryyy!</onCollisionSpeech>
    </movingNpc>
</npcs>
