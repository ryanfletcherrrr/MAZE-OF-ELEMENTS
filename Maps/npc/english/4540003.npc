<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ah... Yes... I suppose I should welcome you to my home. Please forgive the rather sparse décor...</speech>
            <speech>Now, where to begin... Let us take a moment to understand what is happening to our world right now.</speech>
            <speech>The rumbling that shook the earth right now...</speech>
            <speech>The eardrum-rupturing explosion we heard...</speech>
            <speech>They are proof that a seal, which was long hidden deep undersea, has been undone at last.</speech>
            <speech>The super-ancient Pokémon that has been sealed deep beneath Route 128 since ancient times...</speech>
            <speech>It slept until now in the Seafloor Cavern.</speech>
            <speech>The entrance to that cavern was sealed by the power of a certain Pokémon,</speech>
            <speech>all in an effort to keep any human or Pokémon from ever breaching it.</speech>
            <speech>But now it appears that the scheming of that terrible team has undone the seal.</speech>
            <speech>There is no doubt that they intend to revive the super-ancient Pokémon.</speech>
            <speech>And once they do so, it seems they hope to make its power their own.</speech>
            <speech>$PLAYER_NAME... If that team obtains the power of the super-ancient Pokémon, it will upset the balance of nature in this world.</speech>
            <speech>A crisis unlike any other before it will befall every living thing on this planet.</speech>
            <speech>I plan to do everything in my power to quell this situation.</speech>
            <speech>That is my duty. But there is a limit to what I can do with my power alone...</speech>
            <speech>That is why I am asking for your help. I have great faith in your abilities.</speech>
            <speech>Lend me your strength to put a halt to these Teams' mad ambitions!</speech>
            <speech>With you and me and our Pokémon all working together, we will overcome this disastrous turn of events.</speech>
            <speech>I don't think it is out of the question.</speech>
            <speech>I will entrust you with this.</speech>
        </speeches>
        <speeches id="2">
            <speech>If you use Dive, you will be able to dive to the ocean floor with your Pokémon.</speech>
            <speech>And take this, so you can stay with your Pokémon even in the depths of the ocean...</speech>
            <speech>If you were to use Dive in the correct stretch of water along Route 128...</speech>
            <speech>I believe you should be able to reach the entrance to the Seafloor Cavern.</speech>
            <speech>I will join you when I finish my duties. Please do what you can to stop Team Aqua and Team Magma until then.</speech>
            <speech>I am trusting you to do this for me!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Welcome back, $PLAYER_NAME! I see you've added a Beldum to your team. Excellent progress since our Elite Four battle!</speech>
            <speech>As you know, Metagross has a powerful Mega Evolution, but there's a challenge. The Metagrossite has shattered.</speech>
            <speech>Reassembling it is crucial for unleashing Metagross's mega evolutionary power.</speech>
            <speech>Start by visiting the Fossil Maniac in Fallarbor for clues about the fragments. This is a key step in our journey.</speech>
        </speeches>
        <speeches id="2">
            <speech>The journey to reassemble the Metagrossite begins with the Fossil Maniac in Fallarbor. He might know where the fragments are.</speech>
            <speech>Let's regroup once you've collected all the Metagrossite fragments. We're on the brink of unlocking Metagross's full potential!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1" />
        <speeches id="2">
            <speech>Remarkable achievement, $PLAYER_NAME! You've successfully collected every fragment of the Metagrossite.</speech>
            <speech>May I take them? I'm eager to start the intricate process of reassembling this magnificent stone.</speech>
        </speeches>
        <speeches id="3">
            <speech>These fragments hold latent power that only Metagross can fully awaken. I'll need to meticulously repair them.</speech>
        </speeches>
        <speeches id="4">
            <speech>Wonderful! I'll begin the careful restoration of the Metagrossite immediately.</speech>
            <speech>Once you've honed the strength of your Metagross to level 100, return here to me.</speech>
            <speech>We will then tap into the true essence of its Mega Evolution, a moment worth striving for.</speech>
        </speeches>
        <speeches id="5" />
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>I see you're not ready yet. Whether it's reaching level 100 or not having a Metagross at all, there's no rush.</speech>
            <speech>Developing the strength to utilize the Metagrossite requires time and dedication.</speech>
            <speech>Return when you and your Metagross are prepared.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, $PLAYER_NAME, you're back! The Metagrossite has been meticulously repaired and is now brimming with potential.</speech>
            <speech>Let me see your Metagross. If it has reached level 100, it's ready to harness the power of this Mega Stone.</speech>
        </speeches>
        <speeches id="3">
            <speech>Not yet? I understand. Attaining such a level of strength takes time and dedication. Is your Metagross not strong enough yet?</speech>
        </speeches>
        <speeches id="4">
            <speech>You've done it! Your Metagross is indeed a formidable partner. It's an honor to entrust you with the Metagrossite.</speech>
            <speech>Use this power wisely. Mega Evolution is not just a display of strength, but a bond between Trainer and Pokémon.</speech>
            <speech>With the Metagrossite, you hold a formidable power. Remember to use it responsibly and in the spirit of fair competition.</speech>
            <speech>Good luck on your journey, $PLAYER_NAME. Enjoy the newfound strength of your Metagross, but tread carefully – it's a power like no other.</speech>
        </speeches>
        <speeches id="5">
            <speech>Now that you have the Metagrossite, the possibilities are endless. May your battles be epic, and your bond with Metagross stronger than ever!</speech>
        </speeches>
    </conversation>
</npcs>
