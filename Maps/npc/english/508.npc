<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Hey! $PLAYER_NAME! Tell me you got a little tougher!</speech>
            <speech>Me? Do you even need to ask? Of course, I got tougher! Come on! Let's battle it out!</speech>
        </speeches>
        <speeches id="2">
            <speech>Waah! What do you mean I lost?!</speech>
            <speech>Well, that's it! That's the last time I'll ever lose! I'm going to be the world's toughest Trainer,
                and you know it!
            </speech>
            <speech>The first thing to do is take on the Oreburgh City Pokémon Gym! I'm going to toughen up for that,
                totally!
            </speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>Don't lose your hopes. You weren't that bad. I am just too good.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>No need to waste time saying hello. Bring it on whenever you’re ready!</speech>
        </speeches>
        <speeches id="2">
            <speech>I won’t lose next time! Let’s battle again sometime!</speech>
        </speeches>
        <speeches id="3">
            <speech>I won’t lose next time! Let’s battle again sometime!</speech>
        </speeches>
        <speeches id="4">
            <speech>What a match! I’m quite satisfied with the result.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Haw haw haw... I’ll show you how hawesome my Pokémon are!</speech>
        </speeches>
        <speeches id="2">
            <speech>Could it be... How... My Pokémon and I are the strongest, though.</speech>
        </speeches>
        <speeches id="3">
            <speech>Could it be... How... My Pokémon and I are the strongest, though.</speech>
        </speeches>
        <speeches id="4">
            <speech>What do you think?! Hawesome, huh? My Pokémon and I are the strongest!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>All right! Here I come! I’ll show you my power!</speech>
        </speeches>
        <speeches id="2">
            <speech>YWhoa! You are incredible! I’m amazed and surprised!</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa! You are incredible! I’m amazed and surprised!</speech>
        </speeches>
        <speeches id="4">
            <speech>You amazed? You surprised? By the power of my Pokémon?!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Let’s have a fun Pokémon battle!</speech>
        </speeches>
        <speeches id="2">
            <speech>That was pretty amazingly fun! You’ve totally exhausted me...</speech>
        </speeches>
        <speeches id="3">
            <speech>That was pretty amazingly fun! You’ve totally exhausted me...</speech>
        </speeches>
        <speeches id="4">
            <speech>Hehe! Mehehehehe! See? It’s fun to win!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>A serious battle starts from a serious beginning! Are you sure you’re ready?</speech>
        </speeches>
        <speeches id="2">
            <speech>Seriously, I lost. That is, like, seriously depressing, but you were seriously cool.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seriously, I lost. That is, like, seriously depressing, but you were seriously cool.</speech>
        </speeches>
        <speeches id="4">
            <speech>Seriously, winning a serious battle is seriously the best!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Abra" shouldSleep="" speed="1" sprite="63" type="pokemon" x="24" y="2">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Abra! Abra!</onCollisionSpeech>
        <speech>Aaaabra!!!</speech>
        <speech>This Abra doesn't know how to teleport!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Seedot" shouldSleep="" speed="1" sprite="273" type="pokemon" x="26" y="6">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">See! Seedot! Seedot!</onCollisionSpeech>
        <speech>Auch!!! Seedot Tackles you!!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="33"
               y="8">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Karp Karp</onCollisionSpeech>
        <speech>Karp...*Splash*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Joshua" sprite="23" x="36" y="15">
        <speech>Can Abras stop teleporting away from me?</speech>
        <speech>I better put them to Sleep.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="" sprite="162" x="47" y="9">
        <speech>(RIGHT) Oreburgh City</speech>
        <speech>(LEFT) Jubilife City</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="6" name="" sprite="162" x="48" y="9">
        <speech>(RIGHT) Oreburgh City</speech>
        <speech>(LEFT) Jubilife City</speech>
    </npc>
    <npc direction="UP" hidden="false" id="7" name="Chadwick" sprite="10" x="44" y="18">
        <speech>These ledges are nice because you can jump down them for a quick trip back to Jubilife City!</speech>
        <speech>...</speech>
        <speech>Now if only you could climb back up them...</speech>
    </npc>

    <conversation id="8">
        <speeches id="2">
            <speech>Hi! I'm a PBO Tutorial campaign clown. Let's roll out my question!</speech>
            <speech>Can you buy a Game Pass from Mart?</speech>
        </speeches>
        <speeches id="3">
            <speech>That's not the correct answer. Let's try again.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>You're absolutely correct.</speech>
            <speech>You should give it a try!</speech>
        </speeches>
        <speeches id="5">
            <speech>Here you go! Your deserved 2 Starter Balls!</speech>
        </speeches>
    </conversation>
</npcs>
