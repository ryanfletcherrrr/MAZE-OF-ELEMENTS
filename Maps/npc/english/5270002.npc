<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Were you surprised to see me $PLAYER_NAME?</speech>
            <speech>I got bored so I came out to Hearthome for a little vacation.</speech>
            <speech>I am just as surprised to see you here, my dear!</speech>
        </speeches>
        <speeches id="2">
            <speech>Put this little glamour.</speech>
            <speech>I am sure it will look good on you. After all, I chose it.</speech>
            <speech>Bye for now.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Yes? I beg your pardon?</speech>
            <speech>Ah, oui, Contests you are here for? Currently contests are not happening because of Covid.</speech>
            <speech>Incidentally, Fantina, the Gym Leader of Hearthome, also used to be a Contestant.</speech>
            <speech>She is, how do you say, très fantastique! Fantina being myself, of course!</speech>
            <speech>Mmm, let me see... You also seem to be très strong. Enfin, so it shall be. I wait for you at the Gym!</speech>
        </speeches>
    </conversation>
</npcs>