<npcs>
    <conversation id="1">
        <speeches id="1">
            <!-- notFoundSpeech -->
            <speech>Hello, trainer. I am Seraphina, the guardian of the summer legends.</speech>
            <speech>My duty is to summon the legendary Latias in its Summer Form for worthy trainers.</speech>
            <speech>However, it seems you don't have enough Heat Shards or Pokémon in your Pokédex yet.</speech>
            <speech>To summon Latias, you need 1000 Heat Shards and 500 Pokémon in your Pokédex.</speech>
            <speech>Also, be aware that if you have a Latios roaming, summoning Latias will make Latios no longer roam for you.</speech>
            <speech>Come back when you've met the requirements.</speech>
        </speeches>
        <speeches id="2">
            <!-- foundSpeech -->
            <speech>Hello, trainer. I am Seraphina, the guardian of the summer legends.</speech>
            <speech>My duty is to summon the legendary Latias in its Summer Form for worthy trainers.</speech>
            <speech>Ah, I see you've gathered 1000 Heat Shards and have 500 Pokémon in your Pokédex.</speech>
            <speech>You are truly a dedicated trainer!</speech>
            <speech>As a reward, I will now summon Latias in its Summer Form for you.</speech>
            <speech>However, be aware that if you have a Latios roaming, it will no longer roam once Latias is summoned.</speech>
        </speeches>
        <speeches id="3">
            <!-- no -->
            <speech>Are you sure you want to decline this opportunity?</speech>
            <speech>This is a rare chance to encounter Latias in its Summer Form.</speech>
        </speeches>
        <speeches id="4">
            <!-- yes -->
            <speech>Excellent choice! Prepare yourself to witness the power of Latias in its Summer Form.</speech>
            <speech>Your dedication has truly paid off.</speech>
        </speeches>
        <speeches id="5">
            <!-- completion -->
            <speech>Congratulations on your encounter with Latias in its Summer Form!</speech>
            <speech>You've proven yourself as an extraordinary trainer.</speech>
            <speech>May this experience inspire you to continue your Pokémon journey.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Raj" randomRotation="false" sprite="75" x="4" y="8">
        <speech>The beach is fantastic for fun and games during the day, but when it comes to sleeping, I'd rather have the comfort of a cool hotel room.</speech>
        <speech>The air conditioning helps me get a good night's sleep after all the sun and surf.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Purugly" shouldSleep="" speed="1" sprite="432" type="pokemon" x="12" y="10">
        <path>RIGHTx2,DOWNx1,LEFTx2,UPx1</path>
        <onCollisionSpeech gap="4">Meow!</onCollisionSpeech>
        <speech>Meow!</speech>
    </movingNpc>
</npcs>
