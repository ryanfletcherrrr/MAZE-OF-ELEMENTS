<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>I should speak with Professor Oak before I go any further.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>Stop right there, young trainer! The situation in Kanto has become increasingly unstable.</speech>
        </speeches>
        <speeches id="2">
            <speech>We're seeing unprecedented changes in Pokémon behavior and their natural habitats are shifting unexpectedly.</speech>
            <speech>As a promising trainer, I urgently need your help to investigate these disturbances.</speech>
            <speech>Please, come and choose one of these Pokémon from the table. They are prepared to face these unusual challenges with you.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>Wait! $PLAYER_NAME! Let's check out our Pokémon! Come on, I'll take you on!</speech>
        </speeches>
        <speeches id="2">
            <speech>WHAT? Unbelievable! I picked the wrong Pokémon!</speech>
            <speech>Okay! I'll make my Pokémon fight to toughen it up! $PLAYER_NAME! Gramps! Smell you later!</speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>Yeah! Am I great or what?</speech>
            <speech>Okay! I'll make my Pokémon fight to toughen it up! $PLAYER_NAME! Gramps! Smell you later!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>I should help the professor before I leave town.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Ready to head back to {COLOR=CYAN}Lilycove{ENDCOLOR}, {COLOR=GOLD}Champion{ENDCOLOR}?</speech>
            <speech>The waters between {COLOR=YELLOW}Kanto{ENDCOLOR} and {COLOR=CYAN}Hoenn{ENDCOLOR} are calm now.</speech>
            <speech>It's been quite the adventure, but there's nothing like sailing back to familiar waters.</speech>
            <speech>What do you say? Time to return home to {COLOR=CYAN}Hoenn{ENDCOLOR}?</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Retired Trainer Grandpa" randomRotation="false" sprite="5" x="38" y="13">
        <speech>You know, Professor Oak wasn't always a professor, right?</speech>
        <speech>Back in the day, if you caught a Ditto, he'd challenge you!</speech>
        <speech>And boy, was he powerful..</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Mysterious Traveler" randomRotation="false" sprite="38" x="28" y="23">
        <speech>I traveled from Sinnoh recently. been around for years, though.</speech>
        <speech>Always nice to see bright young trainers setting off with their first starter Pokémon.</speech>
        <speech>It's like watching the beginning of a new story, every time.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="3" name="Fence-Watching Youngster" randomRotation="false" sprite="2" x="20" y="4">
        <speech>Sometimes I throw bread at the wild Rattata. Don't tell anyone.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="4" name="Lab Assistant" shouldSleep="" speed="1" sprite="8" type="npc" x="14" y="28">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Ive been organizing an Oaks Pokémon database for years. You know how many different forms of Rotom there are?! TOO MANY.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="8" y="30">
        <path>RIGHTx2,LEFTx2,DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="6" y="21">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="RIGHT" id="11" name="Fearow" shouldSleep="" speed="1" sprite="22" type="pokemon" x="0" y="2">
        <path>RIGHTx5,LEFTx5,DOWNx2,UPx2</path>
        <onCollisionSpeech gap="2"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Neighbor Karen" shouldSleep="" speed="1" sprite="12" type="npc" x="43" y="28">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="6"/>
        <speech>So you're going on a Pokmon journey?</speech>
        <speech>Let me guess. No sunscreen, no clean underwear, and NO plan!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Bulbasaur" speed="1" sprite="1" type="pokemon" x="33" y="9">
        <path>DOWNx2,RIGHTx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4">Bulbaaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Squirtle" speed="1" sprite="7" type="pokemon" x="41" y="18">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Squirtleee!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="16" name="Charmander" speed="1" sprite="4" type="pokemon" x="30" y="27">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Chaaaar!</onCollisionSpeech>
    </movingNpc>
</npcs>
