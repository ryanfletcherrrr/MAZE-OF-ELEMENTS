<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>There's an odd spaceman in front of the ruins.</speech>
            <speech>There isn't anything there, but that only seemed to make him get angry.</speech>
            <speech>He's saying he will blow up the entire town with a bomb...</speech>
            <speech>The nerve of it all...</speech>
            <speech>If only I were younger, I'd punish that spaceman with my Pokémon...</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>This town is insignificant! There's nothing of value here.</speech>
            <speech>It doesn't need to exist, so I'll blow it up with a Galactic Bomb!</speech>
            <speech>If you try to mess with me, I'll shut you down with a Pokémon Battle.</speech>
            <speech>You're taking on the world... No, the universe, even!</speech>
        </speeches>
        <speeches id="2">
            <speech>Too much to handle... I can't do anything here...</speech>
            <speech>This place is nothing! I'll happily get rid of this place!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Oh, you were magnificent! Aren't you quite a Trainer?</speech>
            <speech>As the elder of Celestic Town, I give you my thanks.</speech>
            <speech>Oh? That Old Charm... May I see that, dear?</speech>
            <speech>... What's that?</speech>
            <speech>You say Cynthia entrusted you with it to deliver to me?</speech>
            <speech>That's Cynthia... She's my granddaughter.</speech>
        </speeches>
        <speeches id="2">
            <speech>This Old Charm is something made in Celestic Town long, long ago.</speech>
            <speech>It was made in honour of a mythical deity said to have created Sinnoh.</speech>
            <speech>These Old Charms are still discovered.</speech>
            <speech>Since you are in Celestic Town, why not look around in the ruins?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Was everything all right here? You saw those strange people with a Galactic Bomb, didn't you?</speech>
            <speech>But those Team Galactic people...! I thought they were harmless.</speech>
            <speech>The bizarre ways they dress, and all their wild claims about making a new universe...I thought it was just silly talk.</speech>
            <speech>Nothing to take seriously. But they're surprisingly more trouble than expected.</speech>
            <speech>Trying to monopolize Pokémon just isn't acceptable!</speech>
            <speech>By the way, were the ruins fun to explore? If you're interested, there is a library in Canalave City.</speech>
            <speech>It's stocked with ancient books. You can look up Sinnoh history there.</speech>
            <speech>The quickest way to Canalave City is to go west from Jubilife City.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Liam" sprite="20" x="33" y="15">
        <speech>Howdy!</speech>
        <speech>Studying up on local history?</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Ava" sprite="53" x="6" y="17">
        <speech>There's no Pokémon Mart in this town...</speech>
        <speech>I guess I'll have to order online...</speech>
    </npc>
    <movingNpc direction="RIGHT" id="3" name="Whiscash" shouldSleep="" speed="1" sprite="340" type="pokemon" x="20" y="8">
        <path>RIGHTx2, DOWNx2, LEFTx2, UPx2</path>
        <onCollisionSpeech gap="4">Whis!</onCollisionSpeech>
        <speech>Whis!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Levi" shouldSleep="" speed="1" sprite="4" type="npc" x="11" y="37">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Hello!</onCollisionSpeech>
        <speech>Hey, do you know what they say?</speech>
        <speech>They say a Pokémon created the Sinnoh region.</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="5" name="Victoria" sprite="6" x="17" y="21">
        <speech>Excuse me, what's your name?</speech>
        <speech>$PLAYER_NAME? Let me tell you something.</speech>
        <speech>A giant etching of a Pokémon-like creature covers the wall...</speech>
        <speech>There is some fading text etched in as well...</speech>
        <speech>The flow of time never stops...</speech>
        <speech>The past, future, and present...</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Josiah" shouldSleep="" speed="1" sprite="20" type="npc" x="26" y="24">
        <path>DOWNx2, UPx2</path>
        <onCollisionSpeech gap="4">Excuse me!</onCollisionSpeech>
        <speech>The first time I came here I felt the overwhelming desire to return.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="17" y="33">
        <path>LEFTx1, RIGHTx1</path>
        <onCollisionSpeech gap="4">Karp!</onCollisionSpeech>
        <speech>Karppp!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Psyduck" shouldSleep="" speed="1" sprite="54" type="pokemon" x="37" y="27">
        <path>DOWNx9, RIGHTx4, LEFTx4, UPx9</path>
        <onCollisionSpeech gap="4">Psy! Psy!</onCollisionSpeech>
        <speech>Psyyyyyy!</speech>
    </movingNpc>
</npcs>
