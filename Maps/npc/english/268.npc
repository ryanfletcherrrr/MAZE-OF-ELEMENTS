<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hold there, traveler. I sense you approach these depths without proper understanding.</speech>
            <speech>The passages beyond are treacherous - ancient traps and guardians await those who enter unprepared.</speech>
            <speech>You lack the knowledge to navigate what lies below. The labyrinth would consume you whole.</speech>
            <speech>Seek out the wisdom keepers first. Only when you truly understand the {COLOR=GOLD}Hidden Labyrinth{ENDCOLOR} may you pass safely.</speech>
            <speech>Return when the ancient knowledge flows through you, and I shall grant you passage.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>T H E D E E P C A L L S F O R T H T H E W A T E R G I F T</speech>
        </speeches>
        <speeches id="2">
            <speech>T H E D E E P C A L L S F O R T H T H E W A T E R G I F T</speech>
            <speech>THE UNOWN REACT TO YOUR SPLASH PLATES</speech>
            <speech>DO YOU WANT TO HAND OVER THE SPLASH PLATES TO UNOWN?</speech>
        </speeches>
        <speeches id="3">
            <speech>T H E C I R C L E R E M A I N S D R Y</speech>
        </speeches>
        <speeches id="4">
            <speech>A HIDDEN PATH FLOWS OPEN LIKE RUSHING WATER.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>T H E D E E P C A L L S F O R T H T H E W A T E R G I F T</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Scientist Scera" shouldSleep="" speed="1" sprite="7" type="npc" x="15" y="10">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>These ruins are older than any map I've studied.</speech>
        <speech>Some say they predate even the first Pokémon League...</speech>
        <speech>But I care less about the stories and more about what they left behind.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Unown" shouldSleep="" speed="1" sprite="201" type="pokemon" x="12" y="1">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Unown" shouldSleep="" speed="1" sprite="201" type="pokemon" x="2" y="5">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Geodude" shouldSleep="" speed="1" sprite="74" type="pokemon" x="22" y="6">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Cubone" shouldSleep="" speed="1" sprite="104" type="pokemon" x="22" y="15">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>
