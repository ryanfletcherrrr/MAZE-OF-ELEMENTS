<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Glad you made it! It won’t be an easy job from here.</speech>
        </speeches>
        <speeches id="2">
            <speech>I got a little carried away earlier, but what job was I talking about?</speech>
        </speeches>
        <speeches id="3">
            <speech>I got a little carried away earlier, but what job was I talking about?</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! What’d I tell ya? You’re not ready yet.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Victory will never come to those who aren’t prepared to face defeat.</speech>
        </speeches>
        <speeches id="2">
            <speech>Keep winning for me, too. Become the number-one Trainer here.</speech>
        </speeches>
        <speeches id="3">
            <speech>Keep winning for me, too. Become the number-one Trainer here.</speech>
        </speeches>
        <speeches id="4">
            <speech>I’m not prepared to lose, but I won easily anyway.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Welcome! This is the Oreburgh Pokémon Gym! I'm Roark, the Gym Leader!</speech>
            <speech>I'm but one Trainer who decided to walk proudly with Rock-type Pokémon!</speech>
            <speech>As the Gym Leader, I need to see your potential as a Trainer.</speech>
            <speech>And, I'll need to see the toughness of the Pokémon that battle with you!</speech>
        </speeches>
        <speeches id="2">
            <speech>W-what? That can't be! My buffed-up Pokémon!</speech>
            <speech>This is embarrassing... I went and lost to a Trainer who didn't have a single Gym Badge...</speech>
            <speech>But that's tough. You were strong, and I was weak. That's all there is.</speech>
            <speech>According to Pokémon League rules, I have to give you our Gym Badge since you've beaten me, the Leader.</speech>
            <speech>Here's your official Pokémon League Coal Badge.</speech>
            <speech>Having that Coal Badge means your Pokémon can now use the hidden move Rock Smash outside of battle.</speech>
            <speech>You should also take this, too.</speech>
            <speech>That TM81 contains the move Bulldoze.</speech>
            <speech>Incidentally, a TM will teach its move to a Pokémon instantly.</speech>
            <speech>But a TM will break when you use it, so make certain you want a Pokémon to learn that move.</speech>
        </speeches>
        <speeches id="3">
            <speech>In this region of Sinnoh, there are seven other Gym Leaders.</speech>
            <speech>I should warn you — they're a lot tougher than I am!</speech>
        </speeches>
        <speeches id="4">
            <speech>This battle was too easy for me. Nevertheless, I am happy to give you another chance.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Gym Advisor Tom" sprite="37" x="12" y="25">
        <speech>Hey there Champ in the making!</speech>
        <speech>My name is Tom, you'll find me in the various Gyms as an advisor of sorts...</speech>
        <speech>Roark is the first gym leader of the Sinnoh Region and he uses the Rock type!</speech>
        <speech>Some useful counters to the Rock type are Water, Grass and Fighting.</speech>
        <speech>I would personally recommend a Psyduck or Machop if you don't already have one!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="" sprite="162" x="6" y="25">
        <speech>Oreburgh Gym - Home of Roark the Rock!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="" sprite="162" x="11" y="25">
        <speech>Oreburgh Gym - Home of Roark the Rock!</speech>
    </npc>
</npcs>
