<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Bem, bem, $PLAYER_NAME! Achei que você acabaria aparecendo por aqui.</speech>
            <speech>Então você também tem todos os distintivos, não é? Nada mal... mas não o suficiente para me derrotar!</speech>
            <speech>Considere isso como um aquecimento antes da Liga Pokémon. Vamos ver o que você realmente tem!</speech>
        </speeches>
        <speeches id="2">
            <speech>Grr... Eu baixei minha guarda. Essa é a única razão pela qual você venceu!</speech>
            <speech>Não importa, isso só me deixou animado! Estou indo para a Liga e, da próxima vez, vou esmagar vocês!</speech>
            <speech>Mais tarde, $PLAYER_NAME! Tente acompanhar!</speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>Ah! Ainda muito lento, $PLAYER_NAME!</speech>
            <speech>Se esse for o seu melhor, não se preocupe em aparecer na Liga. Você será comido vivo!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>Ei! $PLAYER_NAME! Já está indo para a Liga Pokémon?</speech>
            <speech>Hah, não se precipite. Duvido que você tenha um único distintivo ainda!</speech>
            <speech>Além disso, os guardas não o deixarão passar sem eles. Que tal uma batalha rápida primeiro?</speech>
        </speeches>
        <speeches id="2">
            <speech>Tch... Você teve sorte dessa vez!</speech>
            <speech>Ouvi dizer que a Liga está cheia de treinadores difíceis. Vou começar a me preparar agora.</speech>
            <speech>Você também deveria parar de enrolar e levar a sério!</speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>Ah! Isso era para ser um desafio?</speech>
            <speech>Se você está almejando a Liga dessa forma, vai se acidentar e se queimar. Até logo, perdedor!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Nidoran" speed="1" sprite="32" type="pokemon" x="57" y="10">
        <path>LEFTx1,RIGHTx1,LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Ree-rreeeh!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="2" name="Mankey" speed="1" sprite="56" type="pokemon" x="22" y="29">
        <path>UPx1,DOWNx1</path>
        <onCollisionSpeech gap="4">Maaaan-keeyyy!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Phil" randomRotation="true" sprite="115" x="29" y="14">
        <speech>Não, não, não, não, garoto. Desistir é para os novatos.</speech>
        <speech>Voltei porque não vou desistir de vocês. Estou disposto a ir até o fim. E quanto a você?</speech>
    </npc>
</npcs>