<npcs>
    <movingNpc direction="DOWN" id="1" name="Wingull" speed="1" sprite="278" type="pokemon" x="21" y="22">
        <path>RIGHTx10,DOWNx2,LEFTx10,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Wingull" speed="1" sprite="278" type="pokemon" x="31" y="29">
        <path>LEFTx10,DOWNx2,RIGHTx10,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Swellow" speed="1" sprite="277" type="pokemon" x="29" y="4">
        <path>LEFTx5,DOWNx5,RIGHTx5,UPx5</path>
        <onCollisionSpeech gap="4">Swellow!</onCollisionSpeech>
        <speech>Suave!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Mareep" shouldSleep="" speed="1" sprite="179" type="pokemon" x="14" y="7">
        <path>RIGHTx4,DOWNx1,LEFTx4,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Flaaffy" shouldSleep="" speed="1" sprite="180" type="pokemon" x="40" y="48">
        <path>LEFTx3,UPx2,RIGHTx3,DOWNx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Vileplume" shouldSleep="" speed="1" sprite="45" type="pokemon" x="17" y="47">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Bellossom" shouldSleep="" speed="1" sprite="182" type="pokemon" x="40" y="8">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Starly" shouldSleep="" speed="1" sprite="396" type="pokemon" x="13" y="22">
        <path>UPx2,LEFTx1,DOWNx2,RIGHTx1</path>
        <onCollisionSpeech gap="4">Starly!</onCollisionSpeech>
        <speech>Estrelinha!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="9" name="Richard" randomRotation="false" sprite="11" x="15" y="41">
        <speech>Ei, você sabia que há um local secreto no último andar onde você pode ver todo o caminho até Slateport City?</speech>
        <speech>Brincadeira, é apenas dentro da cidade. Mas a vista é de tirar o fôlego.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="10" name="Sarah" randomRotation="true" sprite="12" x="39" y="11">
        <speech>Ah, colega instrutor! Você notou a atmosfera serena aqui?</speech>
        <speech>É um paraíso onde Pokémon de todas as formas e tamanhos se reúnem em harmonia.</speech>
        <speech>Cada um deles contribui para a vibrante tapeçaria da vida em Mauville."</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="11" name="Cindy" randomRotation="true" sprite="17" x="35" y="23">
        <speech>Sempre venho a esse andar para me perder em meus pensamentos e sonhar acordado. É muito relaxante e reconfortante para a alma.</speech>
    </npc>
    <movingNpc direction="DOWN" id="12" name="Oddish" shouldSleep="" speed="1" sprite="43" type="pokemon" x="34" y="41">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Oddish.</onCollisionSpeech>
        <speech>Oddish?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="12" y="14">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Zagoon!</onCollisionSpeech>
        <speech>Zig?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Christina" shouldSleep="" speed="1" sprite="36" type="npc" x="46" y="34">
        <path>LEFTx4,DOWNx2,RIGHTx4,UPx2</path>
        <onCollisionSpeech gap="4">Peace.</onCollisionSpeech>
        <speech>Bem-vindo a esse canto tranquilo de Mauville.</speech>
        <speech>Aqui, em meio à agitação da cidade, encontro consolo na arte suave da ioga. A cada alongamento e respiração, eu me harmonizo com a energia pacífica dos Pokémon reunidos aqui.</speech>
        <speech>Sinta-se à vontade para se juntar a mim nessa prática serena, onde corpo e alma se unem em perfeita tranquilidade.</speech>
    </movingNpc>

    <conversation id="1">
        <speeches id="1">
            <speech>Saudações dos céus! Eu sou o Bird Keeper, empoleirado no alto do telhado de Mauville, onde o Swellow desliza e a brisa conta histórias.</speech>
            <speech>Meu sonho? Presenciar um Swellow no auge de sua força, nível 100, voando além dos limites.</speech>
            <speech>Você já cultivou uma maravilha dessas? Um Swellow que dança com as nuvens e comanda os ventos?</speech>
            <speech>Essa visão elevaria meu espírito a novas alturas!</speech>
        </speeches>

        <speeches id="2">
            <speech>Saudações dos céus! Eu sou o Bird Keeper, guardião da vista mais alta de Mauville, onde o Swellow reina supremo.</speech>
            <speech>Ah, olhar para um Swellow nível 100 é ver a essência da própria liberdade.</speech>
            <speech>Seu Swellow, deve ser um espetáculo de graça e poder, um verdadeiro dançarino do céu.</speech>
            <speech>Você me daria a honra de testemunhar seu voo? Por esse privilégio, eu lhe ofereço um tesouro do céu.</speech>
            <speech>Em troca do seu Swellow nível 100, deixe-me conceder a você um presente que reflete sua majestade.</speech>
        </speeches>

        <speeches id="3">
            <speech>Entendido, $PLAYER_NAME. Um Swellow de tal estatura é mais do que um Pokémon; é um companheiro, uma parte de você.</speech>
            <speech>Minha oferta permanece tão aberta e livre quanto o céu. Se seu coração e sua alma desejarem compartilhar seu horizonte comigo, estarei aqui.</speech>
        </speeches>

        <speeches id="4">
            <speech>Requintado! Seu Swellow, um verdadeiro mestre da extensão azul, agora agracia minha vida com sua presença.</speech>
            <speech>Aceite isso, um símbolo de minha mais profunda gratidão e um símbolo dos céus sem limites. Obrigado, $PLAYER_NAME!</speech>
        </speeches>

        <speeches id="5">
            <speech>A visão de seu Swellow voando pelos céus é uma maravilha de se ver. Uma verdadeira prova de sua dedicação como treinador.</speech>
            <speech>Cada deslize, cada mergulho, fala muito sobre o vínculo entre vocês dois. É como se Swellow tivesse se tornado um com o próprio vento.</speech>
            <speech>Para sua incrível jornada com Swellow, ofereço o Aero Wing Fragment. Que ele simbolize as alturas que vocês alcançaram juntos.</speech>
            <speech>Imagine que esse fragmento já foi parte de uma criatura lendária que governava os céus. Agora, ele é um presente em homenagem às suas conquistas.</speech>
        </speeches>

    </conversation>

</npcs>