<npcs>
    <npc direction="DOWN" id="1000" name="Swimmer Kartik" sprite="93" x="46" y="46">
        <speech>Estou esperando meu amigo chegar aqui para que possamos nadar até Barfi Falls.</speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Hiker Swami" sprite="48" x="54" y="30">
        <speech>Estou coletando peças de madeira para levar para minha viagem de caminhada. Não me perturbe, por favor, bom senhor.</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Old Man Kooga" randomRotation="true" sprite="39" x="48" y="7">
        <speech>Pedra gigante... Quero quebrá-la em pedaços com meu jutsu. Afaste-se ou você será destruído.</speech>
        <speech>O que são essas coisas? Eu as vejo por toda parte em Jvaloh, mas nunca entendo o que elas realmente são.</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Old Man Kooga" randomRotation="true" sprite="39" x="40" y="8">
        <speech>Pedra gigante... Quero quebrá-la em pedaços com meu jutsu. Afaste-se ou você será destruído.</speech>
        <speech>O que são essas coisas? Eu as vejo por toda parte em Jvaloh, mas nunca entendo o que elas realmente são.</speech>
    </npc>
    <npc direction="DOWN" id="1003" name="Rich Boy Mansu" randomRotation="true" sprite="75" x="22" y="18">
        <speech>Estou colhendo essas flores para o meu encontro. Você tem alguma dica?</speech>
        <speech>Quero dizer, parece que vocês estão namorando há muito tempo.</speech>
        <speech>Eu estava brincando, vá embora.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>A aparência e a idade podem enganar. Vou lhe mostrar como.</speech>
        </speeches>
        <speeches id="2">
            <speech>De fato. Você parecia jovem e fraco, mas lutou como alguém com muita experiência.</speech>
        </speeches>
        <speeches id="3">
            <speech>De fato. Você parecia jovem e fraco, mas lutou como alguém com muita experiência.</speech>
        </speeches>
        <speeches id="4">
            <speech>Gostaria de saber como você chegou até aqui.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Deixe-me mostrar a você o poder de um verdadeiro pescador!</speech>
        </speeches>
        <speeches id="2">
            <speech>Mesmo que você tenha vencido, tenho certeza de que me saí muito melhor do que os outros pescadores.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mesmo que você tenha vencido, tenho certeza de que me saí muito melhor do que os outros pescadores. Sou uma elite.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você não foi ruim. É que eu sou uma elite.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Estou viajando para a aldeia vizinha para fazer reparos. Mas vamos batalhar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Perdi, mas foi divertido. Obrigado pela batalha.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu também queria ser um mestre Pokémon, mas não tinha dinheiro suficiente para comprar pokébolas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Garoto, você quer ser um mestre Pokémon? Tem certeza?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Quem somos nós? Bug Catchers.</speech>
            <speech>O que queremos? Insetos em todo o planeta.</speech>
            <speech>Como planejamos fazer isso? Derrotando treinadores como você.</speech>
        </speeches>
        <speeches id="2">
            <speech>Quem somos nós? Losers....</speech>
        </speeches>
        <speeches id="3">
            <speech>Quero dizer, o que há de errado com insetos? Bem, de qualquer forma, eu estava aqui para encontrar o pai do meu amigo, que também é um colecionador de insetos, atualmente em sua jornada rumo à $GYM8_TOWN.</speech>
        </speeches>
        <speeches id="4">
            <speech>Mais um que morre.</speech>
        </speeches>
    </conversation>
</npcs>