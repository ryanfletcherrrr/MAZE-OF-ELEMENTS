<npcs>
    <conversation id="TELEPORT_QUESTION">
        <speech>Abra... Kadabra..... Alakazam.......</speech>
        <speech>Quer ver a magia e viajar para outra terra?</speech>
    </conversation>

    <conversation id="TELEPORTER_NO_REPLY">
        <speech>Isso é lamentável. Volte sempre que desejar viajar para outro lugar.</speech>
    </conversation>

    <conversation id="BANK_QUESTION">
        <speech>Saudações! Bem-vindo ao sistema de caixas eletrônicos do Bank of PBO!</speech>
        <speech>Você gostaria de sacar ou depositar dinheiro?</speech>
    </conversation>

    <conversation id="BANK_NO_REPLY">
        <speech>Retorne sempre que desejar fazer uma transação.</speech>
    </conversation>

    <conversation id="BANK_NO_MEMBERSHIP">
        <speech>Esse recurso está disponível somente para pessoas com uma "associação ao PBO".</speech>
        <speech>Para todos os não membros, você pode usar nossos outros terminais de uso gratuito.</speech>
    </conversation>

    <conversation id="SEEKER_NOT_READY">
        <speech>Acho muito corajoso de sua parte desafiar alguém muito mais forte do que você.</speech>
        <speech>Infelizmente, não gosto de perder meu tempo com pessoas fracas.</speech>
    </conversation>

    <conversation id="SEEKER_BEFORE_BATTLE">
        <speech>Então você se atreve a desafiar o clã do mais forte dos mais fortes do PBO?</speech>
        <speech>Vamos ver o que você tem, garoto.</speech>
    </conversation>

    <conversation id="SEEKER_LOSS">
        <speech>Estou impressionado com $PLAYER_NAME.</speech>
        <speech>Vamos fazer uma revanche mais tarde. Preciso praticar mais.</speech>
    </conversation>

    <conversation id="SEEKER_VICTORY">
        <speech>Eu o avisei. Agora me pague uma boa quantia em dinheiro por usar meu tempo.</speech>
    </conversation>

    <conversation id="SEEKER_NEED_CHARGE">
        <speech>Preciso de algum tempo para me preparar para outra batalha. Por que está sendo tão impaciente?</speech>
    </conversation>

    <conversation id="NO_FISHING_ROD_IN_BAG">
        <speech>Olá, garoto. Sou o especialista local em varas de pesca. Ouvi dizer que as varas de pescar estão sendo distribuídas em Jubilife
            Cidade.
        </speech>
    </conversation>
    <conversation id="FISHING_INTRO_QUES">
        <speech>Olá. Sou o especialista local em varas de pesca. Posso consertar sua vara de pescar, se quiser? Por uma
            taxa, é claro.
        </speech>
        <speech>Gostaria de reparar sua haste por 500 F?</speech>
    </conversation>
    <conversation id="FISHING_PLAYER_SAYS_YES">
        <speech>Parabéns, sua vara de pescar foi consertada com sucesso!</speech>
    </conversation>
    <conversation id="FISHING_PLAYER_SAYS_NO">
        <speech>Volte se precisar de reparos em sua haste.</speech>
    </conversation>
    <conversation id="ROD_NEEDS_MAINTENANCE">
        <speech>Sua haste já está em perfeito estado! Volte quando precisar de reparos.</speech>
    </conversation>
    <conversation id="MAINTENANCE_CRITERIA_FAILURE">
        <speech>Ops, você não tem F suficiente para consertar sua haste.</speech>
    </conversation>

    <conversation id="HEALER_NO_MEMBERSHIP">
        <speech>Ah, só posso curar seu pokémon se você tiver uma assinatura do PBO. Você pode comprar uma na Donator Shop.</speech>
    </conversation>

    <conversation id="SEEKER_MISSING">
        <speech>No momento, você não tem um Vs. Seeker em sua bolsa.</speech>
    </conversation>

    <conversation id="CW_NOT_RUNNING">
        <speech>O Crew Wars não está funcionando.</speech>
    </conversation>

    <conversation id="COME_TOMORROW_MAZE">
        <speech>Não é mais seguro ir às Cavernas Lendárias. Por favor, volte amanhã.</speech>
    </conversation>

    <conversation id="MAZE_LEGENDARY_ALREADY_BATTLED">
        <speech>**O Pokémon parece não estar mais reconhecendo você.**</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Deseja curar seu Pokémon? Lembre-se de que cada cura que você usar reduzirá sua chance de obter um drop lendário.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Deseja curar seu Pokémon? Lembre-se de que cada cura que você usar reduzirá sua chance de obter um drop lendário.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Deseja curar seu Pokémon? Lembre-se de que cada cura que você usar reduzirá sua chance de obter um drop lendário.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_QUESTION">
        <speech>Deseja curar seu Pokémon? Lembre-se de que cada cura que você usar reduzirá sua chance de obter um drop lendário.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_YES">
        <speech>Aqui está. Todos os seus Pokémon estão agora curados.</speech>
    </conversation>

    <conversation id="LEGENDARY_HEAL_NO">
        <speech>Boa escolha, biscoito duro.</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_BEFORE_BATTLE">
        <speech>Então você quer lutar comigo? Muito bem, vamos lá!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_VICTORY">
        <speech>Muito forte!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_LOSS">
        <speech>Muito fraco!</speech>
    </conversation>

    <conversation id="LEGENDARY_PVP_NOT_BATTLING">
        <speech>No momento, não estou com vontade de lutar contra você.</speech>
    </conversation>

    <conversation id="LEGENDARY_BOSS_WARP_PVP_NPC_PENDING">
        <speech>Não posso levá-lo à caverna lendária até que você derrote todos os meus irmãos e me mostre que é poderoso o suficiente.</speech>
    </conversation>

    <conversation id="FRONTIER_COME_BACK_MONDAY">
        <speech>Campeão, os treinadores estão cansados de perder para você e não estão mais dispostos a lutar.</speech>
        <speech>Volte na segunda-feira, quando eles estarão dispostos a batalhar com você novamente.</speech>
    </conversation>

    <conversation id="FRONTIER_LEVEL_NOT_CLEARED">
        <speech>Desculpe, jovem treinador, mas não posso deixá-lo passar até que derrote o campeão do nível atual.</speech>
    </conversation>

    <conversation id="FRONTIER_LEVEL_CLEARED">
        <speech>Jovem treinador, você já me derrotou. Vá e tente desafiar chefes de nível mais alto.</speech>
    </conversation>

    <conversation id="FRONTIER_PARTY_INFO">
        <speech>Você tem mais de 3 Pokémon no grupo.</speech>
    </conversation>

    <conversation id="FRONTIER_CHALLENGE_BOSS_LEVEL_BATTLES_OVER">
        <speech>Treinador, você já me derrotou mais do que o suficiente. Por favor, vá e desafie o chefe.</speech>
    </conversation>

    <conversation id="FRONTIER_PREVIOUS_LEVELS_NOT_CLEARED">
        <speech>Você precisa derrotar os chefes dos níveis anteriores antes de poder me desafiar.</speech>
    </conversation>

    <conversation id="FRONTIER_BEFORE_BATTLE">
        <speech>Olá, jovem, vamos lutar!</speech>
    </conversation>

    <conversation id="FRONTIER_LOSS">
        <speech>Isso deve ter sido um acaso.</speech>
    </conversation>

    <conversation id="FRONTIER_VICTORY">
        <speech>Treine mais ou vá para casa.</speech>
    </conversation>

    <conversation id="FRONTIER_CANNOT_CHALLENGE_BOSS">
        <speech>Você precisa derrotar meu aprendiz 20 vezes para me desafiar.</speech>
    </conversation>

    <conversation id="FRONTIER_USED_SPECIES_OR_TRADED_POKEMON">
        <speech>Você tem um Pokémon que foi usado na fronteira anterior ou que foi obtido por meio de troca e que foi usado na fronteira recentemente.</speech>
        <speech>Você pode usar esses Pokémon após a próxima reinicialização da fronteira, que acontece toda segunda-feira.</speech>
        <speech>Mude seu grupo para poder lutar comigo.</speech>
    </conversation>

    <conversation id="BT_BEFORE_BATTLE">
        <speech>Então você quer me derrotar e fazer uma sequência? Tudo bem, tente!</speech>
    </conversation>

    <conversation id="BT_NPC_LOSS">
        <speech>Você venceu a(s) batalha(s) $WIN_STREAK consecutivamente. Que droga!</speech>
    </conversation>

    <conversation id="BT_NPC_VICTORY">
        <speech>Muito fraco! Agora comece do 0 HAHAHA!</speech>
    </conversation>

    <conversation id="WITH_GOODWILL_TOKEN_SPEECH">
        <speech>Olá $PLAYER_NAME. Obrigado por tornar o PBO uma experiência melhor para outros jogadores.</speech>
        <speech>Por sua contribuição, gostaríamos de lhe oferecer alguns Goodwill Tokens.</speech>
        <speech>Esses tokens podem ser trocados por itens exclusivos.</speech>
        <speech>Você tem um total de $GOODWILL_TOKENS para reivindicar.</speech>
        <speech>Deseja reivindicar seus tokens de boa vontade $GOODWILL_TOKENS?</speech>
    </conversation>

    <conversation id="NO_GOODWILL_TOKEN_SPEECH">
        <speech>Olá $PLAYER_NAME. Obrigado por jogar PBO.</speech>
        <speech>No momento, você não tem fichas de boa vontade para reivindicar.</speech>
        <speech>Você pode obtê-los doando aos sacerdotes, usando bônus de experiência, iscas, flautas de enxame, bombas de mapa e bombas de item.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_CLAIM_YES">
        <speech>Mais uma vez, obrigado. Nos vemos novamente.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_CLAIM_NO">
        <speech>Não se preocupe! Você pode voltar a qualquer momento se quiser reivindicar seus tokens.</speech>
    </conversation>

    <conversation id="DIVE_QUESTION">
        <speech>Os oceanos parecem muito profundos aqui. Você gostaria de usar o Dive?</speech>
    </conversation>

    <conversation id="REGION_BANNED_POKEMON_IN_PARTY">
        <speech>No momento, você tem um Pokémon em seu grupo que viola as leis da região atual.</speech>
        <speech>As leis determinam que você não pode levar para essa região nenhum Pokémon de uma região anterior que esteja acima dos critérios de nível.</speech>
        <speech>O critério de nível é calculado pela quantidade de emblemas que você tem na região seguinte + 5.</speech>
        <speech>Portanto, se você tiver 0 emblemas na próxima região, poderá carregar no máximo o nível 5.</speech>
        <speech>Depois de derrotar a Elite 4 na próxima região, você poderá carregar qualquer Pokémon da região anterior sem nenhuma restrição.</speech>
    </conversation>

    <conversation id="DIVE_QUESTION">
        <speech>Os oceanos parecem muito profundos aqui. Você gostaria de usar o Dive?</speech>
    </conversation>

    <conversation id="WITH_SPIRIT_TOKEN_SPEECH">
        <speech>Olá $PLAYER_NAME. Obrigado por melhorar a atmosfera sombria de nosso mundo espiritual paralelo durante o evento de Halloween.</speech>
        <speech>Como sinal de nossa gratidão, gostaríamos de lhe oferecer alguns Spirit Tokens.</speech>
        <speech>Esses tokens místicos podem ser trocados por itens exclusivos e de outro mundo.</speech>
        <speech>Você tem um total de $SPIRIT_TOKENS para reivindicar.</speech>
        <speech>Gostaria de reivindicar seus $SPIRIT_TOKENS agora?</speech>
    </conversation>

    <conversation id="NO_SPIRIT_TOKEN_SPEECH">
        <speech>Olá $PLAYER_NAME. Obrigado por se aventurar no mundo paralelo do PBO durante o evento de Halloween.</speech>
        <speech>Atualmente, você não tem fichas de espírito para reivindicar.</speech>
        <speech>Você pode obtê-las doando para os Sacerdotes das Trevas, usando bônus de experiência, iscas e flautas de enxame nesse reino durante o evento de Halloween.</speech>
    </conversation>

    <conversation id="SPIRIT_TOKENS_CLAIM_YES">
        <speech>Mais uma vez, obrigado por suas contribuições durante o evento de Halloween. Que sua jornada no mundo paralelo seja sempre assombrosa.</speech>
    </conversation>

    <conversation id="SPIRIT_TOKENS_CLAIM_NO">
        <speech>Não se preocupe! As Fichas de Espírito permanecerão com você. Sinta-se à vontade para reivindicá-los sempre que desejar.</speech>
    </conversation>

    <conversation id="GOODWILL_TOKENS_NON_FUNCTIONAL">
        <speech>Olá $PLAYER_NAME. Infelizmente, não posso lhe oferecer nenhum Goodwill Token no momento.</speech>
        <speech>Meus poderes estão enfraquecidos no momento, e suspeito que isso seja obra de Chamunda.</speech>
        <speech>Eu me pergunto se algo sinistro está acontecendo novamente no Mundo Espiritual.</speech>
    </conversation>

    <conversation id="MINING_REGION_NOT_REGISTERED">
        <speech>Ah, você parece qualificado. Nosso chefe está procurando por alguém resiliente, alguém que possa enfrentar o desconhecido.</speech>
        <speech>Nossas fileiras diminuíram sob as condições adversas e os perigos misteriosos que se escondem lá embaixo.</speech>
        <speech>Atualmente, ele está investigando um estranho fenômeno relacionado aos meteoros ao redor dos vulcões.</speech>
        <speech>É uma questão de grande curiosidade e oportunidade em potencial.</speech>
        <speech>Fale com ele e recupere o equipamento; ele estará na área onde os segredos do céu tocam a terra.</speech>
    </conversation>

    <conversation id="START_FIRST_MINING_SESSION">
        <speech>A terra sussurra segredos de riquezas incalculáveis sob nossos pés nesta região.</speech>
        <speech>Você deve pegar a picareta e descobrir o que está escondido em sua primeira caça ao tesouro?</speech>
    </conversation>

    <conversation id="CONTINUE_MINING_SESSIONS">
        <speech>Voltou tão cedo, caçador de tesouros? Os veios de riqueza dessa região são profundos e aguardam suas mãos ávidas.</speech>
        <speech>Pronto para mergulhar nas profundezas mais uma vez e reivindicar sua fortuna?</speech>
    </conversation>

    <conversation id="WARP_NO_MINING_SESSION_REMAINING">
        <speech>O eco de sua picareta desapareceu, e o solo descansa de seu trabalho.</speech>
        <speech>Infelizmente, a terra já deu tudo o que podia por enquanto. Retorne em $NEXT_MINING_SESSION_DURATION minutos quando a terra estiver madura e pronta para sua reivindicação.</speech>
    </conversation>

    <conversation id="START_NEW_MINING_SESSION">
        <speech>A terra reabasteceu sua recompensa e seus sussurros o chamam mais uma vez, pronto para a tentativa #$MINING_SESSION_ATTEMPT.</speech>
        <speech>Você sente a atração da aventura, pronto para descobrir novos tesouros?</speech>
    </conversation>

    <conversation id="CANNOT_ACCESS_SITE">
        <speech>Infelizmente, bravo minerador, apesar de seu nível $CURRENT_LEVEL, este site exige um minerador de nível $REQUIRED_LEVEL ou superior.</speech>
        <speech>Procure dominar ainda mais os segredos da Terra antes de voltar para desafiar suas profundezas.</speech>
    </conversation>

    <conversation id="MINING_SITE_NO_CRITERIA">
        <speech>Espere, alma corajosa! O terreno que você deseja conquistar não é para os fracos de coração ou para os que não foram testados.</speech>
        <speech>Essas profundezas estão envoltas em perigos que repeliram muitos que ousaram suas sombras sem o manto da experiência.</speech>
        <speech>Somente aqueles reconhecidos como mineradores, com a confiança de especialistas em mineração, podem navegar com segurança em seus segredos.</speech>
        <speech>Reúna suas forças e prove sua coragem no mundo acima. Os tesouros abaixo aguardarão seu retorno triunfante.</speech>
    </conversation>

    <conversation id="GOODWILL_CURRENCY_TRADER_QUESTION">
        <speech>Então, você quer trocar seus Goodwill Tokens por itens?</speech>
    </conversation>

    <conversation id="GOODWILL_CURRENCY_TRADER_NO">
        <speech>Sem problemas. Volte novamente se mudar de ideia.</speech>
    </conversation>

    <conversation id="COME_TOMORROW_SHIP">
        <speech>As marés e os destinos não estão a seu favor hoje.</speech>
        <speech>Retorne em $DURATION, quando os mares lhe concederem passagem.</speech>
    </conversation>

    <conversation id="ABANDONED_SHIP_TELEPORTER_QUESTION">
        <speech>As sombras do navio abandonado o chamam. Você se aventurará em suas profundezas?</speech>
    </conversation>

    <conversation id="ABANDONED_SHIP_COME_DURING_NIGHT">
        <speech>A luz do dia esconde os segredos do navio.</speech>
        <speech>Somente sob o manto da noite você pode passar.</speech>
    </conversation>

    <conversation id="MOVE_RELEARNER_NOT_FOUND">
        <speech>Saudações, viajante. Possuo uma habilidade única de ajudar os Pokémon a se lembrarem de movimentos que já esqueceram.</speech>
        <speech>Estou aqui para oferecer meus serviços aos seus Pokémon também. No entanto, há uma pequena taxa envolvida.</speech>
        <speech>Em troca de minha assistência, peço uma Escala de Coração cada vez que um Pokémon deseja reaprender um movimento.</speech>
        <speech>Afinal, é preciso ganhar a vida.</speech>
        <speech>Se você estiver de posse de uma balança cardíaca, não hesite em me procurar.</speech>
        <speech>Estarei pronto para ajudar seus Pokémon a aproveitarem suas forças esquecidas.</speech>
    </conversation>

    <conversation id="MOVE_RELEARNER_QUESTION">
        <speech>Ooh, então você tem um Heart Scale. Digamos que você queira que um de seus Pokémon reaprenda um movimento que esqueceu.</speech>
    </conversation>

    <conversation id="MOVE_RELEARNER_NO">
        <speech>Tudo bem, não se preocupe. Volte sempre que precisar de minha ajuda.</speech>
    </conversation>

    <conversation id="EGG_MOVE_NOT_FOUND">
        <speech>Saudações. Possuo uma habilidade única de permitir que os Pokémon dominem movimentos que normalmente só seriam adquiridos por meio de reprodução.</speech>
        <speech>Estou aqui para estender esse serviço especial aos seus Pokémon, permitindo que eles também aprendam os movimentos do "ovo".</speech>
        <speech>No entanto, minha assistência vem com uma exigência. Eu peço um Egg Move Voucher toda vez que um Pokémon precisa aprender um egg move.</speech>
        <speech>Afinal, é preciso pagar as contas.</speech>
        <speech>Se você obtiver dois Egg Move Vouchers, volte para mim e eu ajudarei seu Pokémon a aprender os egg moves.</speech>
    </conversation>

    <conversation id="EGG_MOVE_QUESTION">
        <speech>Ooh, então você tem um Egg Move Voucher. Digamos que você queira que um de seus Pokémon aprenda um "egg move"?</speech>
    </conversation>

    <conversation id="EGG_MOVE_NO">
        <speech>Tudo bem, não se preocupe. Volte sempre que precisar de minha ajuda.</speech>
    </conversation>

    <conversation id="TUTOR_MOVE_NOT_FOUND">
        <speech>Olá!</speech>
        <speech>Fui abençoado com um dom raro: a capacidade de ensinar aos Pokémon movimentos que não são acessíveis por meio do nivelamento normal.</speech>
        <speech>Sou totalmente a favor de compartilhar esse presente, então estou aqui para oferecer ao seu Pokémon a chance de aprender alguns movimentos exclusivos também.</speech>
        <speech>É claro que tudo tem um pouco de contrapartida.</speech>
        <speech>Um pouco de troca justa, se você preferir.</speech>
        <speech>Eis a minha proposta: um Tutor Move Voucher em troca de ensinar uma jogada.</speech>
        <speech>Quando você estiver pronto para fazer a troca, basta vir me procurar.</speech>
    </conversation>

    <conversation id="TUTOR_MOVE_QUESTION">
        <speech>Ooh, então você tem um Tutor Move Voucher. Digamos que você queira que um de seus Pokémon aprenda um "tutor move"?</speech>
    </conversation>

    <conversation id="TUTOR_MOVE_NO">
        <speech>Tudo bem, não se preocupe. Volte sempre que precisar de minha ajuda.</speech>
    </conversation>

    <conversation id="LOSS_IN_HARD_MODE">
        <speech>Você deve esperar $DURATION (duração) antes de me desafiar novamente no modo difícil, $PLAYER_NAME (nome do jogador).</speech>
        <speech>Lembre-se, não critique demais a sua equipe pela derrota. Dê a eles algum tempo para se recuperarem.</speech>
    </conversation>

    <conversation id="WITH_RADIANCE_TOKEN_SPEECH">
        <speech>Olá $PLAYER_NAME. Obrigado por trazer a energia vibrante do verão para o nosso paraíso ensolarado.</speech>
        <speech>Como sinal de nossa gratidão, gostaríamos de lhe oferecer alguns Radiance Tokens.</speech>
        <speech>Esses tokens radiantes podem ser trocados por itens exclusivos com o tema do verão.</speech>
        <speech>Você tem um total de $RADIANCE_TOKENS para reivindicar.</speech>
        <speech>Gostaria de reivindicar seus $RADIANCE_TOKENS agora?</speech>
    </conversation>

    <conversation id="NO_RADIANCE_TOKEN_SPEECH">
        <speech>Olá $PLAYER_NAME. Obrigado por se juntar a nós no mundo ensolarado do PBO durante o evento de verão.</speech>
        <speech>Atualmente, você não tem fichas de radiância para reivindicar.</speech>
        <speech>Você pode ganhá-las doando para os sacerdotes do sol, usando bônus de experiência, iscas e flautas de enxame nesse reino durante o evento de verão.</speech>
    </conversation>

    <conversation id="RADIANCE_TOKENS_CLAIM_YES">
        <speech>Mais uma vez, obrigado por suas contribuições durante o evento de verão. Que sua jornada neste mundo vibrante seja sempre brilhante.</speech>
    </conversation>

    <conversation id="RADIANCE_TOKENS_CLAIM_NO">
        <speech>Não se preocupe! Os Radiance Tokens permanecerão com você. Sinta-se à vontade para reivindicá-los sempre que desejar.</speech>
    </conversation>

    <conversation id="ANOTHER_CREW_OWNS_CW_ISLAND">
        <speech>A Invictus Shores está atualmente sob o controle da tripulação [GOLD]$CREW_NAME[].</speech>
        <speech>Somente membros do [GOLD]$CREW_NAME[] podem participar.</speech>
    </conversation>

    <conversation id="NOBODY_OWNS_CW_ISLAND">
        <speech>Invictus Shores não foi reivindicado no momento.</speech>
        <speech>A entrada é restrita até que uma equipe reivindique a ilha.</speech>
    </conversation>

    <conversation id="AROMA_LADY_QUESTION">
        <speech>Seus Pokémon parecem um pouco cansados. Gostaria que eu os curasse para você?</speech>
    </conversation>

    <conversation id="AROMA_LADY_YES">
        <speech>Pronto, todos estão revigorados e se sentindo muito melhor!</speech>
    </conversation>

    <conversation id="AROMA_LADY_NO">
        <speech>Oh, tenho certeza de que eles teriam gostado de descansar um pouco. Talvez na próxima vez.</speech>
    </conversation>

    <conversation id="CW_ISLAND_TELEPORT_QUESTION">
        <speech>Ahoy, viajante! O mar está chamando, e os ventos estão a nosso favor.</speech>
        <speech>Que tal zarpar para outra terra? A Invictus Isle está esperando por você!</speech>
    </conversation>

    <conversation id="CW_ISLAND_TELEPORT_NO_REPLY">
        <speech>É uma pena, amigo. Mas o oceano está sempre aqui. Volte sempre que estiver pronto para navegar.</speech>
    </conversation>

    <conversation id="NO_SPACE_IN_PARTY_FOR_STARTER">
        <speech>Você não tem espaço suficiente em seu grupo para selecionar um novo Pokémon inicial. Abra espaço e tente novamente!</speech>
    </conversation>

    <conversation id="ELITE_4_REQUIRED_FOR_REPEATABLE_GYM">
        <speech>Você precisa primeiro derrotar o campeão da região de Kanto antes que eu aceite uma revanche!</speech>
    </conversation>

    <conversation id="MEWTWO_STATUE_IN_ORDER">
        <speech>Os olhos da estátua de {COLOR=PURPLE}Mewtwo{ENDCOLOR} piscam levemente...</speech>
        <speech>Você sente algo mudar nas profundezas da mansão.</speech>
    </conversation>

    <conversation id="MEWTWO_STATUE_OUT_OF_ORDER">
        <speech>O ar fica frio...</speech>
        <speech>A estátua de {COLOR=PURPLE}Mewtwo{ENDCOLOR} permanece imóvel - nada acontece.</speech>
        <speech>Parece que você perturbou a ordem. Você sente que o quebra-cabeça foi reiniciado.</speech>
    </conversation>

    <conversation id="DOOR_UNLOCKED">
        <speech>Um estrondo profundo ecoa pela mansão...</speech>
        <speech>Em algum lugar, um mecanismo pesado faz um clique - {COLOR=CYAN}uma porta foi destrancada!</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_SELECT_SHARD">
        <speech>Vejo que você tem alguns fragmentos. Que tipo de Hidden Power você gostaria que seu Pokémon aprendesse?</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_NO_SHARD">
        <speech>Você precisará de Hidden Power Shards para desbloquear o verdadeiro potencial do Hidden Power. Volte quando tiver reunido
            alguns.
        </speech>
    </conversation>

    <conversation id="HIDDEN_POWER_NO_POKEMON">
        <speech>Não vejo nenhum Pokémon em seu grupo que possa aprender Hidden Power.</speech>
        <speech>Para aprender qualquer Elemental Hidden Power, seu Pokémon precisa conhecer o Hidden Power sem nenhuma tipagem.</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_TUTOR_SUCCESS">
        <speech>Sucesso! Seu Pokémon aprendeu o Hidden Power do tipo escolhido.</speech>
    </conversation>

    <conversation id="HIDDEN_POWER_TUTOR_FAILURE">
        <speech>Algo deu errado. Seu Pokémon não foi capaz de aprender o Hidden Power. Tente novamente.</speech>
    </conversation>

    <conversation id="ILLEGAL_MOVE_NOT_FOUND">
        <speech>Ah, é você de novo! O treinador que ajudou a restaurar o {COLOR=CYAN}Moonlight Ritual{ENDCOLOR}.</speech>
        <speech>Essa cerimônia mística despertou algo notável em minha pesquisa.</speech>
        <speech>Conhecimento de movimentos que já foram {COLOR=RED}banidos das batalhas competitivas{ENDCOLOR}.</speech>
        <speech>Essas técnicas foram consideradas poderosas demais para torneios em gerações passadas.</speech>
        <speech>Mas o antigo ritual dos Clefairy revelou seus segredos para mim.</speech>
        <speech>Posso ensinar esses movimentos {COLOR=YELLOW}proibidos{ENDCOLOR} ao seu Pokémon, mas minha pesquisa requer materiais.</speech>
        <speech>Para cada técnica banida, precisarei de {COLOR=GREEN}50.000 Pokédollars{ENDCOLOR} e {COLOR=ORANGE}8 Tiny Mushrooms{ENDCOLOR}.</speech>
        <speech>Eles contêm esporos exclusivos essenciais para desbloquear essas memórias poderosas.</speech>
        <speech>Os Paras daqui deixam cair muitos desses cogumelos, portanto, a coleta não deve ser difícil.</speech>
        <speech>Se você quiser se aprofundar nessas artes proibidas, retorne com o pagamento.</speech>
    </conversation>

    <conversation id="ILLEGAL_MOVE_QUESTION">
        <speech>Ah, estou vendo que você tem os {COLOR=GREEN}funds{ENDCOLOR} e {COLOR=ORANGE}Tiny Mushrooms{ENDCOLOR}!</speech>
        <speech>Digamos que você queira que um de seus Pokémon aprenda um movimento {COLOR=RED}proibido{ENDCOLOR}?</speech>
        <speech>Essas técnicas proibidas têm um poder imenso, perigoso demais para batalhas competitivas.</speech>
        <speech>Cada lição requer {COLOR=GREEN}50.000 Pokédollars{ENDCOLOR} e {COLOR=ORANGE}8 Tiny Mushrooms{ENDCOLOR} para desbloquear o conhecimento.</speech>
        <speech>Você está pronto para se aprofundar nessas {COLOR=YELLOW}artes antigas e proibidas{ENDCOLOR}?</speech>
    </conversation>

    <conversation id="ILLEGAL_MOVE_NO">
        <speech>Não há problema algum. Minha pesquisa continuará.</speech>
        <speech>Volte sempre que estiver pronto para explorar essas técnicas proibidas {COLOR=RED}{ENDCOLOR}.</speech>
    </conversation>
</npcs>