<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Saudações, buscador do poder. Sou um aprendiz do Hidden Power que domina as antigas artes de manipulação de tipos.
            </speech>
            <speech>Meu treinamento nas câmaras sagradas me ensinou a controlar a essência em constante mudança. Enfrente-me, se você ousar testar sua
                coragem.
            </speech>
            <speech>Se seu espírito for forte o suficiente, eu lhe concederei um fragmento da força do Poder Oculto.</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>Sua força interior brilha intensamente! Você provou ser digno desse conhecimento.</speech>
            <speech>Aceite este fragmento de Hidden Power. Que ele desperte um novo potencial em seu Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>Uma energia que surge muito rapidamente se esgota. Reserve um tempo para reunir suas forças.</speech>
            <speech>Retorne em [GOLD]$DURATION[] quando seu espírito estiver pronto para ser testado.</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>Seu poder oscila, mas ainda não se tornou forte o suficiente.</speech>
            <speech>Fortaleça sua determinação e retorne quando estiver mais forte. O poder o aguarda.</speech>
        </speeches>
        <speeches id="5">
            <!-- Before Criteria Speech -->
            <speech>Sua força interior é muito fraca. Treine até que ela se fortaleça.</speech>
            <speech>Somente aqueles cuja determinação brilha intensamente podem aproveitar os fragmentos que eu protejo.</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="2">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Bem-vindo ao meu santuário. Sou um aprendiz do Hidden Power, guardião da sabedoria antiga.
            </speech>
            <speech>Ao meditar em solidão, aprendi a canalizar as energias em constante mudança. Vamos ver se você consegue igualar
                essa maestria.
            </speech>
            <speech>Prove sua dedicação e eu compartilharei um fragmento da essência do Poder Oculto.</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>Como um mestre da tática, seu potencial não tem limites! Você mereceu esse presente.</speech>
            <speech>Pegue este fragmento do Hidden Power. Que ele ajude seu Pokémon a superar qualquer desafio.</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>A paciência, assim como a sabedoria antiga, reflete a verdadeira força. Reserve um tempo para encontrar seu centro.</speech>
            <speech>Retorne em [GOLD]$DURATION[] quando estiver pronto para testar sua resolução.</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>Sua técnica ainda não foi refinada e não é capaz de canalizar o verdadeiro poder.</speech>
            <speech>Aprenda a se concentrar e a retornar quando tiver encontrado seu caminho. Os segredos o aguardam.</speech>
        </speeches>
        <speeches id="5">
            <!-- Before Criteria Speech -->
            <speech>Seu espírito é como uma energia dispersa, sem foco e indisciplinada.</speech>
            <speech>Somente aqueles que encontraram seu foco podem aproveitar os fragmentos que eu protejo.</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="3">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Bem-vindo ao meu campo de treinamento. Sou um aprendiz do Hidden Power, guardião das artes místicas.
            </speech>
            <speech>Por meio da prática interminável, aprendi os segredos da transformação. Mostre-me se sua dedicação é suficientemente profunda.
            </speech>
            <speech>Demonstre seu compromisso com o crescimento e eu lhe concederei conhecimentos antigos.</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>Como um verdadeiro estudioso, sua compreensão é profunda! Você provou ser digno desse presente.</speech>
            <speech>Aceite este fragmento do Poder Oculto. Que ele ajude seu Pokémon a atingir seu verdadeiro potencial.
            </speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>Até mesmo os maiores mestres começaram como alunos. Reserve um tempo para cultivar suas habilidades.</speech>
            <speech>Retorne em [GOLD]$DURATION[] quando estiver pronto para testar seu progresso.</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>Sua conexão com o poder antigo continua fraca.</speech>
            <speech>Aprofunde seu treinamento e retorne quando estiver mais forte. A verdadeira sabedoria o aguarda.</speech>
        </speeches>
        <speeches id="5">
            <!-- Before Criteria Speech -->
            <speech>Seu potencial é como energia bruta. São necessários tempo e treinamento.</speech>
            <speech>Somente aqueles que entendem a verdadeira dedicação podem manejar os fragmentos que eu protejo.</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="4">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Saudações, buscador! Sou um aprendiz do Hidden Power, mestre das artes em constante mudança.</speech>
            <speech>Em meio a testes rigorosos, capturei a essência da transformação. Atreva-se a enfrentar meu poder treinado?</speech>
            <speech>Combine com meu espírito disciplinado e eu compartilharei um fragmento do mistério do Hidden Power.</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>Seu poder surge com o verdadeiro potencial! Você conquistou o direito de usar esse conhecimento!</speech>
            <speech>Pegue este fragmento de Hidden Power. Que ele desbloqueie uma nova força em seu Pokémon!</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>Até mesmo um grande poder deve ser cuidadosamente cultivado. Reserve um tempo para aumentar sua energia.</speech>
            <speech>Retorne em [GOLD]$DURATION[] quando estiver pronto para aproveitar seu potencial.</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>Suas habilidades são promissoras, mas não têm o foco da verdadeira maestria.</speech>
            <speech>Fortaleça suas habilidades e retorne quando estiver pronto. Um poder maior o aguarda.</speech>
        </speeches>
        <speeches id="5">
            <!-- Before Criteria Speech -->
            <speech>Sua energia é apenas um potencial sem foco. Você precisa de mais treinamento para lidar com esse poder.</speech>
            <speech>Somente aqueles que conseguem dominar a si mesmos podem reivindicar os fragmentos que eu protejo.</speech>
        </speeches>
    </conversation>
</npcs>