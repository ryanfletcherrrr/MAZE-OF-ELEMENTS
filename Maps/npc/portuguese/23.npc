<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Olá, garoto.</speech>
            <speech>Eu sou Izumi, líder da academia na cidade de Lehar.</speech>
            <speech>Qual é o seu nome?</speech>
            <speech>Oh, olá, $PLAYER_NAME. É você quem eu estava procurando!!!</speech>
            <speech>Seu amigo $JVALOH_RIVAL me pediu para procurá-lo para me ajudar.</speech>
            <speech>Basicamente, houve uma explosão na cidade de Lehar, onde fica o Gym 3.</speech>
            <speech>A explosão fez com que a água ficasse muito agitada, e quase fomos atingidos por um tsunami.</speech>
            <speech>Como líder principal da cidade de Lehar, preciso descobrir o que causou essa explosão.</speech>
            <speech>Você poderia me ajudar com isso?</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Conte-me tudo o que sabe sobre essas cavernas, meu velho. E faça isso rápido!</speech>
            <speech>Os adultos estão falando aqui, garoto. Vá embora e não nos incomode.</speech>
            <speech>O quê, você não vai? Tudo bem então, acho que eu mesmo vou fazer você ir embora!</speech>
        </speeches>
        <speeches id="2">
            <speech>Dê um tempo...</speech>
        </speeches>
        <speeches id="3">
            <speech>Você me venceu, e daí? Ainda vamos descobrir o que queremos e, depois, localizaremos as
                cavernas.
            </speech>
            <speech>Você não conseguiu nada, garoto!</speech>
        </speeches>
        <speeches id="4">
            <speech>Agora desapareça!</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Ajude-me, por favor! Este homem está me ameaçando!</speech>
        </speeches>
        <speeches id="2">
            <speech>Graças a Deus! E obrigado, sério. Você me salvou!</speech>
            <speech>Venha até minha casa um dia desses, se quiser. Moro bem em frente à Lehar Town.</speech>
        </speeches>
    </conversation>
</npcs>