<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Você é um treinador de Pokémon, e eu também! Nossos olhos se encontraram, então devemos batalhar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Muito forte! Muito forte!</speech>
        </speeches>
        <speeches id="3">
            <speech>Muito forte! Muito forte!</speech>
        </speeches>
        <speeches id="4">
            <speech>Muito fraco! Muito fraco!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Eu vejo, com meu pequeno olho...</speech>
            <speech>Um treinador!</speech>
            <speech>Uma batalha, por favor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh Boo! Eu não posso ganhar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh Boo! Eu não posso ganhar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh Boo! Você não pode ganhar.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Vamos ter uma batalha Pokémon!</speech>
            <speech>Humph! Mas eu vou ganhar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Você me venceu?!</speech>
            <speech>Você tem talento!</speech>
        </speeches>
        <speeches id="3">
            <speech>Você me venceu?!</speech>
            <speech>Você tem talento!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu já disse a você que iria vencer.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>$PLAYER_NAME, eu não lhe disse como pegar um Pokémon, disse?</speech>
            <speech>Você espera que o HP do Pokémon selvagem diminua e o ataca.</speech>
            <speech>Quando o valor estiver baixo, você deve clicar no botão Bag (Bolsa).</speech>
            <speech>Na bolsa, encontre a Pokébola que você deseja usar.</speech>
            <speech>Clique nele, e o Pokémon será capturado.</speech>
            <speech>É importante que o HP do Pokémon seja o mais baixo possível.</speech>
            <speech>Isso ocorre porque um Pokémon saudável é muito difícil de ser capturado.</speech>
            <speech>Ah, os Pokémon também ficam mais fáceis de capturar se você os fizer dormir ou algo do tipo usando o movimento de um Pokémon.</speech>
            <speech>OK, $PLAYER_NAME, para você começar, eu lhe darei cinco Poké Balls!</speech>
            <speech>Além disso, aqui estão 1.000 Poké Dollars para ajudá-lo em sua jornada. Use-os com sabedoria para comprar itens ou suprimentos!</speech>
            <speech>Também estou lhe dando uma Escape Rope. Esse item útil permite que você escape de cavernas ou outros lugares instantaneamente.</speech>
            <speech>É ótimo se você se encontrar em uma situação difícil.</speech>
            <speech>Você também receberá cinco Super Potions. Elas restaurarão 50 HP para um de seus Pokémon, portanto, mantenha-as à mão nas batalhas.</speech>
            <speech>Por fim, pegue esses cinco Revives. Se um de seus Pokémon desmaiar, você pode usar um Revive para trazê-lo de volta à consciência, com metade de seu HP máximo restaurado.</speech>
        </speeches>
        <speeches id="2">
            <speech>Se você tiver muitos Pokémon com você, será mais seguro em viagens longas.</speech>
            <speech>Além disso, será muito mais divertido ter seus amigos Pokémon com você. OK, eu preciso ir embora.</speech>
            <speech>Tchau, agora!</speech>
        </speeches>
    </conversation>

    <npc direction="DOWN" id="1" name="Joseph" sprite="4" x="13" y="19">
        <speech>Alguns Pokémon só aparecem pela manhã.</speech>
        <speech>Alguns só aparecem à noite.</speech>
        <speech>Vou continuar procurando até pegar todos eles!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Marika" sprite="17" x="11" y="29">
        <speech>Ei, você poderia ajudar a encontrar uma saída para essa rota?</speech>
        <speech>...</speech>
        <speech>Você também está perdido? Ótimo... parece que vou perder meu programa de TV favorito.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Kelbee" sprite="41" x="31" y="20">
        <speech>Não tenha vergonha de falar com os instrutores que você gostaria de combater.</speech>
        <speech>Os Pokémon ficam cada vez mais fortes com as batalhas.</speech>
        <speech>Alguns treinadores podem até chamá-lo para uma batalha também!</speech>
        <speech>Você deve estar preparado a qualquer momento para uma batalha.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Bugcatcher Charles" shouldSleep="1" speed="1" sprite="24" x="33" y="5">
        <path>LEFTx2, DOWNx3, RIGHTx2, UPx3</path>
        <onCollisionSpeech gap="4">Please give me space, I'm looking for bugs</onCollisionSpeech>
        <speech>Ei, você encontrou algum Pokémon inseto?</speech>
        <speech>...</speech>
        <speech>Estou procurando há uma hora, mas não encontrei nada.</speech>
        <speech>Avise-me se você encontrar um. Estou ficando louco por não ter visto nenhuma!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Lilly" sprite="6" x="23" y="14">
        <speech>Meus Pokémon estão todos exaustos! Eu preciso ir a um Centro Pokémon!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="6" name="Trovis" sprite="25" x="20" y="3">
        <speech>Ei, você gostaria de trocar um Pokémon inseto por Bidoof?</speech>
        <speech>...</speech>
        <speech>Brincadeira! Este é o meu super épico Bidoof!</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="7" name="Harry" sprite="26" x="9" y="8">
        <speech>Foi divertido batalhar com outros Treinadores!</speech>
        <speech>Eu lutaria com você também, mas preciso ir a um Centro Pokémon primeiro...</speech>
        <speech>Meus Pokémon precisam descansar.</speech>
    </npc>
    <movingNpc direction="LEFT" id="8" name="Hiker Norman" shouldSleep="" speed="1" sprite="10" x="26" y="28">
        <path>LEFTx3, DOWNx2, RIGHTx3, UPx2</path>
        <onCollisionSpeech gap="4">How's your training going?</onCollisionSpeech>
        <speech>Olá $PLAYER_NAME, eu gosto de explorar as montanhas porque elas são legais.</speech>
        <speech>Gostaria de se juntar a mim?</speech>
        <speech>Não agora, você diz?</speech>
        <speech>Ahh, então, você quer ser um Mestre Pokémon, então não tem problema.</speech>
        <speech>Boa sorte $PLAYER_NAME!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Starly" shouldSleep="" speed="1" sprite="396" type="pokemon" x="34" y="15">
        <path>LEFTx4, UPx1, RIGHTx4, DOWNx1</path>
        <onCollisionSpeech gap="4">Staaaaaaaar</onCollisionSpeech>
        <speech>Estrelinha... Estrelinha...</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="10" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="7" y="10">
        <path>LEFTx3,DOWNx1,RIGHTx3,UPx1</path>
        <onCollisionSpeech gap="4">*The Zigzagoon barks at you*</onCollisionSpeech>
        <speech>Zigzagoon...</speech>
    </movingNpc>
</npcs>