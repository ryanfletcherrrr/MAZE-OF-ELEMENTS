<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ajude-me, meu jovem, por favor, ajude-me!</speech>
            <speech>Meus ossos... Eles doem. Moro no meio do nada e não tenho mais força suficiente para viajar.</speech>
            <speech>Meus ossos estão tremendo. Preciso muito de uma poção para medula óssea. Você poderia tentar conseguir uma para mim?</speech>
            <speech>Ouvi dizer que ele é contrabandeado em uma floresta perto da Cidade do Novo Amanhecer.</speech>
        </speeches>
        <speeches id="2">
            <speech>Você está de volta! Por favor, diga-me que tem boas notícias para mim.</speech>
            <speech>Você tem Marrow-Potion com você?</speech>
        </speeches>
        <speeches id="3">
            <speech>*Oh não...</speech>
            <speech>*Você vê que o velho caiu.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, obrigado, jovem viajante.</speech>
            <speech>Gostaria de poder recompensá-lo com algo, mas a única coisa que eu tinha foi roubada por um garoto há algum tempo.</speech>
            <speech>Você pode ficar com ele se conseguir encontrá-lo. Eu o verei mais tarde. Deixarei a cidade e comprarei mais algumas poções para mim.</speech>
        </speeches>
        <speeches id="5">
            <speech>Oh, obrigado, jovem viajante.</speech>
            <speech>Gostaria de poder recompensá-lo com algo, mas a única coisa que eu tinha foi roubada por um garoto há algum tempo.</speech>
            <speech>Você pode ficar com ele se conseguir encontrá-lo. Eu o verei mais tarde. Deixarei a cidade e comprarei mais algumas poções para mim.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Vejo que você encontrou a recompensa.</speech>
            <speech>Muito bem, jovem treinador, treinadores como você fazem meu sangue fluir.</speech>
            <speech>Espero que tenha gostado do que lhe ofereci.</speech>
            <speech>Também tenho um grande suprimento de Marrow-Potion agora. Em breve, deixarei esta casa e me mudarei para um lugar melhor, onde poderei receber um tratamento adequado para minha doença.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Ajude-me, meu jovem, por favor, ajude-me!</speech>
            <speech>Meus ossos... Eles doem. Moro no meio do nada e não tenho mais força suficiente para viajar.</speech>
            <speech>Meus ossos estão tremendo. Preciso muito de uma poção para medula óssea. Você poderia tentar conseguir uma para mim?</speech>
            <speech>Ouvi dizer que ele é contrabandeado em alguma floresta perto da Cidade do Novo Amanhecer.</speech>
        </speeches>
        <speeches id="2">
            <speech>Meus ossos estão tremendo. Preciso muito de uma poção para medula óssea. Você poderia tentar conseguir uma para mim?</speech>
            <speech>Ouvi dizer que ele é contrabandeado em alguma floresta perto da Cidade do Novo Amanhecer.</speech>
        </speeches>
    </conversation>
</npcs>