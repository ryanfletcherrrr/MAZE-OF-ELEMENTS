<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>A Equipe Rocket sempre consegue o que quer!</speech>
        </speeches>
        <speeches id="2">
            <speech>Urgh... O chefe não vai gostar disso...</speech>
        </speeches>
        <speeches id="3">
            <speech>Urgh... O chefe não vai gostar disso...</speech>
        </speeches>
        <speeches id="4">
            <speech>Melhor sorte da próxima vez, perdedor!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Você está indo direto para a encrenca, garoto!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Você teve sorte dessa vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Você teve sorte dessa vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! A Equipe Rocket sempre vence no final!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Ninguém se mete com a Equipe Rocket e sai ileso!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Isso ainda não acabou!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Isso ainda não acabou!</speech>
        </speeches>
        <speeches id="4">
            <speech>Boa tentativa, mas isso nunca aconteceria!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Ah! Outra criança achando que pode mexer com a Equipe Rocket?</speech>
        </speeches>
        <speeches id="2">
            <speech>Tch... Talvez você seja mais forte do que eu pensava.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tch... Talvez você seja mais forte do que eu pensava.</speech>
        </speeches>
        <speeches id="4">
            <speech>Patético! Você realmente achou que tinha alguma chance?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Você está indo direto para a encrenca, garoto!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Você teve sorte dessa vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Você teve sorte dessa vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! A Equipe Rocket sempre vence no final!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Por favor, selecione um andar.{ENDCOLOR}</speech>
        </speeches>
        <speeches id="2">
            <speech>{O console do elevador se fecha com um clique suave.</speech>
            <speech>Você precisará ativá-lo novamente se quiser usá-lo.</speech>
        </speeches>
        <speeches id="3">
            <speech>{O elevador se recusa a se mover - parece que precisa de uma chave especial.</speech>
            <speech>Talvez um Rocket Grunt próximo tenha o que você precisa...</speech>
        </speeches>
    </conversation>
    <npc direction="UP" hidden="false" id="1" name="Eric" randomRotation="true" sprite="49" x="13" y="14">
        <speech>Ugh... Estou preso aqui pagando minha dívida de jogo.</speech>
        <speech>Tentei enfrentar os bandidos da Rocket, mas eles são fortes demais para mim.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="2" name="Joshua" speed="1" sprite="101" type="npc" x="23" y="31">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Tenha cuidado por essas bandas, garoto.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Porygon" speed="1" sprite="137" type="pokemon" x="2" y="25">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">porrryyy!</onCollisionSpeech>
    </movingNpc>
</npcs>