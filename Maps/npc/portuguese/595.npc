<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ei, você! Diga-nos para onde o Mestre Cyrus foi.</speech>
            <speech>Onde você estava depois de desaparecer no Pilar da Lança?</speech>
            <speech>O quê? O Mundo da Distorção!? Onde Giratina estava?</speech>
            <speech>Você não está fazendo nenhum sentido! Não jogue essa carta comigo!</speech>
            <speech>Tudo bem, você não quer falar? Vou bater em você e obrigá-lo a falar!</speech>
        </speeches>
        <speeches id="2">
            <speech>O que há com você? Você tem alguma vingança contra mim?!</speech>
            <speech>Meus Pokémon me decepcionaram novamente! Como posso obter informações sobre nosso Mestre Cyrus desaparecido?
            </speech>
            <speech>OK! É isso para mim! Vou procurar o Mestre Cyrus.</speech>
            <speech>O Mundo da Distorção, como era chamado? Eu deveria ir para lá, certo? Estou desistindo da Equipe Galáctica.
            </speech>
            <speech>Júpiter, você pode lidar com isso!</speech>
            <speech>Aí está. Estamos voltando a ser garotas comuns. Você pode limpar do jeito que quiser.
                quiser.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>O que há com você? Você tem alguma vingança contra mim?!</speech>
            <speech>Meus Pokémon me decepcionaram novamente! Como posso obter informações sobre nosso Mestre Cyrus desaparecido?
            </speech>
            <speech>OK! É isso para mim! Vou procurar o Mestre Cyrus.</speech>
            <speech>O Mundo da Distorção, como era chamado? Eu deveria ir para lá, certo? Estou desistindo da Equipe Galáctica.
            </speech>
            <speech>Júpiter, você pode lidar com isso!</speech>
            <speech>Aí está. Estamos voltando a ser garotas comuns. Você pode limpar do jeito que quiser.
                quiser.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>... Que perda de tempo...</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>


    <conversation id="2">
        <speeches id="1">
            <speech>...Marte. Você é realmente fraco. Deplorável. Você me deixa envergonhado por ser um comandante como você.
            </speech>
            <speech>Tudo bem. Eu vou subir em seguida. Também quero saber o que aconteceu com o Mestre Cyrus.</speech>
        </speeches>
        <speeches id="2">
            <speech>Humph! Pare de exibir sua dureza! Isso não é nem um pouco bonito!</speech>
            <speech>...Como você se atreve?</speech>
            <speech>Seguir o exemplo de Marte em tudo me irrita, mas... Também estou me demitindo para fazer minhas próprias coisas.</speech>
            <speech>A Equipe Galáctica não é divertida sem o Mestre Cyrus por perto. Então, veterano, vá em frente.</speech>
            <speech>Faça o que quiser com a Team Galactic.</speech>
        </speeches>
        <speeches id="3">
            <speech>Humph! Pare de exibir sua dureza! Isso não é nem um pouco bonito!</speech>
            <speech>...Como você se atreve?</speech>
            <speech>Seguir o exemplo de Marte em qualquer coisa me irrita, mas... Também estou me demitindo para fazer minhas próprias coisas.</speech>
            <speech>A Equipe Galáctica não é divertida sem o Mestre Cyrus por perto. Então, veterano, vá em frente.</speech>
            <speech>Faça o que quiser com a Team Galactic.</speech>
        </speeches>
        <speeches id="4">
            <speech>... Que perda de tempo...</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Suspiro... Tão impressionável e impetuoso. O que eles veem em Cyrus? Imaturo, pensativo demais
                bufão.
            </speech>
            <speech>Ele se dá ao trabalho de reunir a Equipe Galáctica para quê? No fim das contas, ele destrói sua própria
                criação por sua visão ridícula.
            </speech>
            <speech>Não é graças a ele que tenho que lutar com as peças.</speech>
            <speech>...Mas tudo bem. Os jovens podem viver com seus sonhos. Eu prefiro permanecer firme na realidade.
            </speech>
            <speech>E, para isso, o dinheiro é fundamental. Você aí, criança. Não estou lidando com você.</speech>
            <speech>Afinal, todos os outros membros da Galactic que fizeram isso sofreram consequências.</speech>
            <speech>Partiremos para coletar a Pedra Magma. É tudo pelo dinheiro!"</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Gravler" shouldSleep="" speed="1" sprite="75" type="pokemon" x="8" y="19">
        <path>UPx3, DOWNx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Onix" speed="1" sprite="95" type="pokemon" x="29" y="7">
        <path>DOWNx4, UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>*Onix ignora você</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Bill" randomRotation="false" sprite="20" x="22" y="5">
        <speech>O que será que vou encontrar se continuar entrando mais fundo nas cavernas?</speech>
    </npc>
</npcs>