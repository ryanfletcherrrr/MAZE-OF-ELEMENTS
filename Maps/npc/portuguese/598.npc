<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Meu nome é Columbus, encontrei esta cidade e sou o dono dela!</speech>
        </speeches>
        <speeches id="2">
            <speech>Quem você acha que eu sou?</speech>
        </speeches>
        <speeches id="3">
            <speech>Quem você acha que eu sou?</speech>
        </speeches>
        <speeches id="4">
            <speech>Sair</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Vou sair desta cidade depois desta batalha. Este lugar é quente</speech>
        </speeches>
        <speeches id="2">
            <speech>Até mais tarde</speech>
        </speeches>
        <speeches id="3">
            <speech>Até mais tarde</speech>
        </speeches>
        <speeches id="4">
            <speech>Acho que o treinamento aqui me ajudou.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Você está pronto para uma batalha?</speech>
        </speeches>
        <speeches id="2">
            <speech>Você gosta mesmo de se exibir</speech>
        </speeches>
        <speeches id="3">
            <speech>Você gosta mesmo de se exibir</speech>
        </speeches>
        <speeches id="4">
            <speech>Você volta</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Cacturne" shouldSleep="" speed="1" sprite="332" type="pokemon" x="19" y="10">
        <path>DOWNx4, UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Sandshrew" shouldSleep="" speed="1" sprite="27" type="pokemon" x="22" y="25">
        <path>LEFTx4, RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Kyle" randomRotation="false" sprite="32" x="10" y="5">
        <speech>Você também está aqui para procurar novos Pokémon?</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Sandshrew" shouldSleep="" speed="1" sprite="27" type="pokemon" x="28" y="46">
        <path>DOWNx4, UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Ruth" randomRotation="false" sprite="6" x="29" y="38">
        <speech>Não cresce muita coisa aqui, mas pelo menos o clima é agradável.</speech>
    </npc>
</npcs>