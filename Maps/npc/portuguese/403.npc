<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Eu só quero ser bem-sucedido e ficar rico algum dia.</speech>
        </speeches>
        <speeches id="2">
            <speech>Quando eu for um homem grande e importante, farei com que você se arrependa disso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Quando eu for um homem grande e importante, farei com que você se arrependa disso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Um dia serei rico e o deixarei envergonhado.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Eu não tinha planos para o fim de semana, então acabei perambulando por aqui antes de saber o que estava fazendo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, de verdade? Eu, tipo, perdi de verdade?! Uau, a vida. Tipo, a vida é uma desgraça.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau, de verdade? Eu, tipo, perdi de verdade?! Uau, a vida. Tipo, a vida é uma desgraça.</speech>
        </speeches>
        <speeches id="4">
            <speech>Antes que eu percebesse, já estava aqui há muito tempo. Mas não estou me sentindo só. Claro que não.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Sou um gênio da pré-escola! Já estou me preparando para a faculdade.</speech>
        </speeches>
        <speeches id="2">
            <speech>Estou confiante nos estudos, mas sou apenas um iniciante nas batalhas Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou confiante nos estudos, mas sou apenas um iniciante nas batalhas Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você perdeu para uma criança em idade pré-escolar... E quantos anos você tem mesmo?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Hum, hum, hum, sabe de uma coisa? Esses Pokémon são meus amigos.</speech>
        </speeches>
        <speeches id="2">
            <speech>Só o fato de estar com meus Pokémon me faz feliz, então está tudo bem!</speech>
        </speeches>
        <speeches id="3">
            <speech>Só o fato de estar com meus Pokémon me faz feliz, então está tudo bem!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu... me desculpe. Eu só queria lhe mostrar meus amigos...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh, ei! Quem é você?</speech>
            <speech>Você é o filho do Norman? O Norman o enviou para me ajudar?</speech>
            <speech>Isso é muito gentil da parte dele.</speech>
            <speech>$PLAYER_NAME... Os Pokémon se escondem na grama alta assim, não é?</speech>
            <speech>Por favor, observe-me e veja se eu consigo pegar um corretamente.</speech>
            <speech>...Uau!</speech>
            <speech>Eu consegui... É o meu... Meu Pokémon! $PLAYER_NAME, obrigado!</speech>
            <speech>Vou devolver o Pokémon que o Norman me emprestou. Vamos voltar para o ginásio!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Barboach" shouldSleep="" speed="1" sprite="339" type="pokemon" x="39" y="3">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Barboaaach!</onCollisionSpeech>
        <speech>Barboaaach!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Tiffany" randomRotation="false" sprite="17" x="43" y="9">
        <speech>Tantos treinadores... Não posso enfrentá-los com apenas um Pokémon.</speech>
        <speech>Vou precisar pegar mais alguns.</speech>
        <speech>Vamos lá Azurill!</speech>
    </npc>
    <movingNpc direction="DOWN" id="3" name="Azurill" shouldSleep="" speed="1" sprite="298" type="pokemon" x="40" y="9">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Azurill! ^_^</onCollisionSpeech>
        <speech>Azuzu!!!</speech>
    </movingNpc>
</npcs>