<npcs>
    <npc direction="RIGHT" hidden="false" id="1" name="Kenny" randomRotation="false" sprite="4" x="10" y="5">
        <speech>Vamos lá... por favor, tente fazer o Battle Frontier pelo menos uma vez...</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Pikachu" shouldSleep="" speed="1" sprite="25" type="pokemon" x="11" y="5">
        <path>RIGHTx5, LEFTx5</path>
        <onCollisionSpeech gap="4">Piiiikaaa</onCollisionSpeech>
        <speech>*Pikachu não parece feliz*.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Jack" shouldSleep="" speed="1" sprite="71" type="npc" x="24" y="17">
        <path>LEFTx7,UPx1, RIGHTx7, DOWNx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>SOU UM AVIÃO!!!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Rafa" randomRotation="false" sprite="5" x="12" y="9">
        <speech>Quer um picolé?</speech>
    </npc>

    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME! Como um campeão de desafios, estou animado para ver como nós dois evoluímos.</speech>
            <speech>Tenho aprimorado minhas habilidades para corresponder ao meu título. Vamos ver se você consegue me acompanhar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impressionante! Esse é o espírito de um verdadeiro campeão brilhando. Você nunca deixa de me surpreender!</speech>
            <speech>Lembre-se, como campeões, nossa jornada nunca termina. Estou pronto para nossa próxima partida emocionante, sempre que você estiver!</speech>
        </speeches>
        <speeches id="3">
            <speech>Até mesmo os campeões precisam traçar estratégias. Vamos tirar um momento para refletir e planejar nossos próximos passos.</speech>
            <speech>Nós nos encontraremos novamente depois de $DURATION. Tenho certeza de que nosso próximo encontro será ainda mais emocionante!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, um contratempo, mas isso faz parte da jornada de um campeão. Aprendemos e nos fortalecemos a cada batalha!</speech>
            <speech>Mantenha a cabeça erguida e vamos treinar para o nosso próximo desafio. Como campeões, desistir não é uma opção!</speech>
        </speeches>
        <speeches id="5">
            <speech>Espere um pouco! Está faltando Empoleon, Torterra ou Infernape em nossa equipe. Um campeão deve estar sempre preparado.</speech>
            <speech>Vamos nos reagrupar com um deles em nosso grupo e mostrar a força digna de campeões em nossa próxima batalha!</speech>
        </speeches>
    </conversation>
</npcs>