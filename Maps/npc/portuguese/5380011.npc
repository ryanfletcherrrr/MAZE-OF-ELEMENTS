<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="6">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Saudações, $PLAYER_NAME! Chegou a hora de testar seu melhor Electrike!{ENDCOLOR}</speech>
            <speech>Apresente-me {COLOR=CYAN}até 5 Electrike que você mesmo capturou{ENDCOLOR}, e eu julgarei seu potencial.</speech>
            <speech>O {COLOR=GOLD}Electrike mais forte e impecável{ENDCOLOR} renderá ao seu treinador a cobiçada {COLOR=RED}Manectite Mega Stone!{ENDCOLOR}</speech>
            <speech>Você tem o que é preciso para conquistar o prêmio?</speech>
        </speeches>

        <speeches id="2">
            <speech>{COLOR=RED}A competição terminou!{ENDCOLOR}</speech>
            <speech>Todas as pontuações foram registradas, e o Electrike mais forte foi coroado.</speech>
            <speech>Volte na próxima vez para testar sua coragem novamente!</speech>
        </speeches>

        <speeches id="3">
            <speech>{COLOR=YELLOW}Que revés, $PLAYER_NAME!{ENDCOLOR}</speech>
            <speech>Você não possui {COLOR=CYAN}Electrike suficientes que você mesmo capturou{ENDCOLOR} para que eu julgue.</speech>
            <speech>Procure por mais, e retorne quando estiver pronto.</speech>
        </speeches>

        <speeches id="4">
            <speech>{COLOR=GREEN}Você atingiu o máximo de 5 submissões!{ENDCOLOR}</speech>
            <speech>Se você deseja alterar suas inscrições, pode redefinir suas seleções.</speech>
        </speeches>

        <speeches id="5">
            <speech>{COLOR=RED}Este não se qualifica!{ENDCOLOR}</speech>
            <speech>Seu Electrike carece da {COLOR=GOLD}força impecável e potencial{ENDCOLOR} que procuramos.</speech>
            <speech>Apenas os melhores serão considerados—traga-me os mais fortes!</speech>
        </speeches>

        <speeches id="6">
            <speech>{COLOR=CYAN}Uma inscrição digna!{ENDCOLOR}</speech>
            <speech>Os juízes reconheceram seu Electrike.</speech>
            <speech>Agora, você tem a chance de conquistar a {COLOR=RED}Manectite!{ENDCOLOR}</speech>
        </speeches>

        <speeches id="7">
            <speech>{COLOR=PURPLE}Suas submissões anteriores foram redefinidas.{ENDCOLOR}</speech>
            <speech>O caminho está aberto para novos competidores. Escolha sabiamente desta vez!</speech>
        </speeches>

        <speeches id="8">
            <speech>{COLOR=YELLOW}Você realmente deseja redefinir suas submissões, $PLAYER_NAME?{ENDCOLOR}</speech>
            <speech>Isso apagará todas as inscrições anteriores, permitindo que novos competidores sejam avaliados.</speech>
            <speech>Mas, uma vez feito, não poderá ser desfeito. Tem certeza?</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="7">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Ah, $PLAYER_NAME! Procuro o Electrike mais... peculiar.{ENDCOLOR}</speech>
            <speech>Traga-me {COLOR=CYAN}até 5 Electrike que você mesmo capturou{ENDCOLOR}, e eu os julgarei de uma maneira totalmente não convencional.</speech>
            <speech>O {COLOR=RED}Electrike menos dotado e mais medíocre{ENDCOLOR} fará com que seu treinador ganhe o grande prêmio—{COLOR=GOLD}Manectite Mega Stone!{ENDCOLOR}</speech>
            <speech>Você se atreve a participar deste concurso inusitado?</speech>
        </speeches>

        <speeches id="2">
            <speech>{COLOR=RED}A competição terminou!{ENDCOLOR}</speech>
            <speech>O Electrike mais... desanimador foi escolhido, e os resultados são finais.</speech>
            <speech>Retorne na próxima vez para outra chance de vitória.</speech>
        </speeches>

        <speeches id="3">
            <speech>{COLOR=YELLOW}Hum, algo está faltando, $PLAYER_NAME.{ENDCOLOR}</speech>
            <speech>Você ainda não tem {COLOR=CYAN}Electrike suficientes que você mesmo capturou{ENDCOLOR} para que eu julgue.</speech>
            <speech>Saia em busca e traga mais candidatos.</speech>
        </speeches>

        <speeches id="4">
            <speech>{COLOR=GREEN}Você atingiu o máximo de 5 submissões!{ENDCOLOR}</speech>
            <speech>Se você deseja reconsiderar suas escolhas, pode redefinir suas submissões.</speech>
            <speech>Mas lembre-se, apenas os mais fracos conquistarão o prêmio!</speech>
        </speeches>

        <speeches id="5">
            <speech>{COLOR=RED}Este é impressionante demais!{ENDCOLOR}</speech>
            <speech>Seu Electrike tem {COLOR=GOLD}potencial e habilidade demais!{ENDCOLOR}</speech>
            <speech>Apenas os {COLOR=YELLOW}mais desafortunados{ENDCOLOR} serão aceitos aqui.</speech>
        </speeches>

        <speeches id="6">
            <speech>{COLOR=CYAN}Sim, sim... isso serve!{ENDCOLOR}</speech>
            <speech>Seu Electrike foi considerado suficientemente sem talento.</speech>
            <speech>Você está um passo mais perto de conquistar a {COLOR=GOLD}Manectite!{ENDCOLOR}</speech>
        </speeches>

        <speeches id="7">
            <speech>{COLOR=PURPLE}Suas submissões anteriores foram apagadas.{ENDCOLOR}</speech>
            <speech>O palco está montado para novos esperançosos—ou melhor, para os desamparados. Escolha suas inscrições sabiamente.</speech>
        </speeches>

        <speeches id="8">
            <speech>{COLOR=YELLOW}Você tem certeza de que deseja redefinir suas submissões, $PLAYER_NAME?{ENDCOLOR}</speech>
            <speech>Isso limpará todas as inscrições anteriores, permitindo que novos competidores sejam avaliados.</speech>
            <speech>Uma vez feito, não poderá ser revertido. Proceda com cautela.</speech>
        </speeches>
    </conversation>

</npcs>