<npcs>
    <conversation id="7">
        <speeches id="1">
            <speech>Oh, Treinador! É um alívio ver um rosto amigo. Tive um pequeno acidente perto da Shoal Cave... que me deixou neste estado lamentável.</speech>
            <speech>Estou me recuperando, graças ao pessoal daqui. Mas ainda há muito o que fazer, e estou preso aqui por enquanto.</speech>
            <speech>Se você estiver disposto a dar uma mãozinha, talvez haja algo em que possa ajudar. A situação é um pouco... complicada.</speech>
            <speech>É um pouco confuso, mas vou lhe contar o que me lembro. Eu estava no rastro da minha chave da prisão roubada.</speech>
            <speech>As pistas me levaram ao Shoal Cave Inner Room durante a maré alta. Parecia que eu estava no caminho certo.</speech>
            <speech>Mas então, tudo ficou escuro... Quando acordei, me vi aqui, de volta à segurança do Pokécenter.</speech>
            <speech>Não consigo me livrar da sensação de que algo ou alguém estava me observando lá. Ainda está tudo muito nebuloso.</speech>
        </speeches>
        <speeches id="2">
            <speech>Voltar tão cedo? Fico emocionado com sua preocupação. Como você pode ver, ainda estou aqui, aproveitando ao máximo a hospitalidade do Pokécenter.</speech>
            <speech>A recuperação é lenta, mas segura. Tenho me mantido ocupado planejando meus próximos passos... quando estiver de pé novamente, é claro.</speech>
            <speech>Obrigado por dar uma olhada em mim. Não se preocupe, voltarei à ativa em pouco tempo.</speech>
            <speech>Há muito trabalho esperando por mim lá fora!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Suas descobertas me avivaram a memória... Houve um flash repentino e ofuscante de roxo ou rosa, e depois nada. Eu estava inconsciente.</speech>
            <speech>Esse flash... pode ser a chave para entender o que aconteceu. Não é muito para continuar, mas é tudo o que temos no momento.</speech>
            <speech>Ouvi falar de Grimers na Senda Ardente exibindo um comportamento incomum recentemente. Poderia haver uma conexão?</speech>
            <speech>Também me lembro que havia alguém atrás daquele Ooze nas cavernas Shoal, mas, novamente, não me lembro de muita coisa...</speech>
            <speech>Talvez os Grimers tenham a chave da prisão ou saibam onde ela está. É uma hipótese remota, mas você poderia dar uma olhada?</speech>
        </speeches>
        <speeches id="2">
            <speech>Você teve alguma sorte com os Grimers em Fiery Path? O flash roxo ou rosa que mencionei deve estar relacionado de alguma forma.</speech>
            <speech>Também me lembro que havia alguém atrás daquele Ooze nas cavernas Shoal, mas, novamente, não me lembro de muita coisa...</speech>
            <speech>Não consigo me livrar da sensação de que estamos perto de uma descoberta. Qualquer evidência pode ajudar a desvendar o caso.</speech>
            <speech>Fique atento a qualquer coisa fora do comum. Estamos lidando com algo... ou alguém muito astuto.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Sim, a maré baixa, o impostor... Agora me lembro de tudo!</speech>
            <speech>Tudo está fazendo sentido: a emboscada, o disfarce, o truque. Como eu poderia ter perdido isso?</speech>
            <speech>Preciso confrontar isso diretamente. Vou para o Shoal Cave Inner Room na maré baixa.</speech>
            <speech>Há algo crucial que não percebi.</speech>
            <speech>Sua ajuda tem sido inestimável. Graças a vocês, estou um passo mais perto de desvendar esse mistério.</speech>
            <speech>Preciso ir agora, o dever me chama!</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Leopold" randomRotation="false" sprite="39" x="16" y="4">
        <speech>A arrogância diminui a sabedoria.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Sumi" randomRotation="false" sprite="38" x="9" y="5">
        <speech>A verdade ilumina a mente, mas nem sempre trará felicidade ao seu coração.</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="4" name="Gunther" randomRotation="false" sprite="5" x="26" y="16">
        <speech>O medo é uma doença; a esperança é sua única cura.</speech>
    </npc>
</npcs>