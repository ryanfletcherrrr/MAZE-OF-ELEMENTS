<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Saudações! Eu sou o lendário guardião das perigosas cavernas Shoal.</speech>
            <speech>Somente os treinadores com uma coleção de mais de 400 Pokémon exclusivos podem entrar. É uma medida de experiência e habilidade.</speech>
            <speech>Impressionante! Sua Pokédex mostra que você já capturou mais de 400 Pokémon. Essa é uma conquista e tanto!</speech>
            <speech>Gostaria que eu o acompanhasse até as cavernas?</speech>
        </speeches>
        <speeches id="2">
            <speech>Bem-vindo às cavernas Shoal, um lugar de mistério e perigo.</speech>
            <speech>A entrada é reservada para aqueles que capturaram mais de 400 Pokémon únicos, como prova de sua experiência.</speech>
            <speech>Parece que você ainda não alcançou essa marca. Volte quando tiver expandido mais sua Pokédex.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Ah, viajante! Se quiser fazer um Shell Bell, precisarei de 4 Shoal Salts e 4 Shoal Shells da Shoal Cave.</speech>
            <speech>Esses tesouros são carregados pelas marés. Se você não tiver o suficiente, as marés variáveis da Shoal Cave podem revelar mais.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, você conseguiu!</speech>
            <speech>Você reuniu 4 Shoal Salts e 4 Shoal Shells. Com eles, posso criar um Shell Bell, um belo item que cura seus Pokémon enquanto eles lutam.</speech>
            <speech>Estamos prontos para prosseguir? Isso não é algo que eu possa desfazer, portanto, tenha certeza.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não há problema em parar um pouco para pensar sobre isso. Afinal, não é todo dia que você recebe um Shell Bell.</speech>
            <speech>Não tenha pressa. Estarei aqui quando você estiver pronto para fazer a troca.</speech>
        </speeches>
        <speeches id="4">
            <speech>Excelente escolha. Vamos começar a trabalhar então.</speech>
            <speech>...Aqui está. Seu próprio Shell Bell. Quando seu Pokémon o segura, ele se cura um pouco toda vez que acerta um golpe.</speech>
            <speech>Use-o com sabedoria. Esses itens são raros e contêm o poder do mar em seu interior.</speech>
            <speech>Estarei por perto, vasculhando a caverna em busca de mais tesouros. Se encontrar mais materiais, você sabe onde me encontrar.</speech>
        </speeches>
        <speeches id="5">
            <speech>Obrigado por buscá-las para mim. O Shell Bell é seu para ficar com ele. Use-o bem.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Milotic" speed="1" sprite="350" type="pokemon" x="34" y="57">
        <path>LEFTx9,RIGHTx9</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Kingdra" speed="1" sprite="230" type="pokemon" x="50" y="57">
        <path>RIGHTx6,UPx3,RIGHTx6,LEFTx6,DOWNx3,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Seadra" speed="1" sprite="117" type="pokemon" x="62" y="35">
        <path>UPx8,DOWNx8</path>
        <onCollisionSpeech gap="4">Seadra!</onCollisionSpeech>
        <speech>Seadra!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Horsea" speed="1" sprite="116" type="pokemon" x="31" y="17">
        <path>DOWNx6,LEFTx5,RIGHTx5,UPx6</path>
        <onCollisionSpeech gap="4">Horsea!</onCollisionSpeech>
        <speech>Horsea!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Whiscash" shouldSleep="" speed="1" sprite="340" type="pokemon" x="16" y="34">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Whiscash!</onCollisionSpeech>
        <speech>Whiscash!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="6" name="Liam" randomRotation="true" sprite="108" x="35" y="44">
        <speech>Olá, companheiro de viagem! A Rota 125 é um lugar fascinante, repleto de todos os tipos de maravilhas Pokémon.</speech>
        <speech>Certa vez, encontrei um lindo Milotic nadando graciosamente entre as ondas.</speech>
        <speech>Apenas uma palavra de cautela: as correntes marítimas podem ser bastante fortes, portanto, é melhor ficar atento!</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="79" y="35">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4">Tentacool!</onCollisionSpeech>
        <speech>Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="60" y="14">
        <path>RIGHTx9,LEFTx9</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="69" y="37">
        <path>UPx3,RIGHTx3,LEFTx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Tentacool!</onCollisionSpeech>
        <speech>Tentacool!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="10" name="Kai" randomRotation="true" sprite="11" x="72" y="27">
        <speech>Olá, aventureiros! Aqui é o Kai. Você sabia que os Tentacool se reúnem em grandes enxames durante certas épocas do ano? É um espetáculo e tanto para se ver.</speech>
        <speech>Só tome cuidado com os Sharpedo, que estão sempre à espreita.</speech>
    </npc>
    <movingNpc direction="DOWN" id="11" name="Pelipper" speed="1" sprite="279" type="pokemon" x="40" y="7">
        <path>DOWNx7,RIGHTx14,UPx7,LEFTx14</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Pelipper" speed="1" sprite="279" type="pokemon" x="42" y="21">
        <path>DOWNx4,RIGHTx7,UPx4,DOWNx4,LEFTx7,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="11" y="8">
        <path>RIGHTx13,LEFTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="14" name="Owen" randomRotation="true" sprite="26" x="22" y="27">
        <speech>Saudações, treinador! Como um explorador experiente da Rota 125, já tive meu quinhão de encontros com Pokémon.</speech>
        <speech>Certa vez, meu fiel Pelipper e eu resgatamos um Corsola encalhado e enroscado em algas marinhas.</speech>
        <speech>Lembre-se, fique sempre atento às cavernas subaquáticas escondidas, pois nunca se sabe que segredos elas podem guardar!</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Corsola" speed="1" sprite="222" type="pokemon" x="4" y="18">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Wailord" speed="1" sprite="321" type="pokemon" x="100" y="4">
        <path>DOWNx35,UPx35</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>