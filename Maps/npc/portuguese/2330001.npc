<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Bem-vindo a Kanto! Sou assistente de pesquisa do Professor Oak e estou estudando a diversidade de Pokémon nessa região.
                Gostaria de ajudar em nossa pesquisa?
            </speech>
            <speech>Ao me mostrar diferentes espécies de Pokémon todos os dias, você ganhará fichas especiais por sua contribuição
                para a ciência!
            </speech>
            <speech>O que você acha - pronto para ajudar a expandir nosso conhecimento sobre Pokémon?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, não estou vendo nenhum Pokémon novo com você no momento. Você sabe, Kanto é cheia de espécies fascinantes!
                espécies fascinantes!
            </speech>
            <speech>Tente verificar a grama alta, as cavernas ou até mesmo os pontos de pesca. Há muitos Pokémon esperando para serem
                descobertos.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Eu já documentei esse Pokémon em minhas anotações de pesquisa. Estou particularmente interessado em espécies que
                que ainda não registrei.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Maravilhoso! Essa será uma ótima adição ao nosso banco de dados de pesquisa de Pokémon de Kanto. Aqui estão seus
                merecidos tokens!
            </speech>
            <speech>O mundo de Pokémon é vasto - estou ansioso para ver o que você trará amanhã.</speech>
        </speeches>
        <speeches id="5">
            <speech>Vejo seu entusiasmo, mas já registrei um Pokémon seu hoje. Vamos manter nossa pesquisa
                metódica.
            </speech>
            <speech>O professor Carvalho sempre diz: "Uma boa pesquisa leva tempo! Até amanhã para mais descobertas!
            </speech>
        </speeches>
        <speeches id="6">
            <speech>Excelente trabalho hoje! Retorne em $DURATION para continuar ajudando em nosso projeto de pesquisa de Kanto.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Olá! Os tokens que você coletou parecem interessantes. Gostaria de ver quais itens especiais você pode obter em troca?</speech>
        </speeches>
        <speeches id="2">
            <speech>Não há problema algum! Um bom pesquisador sabe quando deve levar o seu tempo. Os itens estarão aqui quando você estiver pronto.</speech>
            <speech>Continue trazendo essas novas descobertas de Pokémon - cada contribuição nos ajuda a entender melhor o ecossistema de Kanto!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Buscador de aprimoramentos, sua jornada para criar a {COLOR=GOLD}Everstone Exp Share{ENDCOLOR} começa, mas seu caminho
                ainda não foi testado.
            </speech>
            <speech>São necessários: {COLOR=CYAN}uma Cota de Exp.{ENDCOLOR}, {COLOR=CYAN}uma Pedra Eterna{ENDCOLOR}, {COLOR=CYAN}uma Faixa de Ligação{ENDCOLOR} e o {COLOR=PURPLE}sagrado Projeto{ENDCOLOR}.</speech>
            <speech>Uma vez unidos, esses materiais forjarão uma ferramenta para {COLOR=RED}alimentar a evolução{ENDCOLOR} e, ao mesmo tempo, {COLOR=GREEN}compartilhar experiências{ENDCOLOR}.</speech>
        </speeches>
        <speeches id="2">
            <speech>Finalmente, todos os componentes convergiram! O {COLOR=PURPLE}Blueprint{ENDCOLOR} e os materiais estão prontos.</speech>
            <speech>Vamos começar a criar o {COLOR=GOLD}Everstone Exp Share{ENDCOLOR}, mesclando esses elementos em uma obra-prima singular?
                obra-prima?
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Entendido. O momento da criação é sagrado e exige prontidão. Retorne quando se sentir preparado.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Veja! O {COLOR=GOLD}Everstone Exp Share{ENDCOLOR} agora está completo, infundido com o poder de {COLOR=GREEN}compartilhar experiências{ENDCOLOR} enquanto
                {COLOR=RED}prevenindo a evolução{ENDCOLOR}.
            </speech>
            <speech>Use-o com sabedoria em seu treinamento. Que ele lhe sirva bem em sua jornada.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Buscador do conhecimento, você deseja criar o {COLOR=GOLD}Move-Block Exp Share{ENDCOLOR} - uma ferramenta de treinamento focado.
            </speech>
            <speech>São necessários: {COLOR=CYAN}um compartilhamento de experiência{ENDCOLOR}, {COLOR=CYAN}uma etiqueta de feitiço{ENDCOLOR}, {COLOR=CYAN}um disco de TM quebrado{ENDCOLOR} e o {COLOR=PURPLE}projeto de orientação{ENDCOLOR}.</speech>
            <speech>Esses materiais combinados criarão um item para {COLOR=RED}prevenir o aprendizado móvel{ENDCOLOR} e, ao mesmo tempo, {COLOR=GREEN}compartilhar a experiência{ENDCOLOR}.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Os materiais se alinharam! Seu {COLOR=PURPLE}Blueprint{ENDCOLOR} e seus componentes aguardam sua transformação.</speech>
            <speech>Vamos começar a forjar o {COLOR=GOLD}Move-Block Exp Share{ENDCOLOR}, unindo esses elementos em algo maior?
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Muito bem. A criação não pode ser apressada. Volte quando tiver certeza de sua determinação.</speech>
        </speeches>
        <speeches id="4">
            <speech>Está pronto! O {COLOR=GOLD}Move-Block Exp Share{ENDCOLOR} agora existe, pronto para {COLOR=RED}preservar os movesets{ENDCOLOR} enquanto {COLOR=GREEN}compartilha
                experiência{ENDCOLOR}.
            </speech>
            <speech>Use seu poder com cuidado. Que ele ajude a aperfeiçoar as habilidades da sua equipe.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Buscador de força, você deseja o {COLOR=GOLD}Macho Brace Exp Share{ENDCOLOR} - uma ferramenta de treinamento intensivo.</speech>
            <speech>São necessários: {COLOR=CYAN}a Exp. Share{ENDCOLOR}, {COLOR=CYAN}a Lagging Tail{ENDCOLOR}, {COLOR=CYAN}a Macho Brace{ENDCOLOR} e o {COLOR=PURPLE}masterful Blueprint{ENDCOLOR}.</speech>
            <speech>Quando combinados, eles criarão um item para {COLOR=ORANGE}dobrar EVs{ENDCOLOR} e, ao mesmo tempo, {COLOR=GREEN}compartilhar experiências{ENDCOLOR}.</speech>
        </speeches>
        <speeches id="2">
            <speech>Os componentes foram reunidos! Seu {COLOR=PURPLE}Blueprint{ENDCOLOR} e os materiais aguardam sua união.</speech>
            <speech>Vamos criar o {COLOR=GOLD}Macho Brace Exp Share{ENDCOLOR}, combinando esses elementos em uma ferramenta de poder?</speech>
        </speeches>
        <speeches id="3">
            <speech>Como você desejar. Retorne quando estiver preparado para realizar essa criação.</speech>
        </speeches>
        <speeches id="4">
            <speech>Veja a {COLOR=GOLD}Macho Brace Exp Share{ENDCOLOR} concluída, que representa força e sabedoria!</speech>
            <speech>Treine bem com essa poderosa ferramenta. Que ela aprimore o verdadeiro potencial de seu Pokémon{COLOR=ORANGE}{ENDCOLOR}.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Buscador de vínculos, você busca o {COLOR=GOLD}Soothe Share{ENDCOLOR} - uma ferramenta de companheirismo e crescimento.</speech>
            <speech>São necessários: {COLOR=CYAN}um Exp. Share{ENDCOLOR}, {COLOR=CYAN}dez Heart Scales{ENDCOLOR}, {COLOR=CYAN}um Soothe Bell{ENDCOLOR} e o {COLOR=PURPLE}harmonious Blueprint{ENDCOLOR}.</speech>
            <speech>Juntos, eles criarão um item para {COLOR=PINK}fortalecer a amizade{ENDCOLOR} e, ao mesmo tempo, {COLOR=GREEN}compartilhar experiências{ENDCOLOR}.</speech>
        </speeches>
        <speeches id="2">
            <speech>Os elementos da amizade se reuniram! Seu {COLOR=PURPLE}Blueprint{ENDCOLOR} e os materiais ressoam juntos.</speech>
            <speech>Devemos criar o {COLOR=GOLD}Soothe Share{ENDCOLOR}, unindo esses componentes em uma ferramenta de unidade?</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu entendo. Os laços de amizade não podem ser apressados. Volte quando achar que é o momento certo.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Contemple o {COLOR=GOLD}Soothe Share{ENDCOLOR} concluído, um símbolo dos laços entre o treinador e o Pokémon!</speech>
            <speech>Que isso {COLOR=PINK}fortaleça as conexões{ENDCOLOR} dentro da sua equipe. Que suas amizades floresçam.</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>Assim como uma rosa que floresce com o cuidado cuidadoso, o vínculo entre o treinador e o Pokémon floresce com dedicação e amor.</speech>
            <speech>Em meu jardim de carinho, cultivei tanto belas flores quanto parcerias poderosas. Você testará a força de seu próprio cultivo?</speech>
        </speeches>

        <speeches id="2">
            <speech>Sua vitória mostra os belos resultados da paciência e do cuidado, assim como uma rosa preciosa em plena floração.</speech>
            <speech>As pétalas de seu sucesso se desdobraram graciosamente. Seus Pokémon refletem a atenção carinhosa que você deu a eles.</speech>
        </speeches>

        <speeches id="3">
            <speech>Magnífico! Seu vínculo com seu Pokémon é tão deslumbrante quanto um perfeito jardim de rosas na primavera.</speech>
            <speech>Você provou que, com o devido cuidado e dedicação, até mesmo as conexões mais delicadas podem se tornar inquebrantemente fortes.</speech>
            <speech>Como as rosas que precisam de tempo para florescer, retorne em $DURATION para nutrir ainda mais nossa rivalidade.</speech>
        </speeches>

        <speeches id="4">
            <speech>Extraordinária! Sua força me lembra os espinhos de uma rosa - lindos, mas formidáveis, quando protegem o que é mais importante.</speech>
            <speech>A lição de hoje criará raízes e se transformará em conquistas ainda maiores. Que sua jornada continue a florescer com tanta graça.</speech>
        </speeches>

        <speeches id="5">
            <speech>Cada estação traz um novo crescimento; a cada dia que passa, nossos laços se aprofundam como raízes que buscam alimento.</speech>
            <speech>Volte amanhã, quando o orvalho da manhã beijar as pétalas, e voltaremos a tratar de nossa rivalidade.</speech>
        </speeches>
    </conversation>
</npcs>