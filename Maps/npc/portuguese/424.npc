<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Vamos continuar pela Rota 110 e seguir para o Mt. Chimney!</speech>
            <speech>Descansaremos na cidade de Mauville, pois a Rota 110 fica bem longe.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ei, $PLAYER_NAME!</speech>
            <speech>Já faz muito tempo! E em um bom momento. Eu estava procurando por Pokémon, sabe?</speech>
            <speech>Meu pai está sempre falando sobre como a natureza costumava ser ainda mais diversificada, antigamente.</speech>
            <speech>Ele diz que costumava haver muito mais tipos de Pokémon do que há agora!</speech>
            <speech>Então, é por isso que fazemos trabalho de campo, ele e eu. Nós realmente queremos descobrir o que aconteceu com esses Pokémon no passado.</speech>
            <speech>Em minha jornada até agora, conheci muitos Pokémon diferentes e acho que consegui entender muitos deles também.</speech>
            <speech>Eu e meus Pokémon realmente crescemos. Então... Que tal uma pequena batalha?</speech>
        </speeches>
        <speeches id="2">
            <speech>$PLAYER_NAME, você também tem estado ocupado treinando, não é mesmo?</speech>
            <speech>Até mais tarde, $PLAYER_NAME! Vamos nos encontrar novamente!</speech>
            <speech>Espero que nós dois possamos conhecer ainda mais Pokémon em nossas jornadas!</speech>
        </speeches>
        <speeches id="3">
            <speech>$PLAYER_NAME, você também tem estado ocupado treinando, não é mesmo?</speech>
            <speech>Até mais tarde, $PLAYER_NAME! Vamos nos encontrar novamente!</speech>
            <speech>Espero que nós dois possamos conhecer ainda mais Pokémon em nossas jornadas!</speech>
        </speeches>
        <speeches id="4">
            <speech>Com um pouco mais de treinamento, talvez você consiga se aproximar de mim ;)</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Afaste-se!</speech>
            <speech>A rota está bloqueada no momento.</speech>
            <speech>Nós, da Equipe Magma, estamos conduzindo uma investigação.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Acho que minha bicicleta não funcionará na ciclovia de Hoenn.</speech>
            <speech>Preciso de uma atualização...</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Preciso estar em uma bicicleta para atravessar essa ponte.</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Celestia" randomRotation="false" sprite="6" x="18" y="94">
        <speech>Essa ponte é o caminho mais seguro e mais rápido entre Slateport e Mauville.</speech>
        <speech>Gosto de percorrer o piso de vidro para observar os pokémons aquáticos embaixo dele sem ter que me preocupar com os pokémons selvagens.</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Taillow" speed="1" sprite="276" type="pokemon" x="17" y="35">
        <path>RIGHTx20,LEFTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Wingull" speed="1" sprite="278" type="pokemon" x="55" y="81">
        <path>LEFTx8,RIGHTx8,UPx8,DOWNx8,</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Carvannah" speed="1" sprite="318" type="pokemon" x="60" y="101">
        <path>UPx8,LEFTx7,RIGHTx7,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="12" name="Alfred" randomRotation="false" sprite="23" x="16" y="5">
        <speech>Últimos passos antes de Mauville.</speech>
        <speech>Se eu soubesse quantos pokémons selvagens eu teria que encontrar antes de chegar a esse ponto, eu teria tomado o caminho da ponte...</speech>
        <speech>Pelo menos a brisa é refrescante.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="14" name="Joey" randomRotation="false" sprite="2" x="51" y="24">
        <speech>O que é esse prédio assustador?</speech>
    </npc>
    <movingNpc direction="DOWN" id="18" name="Carvannah" speed="1" sprite="318" type="pokemon" x="57" y="38">
        <path>DOWNx15,UPx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Carvannah" speed="1" sprite="318" type="pokemon" x="64" y="38">
        <path>DOWNx15,UPx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Wingull" speed="1" sprite="278" type="pokemon" x="36" y="55">
        <path>DOWNx7,RIGHTx5,UPx7,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <!--<movingNpc direction="DOWN" id="21" name="Usain" speed="2" sprite="80" type="npc" x="29" y="14">
        <path>DOWNx17,RIGHTx30,DOWNx53,LEFTx27,DOWNx10,UPx10,RIGHTx27,UPx53,LEFTx30,UPx17</path>
        <onCollisionSpeech gap="4">HEY!</onCollisionSpeech>
        <speech>OH! you actually got me?</speech>
        <speech>Not bad at all.</speech>
        <speech>I never thought someone would ever catch me.</speech>
        <speech>I am SPEED!</speech>
    </movingNpc>-->
    <conversation id="10">
        <speeches id="1">
            <speech>Você quer brigar comigo? Você sabe que eu venho de uma longa linhagem de punks, certo? Você tem coragem, pelo menos.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vim aqui para esmagar os instrutores atrevidos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Vim aqui para esmagar os instrutores atrevidos.</speech>
        </speeches>
        <speeches id="4">
            <speech>Heh... Não me arrependo de nada... Foi uma luta que valeu a honra de minha família...</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Se você perder, poderá ser meu servo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Um dia, farei de você meu servo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Um dia, farei de você meu servo.</speech>
        </speeches>
        <speeches id="4">
            <speech>De agora em diante, sou seu empregador.</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Vamos ter calma com o Pokémon e com a vida.</speech>
        </speeches>
        <speeches id="2">
            <speech>Não há problema. Não há problema. Terei outra chance.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não há problema. Não há problema. Terei outra chance.</speech>
        </speeches>
        <speeches id="4">
            <speech>Não há problema em se esforçar. Mas você também precisa de um pouco de espaço para respirar.</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>Em meu país, dizemos que garotas bonitas podem esconder todos os tipos de pecados. Não é ótimo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Não me importa se vou ganhar ou perder, desde que eu possa escapar desse tédio.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não me importa se vou ganhar ou perder, desde que eu possa escapar desse tédio.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, esqueça! Não quero mais roupas chiques! Vou me livrar dessa roupa e vou me bronzear!</speech>
        </speeches>
    </conversation>
    <conversation id="14">
        <speeches id="1">
            <speech>Gostaríamos de realizar uma batalha Pokémon contra o inimigo mais forte.</speech>
        </speeches>
        <speeches id="2">
            <speech>Fico imaginando se poderíamos ter sido amigos se tivéssemos nos conhecido em um mundo sem batalhas...</speech>
        </speeches>
        <speeches id="3">
            <speech>Fico imaginando se poderíamos ter sido amigos se tivéssemos nos conhecido em um mundo sem batalhas...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ho ho ho! Foi do nosso agrado! Estamos bastante satisfeitos!</speech>
        </speeches>
    </conversation>
    <conversation id="15">
        <speeches id="1">
            <speech>Dizer que sou um espírito livre soa bem, mas na verdade sou apenas um sem-teto desempregado!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sonhar em ser livre é a melhor parte...</speech>
        </speeches>
        <speeches id="3">
            <speech>Sonhar em ser livre é a melhor parte...</speech>
        </speeches>
        <speeches id="4">
            <speech>Se eu puder viver aqui e brincar o dia todo, nunca precisarei me esforçar.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>Tudo bem, então, jogue sua Pokébola! Eu a pegarei imediatamente!</speech>
        </speeches>
        <speeches id="2">
            <speech>Se ao menos eu tivesse conseguido pegar aquela Pokébola daquela vez...</speech>
        </speeches>
        <speeches id="3">
            <speech>Se ao menos eu tivesse conseguido pegar aquela Pokébola daquela vez...</speech>
        </speeches>
        <speeches id="4">
            <speech>Pegar as Poké Balls antes que elas se abram é uma maneira infalível de vencer que eu criei.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>Seu Pokémon... Mostre-os para mim...</speech>
        </speeches>
        <speeches id="2">
            <speech>Sim... Você tem bons Pokémon... Os Pokémon devem estar felizes por serem criados por você...</speech>
        </speeches>
        <speeches id="3">
            <speech>Sim... Você tem bons Pokémon... Os Pokémon devem estar felizes por serem criados por você...</speech>
        </speeches>
        <speeches id="4">
            <speech>Tudo dentro de minhas expectativas... Não há nada para se surpreender...</speech>
        </speeches>
    </conversation>
    <conversation id="18">
        <speeches id="1">
            <speech>(Esse garoto parece ser um verdadeiro otário. Tudo bem!) Ohhhh, pobre de mim! Ninguém entende minha arte...</speech>
        </speeches>
        <speeches id="2">
            <speech>Seu rosto triunfante me agrada. Ele desperta meus impulsos criativos...</speech>
        </speeches>
        <speeches id="3">
            <speech>Seu rosto triunfante me agrada. Ele desperta meus impulsos criativos...</speech>
        </speeches>
        <speeches id="4">
            <speech>Visite a galeria para ver meus trabalhos! (Você parece idiota o suficiente para comprar algo!)</speech>
        </speeches>
    </conversation>
    <conversation id="19">
        <speeches id="1">
            <speech>Heh-heh-heh. Se você perder, eu o transformarei em um Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>Estou desapontado, mas não há como evitar... Minhas profecias são absolutas...</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou desapontado, mas não há como evitar... Minhas profecias são absolutas...</speech>
        </speeches>
        <speeches id="4">
            <speech>Da próxima vez que eu o vir, eu o transformarei em um Pokémon com meu poder.</speech>
        </speeches>
    </conversation>
    <conversation id="20">
        <speeches id="1">
            <speech>Este não é um uniforme - é apenas o que eu gosto de usar. Eu mesmo o fiz.</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, essa foi por pouco. Quase sujei minhas roupas.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau, essa foi por pouco. Quase sujei minhas roupas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Gostaria de poder viver nos mundos que vejo em jogos, animes e quadrinhos.</speech>
        </speeches>
    </conversation>
    <conversation id="22">
        <speeches id="1">
            <speech>Tanto minha mãe quanto meu pai são treinadores Ace. Provavelmente eu também sou um Ace!</speech>
        </speeches>
        <speeches id="2">
            <speech>Waaah! Eu deveria ter genes superiores e ser capaz de seguir o exemplo de meus pais...</speech>
        </speeches>
        <speeches id="3">
            <speech>Waaah! Eu deveria ter genes superiores e ser capaz de seguir o exemplo de meus pais...</speech>
        </speeches>
        <speeches id="4">
            <speech>Quero ser um verdadeiro Ás, como minha mãe e meu pai.</speech>
        </speeches>
    </conversation>
    <conversation id="23">
        <speeches id="1">
            <speech>Ah, jovem Trainer! Eu estava esperando alguém com seu espírito.</speech>
            <speech>Sou o terceiro líder de ginásio dessa região.</speech>
            <speech>Infelizmente, um marginal fugiu com minha coleção de crachás de ginástica.</speech>
            <speech>Na minha idade, perseguir rufiões é uma tarefa muito extenuante para mim, especialmente com meus ossos velhos.</speech>
            <speech>Eu conhecia as bicicletas que você obtém em Sinnoh, mas parece que elas não são adequadas para o terreno de Hoenn.</speech>
            <speech>É aqui que você entra. Preciso de um par de pernas rápidas e capazes para essa perseguição.</speech>
            <speech>Você poderia visitar a loja da Rydel para fazer uma atualização? Com as modificações certas, sua bicicleta pode navegar perfeitamente em Hoenn.</speech>
            <speech>Enquanto isso, voltarei à academia para melhorar nossas medidas de segurança. Não podemos nos dar ao luxo de ter outro incidente desse tipo.</speech>
            <speech>Depois de encontrar esse canalha, venha me encontrar na academia. Estarei esperando para saber de sua perseguição.</speech>
            <speech>Sua jornada oferece mais do que apenas a perseguição; é uma oportunidade de mostrar sua coragem e determinação.</speech>
        </speeches>
    </conversation>
    <conversation id="24">
        <speeches id="1">
            <speech>Heh, então você me encontrou? O pequeno treinador de recados do Wattson, hein?</speech>
            <speech>Você pensou que poderia recuperar o estojo de crachá sem lutar? Isso não está acontecendo!</speech>
            <speech>Vamos ver se você tem a faísca para me enfrentar. Pronto para um choque?</speech>
        </speeches>
        <speeches id="2">
            <speech>O quê?! De jeito nenhum... Como você me venceu?!</speech>
            <speech>Isso ainda não acabou. Você pode ter vencido desta vez, mas não vou me esquecer disso.</speech>
            <speech>Pegue seu precioso estojo de crachá de volta. Wattson não é nada sem treinadores como você.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mudou de ideia sobre lutar comigo? Não posso dizer que o culpo.</speech>
            <speech>Volte se você se sentir corajoso o suficiente. Até lá, manterei este estojo de crachá aquecido.</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que você não é tão eletrizante quanto pensava. É melhor voltar para Wattson sem os crachás.</speech>
            <speech>Talvez passe mais tempo treinando antes de tentar me desafiar novamente. Até logo, perdedor!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="4" name="Oddish" shouldSleep="" speed="1" sprite="43" type="pokemon" x="8" y="77">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Odd?</onCollisionSpeech>
        <speech>Oddish está recebendo luz solar.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Minun" shouldSleep="" speed="1" sprite="312" type="pokemon" x="8" y="114">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Minun!</onCollisionSpeech>
        <speech>Minun!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Plusle" shouldSleep="" speed="1" sprite="311" type="pokemon" x="18" y="104">
        <path>DOWNx4,RIGHTx3,LEFTx3,UPx4</path>
        <onCollisionSpeech gap="4">Plusle!</onCollisionSpeech>
        <speech>Plusle!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Wingull" speed="1" sprite="278" type="pokemon" x="38" y="63">
        <path>LEFTx19,DOWNx8,RIGHTx19,UPx8</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Manectric" shouldSleep="" speed="1" sprite="310" type="pokemon" x="42" y="75">
        <path>LEFTx2,DOWNx2,LEFTx1,DOWNx1,UPx1,RIGHTx1,UPx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Bark!</onCollisionSpeech>
        <speech>Uivo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Electrike" shouldSleep="" speed="1" sprite="309" type="pokemon" x="42" y="50">
        <path>UPx5,RIGHTx4,LEFTx4,DOWNx5</path>
        <onCollisionSpeech gap="4">Bark!</onCollisionSpeech>
        <speech>Uivo!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="25" name="Ken" randomRotation="true" sprite="26" x="31" y="45">
        <speech>Convidei minha namorada para um jantar romântico na margem da rota 110, perto da ponte de vidro.... onde ela está?</speech>
    </npc>
    <movingNpc direction="RIGHT" id="15" name="Barbara" shouldSleep="" speed="1" sprite="31" type="npc" x="53" y="31">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Can't you see I'm busy?</onCollisionSpeech>
        <speech>Eu deveria encontrar meu namorado na rota 110, perto da ponte de vidro....</speech>
        <speech>Mas ele não está em lugar nenhum.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="26" name="Wingull" speed="1" sprite="278" type="pokemon" x="26" y="16">
        <path>LEFTx8,DOWNx6,RIGHTx8,UPx6</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="27" name="Volbeat" shouldSleep="" speed="1" sprite="313" type="pokemon" x="43" y="104">
        <path>LEFTx3,DOWNx4,UPx4,RIGHTx3</path>
        <onCollisionSpeech gap="4">Volbeat!</onCollisionSpeech>
        <speech>Volbeat!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="28" name="Illumise" shouldSleep="" speed="1" sprite="314" type="pokemon" x="13" y="81">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4">Illumise!</onCollisionSpeech>
        <speech>Iluminar!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="31" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="52" y="100">
        <path>DOWNx15,UPx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="32" name="Carvanha" speed="1" sprite="318" type="pokemon" x="29" y="96">
        <path>LEFTx3,UPx5,DOWNx5,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="33" name="Roselia" shouldSleep="" speed="1" sprite="315" type="pokemon" x="12" y="36">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Roselia!</onCollisionSpeech>
        <speech>Roselia!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="34" name="Gloom" shouldSleep="" speed="1" sprite="44" type="pokemon" x="9" y="8">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Glooooooo!</onCollisionSpeech>
        <speech>Sombrio!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="35" name="Pelipper" speed="1" sprite="279" type="pokemon" x="9" y="65">
        <path>UPx11,LEFTx5,UPx7,DOWNx7,RIGHTx5,DOWNx11</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="36" name="Tentacool" speed="1" sprite="72" type="pokemon" x="1" y="45">
        <path>UPx8,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="37" name="Tentacool" speed="1" sprite="72" type="pokemon" x="5" y="35">
        <path>UPx8,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>