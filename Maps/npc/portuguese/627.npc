<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>*Pika Pika!!!</speech>
            <speech>*Pikachu foge de novo...*</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Passimian" speed="1" sprite="766" type="pokemon" x="23" y="49">
        <path>UPx3,RIGHTx3,LEFTx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Flabebe" shouldSleep="" speed="1" sprite="964" type="pokemon" x="30" y="37">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Sawsbuck" shouldSleep="" speed="1" sprite="938" type="pokemon" x="31" y="44">
        <path>LEFTx3,UPx2,DOWNx2,RIGHTx3</path>
        <onCollisionSpeech gap="4">Sawsbuck!</onCollisionSpeech>
        <speech>Sawsbuck!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Vivilion" speed="1" sprite="954" type="pokemon" x="38" y="34">
        <path>LEFTx10,RIGHTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Pidgeot" speed="1" sprite="18" type="pokemon" x="2" y="28">
        <path>DOWNx12,UPx12</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="6" name="Marisa" randomRotation="false" sprite="6" x="15" y="24">
        <speech>No verão, até os NPCs parecem gostar mais do jogo!</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Taillow" shouldSleep="" speed="1" sprite="276" type="pokemon" x="29" y="11">
        <path>LEFTx3,DOWNx2,UPx2,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Chatot" shouldSleep="" speed="1" sprite="441" type="pokemon" x="10" y="15">
        <path>RIGHTx2,LEFTx2,DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Chatot!</onCollisionSpeech>
        <speech>Chatot!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Braviary" speed="1" sprite="628" type="pokemon" x="5" y="15">
        <path>LEFTx2,UPx3,RIGHTx2,LEFTx2,DOWNx3,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Staravia" speed="1" sprite="397" type="pokemon" x="19" y="6">
        <path>UPx5,RIGHTx13,DOWNx5,UPx5,LEFTx13,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Stufful" shouldSleep="" speed="1" sprite="759" type="pokemon" x="18" y="4">
        <path>LEFTx3,UPx1,LEFTx3,RIGHTx3,DOWNx1,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Cacnea" shouldSleep="" speed="1" sprite="331" type="pokemon" x="5" y="4">
        <path>DOWNx2,RIGHTx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Billie Joe" randomRotation="false" sprite="24" x="23" y="12">
        <speech>Quando o tempo estiver quente, encontre um local com sombra e aumente esses níveis.</speech>
        <speech>Vença o calor encontrando um local fresco para jogar e progredir.</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Pidgeotto" speed="1" sprite="17" type="pokemon" x="43" y="1">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>

    <conversation id="2">
        <speeches id="1">
            <speech>Você acha que pode nos impedir? Nós, Rangers, temos uma missão que transcende sua compreensão!</speech>
            <speech>Com a Forma de Verão exclusiva do Pikachu, podemos despertar o lendário Kartana e aproveitar seu poder para proteger esta ilha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impossível! Como você conseguiu me derrotar? Será que nossa missão de despertar Kartana foi mal orientada?</speech>
            <speech>Acreditávamos que o Pikachu era a chave... Parece que subestimamos sua determinação.</speech>
        </speeches>
        <speeches id="3">
            <speech>Então, você está de volta para mais? Os segredos desta ilha estão além de sua compreensão.</speech>
            <speech>Você não interromperá nossa missão!</speech>
            <speech>Somente os dignos podem lidar com o poder de Kartana.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ainda não é forte o suficiente para nos desafiar. Volte quando tiver aperfeiçoado suas habilidades.</speech>
            <speech>A ilha é implacável, e nós também. Você precisará treinar mais para ter uma chance contra nós!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Você é persistente, isso eu admito. Mas seus esforços são inúteis contra a vontade dos Rangers!</speech>
            <speech>Ao aproveitar a Forma de Verão do Pikachu, despertaremos Kartana e garantiremos a proteção eterna da ilha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Como isso é possível? Derrotado por você? Nossa visão de uma ilha protegida por meio de Kartana é apenas um sonho?</speech>
            <speech>Tínhamos certeza de que o Pikachu era o catalisador... Talvez tenhamos julgado mal sua força.</speech>
        </speeches>
        <speeches id="3">
            <speech>Retornando para outra rodada? Você claramente não entende a profundidade de nossa missão. Você não terá sucesso!</speech>
            <speech>Somente aqueles com força verdadeira podem comandar o poder de Kartana.</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que você ainda não está preparado para o desafio que está por vir. Volte quando estiver realmente pronto.</speech>
            <speech>Esta ilha testa todos que ousam enfrentá-la, e nós também. Você precisa treinar mais se quiser nos derrotar!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Você é corajoso, isso eu admito. Mas a coragem por si só não impedirá a missão dos Rangers!</speech>
            <speech>Com as habilidades únicas de Pikachu, despertaremos Kartana e protegeremos esta ilha como nunca antes!</speech>
        </speeches>
        <speeches id="2">
            <speech>Derrotado? Como isso pôde acontecer? Nosso objetivo de despertar Kartana é falho?</speech>
            <speech>O Pikachu deveria ser a resposta... Talvez tenhamos subestimado sua determinação.</speech>
        </speeches>
        <speeches id="3">
            <speech>De volta? Você ainda não entendeu a importância de nossa missão. Você não prevalecerá!</speech>
            <speech>Somente os verdadeiramente poderosos podem controlar a força de Kartana.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você ainda não está pronto para enfrentar todo o poder dos Rangers. Volte quando tiver mais força.</speech>
            <speech>As provações da ilha são implacáveis, assim como nós. Você precisa treinar mais se quiser nos vencer!</speech>
        </speeches>
    </conversation>
</npcs>