<npc>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Eu nasci para vencer, saia deste lugar se não quiser ser humilhado</speech>
        </speeches>
        <speeches id="2">
            <speech>Foi uma boa batalha, mas eu perdi. É estranho perder pela primeira vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Foi uma boa batalha, mas eu perdi. É estranho perder pela primeira vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ganhei como sempre, você é muito chato para mim.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>Não tenho ânimo para fazer nada, mas não posso deixar você passar, ugh.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu só quero ir para casa, fazer o que você quiser, tchau.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu só quero ir para casa, fazer o que você quiser, tchau.</speech>
        </speeches>
        <speeches id="4">
            <speech>Não volte atrás, isso é muito irritante e cansativo.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>A vida é um jogo entre a cobra e o rato. Por isso, consegui uma equipe de cobra e rato.</speech>
            <speech>Vamos ver como vai ser.</speech>
        </speeches>
        <speeches id="2">
            <speech>Às vezes a cobra vence e às vezes o rato. Tudo isso faz parte da vida.</speech>
        </speeches>
        <speeches id="3">
            <speech>Às vezes a cobra vence e às vezes o rato. Tudo isso faz parte da vida.</speech>
        </speeches>
        <speeches id="4">
            <speech>Que perda de tempo. Só se seu cérebro fosse tão grande quanto sua boca.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>Life orb e Sheer force!!! Que combinação irritante. Agora me dê um momento para irritá-lo, intruso.</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso treinar mais antes de derrotar alguém como você.</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso treinar mais antes de derrotar alguém como você.</speech>
        </speeches>
        <speeches id="4">
            <speech>Dois erros não fazem um acerto, veja seus pais como exemplo.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
</npc>