<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Quando você estiver cansado de treinar Pokémon, é hora de batalhar! Esse é o truque para trabalhar como Breeder!</speech>
        </speeches>
        <speeches id="2">
            <speech>Se eu perder, isso lhe dirá que eu estava apenas matando tempo. Isso não prejudica meu ego de forma alguma.</speech>
        </speeches>
        <speeches id="3">
            <speech>Se eu perder, isso lhe dirá que eu estava apenas matando tempo. Isso não prejudica meu ego de forma alguma.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sou tão talentoso que posso ganhar apenas para mudar meu humor.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Sinto-me triste sempre que vejo uma criança jovem e brilhante como você.</speech>
        </speeches>
        <speeches id="2">
            <speech>Se você acha que as pessoas serão mais brandas com você porque você é uma criança, terá uma lição dolorosa.</speech>
        </speeches>
        <speeches id="3">
            <speech>Se você acha que as pessoas serão mais brandas com você porque você é uma criança, você terá uma lição dolorosa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Olhos brilhantes, pele firme... Não os terei de volta.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Eu me fortaleço remoendo o passado. Afinal, foi assim que vivi minha vida.</speech>
        </speeches>
        <speeches id="2">
            <speech>Chame-me de negativo ou do que quiser. Eu sou assim mesmo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Chame-me de negativo ou do que quiser. Eu sou assim mesmo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Pensar positivo mesmo quando você perde? Parece-me que está se recusando a admitir seus erros.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Eu criei meus Pokémon com muito cuidado. Você não tem permissão para machucá-los!</speech>
        </speeches>
        <speeches id="2">
            <speech>Seus Pokémon são mais incríveis! Troque comigo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Seus Pokémon são mais incríveis! Troque comigo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Muito bem! Muito bom! Eu ganhei! Meu Pokémon e eu somos incríveis, hein?!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Vou lhe proporcionar uma experiência tão doce que seus olhos vão girar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não é como se você realmente perdesse alguma coisa quando perde. Desde que você se divirta, isso é suficiente.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não é como se você realmente perdesse alguma coisa quando perde. Desde que você se divirta, isso é suficiente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ufa... Você está muito quente! Parece uma noite sufocante de verão aqui dentro!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Você não precisa tentar me impressionar. Você pode perder contra mim.</speech>
        </speeches>
        <speeches id="2">
            <speech>Fiz o que vim fazer, e foi assim que aconteceu. Não há mais nada a dizer.</speech>
        </speeches>
        <speeches id="3">
            <speech>Fiz o que vim fazer, e foi assim que aconteceu. Não há mais nada a dizer.</speech>
        </speeches>
        <speeches id="4">
            <speech>É difícil dizer adeus, mas estamos correndo contra o tempo...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Ah, se não é o meu herói! Veio me desafiar depois de tudo o que fez?</speech>
            <speech>Você passou por minhas portas manipuladas e devolveu o estojo de crachá roubado. Impressionante!</speech>
            <speech>Wahahahah! Esse é o espírito! A emoção desses encontros é exatamente o motivo pelo qual eu adoro esse papel.</speech>
            <speech>Armadilhas, desafios e a faísca da batalha com Treinadores determinados como você - é isso que me motiva!</speech>
            <speech>Então, vamos adicionar um pouco de tensão a essa empolgação, certo? Prepare-se!</speech>
            <speech>Eu, Wattson, o líder do Ginásio Mauville, prometo tornar nossa batalha eletrizante!</speech>
        </speeches>
        <speeches id="2">
            <speech>Wahahahah! Tudo bem, eu perdi!</speech>
            <speech>Fiquei eletrizado por você. Agora, pegue este distintivo!</speech>
            <speech>Com o emblema Dínamo, o Pokémon pode usar o HM Rock Smash fora da batalha.</speech>
            <speech>Então, tudo bem, isso aqui é para você também! Vá em frente, leve-o com você!</speech>
            <speech>O Volt Switch é um movimento em que seu Pokémon ataca o oponente e depois volta correndo para trocar de lugar com um Pokémon do grupo que está esperando!</speech>
            <speech>Fico muito otimista ao ver um jovem instrutor promissor como você!</speech>
        </speeches>
        <speeches id="3">
            <speech>Fico muito otimista ao ver um jovem instrutor promissor como você!</speech>
        </speeches>
        <speeches id="4">
            <speech>Essa batalha foi muito fácil para mim. No entanto, fico feliz em lhe dar outra chance.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Olá, instrutor!</speech>
            <speech>Receio que Wattson, nosso estimado líder de ginásio, esteja ausente no momento. Alguém fugiu com nossa maleta de crachás!</speech>
            <speech>Ele está bastante preocupado em garantir seu retorno. Se puder, volte mais tarde quando tudo estiver resolvido.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Gym Guide" randomRotation="false" sprite="5" x="12" y="55">
        <speech>Bem-vindo, campeão em formação! O Ginásio de Mauville tem uma grande voltagem esperando por você, cortesia dos tipos elétricos de Wattson.</speech>
        <speech>Mas não se preocupe!</speech>
        <speech>Pokémon de solo, rocha ou dragão são sua melhor aposta para atrapalhar os planos dele.</speech>
        <speech>Mantenha os olhos no prêmio, mantenha-se firme e você vai eletrizar a concorrência!</speech>
    </npc>
</npcs>