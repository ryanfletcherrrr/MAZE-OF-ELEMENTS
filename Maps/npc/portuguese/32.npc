<npcs>
    <npc direction="UP" id="1004" name="Beauty Shauna" randomRotation="true" sprite="104" x="38" y="40">
        <speech>Você sabia que o presidente do PBO (Snakes) tem uma queda por mim desde 2017 e que ele me deixou sem ser enviado por causa disso?</speech>
    </npc>
    <npc direction="UP" id="1005" name="Gentleman Shayek" sprite="5" x="95" y="91">
        <speech>Está vendo esta estátua de Deoxys? Ela foi construída há mais de quatro décadas, quando Glassmoor ainda era uma pequena
            cidade de comerciantes.
        </speech>
        <speech>Ele foi construído por um motivo, veja você. Há muito tempo, esta terra foi atingida por uma série de meteoros.</speech>
        <speech>Embora não fossem grandes o suficiente para causar o Armagedom, eles causaram sérios danos.</speech>
        <speech>No entanto, ainda mais interessantes eram os seres estranhos que pareciam ter aterrissado aqui com esses meteoritos.
        </speech>
        <speech>Eles eram, como descobriríamos mais tarde, a espécie de Pokémon conhecida como Deoxys. Embora tenha havido
            rumores de que os Deoxys eram perigosos, eles nunca prejudicaram as pessoas desta cidade.
        </speech>
        <speech>De fato, eles desapareceram daqui pouco tempo depois de chegarem. Mas deixaram para trás algo
            muito valioso para nós.
        </speech>
        <speech>Veja bem, o meteorito que caiu era rico em certos minerais, especialmente sílica.</speech>
        <speech>Na verdade, esse foi o principal motivo pelo qual uma fábrica de vidro se tornou viável em Glassmoor City.</speech>
        <speech>E depois disso, tudo mudou.</speech>
        <speech>Com o boom da produção e do comércio de vidro, veio a prosperidade econômica e, como resultado, a cidade de Glassmoor tornou-se o gigante corporativo que é hoje.</speech>
    </npc>
    <npc direction="DOWN" id="1006" name="Pokefan Joao" sprite="63" x="82" y="23">
        <speech>Vou levar minha esposa ao cinema hoje. Chama-se "Volcanion e a Marvel Mecânica".</speech>
        <speech>E quanto a você? Você também está aqui para ver o filme ou talvez para ver o leilão?</speech>
        <speech>Estou vendo. É bom saber disso!</speech>
    </npc>
    <npc direction="LEFT" id="1007" name="Gardener Manolo" sprite="48" triggerX="57" triggerY="20" x="57" y="19">
        <speech>Devemos sempre nos esforçar ao máximo para manter um equilíbrio entre a natureza e os desejos da própria humanidade. Quero dizer,
            considere todas essas torres enormes.
        </speech>
        <speech>Embora sirvam a um propósito, não podemos nos esquecer do impacto que causam nos recursos naturais, como o solo e a água.</speech>
        <speech>Mas, acima de tudo, são as árvores e as florestas que sofrem com a expansão industrial.</speech>
        <speech>É por isso que sinto que temos um dever para com a natureza, e tento cumprir esse dever nutrindo essas
            plantas e árvores em toda a cidade. Você deve tentar ajudar também, sempre que puder.
        </speech>
    </npc>
    <npc direction="DOWN" id="1008" name="Interviewer Fiona" sprite="51" x="97" y="17">
        <speech>Olá! Você parece ser um jovem instrutor promissor.</speech>
        <speech>No momento, estamos à procura de novos talentos como você, que esperamos transmitir em nosso próximo programa de TV.
            programa de TV. Então, qual é o seu nome?
        </speech>
        <speech>Entendo, então você se chama $PLAYER_NAME.</speech>
        <speech>É bom saber. Ficaremos de olho em suas conquistas, $PLAYER_NAME. Boa sorte!</speech>
    </npc>
    <npc direction="DOWN" id="1009" name="Cameraman Manny" sprite="110" x="98" y="17">
        <speech>Um segundo, você poderia se deslocar um pouco para a esquerda?</speech>
        <speech>... Pronto, essa é uma ótima tacada! Faça o seu melhor $PLAYER_NAME, estaremos observando.</speech>
    </npc>
    <npc direction="RIGHT" id="1010" name="Rich Boy Joe" randomRotation="true" sprite="75" x="51" y="61">
        <speech>Por favor, não me incomode.</speech>
    </npc>
    <npc direction="DOWN" id="1011" name="Lady Mito" sprite="6" x="47" y="61">
        <speech>Isso é muito relaxante.</speech>
    </npc>
    <npc direction="UP" id="1012" name="Bird Keeper Raj" sprite="35" x="79" y="49">
        <speech>Um segundo, você poderia se deslocar um pouco para a esquerda?</speech>
        <speech>... Pronto, essa é uma ótima tacada! Faça o seu melhor $PLAYER_NAME, estaremos observando.</speech>
    </npc>
    <npc direction="LEFT" id="1013" name="Policeman Skand" sprite="126" x="14" y="89">
        <speech>Se você vir alguém suspeito, não deixe de denunciá-lo.</speech>
    </npc>
    <npc direction="DOWN" id="1014" name="Policeman Raphael" sprite="126" x="35" y="73">
        <speech>Há algumas pessoas obscuras por aqui, garoto. Certifique-se de ficar atento o tempo todo.</speech>
    </npc>
    <npc direction="DOWN" id="1015" name="Guitarist Jonas" sprite="49" x="58" y="62">
        <speech>Tocando meu violão em uma manhã quente e ensolarada. Estou vivendo o sonho, uuuuuu!</speech>
    </npc>
    <npc direction="DOWN" id="1016" name="" sprite="162" x="79" y="51">
        <speech>Esse pôster parece ter uma lista dos próximos eventos.</speech>
        <speech>Ooh, há um leilão no dia 8 de agosto! Isso parece emocionante!</speech>
    </npc>
    <npc direction="DOWN" id="1017" name="" sprite="162" x="64" y="69">
        <speech>Cidade de Glassmoor - A terra brilhante das oportunidades</speech>
    </npc>
    <npc direction="DOWN" id="1018" name="Rich Guy Iago" sprite="75" x="66" y="34">
        <speech>Poderia nos deixar em paz, estamos tentando criar uma química aqui.</speech>
    </npc>
    <npc direction="DOWN" id="1019" name="Lady Ellaria" sprite="53" x="67" y="34">
        <speech>Não nos incomode, pois estamos ocupados no momento.</speech>
    </npc>
    <conversation id="6">
        <speeches id="1">
            <speech>Você está aqui por causa do "tesouro" daquele velho pateta?</speech>
            <speech>É uma pena, pois tudo o que você vai conseguir é muita dor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Puta que pariu! Levei uma surra desse moleque, bleh ...</speech>
            <speech>Não importa... pegue o produto de volta. De qualquer forma, não tem valor algum.</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
        <speeches id="4">
            <speech>Agora vá correr para a sua mamãe, sua pestinha!</speech>
        </speeches>
        <speeches id="5">
            <speech>Vá embora, pirralho!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Você e sua equipe são todos inúteis, Tikku.</speech>
            <speech>Não sei como você foi contratado.</speech>
            <speech>Você não consegue se defender de uma criança?</speech>
            <speech>Patético. Você está dispensado!</speech>
        </speeches>
        <speeches id="2">
            <speech>Seu pirralho. Sim, você. Estou falando com você.</speech>
            <speech>Essa foi uma ideia estúpida.</speech>
            <speech>O que você fez é realmente estúpido.</speech>
            <speech>Meu chefe não ficará feliz se falharmos nessa tarefa minuciosa de sequestrar crianças para ele.</speech>
            <speech>Não tenho tempo agora, senão eu teria lhe dado uma lição.</speech>
            <speech>Você pode manter essas crianças inúteis com você.</speech>
            <speech>Agora, vou me concentrar no projeto principal e ir para o Old Powerplant.</speech>
            <speech>Não tente interferir em nossos planos da próxima vez, senão eu lhe darei uma lição.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>Olá $PLAYER_NAME.</speech>
            <speech>Eu estava tentando encontrá-lo e vi tudo o que aconteceu aqui.</speech>
            <speech>Muito obrigado por salvar essas crianças dessas pessoas malvadas.</speech>
            <speech>Ouvi o Horus falando sobre a Usina Velha.</speech>
            <speech>A Old Powerplant é a usina abandonada que costumava abastecer todas as regiões.</speech>
            <speech>Devido às consequências do impacto de um grande asteroide, ele afundou sob a terra.</speech>
            <speech>Hoje em dia, ele não tem nenhuma utilidade, exceto alguns Pokémon que o utilizam como abrigo.</speech>
            <speech>Não sei ao certo por que Horus está indo para lá, mas posso prepará-lo para a batalha contra ele e sua equipe.</speech>
            <speech>Visite-me em Grayroot Town (ao sul da cidade de Glassmoor).</speech>
            <speech>Eu o verei em breve.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>Eu deveria tentar encontrar o Grunt Tikku e seu supervisor antes de tentar sair de Glassmoor.</speech>
        </speeches>
    </conversation>
    <conversation id="18">
        <speeches id="1">
            <speech>Eu deveria seguir Nushkie até o Old Powerplant antes de tentar ir a qualquer outro lugar.</speech>
        </speeches>
    </conversation>
</npcs>