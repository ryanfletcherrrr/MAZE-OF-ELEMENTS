<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Nosso chefe está prestes a fazer algo espetacular!</speech>
            <speech>Claro que sim, não é mesmo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Não sou capaz de detê-lo, vou deixá-lo passar para que meu irmão possa pulverizá-lo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não sou capaz de detê-lo, vou deixá-lo passar para que meu irmão possa pulverizá-lo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ninguém pode deter a Equipe Galactic.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Você não gosta de ser parado, não é?</speech>
        </speeches>
        <speeches id="2">
            <speech>Não sou capaz de detê-lo, vou deixá-lo passar para que meu chefe possa pulverizá-lo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não sou capaz de detê-lo, vou deixá-lo passar para que meu chefe possa pulverizá-lo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ninguém pode deter a Equipe Galactic.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Onde você acha que está indo? Não vou deixar que você perturbe nosso chefe.</speech>
            <speech>Se você não quiser ouvir, terá que passar por mim primeiro.</speech>
            <speech>Afinal de contas, você já me deixou mal mais vezes do que eu gostaria de lembrar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Puxa vida... Eu deveria ter lutado sozinho.</speech>
            <speech>M-Mestre Cyrus?! Para onde ele foi?!</speech>
        </speeches>
        <speeches id="3">
            <speech>Como você conseguiu chegar até aqui?</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>... Heh. Meus Pokémon são fortes, certo? Eu posso ficar ainda mais forte!</speech>
            <speech>...Mas, você sabe, isso é tudo para nós. Batemos na parede... $PLAYER_NAME, eu o ajudarei com isso!
            </speech>
            <speech>Ei, $PLAYER_NAME! É isso aí! Agora o show é seu!</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>... ...</speech>
            <speech>Tudo está pronto para a criação de um novo mundo.</speech>
            <speech>Agora, tudo vai acabar. E tudo começará. Com isso, a Red Chain feita com os cristais dos
                três Pokémon do lago.
            </speech>
            <speech>E isso, a Corrente Vermelha que eu reproduzi com meios tecnológicos...</speech>
            <speech>Com essas correntes vermelhas, abrirei o portal para outra dimensão.</speech>
            <speech>Eu ordeno que você libere seu poder para mim.</speech>
        </speeches>
        <speeches id="2">
            <speech>Dialga, o Pokémon mítico e o mestre do tempo!</speech>
            <speech>...E o outro. Palkia, o Pokémon mítico e o mestre do espaço e das dimensões!</speech>
        </speeches>
        <speeches id="3">
            <speech>Esperei tanto tempo por este momento, Dialga e Palkia.</speech>
            <speech>A formação desse mundo é uma espiral dupla de tempo e espaço.</speech>
            <speech>Sim, exatamente as coisas que você tem a capacidade de controlar!</speech>
            <speech>Você cumprirá minhas ordens! Terei suas habilidades como minhas!</speech>
            <speech>Com o poder que tenho, criarei um mundo totalmente novo!</speech>
            <speech>O mundo incompleto e feio que temos agora pode desaparecer.</speech>
            <speech>Estou zerando tudo. Nada pode permanecer. Tudo isso é para criar o mundo definitivo.
            </speech>
            <speech>Um mundo de completa perfeição. Nada tão vago e incompleto como o espírito pode permanecer.</speech>
        </speeches>
        <speeches id="4">
            <speech>... Eu deveria ter esperado isso.</speech>
            <speech>Uxie, "The Being of Knowledge" (O Ser do Conhecimento).</speech>
            <speech>Azelf, "O Ser da Força de Vontade".</speech>
            <speech>E Mesprit, "O Ser da Emoção"...</speech>
            <speech>Os Pokémon vieram para proteger Sinnoh? Patético e sem valor.</speech>
            <speech>São necessários os três, os três Pokémon do lago que simbolizam o espírito, para equilibrar os
                Pokémon do tempo ou do espaço.
            </speech>
            <speech>Mas eles não podem manter o equilíbrio contra os dois. Não quando Dialga e Palkia estão aqui.</speech>
            <speech>Sua vinda aqui é em vão. Tanto drama sem sentido. Agora, $PLAYER_NAME.</speech>
            <speech>Você tem interferido constantemente em meus planos, mas será perdoado.</speech>
            <speech>Afinal de contas, quando eu terminar, não haverá mais espírito para sempre. Todo o espírito desaparecerá.
            </speech>
            <speech>Ele será arrancado... De você! De seu Pokémon!</speech>
            <speech>Daqueles que são preciosos para você...!</speech>
            <speech>Chegou a hora! Meu sonho será minha realidade!</speech>
            <speech>Que pressão é essa que estou sentindo...? Algo... está furioso?</speech>
        </speeches>
        <speeches id="5">
            <speech>Interessante. Então, existe um Pokémon que só pode aparecer como uma sombra.</speech>
            <speech>De qualquer forma, o esforço é precipitado e tolo. Eu aproveitei os poderes de Dialga e Palkia...
            </speech>
            <speech>Eu, Cyrus, não vou mais interferir...!</speech>
        </speeches>
    </conversation>

    <conversation id="10">
        <speeches id="1">
            <speech>Não...! Desculpe-me por ter demorado tanto. Acho que finalmente encontrei a resposta ao estudar os mitos.</speech>
            <speech>Quando este mundo foi criado, Dialga e Palkia apareceram.</speech>
            <speech>Aparentemente, havia mais um Pokémon que apareceu ao mesmo tempo.</speech>
            <speech>Um Pokémon com tanto poder quanto Dialga e Palkia...</speech>
            <speech>Mas também uma pessoa cujo nome nunca seria dito: Giratina!</speech>
            <speech>Dizem que ele se esconde em outro mundo... Um mundo no lado oposto do nosso...</speech>
            <speech>Era isso que a sombra era. Deve ter sido o Giratina.</speech>
            <speech>Os pilares estão se distorcendo... É por causa desse portal.</speech>
            <speech>Ele nos uniu ao outro mundo.</speech>
            <speech>Se não for fechada, a distorção se espalhará para Sinnoh e além...</speech>
            <speech>Nosso mundo será destruído...</speech>
        </speeches>
    </conversation>

    <conversation id="11">
        <speeches id="1">
            <speech>Você está pronto? Temos que perseguir o Cyrus!</speech>
        </speeches>
    </conversation>

    <conversation id="12">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="13">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>*Giratina emerge, com olhos penetrantes. Ele sente os encontros de seus Pokémon.</speech>
            <speech>*O ar fica mais frio. Giratina reconhece seu marco de 250 Pokémon.</speech>
            <speech>*Com um gemido assustador, ele o desafia. 'Pronto para este teste?</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>*Giratina ruge triunfante, reconhecendo a vitória.</speech>
            <speech>*Isso demonstra respeito por suas habilidades de instrutor.</speech>
            <speech>*Desaparecendo, ele promete encontros futuros.</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>*Giratina se desvanece, sentindo sua escolha de não lutar.</speech>
            <speech>*As sombras sussurram o crescimento, prometendo um encontro mais profundo.</speech>
            <speech>*'Encontre-se novamente depois de $DURATION?', sugere, dando o tempo de preparação.</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>*Giratina se retira, ecoando sua derrota.</speech>
            <speech>*Ele respeita seu esforço apesar da perda.</speech>
            <speech>*O frio persiste, sugerindo uma futura revanche.</speech>
        </speeches>
        <speeches id="5">
            <!-- Before Criteria Speech -->
            <speech>*Giratina faz uma pausa, sentindo que algo está faltando.</speech>
            <speech>*'[GOLD]Caught 250 Pokémon?'[] ele parece perguntar.*</speech>
        </speeches>
    </conversation>

</npcs>