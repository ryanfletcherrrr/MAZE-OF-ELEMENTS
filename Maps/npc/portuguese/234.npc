<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>A melancolia pode parecer caída, mas não se deixe enganar, ela é mais resistente do que parece!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, agora sou eu que estou triste</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, agora sou eu que estou triste</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? O Glooms não é apenas bonito, é uma verdadeira potência!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>O terreno acidentado da Route 9 cria treinadores resistentes! Vamos ver se você consegue lidar com isso!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que escorreguei em uma pedra solta, mas voltarei a subir com mais força!</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que escorreguei em uma pedra solta, mas voltarei a subir com mais força!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah! Como uma montanha robusta, eu me mantenho forte, não importa o desafio!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Meus insetos podem ser pequenos, mas não os subestime! Eles são rápidos, resistentes e estão sempre prontos para atacar seus inimigos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que minha estratégia foi esmagada. É hora de treinar ainda mais a minha equipe!</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que minha estratégia foi esmagada. É hora de treinar ainda mais a minha equipe!</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Os insetos não são apenas assustadores e rastejantes. Eles são campeões em formação!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Posso ser jovem, mas meus Pokémon são muito fortes! Prepare-se para um verdadeiro desafio!</speech>
        </speeches>
        <speeches id="2">
            <speech>Talvez eu devesse ter passado menos tempo me gabando e mais tempo treinando.</speech>
        </speeches>
        <speeches id="3">
            <speech>Talvez eu devesse ter passado menos tempo me gabando e mais tempo treinando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! Eu disse a você! Ser jovem significa apenas que tenho mais tempo para melhorar ainda mais!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Nada supera uma boa caminhada e uma grande batalha! Vamos ver se você tem a resistência necessária para continuar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau! Você tem muita força! Terei que intensificar meu treinamento!</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau! Você tem muita força! Terei que intensificar meu treinamento!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah! Assim como escalar uma montanha, as batalhas exigem paciência e resistência!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Os insetos são os melhores! Rápidos, complicados e sempre mais fortes, assim como eu!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, cara, acho que minha equipe ainda precisa de tempo para evoluir.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, cara, acho que minha equipe ainda precisa de tempo para evoluir.</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Os insetos não são fracos! Você só precisa acreditar neles!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Essas trilhas rochosas desenvolvem pernas fortes e Pokémon fortes. Vamos ver se você aguenta a escalada!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... até a pedra mais poderosa pode se quebrar. Você mereceu essa.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... até a pedra mais poderosa pode se quebrar. Você mereceu essa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sólido como uma rocha! Você ainda tem um longo caminho a percorrer antes de se igualar à minha força!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>A luta é como a moda: graça, confiança e um toque de elegância fazem toda a diferença!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, meu Deus... Acho que até mesmo a beleza precisa de um plano reserva.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, meu Deus... Acho que até mesmo a beleza precisa de um plano reserva.</speech>
        </speeches>
        <speeches id="4">
            <speech>Impecável! Uma verdadeira vitória deve ser sempre tão deslumbrante quanto o treinador por trás dela.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Eu adoro Pokémon fofos! Mas não pense que eles não podem batalhar também!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, não! Talvez eu precise treinar com meus Pokémon em vez de apenas escovar seus pelos</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, não! Talvez eu precise treinar com meus Pokémon em vez de apenas escovar seus pelos</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Força e fofura andam de mãos dadas!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Uau! De jeito nenhum! Você também chegou até aqui!</speech>
            <speech>Isso é incrível - nós dois chegamos tão longe desde que nos conhecemos na Viridian Forest!</speech>
            <speech>Olhe para nós agora, ambos ficando mais fortes a cada passo! Meu sonho de me tornar um Mestre Pokémon está tão perto!</speech>
            <speech>Minha equipe ficou incrível! O Charmeleon ficou mais forte, e o Pikachu... bem, você vai ver!</speech>
            <speech>Esta pode ser a nossa batalha mais épica até agora! Pronto para ver até onde nós dois chegamos?</speech>
        </speeches>
        <speeches id="2">
            <speech>Isso foi absolutamente lendário!</speech>
            <speech>Você se tornou um treinador incrível! Cada batalha com você me estimula a ser melhor!</speech>
            <speech>Ei, desta vez tenho algo muito especial para você - esta {COLOR=GOLD}Light Ball{ENDCOLOR} que encontrei!</speech>
            <speech>Ele deve aumentar os ataques do tipo elétrico! Perfeito para qualquer Pikachu que você possa pegar!</speech>
            <speech>E aqui, pegue esse prêmio em dinheiro também - você definitivamente o mereceu depois dessa batalha incrível!</speech>
            <speech>Continue ficando mais forte! Sei que nós dois chegaremos à Liga Pokémon!</speech>
        </speeches>
        <speeches id="3">
            <speech>Olá, colega instrutor!</speech>
            <speech>A Rota 9 pode ser bem difícil com todos esses treinadores! Como está funcionando a Light Ball?</speech>
            <speech>Mal posso esperar para ver o quanto nós dois ficaremos mais fortes!</speech>
        </speeches>
        <speeches id="4">
            <speech>Uau! Essa batalha foi incrível, apesar de eu e o Pikachu termos saído vitoriosos!</speech>
            <speech>Você realmente sabe como extrair o melhor da sua equipe - foi por pouco!</speech>
            <speech>Pegue esta {COLOR=GOLD}Light Ball{ENDCOLOR} e o prêmio em dinheiro de qualquer maneira - você mereceu!</speech>
            <speech>Cada batalha com vocês me torna um instrutor melhor! Obrigado por isso!</speech>
            <speech>Vamos continuar treinando duro - a Liga Pokémon nos aguarda!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Bouffalant" speed="1" sprite="626" type="pokemon" x="17" y="13">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4">BRRAAWWF!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="2" name="Spearow" speed="1" sprite="21" type="pokemon" x="38" y="32">
        <path>UPx3,RIGHTx3,LEFTx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Speaarrowwww!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Emolga" speed="1" sprite="587" type="pokemon" x="41" y="17">
        <path>DOWNx3,LEFTx3,UPx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Emooool!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="4" name="Voltorb" speed="1" sprite="100" type="pokemon" x="53" y="35">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Vooolt!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Spearow" speed="1" sprite="21" type="pokemon" x="33" y="0">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Sppeaaar!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="6" name="Chinchou" speed="1" sprite="170" type="pokemon" x="91" y="6">
        <path>RIGHTx2,DOWNx2,UPx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Chiiinchooou!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="8" name="Chloe" randomRotation="true" sprite="60" x="72" y="24">
        <speech>Nossa, eu adoro encher minha Pokédex!</speech>
        <speech>Às vezes, eu até consigo acesso a novas áreas só por mostrar quantos Pokémon registrei!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="10" name="Luke" speed="1" sprite="102" type="npc" x="26" y="23">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Você encontrará muitos Pokémon do tipo elétrico nessas rotas.</speech>
        <speech>Ainda bem que estou em um intervalo, pois já fui atingido mais vezes do que meu almoço é colocado no micro-ondas!</speech>
    </movingNpc>
    <movingNpc direction="UP" id="11" name="Hunter" speed="1" sprite="49" type="npc" x="96" y="16">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Cara!</speech>
        <speech>Meu Magneton evoluiu para Magnezone quando eu acidentalmente deixei cair uma Pedra do Trovão sobre ele!</speech>
    </movingNpc>
</npcs>