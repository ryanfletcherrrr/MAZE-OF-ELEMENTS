<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>O General Thanda é meu mestre...</speech>
            <speech>E você não irá mais longe do que isso!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sinto muito, meu general.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sempre acreditarei em meu General.</speech>
        </speeches>
        <speeches id="4">
            <speech>Espero que esteja orgulhoso de mim, General!</speech>
        </speeches>
    </conversation>


    <conversation id="2">
        <speeches id="1">
            <speech>Outro dia, outro desafiante.</speech>
            <speech>Estou começando a me acostumar com isso!</speech>
        </speeches>
        <speeches id="2">
            <speech>Você realmente conseguiu me derrotar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Boa sorte.</speech>
        </speeches>
        <speeches id="4">
            <speech>E mais um desafio concluído.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Você veio aqui para desafiar o General Thanda?</speech>
            <speech>Confie em mim, você não conseguirá me derrotar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Afinal, você me venceu...</speech>
        </speeches>
        <speeches id="3">
            <speech>Confie em mim, você não vai superar nosso General.</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu o avisei!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Você está acostumado com esse clima?</speech>
            <speech>Vamos ver o que você tem!</speech>
        </speeches>
        <speeches id="2">
            <speech>Como um jovem como você pôde me derrotar?</speech>
        </speeches>
        <speeches id="3">
            <speech>O Sr. Thanda é incrível, mas boa sorte.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você não tem nada.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Você derrotou os mineiros anteriores?</speech>
            <speech>Eu vou me vingar deles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso treinar meus Lapras.</speech>
        </speeches>
        <speeches id="3">
            <speech>Nosso general vai se vingar de nós!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu, minha vida e meus Lapras. De qualquer forma, você não tinha chance.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Sou um mineiro orgulhoso.</speech>
            <speech>Vamos à luta!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ainda sou um Miner orgulhoso, mas as derrotas estão melhorando.</speech>
        </speeches>
        <speeches id="3">
            <speech>Você está chegando perto, mas não conseguirá.</speech>
        </speeches>
        <speeches id="4">
            <speech>Orgulhosamente Minerador, orgulhosamente Minerador!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Então você derrotou todos os meus amigos?</speech>
            <speech>Sou o último mineiro diante de nosso respeitado general, vamos lutar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Saiba que eu entendo como você chegou até aqui.</speech>
        </speeches>
        <speeches id="3">
            <speech>Boa sorte, você pode ter a chance de desenvolver uma grande batalha.</speech>
        </speeches>
        <speeches id="4">
            <speech>Adeus!</speech>
        </speeches>
    </conversation>
</npcs>