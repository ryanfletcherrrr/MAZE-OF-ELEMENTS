<npcs>
    <!--<conversation id="1">
        <speeches id="1">
            <speech>Hallo'z! I'm a big fan of roasted mushrooms, especially the Big Mushrooms that grow around mainland
                Jvaloh.
            </speech>
            <speech>In fact, I'd be willing to trade a cute little Litleo for 10 of them. Come back to me if you'd like
                to trade or something.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Oooooooh, I smell some Big Mushrooms!</speech>
            <speech>Please please please tell you me you're willing to give them up for a Litleo?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh, why would you do that?!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh my god, oh my god, oh my god, you can't understand how grateful I am. Thank you so much!</speech>
            <speech>Here you go! Please take care of Litleo!</speech>
        </speeches>
        <speeches id="5">
            <speech></speech>
        </speeches>
    </conversation>-->
    <conversation id="2">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>Permita-me contar-lhe uma história do passado, minha filha.</speech>
            <speech>Houve uma época em que a humanidade passou a ter um poder muito além de sua compreensão e, naturalmente, além de seu controle.</speech>
            <speech>Mesmo assim, um grupo de pessoas desonestas decidiu ignorar todos os avisos e pediu o incêndio.</speech>
            <speech>Infelizmente para o resto da humanidade, sua petição foi atendida.</speech>
            <speech>Naquele dia, as chamas caíram sobre Jvaloh e muitos perderam suas vidas, tanto pessoas quanto Pokémon.</speech>
            <speech>No entanto, quando toda a esperança parecia perdida, três feras lendárias apareceram.</speech>
            <speech>Por meio de um esforço consciente que testou o vínculo com os humanos, eles conseguiram conter o mal</speech>
            <speech>e selar os meios para tal poder na esperança de que ele nunca mais seja visto.</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>Mas não estou interessado em descobrir a história, vovô! Por que você não entende isso?</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>Você deve aprender a respeitar o passado, Kaido. Ele não foi feito para ser esquecido, especialmente quando
                permanece repleto de erros cometidos por pessoas de predisposição ingênua.
            </speech>
            <speech>Há lições a serem aprendidas, e é importante que as gerações futuras garantam que elas sejam aprendidas.
                que isso aconteça.
            </speech>
            <speech>Afinal, se não fosse pela insensatez dos seres humanos, nunca teríamos visto uma destruição de proporções tão cataclísmicas.
                proporções cataclísmicas.
            </speech>
            <speech>Mas, novamente, o que mais se pode esperar quando os humanos procuram controlar o que está além de sua
                capacidade de controle.
            </speech>
            <speech>Que bem pode advir de um empreendimento que se baseia na maldade?
                esperar testemunhar a paz em uma era movida pelo conflito?
            </speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh, ei, $PLAYER_NAME.</speech>
            <speech>Ainda tão lento!</speech>
            <speech>Você gosta desse lugar? Eu adoro!!! Há muita paz e conhecimento ao redor.</speech>
            <speech>Dito isso, vi o mesmo grupo de pessoas malignas anteriormente.</speech>
            <speech>O Gym Leader Blitz fica dentro do vulcão, e ouvi dizer que ele é muito forte.</speech>
            <speech>Tenho certeza de que o Blitz dará uma lição em todos eles se tentarem se aproximar dele.</speech>
            <speech>Agora vou procurar Blitz no vulcão para obter meu sexto emblema.</speech>
            <speech>Até logo, Feraligatr!!!</speech>
        </speeches>
    </conversation>
    <npc direction="RIGHT" id="1000" name="Teenager Bolas" randomRotation="true" sprite="82" x="21" y="36">
        <speech>Esse castelo de areia não é a cópia perfeita de um Palossand?</speech>
        <speech>É incrível, não é?</speech>
    </npc>
    <npc direction="UP" id="1001" name="Triathlete Joanz" randomRotation="true" sprite="80" x="26" y="46">
        <speech>Saia do caminho, garoto!</speech>
        <speech>Estou treinando aqui.</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Gentleman Cory" sprite="5" x="33" y="33">
        <speech>Estou cantando na rádio...</speech>
        <speech>Quem estou enganando...</speech>
        <speech>Aqui nunca chove.</speech>
    </npc>
    <npc direction="LEFT" id="1003" name="Youngster Will" sprite="4" x="35" y="37">
        <speech>Vamos encontrar pokémons raros juntos!</speech>
        <speech>Na verdade, você poderia se mudar, por favor?</speech>
        <speech>Você está arruinando meu RNG só de estar aqui!</speech>
    </npc>
    <npc direction="UP" id="1004" name="Ranger Riku" randomRotation="true" sprite="68" x="30" y="25">
        <speech>Moonshine City é por ali!</speech>
        <speech>Vamos lá, Shantell!!!</speech>
    </npc>
    <npc direction="UP" id="1005" name="Ranger Shantell" randomRotation="true" sprite="68" x="31" y="25">
        <speech>Nós nos perdemos o tempo todo.</speech>
        <speech>A Riku é muito gentil comigo, mas ela não é tão boa em orientação quanto pensa.</speech>
        <speech>Gostaria que ele simplesmente perguntasse às pessoas onde fica Moonshine City.</speech>
        <speech>De qualquer forma, estamos indo embora. Tchau!</speech>
    </npc>
    <npc direction="UP" id="1006" name="Ninja Boy Rudy" sprite="58" x="29" y="17">
        <speech>Impressionante. Você me encontrou, apesar de eu estar em stealth.</speech>
        <speech>Veja bem, devido ao meu aguçado senso de camuflagem, é basicamente IMPOSSÍVEL me ver.</speech>
        <speech>Mesmo assim, você conseguiu, parabéns a você! Nós nos encontraremos novamente.</speech>
    </npc>
    <npc direction="DOWN" id="1007" name="Collector Zevon" sprite="37" x="56" y="11">
        <speech>(rindo) Você provavelmente... heh... Você provavelmente pensou que eu...</speech>
        <speech>WHAHAHAHA. Você provavelmente pensou que eu tinha algo valioso para lhe dizer.</speech>
        <speech>Hahahahaha, eu o enganei bem. Hahahahaha!!!</speech>
    </npc>
    <npc direction="RIGHT" id="1008" name="Fisherman Phar" randomRotation="true" sprite="16" x="19" y="34">
        <speech>Não tenha medo de pescar!</speech>
    </npc>
    <npc direction="DOWN" id="1009" name="Kindler Leto" sprite="52" x="52" y="52">
        <speech>Apresse-se, garoto!</speech>
        <speech>A aventura espera por você.</speech>
    </npc>
    <npc direction="DOWN" id="1010" name="" sprite="162" x="31" y="24">
        <speech>Norte: Cidade de Amberwick | Nordeste: Mount Inferno | Sul: Route 7</speech>
    </npc>
    <npc direction="DOWN" id="1011" name="" sprite="162" x="20" y="15">
        <speech>Amberwick Town - a terra do calor e do conforto.</speech>
    </npc>
    <npc direction="DOWN" id="1012" name="" sprite="162" x="21" y="15">
        <speech>Amberwick Town - a terra do calor e do conforto.</speech>
    </npc>
</npcs>