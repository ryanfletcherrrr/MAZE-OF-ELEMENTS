<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Louvo sua coragem em me desafiar! Pois eu sou o que tem o chute mais forte!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... Se eu fosse perder de qualquer maneira, esperava ficar totalmente confuso no processo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... Se eu fosse perder de qualquer maneira, esperava ficar totalmente confuso no processo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. O Pokémon fez a luta. Meu chute forte não ajudou nem um pouco.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Como um fragmento de um sonho esquecido, um misterioso Pokémon chama por você...</speech>
        </speeches>
        <speeches id="2">
            <speech>Minha fada diz que você é loucamente perigoso!</speech>
        </speeches>
        <speeches id="3">
            <speech>Minha fada diz que você é loucamente perigoso!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ser derrotado por você faz com que este mundo acordado pareça ainda menos crível do que meus sonhos...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Meu irmão mais velho, que nunca sai de seu quarto, me disse para vir conhecer esse lugar para ele.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vou avisar meu irmão mais velho que este é um lugar assustador.</speech>
        </speeches>
        <speeches id="3">
            <speech>Vou avisar meu irmão mais velho que este é um lugar assustador.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vou avisar meu irmão mais velho que este é um lugar divertido.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>

        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>

        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, ligados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>

        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>

        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo ordenado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu auge.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh, está me procurando? Eu sou Xueying. Você tem alguma coisa do meu pai?</speech>
        </speeches>
        <speeches id="2">
            <speech>Você conheceu meu pai? E ele mandou algo para mim? O que é isso? Posso pegar, por favor?</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, você não está dando? Isso é... decepcionante. Achei que poderia ser algo de casa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Esta... é a minha boneca! Não acredito que ele a guardou em segurança para mim. Obrigada por trazê-la até aqui.</speech>
            <speech>Tome isto como um símbolo de minha gratidão. Irei vê-lo em breve. Senti muita falta dele.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Duskull" speed="1" sprite="355" type="pokemon" x="2" y="17">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Shuppet" speed="1" sprite="353" type="pokemon" x="23" y="18">
        <path>LEFTx7,UPx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Chimecho" speed="1" sprite="358" type="pokemon" x="25" y="4">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Chimecho!</onCollisionSpeech>
        <speech>Chimecho!</speech>
    </movingNpc>
</npcs>