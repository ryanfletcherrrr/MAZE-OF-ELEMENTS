<npcs>
    <movingNpc direction="RIGHT" id="1" name="Lapras" speed="1" sprite="131" type="pokemon" x="12" y="19">
        <path>RIGHTx5,UPx2,LEFTx5,DOWNx2</path>
        <onCollisionSpeech gap="4">lapppraaass!</onCollisionSpeech>
        <speech>laprasss!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Cloyster" speed="1" sprite="91" type="pokemon" x="20" y="9">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Clooooy!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Tentacruel" speed="1" sprite="73" type="pokemon" x="49" y="21">
        <path>DOWNx2,RIGHTx5,UPx2,LEFTx5</path>
        <onCollisionSpeech gap="4">Tentaaa!</onCollisionSpeech>
        <speech>tenta!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Slowpoke" speed="1" sprite="79" type="pokemon" x="28" y="7">
        <path>DOWNx2,RIGHTx5,LEFTx5,UPx2</path>
        <onCollisionSpeech gap="4">Sloooow?</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Dragonair" speed="1" sprite="148" type="pokemon" x="59" y="22">
        <path>DOWNx4,LEFTx5,RIGHTx5,UPx4</path>
        <onCollisionSpeech gap="4">Naiiiir!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="6" name="Dawn" randomRotation="true" sprite="60" x="13" y="14">
        <speech>Oh, olá, querida. Os Pokémon ao redor desta cidade fazem parte da Safari Zone.</speech>
        <speech>Eles foram cuidados com carinho ao longo dos anos, como se fossem da família.</speech>
    </npc>
    <movingNpc direction="LEFT" id="7" name="Amara" speed="1" sprite="7" type="npc" x="22" y="7">
        <path>LEFTx4,UPx1,RIGHTx4,DOWNx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Se você encontrar Vitamins em sua aventura, poderá usá-las para aumentar as estatísticas do seu Pokémon.</speech>
        <speech>Ou, se você estiver precisando de dinheiro rápido, eles vendem bem nos Poké Marts!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="8" name="Ethan" speed="1" sprite="35" type="npc" x="32" y="36">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Cuidado com Koga.</speech>
        <speech>O cara é intimidador, preciso e é o ninja que ele diz ser.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="9" name="Nidoking" speed="1" sprite="34" type="pokemon" x="25" y="27">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Kiiiiiiiiiiing!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="10" name="Anthony" randomRotation="false" sprite="58" x="17" y="26">
        <speech>Um dia, vou trabalhar para Koga!</speech>
        <speech>Eu já tenho um Beedrill, uma Nidorina e um Ekans e treino com eles todos os dias, não importa o que aconteça!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="11" name="Naruto" randomRotation="false" sprite="58" x="62" y="9">
        <speech>Ei, espere!</speech>
        <speech>Não se afaste de mim... Eu ainda não terminei!</speech>
        <speech>Eu não desisto e nunca volto atrás em minha palavra, porque esse é o meu jeito ninja!</speech>
    </npc>
    <movingNpc direction="DOWN" id="12" name="Beedrill" speed="1" sprite="15" type="pokemon" x="51" y="44">
        <path>RIGHTx3,DOWNx3,RIGHTx3,LEFTx3,UPx3,LEFTx3</path>
        <onCollisionSpeech gap="4">drillllll!</onCollisionSpeech>
        <speech>perfurar!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Alex" randomRotation="false" sprite="80" x="5" y="21">
        <speech>Ei, bem-vindo a Fuchsia City, cara.</speech>
        <speech>Veio da Rota 18? Legal, não é?</speech>
        <speech>É uma sensação agradável passar por ela com o vento em seus cabelos.</speech>
    </npc>
    <movingNpc direction="LEFT" id="14" name="Golbat" speed="1" sprite="42" type="pokemon" x="65" y="39">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Golbaaaat!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="15" name="Lucas" randomRotation="true" sprite="49" x="41" y="20">
        <speech>O que está rolando, cara?</speech>
        <speech>Cheguei aqui em busca de um Scyther, mas esses danadinhos são tão raros que nem mesmo a Safari Zone pode reivindicá-los.</speech>
        <speech>Dizem que eles só entram em cena em enxames de vez em quando.</speech>
    </npc>

    <conversation id="3">
        <speeches id="1">
            <speech>Ei! Não acredito que é você de novo!</speech>
            <speech>Acabei de explorar a Safari Zone - peguei alguns Pokémon incríveis lá!</speech>
            <speech>Fuchsia City é um lugar muito legal! Todos os ninjas e especialistas em veneno realmente mantêm você em alerta!</speech>
            <speech>Minha equipe está cada vez mais forte! Charizard está praticando alguns movimentos novos, e os ataques elétricos de Pikachu são incríveis agora!</speech>
            <speech>Tenho pensado em nossas batalhas desde a Viridian Forest - nós dois crescemos muito como treinadores!</speech>
            <speech>Pronto para outro confronto épico? Vamos ver o que nós dois aprendemos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Incrível! Essa batalha foi absolutamente incrível!</speech>
            <speech>Você e seus Pokémon têm um trabalho em equipe tão perfeito - é inspirador de se ver!</speech>
            <speech>Ei, eu encontrei esses {COLOR=GOLD}Wise Glasses{ENDCOLOR} na Safari Zone - eles aumentam os ataques especiais!</speech>
            <speech>Acho que elas seriam perfeitas para a sua equipe! E aqui está um prêmio em dinheiro também!</speech>
            <speech>Continue avançando - tenho a sensação de que nós dois estamos destinados à grandeza!</speech>
        </speeches>
        <speeches id="3">
            <speech>Olá! Ainda está explorando Fuchsia City?</speech>
            <speech>O Safari Zone é incrível, não é? Como estão funcionando os óculos inteligentes?</speech>
            <speech>Adoro encontrar colegas treinadores que compartilham a mesma paixão!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim! Foi uma batalha muito intensa!</speech>
            <speech>Embora eu e o Pikachu tenhamos conseguido vencer, você realmente nos levou ao limite!</speech>
            <speech>Pegue esses {COLOR=GOLD}Wise Glasses{ENDCOLOR} e o prêmio em dinheiro de qualquer maneira - você os mereceu!</speech>
            <speech>5.000 Pokedollars por ser um treinador incrível!</speech>
            <speech>Batalhas como essa me fazem lembrar por que eu adoro ser um treinador de Pokémon!</speech>
        </speeches>
    </conversation>
</npcs>