<npcs>
    <conversation id="4">
        <speeches id="1">
            <speech>O personagem principal desta história... Eu lhe direi quem é!</speech>
        </speeches>
        <speeches id="2">
            <speech>Você precisa ser forte por dentro quando não há muitas pessoas mais fortes do que você por fora...</speech>
        </speeches>
        <speeches id="3">
            <speech>Você precisa ser forte por dentro quando não há muitas pessoas mais fortes do que você por fora...</speech>
        </speeches>
        <speeches id="4">
            <speech>É claro que você é o personagem principal!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Você está pronto para surfar a onda da derrota? Porque meus Pokémon são campeões de surfe!</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu é que estou na praia... Você surfou essa onda até a vitória.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu é que estou na praia... Você surfou essa onda até a vitória.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você se deu mal! É melhor praticar suas habilidades de surfe.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Vamos mergulhar na batalha! Meus Pokémon aquáticos são imbatíveis!</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está se excedendo! Talvez você deva ficar na piscina infantil.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Vamos pegar ondas! Meus Pokémon estão prontos para surfar em cima de você!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, não</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, não</speech>
        </speeches>
        <speeches id="4">
            <speech>Você é apenas uma ondulação em meu oceano de vitória!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Prepare-se para ficar encharcado! Meus Pokémon aquáticos vão encharcá-lo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu é que estou me secando... Você evaporou minhas esperanças de vencer.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu é que estou me secando... Você evaporou minhas esperanças de vencer.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está encharcado! É melhor se secar e tentar novamente.</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>Volte mais tarde, pois no momento não tenho nada para vender.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, olá, estamos no 12º dia do mês e você está aqui com meu Pidgeot favorito.</speech>
            <speech>Aqui está meu cofre de itens especiais, diga-me o que deseja comprar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Olá, estamos no dia 12 do mês, eu sou a Giddy e estou aqui para vender itens exclusivos.</speech>
            <speech>No entanto, eu gostaria que você me mostrasse o meu Pokémon Pidgeot favorito antes de eu lhe mostrar o meu cofre de itens.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Gyarados" speed="1" sprite="130" type="pokemon" x="48" y="31">
        <path>RIGHTx8,DOWNx8,LEFTx8,UPx8</path>
        <onCollisionSpeech gap="4">Gyarados!</onCollisionSpeech>
        <speech>Gyarados!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Gyarados" speed="1" sprite="130" type="pokemon" x="82" y="26">
        <path>LEFTx5,DOWNx5,RIGHTx5,UPx5</path>
        <onCollisionSpeech gap="4">Gyarados!</onCollisionSpeech>
        <speech>Gyarados!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="3" y="15">
        <path>DOWNx8,RIGHTx1,DOWNx5,UPx5,LEFTx1,UPx8</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Pelipper" speed="1" sprite="279" type="pokemon" x="14" y="40">
        <path>DOWNx5,RIGHTx11,LEFTx11,UPx5</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Pelipper" speed="1" sprite="279" type="pokemon" x="20" y="14">
        <path>DOWNx9,RIGHTx9,LEFTx9,UPx9</path>
        <onCollisionSpeech gap="4">Pelipper</onCollisionSpeech>
        <speech>Pelipper</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Carvanha" speed="1" sprite="318" type="pokemon" x="16" y="29">
        <path>LEFTx10,RIGHTx10</path>
        <onCollisionSpeech gap="4">Carvanha!</onCollisionSpeech>
        <speech>Carvanha!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Pelipper" speed="1" sprite="279" type="pokemon" x="63" y="11">
        <path>DOWNx10,LEFTx10,RIGHTx10,UPx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Rhypherior" speed="1" sprite="464" type="pokemon" x="68" y="9">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Aggron" speed="1" sprite="306" type="pokemon" x="68" y="16">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Rhydon" speed="1" sprite="112" type="pokemon" x="41" y="4">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Lairon" speed="1" sprite="305" type="pokemon" x="32" y="4">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="11" y="8">
        <path>LEFTx7,UPx5,DOWNx5,RIGHTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="13" name="Peter" randomRotation="true" sprite="93" x="40" y="38">
        <speech>Você já viu os Gyarados furiosos e os Sharpedos à espreita? É assustador lá fora!</speech>
        <speech>Um movimento errado e você pode se ver em um mundo de problemas.</speech>
        <speech>Como nadadores, precisamos nos manter vigilantes e cautelosos. Respeite o poder do oceano, ou ele o engolirá inteiro.</speech>
        <speech>É um jogo perigoso, mas temos que ser corajosos e continuar nadando!</speech>
    </npc>
    <movingNpc direction="DOWN" id="14" name="Wailord" speed="1" sprite="321" type="pokemon" x="61" y="48">
        <path>RIGHTx13,LEFTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Sandile" shouldSleep="" speed="1" sprite="551" type="pokemon" x="46" y="17">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Sandile!</onCollisionSpeech>
        <speech>Sandile!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Sandshrew" shouldSleep="" speed="1" sprite="27" type="pokemon" x="54" y="9">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Sandshrew!</onCollisionSpeech>
        <speech>Sandshrew!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Aron" speed="1" sprite="304" type="pokemon" x="75" y="3">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Rhyhorn" speed="1" sprite="111" type="pokemon" x="75" y="8">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>