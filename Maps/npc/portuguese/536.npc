<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Mas essa bomba galáctica tem um impacto muito grande.</speech>
            <speech>Com esse bebê aqui, não há muito que não possamos explodir.</speech>
            <speech>Gostaria de saber o que eles planejaram para isso.</speech>
        </speeches>
        <speeches id="2">
            <speech>Graw! Você estava escutando! Eu só estava pensando em voz alta!</speech>
            <speech>Você é uma praga persistente... Estou ficando cansado de fugir...</speech>
            <speech>Mas não vou desperdiçar minha energia batendo em você...</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Olá, meu amigo! A carga que a Equipe Galáctica trouxe é preocupante, por isso eu vim.</speech>
            <speech>...Você diz que a carga era uma bomba? E houve uma explosão?</speech>
            <speech>A explosão foi no Grande Pântano? Além disso, você está perseguindo um homem...</speech>
            <speech>Um homem com um cabelo engraçado cortado em formato de tigela. Com uma roupa muito estranha? Em outras palavras, essa é a Equipe Galáctica!</speech>
            <speech>Oh, não, não, não! Como é que eu perdi isso? Ah, Looker, desta vez você cometeu um erro dos mais antigos!</speech>
            <speech>O homem que eu vi fugindo era o portador da bomba! Ah! Isso não vai adiantar! Espere! Espere, eu digo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>...Calça...calça...</speech>
            <speech>...Por que estou correndo assim?</speech>
            <speech>O novo mundo... O novo universo de que nosso chefe estava falando...</speech>
            <speech>Estou ficando tonto só de pensar nisso... Quando usarmos essa coisa...</speech>
        </speeches>
        <speeches id="2">
            <speech>Gweh! Você estava escutando! Eu só estava falando comigo mesmo!</speech>
            <speech>Você também é persistente...</speech>
            <speech>Estou estourado de tanto correr...</speech>
            <speech>Mas eu não vou... Vou lutar com você...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Se você se descuidou dos estudos, não terá nenhuma chance. Garotas capazes como eu são capazes.</speech>
        </speeches>
        <speeches id="2">
            <speech>Quando perde, você chega a analisar o motivo da derrota e a rever seu desempenho?</speech>
        </speeches>
        <speeches id="3">
            <speech>Quando perde, você chega a analisar o motivo da derrota e a rever seu desempenho?</speech>
        </speeches>
        <speeches id="4">
            <speech>Se você desperdiçar todo o seu tempo, nunca crescerá como instrutor.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Eu lhe darei uma batalha digna de um orador da escola de batalha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Onde você estuda? Eu também quero estudar lá!</speech>
        </speeches>
        <speeches id="3">
            <speech>Onde você estuda? Eu também quero estudar lá!</speech>
        </speeches>
        <speeches id="4">
            <speech>Agora você entende a capacidade de alguém que está no topo da classe?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Incomoda-me o fato de as pessoas sempre me interpretarem mal. Sou muito mais puro do que todo mundo pensa.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu realmente não quero que minha pele se queime, por isso quero ficar na sombra enquanto trabalho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu realmente não quero que minha pele se queime, por isso quero ficar na sombra enquanto trabalho.</speech>
        </speeches>
        <speeches id="4">
            <speech>Meu corpo e minha mente não estão necessariamente sempre em sincronia.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Os adultos não dizem o que realmente estão pensando, certo? Você precisa ler as entrelinhas para descobrir a verdade.</speech>
        </speeches>
        <speeches id="2">
            <speech>Muito bem! Você foi adorável! Não consigo imitar isso!</speech>
        </speeches>
        <speeches id="3">
            <speech>Muito bem! Você foi adorável! Não consigo imitar isso!</speech>
        </speeches>
        <speeches id="4">
            <speech>Uh-oh! Você está bem, não está? Desculpe-me por ter ficado furioso!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Há um grande apagão que está preocupando a cidade de Sunyshore.</speech>
            <speech>Atualmente, a entrada de visitantes é restrita.</speech>
        </speeches>
    </conversation>
    <conversation id="23">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Harambe" randomRotation="false" sprite="10" x="51" y="17">
        <speech>Dizem que existe uma máquina oculta muito rara que permitiria escalar essas identificações nessa parede de rocha aqui.</speech>
        <speech>Naturalmente, isso seria feito com a ajuda de um Pokémon, o que tornaria muito mais conveniente do que fazer isso sozinho, como nós, caminhantes... hohoho!!!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Garrick" randomRotation="true" sprite="25" x="39" y="38">
        <speech>Eu gostaria que houvesse mais árvores aqui...</speech>
        <speech>Eu só quero encontrar muitos Pokémon de insetos realmente legais...</speech>
        <speech>Ouvi dizer que há muito mais árvores em Jvaloh.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Corianne" randomRotation="true" sprite="53" x="42" y="31">
        <speech>Estou tentando decidir se devo ir pegar meu biquíni e tomar sol... Está um dia tão agradável.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="4" name="Jasmine" shouldSleep="" speed="1" sprite="36" type="npc" x="67" y="25">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">I'm running here!</onCollisionSpeech>
        <speech>Eu preciso correr! Se eu não correr, sinto que não fiz o suficiente para o dia! Terei muita energia!</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="6" name="Carrie" randomRotation="false" sprite="12" x="55" y="38">
        <speech>Estou aqui em uma viagem escolar, mas me perdi um pouco.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="7" name="Walter" randomRotation="true" sprite="5" x="73" y="31">
        <speech>Estou surpreso que tenha conseguido chegar até aqui, garoto.</speech>
        <speech>Você deve ser um grande treinador, para ter conseguido chegar até aqui.</speech>
        <speech>Comprei esta casa especificamente para evitar ter muitas pessoas na minha porta... mas acho que você mereceu.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="8" name="Leeann" shouldSleep="" speed="1" sprite="96" type="npc" x="72" y="58">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Don't step on my sand castle!</onCollisionSpeech>
        <speech>Oh, eu adoro a praia! É muito divertido construir castelos de areia e brincar com seus amigos.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="9" name="Donny" randomRotation="false" sprite="16" x="61" y="68">
        <speech>Adoro pescar, mas infelizmente essas crianças estão fazendo muito barulho e dificultando minha pescaria do dia!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="10" name="Micheal" randomRotation="true" sprite="16" x="13" y="74">
        <speech>Meu amigo pesca do outro lado da costa, mas parece que eu sempre tenho mais sorte do que ele para encontrar boas capturas.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="11" name="Morgan" randomRotation="false" sprite="19" x="42" y="62">
        <speech>Trabalhei por três anos para tirar férias aqui, eu realmente precisava disso. De verdade.</speech>
        <speech>Ser um funcionário de nível profissional realmente cobra seu preço.</speech>
    </npc>
</npcs>