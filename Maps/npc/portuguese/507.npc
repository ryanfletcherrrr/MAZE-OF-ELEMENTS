<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME!</speech>
            <speech>Você está capturando Pokémon?</speech>
            <speech>...Hum...</speech>
            <speech>Acho que você se sentiria muito mais seguro se pegasse mais.</speech>
            <speech>Você sabe, como quando você precisa viajar para lugares distantes.</speech>
            <speech>Você já tem alguns Pokémon com você!</speech>
            <speech>Nesse ritmo, sua Pokédex deve ficar cheia em pouco tempo!</speech>
            <speech>Ah, eu sei!</speech>
            <speech>Você não acha que é melhor saber mais sobre o Pokémon?</speech>
            <speech>Claro que sim!</speech>
            <speech>Conheço o lugar certo. Vamos lá! Não seja tímido. Siga-me!</speech>
        </speeches>
        <speeches id="2">
            <speech>Aquele homem... O que ele está fazendo? Hum...</speech>
        </speeches>
        <speeches id="3">
            <speech>O quê? O que? Peço perdão? Eu estava apenas conversando...</speech>
        </speeches>
        <speeches id="4">
            <speech>...Trabalhar para a Polícia Internacional deve ser difícil.</speech>
        </speeches>
        <speeches id="5">
            <speech>$PLAYER_NAME, aqui está. É a Escola de Treinadores.</speech>
            <speech>O nome já diz tudo!</speech>
        </speeches>
        <speeches id="6">
            <speech>Eu vi seu amigo Barry entrar mais cedo. Ele ainda pode estar lá estudando.</speech>
            <speech>OK, tchau agora!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>O QUE?! ...</speech>
            <speech>Como você soube? Como você me desmascarou como um membro da Polícia Internacional?</speech>
        </speeches>
        <speeches id="2">
            <speech>...Heh. Você afirma que estava apenas conversando, não é?</speech>
            <speech>Mas sei que é melhor não acreditar nisso. Não, não, não. Você reconheceu imediatamente que eu era alguém extraordinário.</speech>
            <speech>É por isso que você falou comigo, não é?</speech>
            <speech>Seu poder de observação é assustador!</speech>
            <speech>Muito admirável, você é! Agora que meu disfarce foi descoberto, deixe-me me apresentar.</speech>
            <speech>Sou uma elite da Polícia Internacional que viaja pelo mundo.</speech>
            <speech>Meu nome... Ah, não. Vou informá-lo apenas sobre meu codinome.</speech>
            <speech>Meu nome de código é Looker. É assim que todos me chamam.</speech>
            <speech>Em Sinnoh, há criminosos que roubam os Pokémon de outros.</speech>
            <speech>Portanto, fiquei atento a personagens que despertassem minha suspeita.</speech>
            <speech>Além disso, tenho um pedido. Se você me vir novamente, peço que não fale comigo, pois estou em serviço.</speech>
            <speech>...Na verdade, sim, sim, você pode falar comigo. Você deve. Não porque eu esteja me sentindo sozinho, não, não!</speech>
            <speech>Você deve me informar sobre os bandidos! Você deve me informar sobre qualquer acontecimento!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Eu deveria falar com Dawn antes de dar uma olhada na cidade.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Oh, oh, oh? Você se diz um Treinador de Pokémon? E ainda assim não tem uma vara de pescar?</speech>
            <speech>Oh, meu Deus, você é realmente um caso raro! Infelizmente, isso simplesmente não vai funcionar!</speech>
            <speech>Você não pode embarcar em uma jornada sem conhecer a alegria da pesca!</speech>
            <speech>Felizmente para você, é aí que eu - o Especialista em Pesca - entro em cena.</speech>
            <speech>Tudo o que você precisa fazer é encontrar três palhaços em Jubilife City.</speech>
            <speech>Se você conseguir encontrá-los... Eu o presentearei com uma vara de pescar especial!</speech>
            <speech>Cada um dos três palhaços fará uma pergunta de teste de habilidade.</speech>
            <speech>Todas as perguntas terão a ver com Pokémon. Afinal de contas, uma vara de pescar é essencial para qualquer treinador de Pokémon sério.</speech>
            <speech>Pegue um cupom de cada palhaço e depois venha me ver, OK?</speech>
        </speeches>
        <speeches id="2">
            <speech>OK, deixe-me contar seus cupons! Vou usar meu Pokétch sofisticado aqui...</speech>
            <speech>Um, dois, três! Bravo! Eu digo, bravo!</speech>
            <speech>Em troca desses cupons, apresento a você esta nova vara de pesca de alta tecnologia!</speech>
            <speech>Você quer isso?</speech>
        </speeches>
        <speeches id="3">
            <speech>Você é realmente um caso raro!</speech>
        </speeches>
        <speeches id="4">
            <speech>Se tiver alguma dúvida sobre isso, você pode visitar a Pokétch Tower.</speech>
            <speech>Nosso presidente costuma fazer campanhas promocionais, mas ele estava ocupado hoje e eu vim em seu lugar. Que sorte a sua!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="2">
            <speech>Olá! Sou um palhaço da campanha Poketch. Vamos lançar minha pergunta!</speech>
            <speech>Um Pokémon cresce ao derrotar outros e ganhar Exp. Points?</speech>
        </speeches>
        <speeches id="3">
            <speech>Essa não é a resposta correta. Vamos tentar novamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>Você está absolutamente correto.</speech>
        </speeches>
        <speeches id="5">
            <speech>Aqui está! Seu cupom Pokètch!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="2">
            <speech>Olá! Sou um palhaço da campanha Poketch. Vamos lançar minha pergunta!</speech>
            <speech>Um Pokémon pode guardar itens?</speech>
        </speeches>
        <speeches id="3">
            <speech>Essa não é a resposta correta. Vamos tentar novamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>Você está absolutamente correto.</speech>
        </speeches>
        <speeches id="5">
            <speech>Aqui está! Seu cupom Pokètch!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1"/>
        <speeches id="2">
            <speech>Olá! Sou um palhaço da campanha Poketch. Vamos lançar minha pergunta!</speech>
            <speech>Assim como os tipos de Pokémon, os movimentos dos Pokémon também têm tipos?</speech>
        </speeches>
        <speeches id="3">
            <speech>Essa não é a resposta correta. Vamos tentar novamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>Você está absolutamente correto.</speech>
        </speeches>
        <speeches id="5">
            <speech>Aqui está! Seu cupom Pokètch!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Devo recolher a vara de pescar antes que eles encerrem a campanha.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Eu deveria visitar a Trainer School antes de sair desta cidade.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Parece que não há ninguém duvidoso nessa Cidade Jubilife.</speech>
            <speech>Portanto, levarei minha investigação para outro lugar. Mas, meu amigo, sugiro que você permaneça atento aos adultos duvidosos!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="11">
        <speeches id="1">
            <speech>Ah, $PLAYER_NAME. E aí? Como está o progresso do Pokédex?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hum! Esse é o distintivo de ginásio de Oreburgh, pelo que vejo. Mas eu não havia lhe dado seu primeiro Pokémon há pouco tempo...?</speech>
            <speech>Talvez ser um instrutor seja como uma segunda natureza para você.</speech>
        </speeches>
        <speeches id="3">
            <speech>Silêncio, pessoal! Por que vocês têm de ser tão incômodos? Deixe-me listar algumas lições que você ainda precisa aprender.</speech>
            <speech>#Nº 1: Não fique perambulando por aí sem um bom motivo.</speech>
            <speech>#Nº 2: Não interrompa os outros enquanto eles estiverem tentando conversar.</speech>
            <speech>#Nº 3: Se você não conseguir o que quer, não levante a voz para ser intimidador.</speech>
            <speech>#Nº 4: Não pense que você se tornou forte só porque está em um grupo.</speech>
            <speech>#Nº 5: O que há com essas roupas estranhas que você usa? Meu Deus... Vocês se dizem adultos?</speech>
            <speech>Crianças, não cresçam como esses espécimes deploráveis.</speech>
        </speeches>
        <speeches id="4">
            <speech>$PLAYER_NAME, dê a esses bandidos uma lição de civilidade, por favor.</speech>
        </speeches>
        <speeches id="5">
            <speech>Esse grupo... Eles se chamavam Equipe Galáctica.</speech>
            <speech>Quando os Pokémon evoluem, eles parecem liberar algum tipo de energia...</speech>
            <speech>No entanto, acredito que se trata de um poder místico que está muito além do nosso controle.</speech>
            <speech>Mas a Team Galactic parece estar estudando o potencial desse poder.</speech>
            <speech>Eles querem saber se ela pode ser usada como energia para alguma coisa...</speech>
        </speeches>
        <speeches id="6">
            <speech>Já acabou, então você pode relaxar agora. Ainda assim, graças a vocês dois, nada resultou dessa situação.</speech>
            <speech>Fico grato por isso. A propósito, $PLAYER_NAME.</speech>
            <speech>Parabéns a você por sua habilidade de luta. Isso me fez pensar.</speech>
            <speech>Por que você não coleciona todos os emblemas de ginásio de Sinnoh?</speech>
            <speech>Ao fazer isso, você certamente encontrará muitos Pokémon.</speech>
            <speech>Isso, é claro, significa que suas páginas do Pokédex ficarão sempre cheias.</speech>
            <speech>Em outras palavras, ele será de grande ajuda para minha pesquisa.</speech>
            <speech>Dito isso, eu lhe dei o seu primeiro Pokémon e a Pokédex para ficar com você.</speech>
            <speech>Você é livre para fazer o que quiser com eles. Tome cuidado agora.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="12">
        <speeches id="1">
            <speech>Agora, agora, agora, agora, agora, agora! Professor Rowan, você deve obedecer.</speech>
            <speech>Entregue todos os resultados de sua pesquisa. De graça, naturalmente.</speech>
            <speech>O não cumprimento resultará em um tempo doloroso para seu assistente.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, homem professor de Pokémon, você precisa ser tão difícil.</speech>
            <speech>Estamos falando com você a negócios. Porque isso é trabalho para nós.</speech>
            <speech>O que estamos dizendo é: exigimos que você cumpra nossas exigências.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eeeeeeh! Você tinha que tornar isso pessoal!</speech>
            <speech>Você nos forçou a fazer uma demonstração de força!</speech>
            <speech>Faremos com que você se arrependa de insultar a Equipe Galáctica!</speech>
        </speeches>
        <speeches id="4">
            <speech>Você não nos deixa nenhuma opção. Por enquanto, vamos nos retirar.</speech>
            <speech>Faremos isso porque a Equipe Galáctica é benevolente com todos.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="13">
        <speeches id="1">
            <speech>$PLAYER_NAME, você sabia? O professor também estuda a evolução dos Pokémon.</speech>
            <speech>De acordo com sua pesquisa, 90% de todos os Pokémon estão de alguma forma ligados à evolução!</speech>
            <speech>Bem, talvez esse seja o motivo pelo qual essas pessoas tentaram tomar à força os dados de pesquisa do professor.</speech>
            <speech>Isso é realmente imperdoável!</speech>
        </speeches>
    </conversation>
    <npc direction="UP" hidden="false" id="1" name="Tony" sprite="72" x="65" y="46">
        <speech>Estou trocando Pokémon com meu amigo!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="2" name="Tim" sprite="37" x="67" y="46">
        <speech>Eu fiz meu Pokémon segurar um item antes de trocá-lo.</speech>
        <speech>Isso deixará o outro treinador duplamente feliz!</speech>
    </npc>
    <movingNpc direction="DOWN" id="3" name="Jordan" shouldSleep="1" speed="1" sprite="37" x="63" y="33">
        <path>UPx3, DOWNx3</path>
        <onCollisionSpeech gap="4">Please give me space.</onCollisionSpeech>
        <speech>OK, tenho seis pokébolas em meu cinto...</speech>
        <speech>Sim, isso é o suficiente. No máximo, você pode ter seis Pokémon com você.</speech>
        <speech>Certifique-se de que eles estejam na ordem em que você os quer!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Oldman Harold" shouldSleep="1" speed="1" sprite="48" x="49" y="30">
        <path>UPx2, RIGHTx3, DOWNx2, LEFTx3</path>
        <onCollisionSpeech gap="4">I'm walking here!</onCollisionSpeech>
        <speech>Olá! Deixe-me perguntar: você já visitou a estação de TV?</speech>
        <speech>Se você nunca esteve lá, deve fazer uma viagem.</speech>
        <speech>E, se você já esteve lá antes, nunca é demais visitá-lo novamente.</speech>
        <speech>Afinal de contas, você pode ser uma estrela! Ou pelo menos sonhar em ser uma!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="5" name="Ashley" shouldSleep="1" speed="1" sprite="33" x="61" y="20">
        <path>LEFTx3, UPx3, RIGHTx3, DOWNx3</path>
        <onCollisionSpeech gap="4">Uhh..What happened? Don't tell me you are lost.</onCollisionSpeech>
        <speech>Olá, de onde você veio?</speech>
        <speech>...</speech>
        <speech>Twinleaf Town, hein... É um lugar agradável. Tranquilo e tudo mais.</speech>
        <speech>A Jubilife City é um lugar grande, portanto, pode ser um pouco chocante para você.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Emma" shouldSleep="1" speed="1" sprite="12" x="44" y="17">
        <path>LEFTx4, UPx2, RIGHTx4, DOWNx2</path>
        <onCollisionSpeech gap="4">Go watch the TV!</onCollisionSpeech>
        <speech>Você me viu na TV? Eu estava em uma entrevista!</speech>
    </movingNpc>
    <movingNpc direction="UP" id="7" name="Ava" shouldSleep="1" speed="1" sprite="6" x="23" y="21">
        <path>LEFTx3, RIGHTx3</path>
        <onCollisionSpeech gap="4">Please give me space!</onCollisionSpeech>
        <speech>Quando você caminha com seus Pokémon, eles se tornam gradualmente mais amigáveis.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="32" name="Trevor" shouldSleep="1" speed="1" sprite="25" x="33" y="41">
        <path>LEFTx6, DOWNx3, RIGHTx6, UPx3</path>
        <onCollisionSpeech gap="4">Can I help you?</onCollisionSpeech>
        <speech>Os comerciantes locais frequentemente visitam o Terminal Global em busca de negócios.</speech>
        <speech>Há um cientista em seu interior que está procurando por um Heracross...</speech>
        <speech>Talvez ele dê algo bom em troca?</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="9" name="Robert" sprite="5" x="50" y="22">
        <speech>Você sabe o que é isso? A natureza é o mundo ao nosso redor. Nós, como seres humanos, dependemos da natureza de muitas maneiras diferentes.</speech>
        <speech>Pelo menos há um pequeno parque na cidade...</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="10" name="Cop Lucas" sprite="126" x="27" y="53">
        <speech>Olá, treinador, estou de olho nessas bicicletas. Não tente roubar uma!</speech>
        <speech>Estou de olho em você...</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="11" name="Thief" sprite="35" x="13" y="49">
        <speech>Você pode ver se há algum policial perto dessas bicicletas para mim?</speech>
        <speech>...</speech>
        <speech>Uhh, por que ele ainda está lá...</speech>
        <speech>Não poderei ter meu golpe de sorte se ele não for embora...</speech>
    </npc>
</npcs>