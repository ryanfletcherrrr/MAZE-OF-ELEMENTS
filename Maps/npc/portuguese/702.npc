<npcs>
    <npc direction="DOWN" id="1000" name="Black Belt Chan" sprite="34" x="4" y="32">

        <speech>Continue firme, amigo!</speech>
        <speech>O caminho difícil está apenas começando!</speech>
        <speech>É por isso que estou aqui! Se eu conseguir lidar com esse clima sem problemas, com certeza vou conseguir!</speech>
        <speech>...para a Champions Road!!!</speech>

    </npc>

    <npc direction="DOWN" id="1001" name="Poke Maniac Hawk" sprite="37" x="18" y="22">

        <speech>Meus Pokémon não precisam ser fortes!</speech>
        <speech>Como minha quantidade de Pokémon é bem grande, só preciso pensar em uma estratégia perfeita...</speech>
        <speech>O poder não é tudo! Trabalho em equipe!</speech>

    </npc>

    <npc direction="DOWN" id="1002" name="Old Man José" sprite="39" x="18" y="2">

        <speech>Pare aí mesmo, meu jovem!</speech>
        <speech>O que está fazendo aqui?</speech>
        <speech>*$PLAYER_NAME explica que está indo para a Champions Road*.</speech>
        <speech>Sinto muito, $PLAYER_NAME. Você não parece ser um garoto perdido aleatório.</speech>
        <speech>Desejo a você muita sorte.</speech>

    </npc>

    <npc direction="LEFT" id="1003" name="Chef Kray" sprite="47" x="42" y="7">

        <speech>Você deve ser $PLAYER_NAME.</speech>
        <speech>Você está se tornando bastante famoso em Jvaloh!</speech>
        <speech>Desculpe, eu não me apresentei. Eu sou Kray, o pai de Rubin do Zorg Cafe da Ponte Milen!</speech>
        <speech>Ele me disse que você foi lá muitas vezes para descansar um pouco enquanto caçava alguns Staryu's no lago de Milen.
        </speech>
        <speech>Você é, com certeza, incrível!</speech>

    </npc>


    <npc direction="UP" id="1004" name="Glassmor TV Reporters" sprite="51" x="46" y="58">

        <speech>Olá, $PLAYER_NAME.</speech>
        <speech>O professor Blaze nos disse que você acabaria chegando até aqui!</speech>
        <speech>Agora estamos ao vivo na TV. Como você se sente sendo um dos mais jovens treinadores a vencer todas as academias Jvaloh
            ginásio?
        </speech>
        <speech>*$PLAYER_NAME diz que está muito feliz com os resultados e que seu sucesso se deve ao seu Pokémon.
        </speech>
        <speech>Palavras tão humildes de uma criança de coração puro!</speech>
        <speech>Este foi o $PLAYER_NAME na Glassmor TV! Fique ligado!</speech>

    </npc>

    <conversation id="1">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, eu só posso curar seu Pokémon se você tiver uma assinatura do PBO. Você pode comprar um na loja de doadores.</speech>
        </speeches>
    </conversation>
</npcs>