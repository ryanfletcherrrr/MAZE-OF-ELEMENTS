<npcs>
    <conversation id="1">
        <!-- First Battle (Uses Original Game Dialogues) -->
        <speeches id="1">
            <speech>Olá! Você é uma cara nova!</speech>
            <speech>Somente os Treinadores com uma mentalidade forte {COLOR=BLUE}{ENDCOLOR} podem dominar as batalhas Pokémon!</speech>
            <speech>Qual é a sua abordagem ao capturar e treinar Pokémon?</speech>
            <speech>Minha política é uma ofensiva total com {COLOR=CYAN}Pokémon do tipo água{ENDCOLOR}!</speech>
            <speech>Vamos ver se você consegue lidar com as ondas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau! Você é realmente incrível!</speech>
            <speech>Tome isto como prova de sua vitória - você a mereceu!</speech>
            <speech>Ah, e aqui está o {COLOR=BLUE}TM03{ENDCOLOR} - ele contém {COLOR=CYAN}Water Pulse{ENDCOLOR}! Seu poder pode dominar os oponentes como uma maré implacável!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hah! Você ainda não estava pronto para andar nessa corrente!</speech>
            <speech>Vá treinar e, quando parar de afundar, tente novamente!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh? Ainda não está pronto? Não tem problema.</speech>
            <speech>As marés sempre voltam, assim como os desafiadores. Eu estarei esperando.</speech>
        </speeches>
        <!-- Repeated Battle (Tougher, More Competitive) -->
        <speeches id="5">
            <speech>Oh, de volta para mais? Você acha que pode domar a tempestade?</speech>
            <speech>{A água é implacável{ENDCOLOR}. Ela se choca, sofre erosão e nunca para de se mover.</speech>
            <speech>Se não conseguir acompanhar o ritmo, você será arrastado - vamos ver se você consegue lidar com a pressão!</speech>
        </speeches>
        <speeches id="6">
            <speech>Uau... Você realmente aprimorou suas habilidades!</speech>
            <speech>O {COLOR=GOLD}$TOTAL_VICTORY{ENDCOLOR} vence contra mim... e o {COLOR=CYAN}$CONSECUTIVE{ENDCOLOR} em uma sequência?</speech>
            <speech>Parece que você não está mais apenas flutuando - você mesmo está comandando as marés!</speech>
        </speeches>
        <speeches id="7">
            <speech>Ah! Você achou que tinha me entendido?</speech>
            <speech>O oceano não se importa com quantas vezes você já lutou - ele só recompensa aqueles que conseguem sobreviver a ele!</speech>
            <speech>Volte quando tiver treinado mais... ou aprenda a nadar!</speech>
        </speeches>
        <speeches id="8">
            <speech>O quê? Sem batalha? Com medo do fundo do poço?</speech>
            <speech>Tudo bem, mas não me deixe esperando para sempre - adoro ver os treinadores lutando para se manter à tona!</speech>
        </speeches>
        <speeches id="9">
            <speech>Outra revanche já? Calma aí!</speech>
            <speech>O oceano não apressa suas ondas, e eu também não. Volte em {COLOR=BLUE}$DURATION{ENDCOLOR}.</speech>
            <speech>Depois, veremos se você ainda está pronto para fazer barulho!</speech>
        </speeches>
        <!-- Special Condition: Battle Requirement Not Met -->
        <speeches id="10">
            <speech>Calma aí! Você nem sequer está devidamente preparado.</speech>
            <speech>Eu só luto contra Treinadores que tenham {COLOR=CYAN} pelo menos 3 Pokémon do tipo Água{ENDCOLOR} em sua equipe.</speech>
            <speech>Volte quando sua equipe fluir como o próprio oceano!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>A água flui para onde quer... e, neste momento, está fluindo sobre você!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que fui pego pela correnteza...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que fui pego pela correnteza...</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Seguir o fluxo sempre funciona!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Você sabia que Misty nada desde que era criança? Ela é uma verdadeira inspiração!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que nadei um pouco demais...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que nadei um pouco demais...</speech>
        </speeches>
        <speeches id="4">
            <speech>A resistência vence a corrida! Foi isso que Misty me ensinou!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Os tipos aquáticos são fortes porque se adaptam a qualquer desafio. Você consegue?</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que preciso ajustar minha estratégia...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que preciso ajustar minha estratégia...</speech>
        </speeches>
        <speeches id="4">
            <speech>Você não é ruim, mas ainda tem muito a aprender!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Estou treinando para um triatlo, e a natação é a minha prova mais forte! Você acha que consegue acompanhar o ritmo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que eu deveria ter me controlado melhor...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que eu deveria ter me controlado melhor...</speech>
        </speeches>
        <speeches id="4">
            <speech>Velocidade e resistência! É assim que você vence corridas... e batalhas!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Misty diz que batalhar tem tudo a ver com resistência. Eu treino da mesma forma!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah... Eu afundei como uma pedra...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah... Eu afundei como uma pedra...</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Sou como uma onda... imparável!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Golduck" speed="1" sprite="55" type="pokemon" x="10" y="24">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Golduuuck!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Tatsugiri" speed="1" sprite="1458" type="pokemon" x="9" y="13">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Tatsuuu!</onCollisionSpeech>
    </movingNpc>
</npcs>