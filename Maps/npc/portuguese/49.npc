<npcs>
    <npc direction="DOWN" id="1000" name="Expert Boon" sprite="39" x="12" y="19">
        <speech>Os tempos certamente mudaram.</speech>
        <speech>Ainda não sei do que esses pokémons dos tipos Aço e Sombrio são capazes.</speech>
        <speech>Pokémon fada? Se continuar falando assim, vou lhe dar uma surra!</speech>
    </npc>
    <npc direction="UP" id="1001" name="Fisherman Filli" sprite="16" x="28" y="33">
        <speech>Oh, rapaz, oh, rapaz, oh, rapaz. Esse vai ser ENORME!</speech>
        <speech>O que você quer? O que você quer? *SNAP*</speech>
        <speech>VOCÊ!!! Minha linha de pesca se rompeu por sua causa!!! Isso ia ser um Clamperl com certeza!</speech>
    </npc>
    <npc direction="UP" id="1002" name="Lass Tina " randomRotation="true" sprite="96" x="12" y="5">
        <speech>Terry e eu somos os melhores amigos de todos os tempos.</speech>
        <speech>Tipo, em todo o mundo, como em todo o universo.</speech>
    </npc>
    <npc direction="UP" id="1003" name="Lass Terry" randomRotation="true" sprite="96" x="12" y="6">
        <speech>A Tina é a garota mais legal de todo o planeta.</speech>
        <speech>Por exemplo, em todo o continente.</speech>
        <speech>Espere, qual é o maior? Estou muito confuso.</speech>
        <speech>De qualquer forma, somos muito legais para você.</speech>
    </npc>
    <npc direction="LEFT" id="1004" name="Ninja Boy Lazlo" randomRotation="true" sprite="58" x="6" y="12">
        <speech>Whaha, eu o apunhalarei com minha espada!</speech>
        <speech>O que você vai fazer a respeito?</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Saudações! Bem-vindo à Skynet Travel Technologies!</speech>
            <speech>Você gostaria de viajar para algum lugar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Isso é lamentável. Volte sempre que desejar viajar para outro lugar.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Saudações! Bem-vindo ao sistema de caixas eletrônicos do Banco de Jvaloh!</speech>
            <speech>Você gostaria de sacar ou depositar dinheiro?</speech>
        </speeches>
        <speeches id="2">
            <speech>Retorne sempre que desejar fazer uma transação.</speech>
        </speeches>
        <speeches id="3">
            <speech>Esse recurso está disponível somente para pessoas com uma "associação ao banco".</speech>
            <speech>Para todos os não associados, a agência principal do nosso banco na cidade de Bijli está disponível para uso.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="2">
            <speech>Ahoi lá! Este é o S.S. Seafarer. Se quiser viajar nele, fale com meu colega Sonny na bilheteria das docas.</speech>
        </speeches>
        <speeches id="1">
            <speech>Gostaria de voltar para a Lansoil Docks?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>A água é um dos principais contribuintes para a nossa existência, e sua essência é melhor capturada pelo "Damp Rock".</speech>
            <speech>Se você me trouxer 5 Big Mushrooms, terei prazer em lhe dar uma das minhas pedras em troca</speech>
        </speeches>
        <speeches id="2">
            <speech>Vejo que você trouxe os Big Mushrooms. Está interessado em fazer uma troca? Eu lhe darei uma Damp Rock em troca de 5 desses Big Mushrooms.</speech>
        </speeches>
        <speeches id="3">
            <speech>Isso é lamentável, pois você parece não respeitar a água.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aqui está, então! Fico feliz em fazer negócios com um colega que acredita no elemento água!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>O sol é um dos principais contribuintes para nossa existência, e sua essência é melhor capturada pelo "Heat Rock".</speech>
            <speech>Se você me trouxer 5 Big Mushrooms, terei prazer em lhe dar uma das minhas pedras em troca</speech>
        </speeches>
        <speeches id="2">
            <speech>Vejo que você trouxe os Big Mushrooms. Está interessado em fazer uma troca? Eu lhe darei uma Heat Rock em troca de 5 desses Big Mushrooms.</speech>
        </speeches>
        <speeches id="3">
            <speech>Isso é lamentável, pois você parece não respeitar o sol e seu calor.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aqui está, então! Fico feliz em fazer negócios com um colega que acredita no elemento fogo!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>As geleiras geladas contribuem de forma fundamental para nossa existência, e sua essência é melhor capturada pela "Icy Rock".</speech>
            <speech>Se você me trouxer 5 Big Mushrooms, terei prazer em lhe dar uma das minhas pedras em troca</speech>
        </speeches>
        <speeches id="2">
            <speech>Vejo que você trouxe os Big Mushrooms. Está interessado em fazer uma troca? Eu lhe darei uma Icy Rock em troca de 5 desses Big Mushrooms.</speech>
        </speeches>
        <speeches id="3">
            <speech>Isso é lamentável, pois você parece não respeitar o gelo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aqui está, então! Fico feliz em fazer negócios com um colega que acredita no elemento gelo!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>A terra é uma contribuição fundamental para a nossa existência, e sua essência é melhor capturada pelo "Smooth Rock".</speech>
            <speech>Se você me trouxer 5 Big Mushrooms, terei prazer em lhe dar uma das minhas pedras em troca</speech>
        </speeches>
        <speeches id="2">
            <speech>Vejo que você trouxe os Big Mushrooms. Está disposto a fazer uma troca? Eu lhe darei uma Smooth Rock em troca de 5 desses Big Mushrooms.</speech>
        </speeches>
        <speeches id="3">
            <speech>Isso é lamentável, porque você parece não ter respeito pela terra.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aqui está, então! Fico feliz em fazer negócios com um colega que acredita na Terra!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="10">
        <speeches id="1">
            <speech>Eu provavelmente deveria procurar o Sailor Barney antes de continuar.</speech>
        </speeches>
    </conversation>
</npcs>