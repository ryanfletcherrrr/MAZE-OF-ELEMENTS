<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>O caminho até aqui foi bem longo, não? Fiquei cansado o suficiente para ter que fazer uma pequena pausa.</speech>
            <speech>Seus Pokémon também parecem bastante cansados. Deixe-me cuidar deles por um segundo.</speech>
        </speeches>
        <speeches id="2">
            <speech>...Pronto!</speech>
            <speech>Está tudo bem.</speech>
            <speech>Estou indo fazer uma visita ao professor Cozmo.</speech>
            <speech>Ele é famoso por sua pesquisa sobre meteoritos.</speech>
            <speech>Ele estava trabalhando em um projeto com meu pai - hum, quero dizer, o Professor Birch - sobre como os meteoritos poderiam afetar os Pokémon.</speech>
            <speech>Chega de enrolação! Acho que não falta muito para Fallarbor. Vamos dar um último empurrão!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Tanto minha mãe quanto meu pai são treinadores Ace. Provavelmente eu também sou um Ace!</speech>
        </speeches>
        <speeches id="2">
            <speech>Waaah! Eu deveria ter genes superiores e ser capaz de seguir o exemplo de meus pais...</speech>
        </speeches>
        <speeches id="3">
            <speech>Waaah! Eu deveria ter genes superiores e ser capaz de seguir os passos de meus pais...</speech>
        </speeches>
        <speeches id="4">
            <speech>Quero ser um verdadeiro Ás, como minha mãe e meu pai.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Sinceramente, não sou muito bom em batalhas Pokémon... No entanto, quando penso em meu futuro, parece que não tenho escolha a não ser batalhar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Veja... Eu sabia que não conseguiria vencer. Não fui feito para competir.</speech>
        </speeches>
        <speeches id="3">
            <speech>Veja... Eu sabia que não conseguiria vencer. Não fui feito para competir.</speech>
        </speeches>
        <speeches id="4">
            <speech>Detesto dizer isso, mas se você não consegue nem me vencer, o resto do caminho vai ser muito difícil.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Se ainda há sonhos em seu coração, então ainda sou uma garota de conto de fadas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Pare de falar sobre minha idade.</speech>
        </speeches>
        <speeches id="3">
            <speech>Pare de falar sobre minha idade.</speech>
        </speeches>
        <speeches id="4">
            <speech>Decidi ignorar a realidade. Afinal, sou uma garota de conto de fadas.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Ah! Flores e tempestades serão superadas!  Enquanto eu percorro o caminho de uma mulher batalhadora!</speech>
        </speeches>
        <speeches id="2">
            <speech>Perdendo, desmoronando, chorando!  O caminho de uma mulher viajante está se fechando!</speech>
        </speeches>
        <speeches id="3">
            <speech>Perdendo, desmoronando, chorando!  O caminho de uma mulher viajante está se fechando!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh! Consegui uma vitória!  Siga em frente, no caminho de uma mulher batalhadora!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Sinto o cheiro de uma pessoa de coragem excepcional. Ho! Estou ansioso por isso!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah! Esse era exatamente o poder que eu estava esperando! Somos parecidos! Não, nós somos iguais, você e eu!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah! Esse era exatamente o poder que eu estava esperando! Somos parecidos! Não, nós somos iguais, você e eu!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ugh! Você não é o que eu estava esperando! Você e seu Pokémon têm que crescer um pouco.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Sou tão obcecado por Pokémon que minha esposa está a ponto de explodir de raiva!</speech>
        </speeches>
        <speeches id="2">
            <speech>Fiquei muito viciado em batalhas de Pokémon e, por isso, não fazia nada em casa.</speech>
        </speeches>
        <speeches id="3">
            <speech>Fiquei muito viciado em batalhas de Pokémon e, por isso, não fazia nada em casa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Não quero ir para casa, porque minha esposa é tão assustadora quanto um Pokémon lendário.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Bjorn" randomRotation="false" sprite="48" x="50" y="9">
        <speech>Até mesmo os Pokémon mais fortes lutam contra o solo coberto de cinzas da Rota 113. Tenha cuidado, Treinador!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Haakon" shouldSleep="" speed="1" sprite="20" type="npc" x="91" y="8">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Rota 113, onde tempestades de areia revelam tesouros antigos!</speech>
        <speech>Caçadores de fósseis como eu prosperam nessa extensão desértica, ansiosos para descobrir os segredos do passado escondidos sob as areias rodopiantes.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Trapinch" shouldSleep="" speed="1" sprite="328" type="pokemon" x="84" y="26">
        <path>UPx4,LEFTx2,RIGHTx2,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Erling" randomRotation="true" sprite="10" x="6" y="24">
        <speech>A Rota 113 é um país das maravilhas do deserto! As tempestades de areia moldam a paisagem, revelando penhascos e dunas até onde a vista alcança.</speech>
        <speech>É selvagem, indomável e de tirar o fôlego.</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Sandshrew" shouldSleep="" speed="1" sprite="27" type="pokemon" x="6" y="16">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Shrew!</onCollisionSpeech>
        <speech>Musaranho?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Baltoy" shouldSleep="" speed="1" sprite="343" type="pokemon" x="21" y="24">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Skarmory" speed="1" sprite="227" type="pokemon" x="61" y="19">
        <path>LEFTx22,RIGHTx22</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Cacnea" shouldSleep="" speed="1" sprite="331" type="pokemon" x="117" y="25">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Swellow" speed="1" sprite="277" type="pokemon" x="144" y="4">
        <path>LEFTx10,DOWNx2,RIGHTx10,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Whismur" shouldSleep="" speed="1" sprite="293" type="pokemon" x="133" y="29">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="123" y="11">
        <path>RIGHTx1,UPx1,DOWNx1,LEFTx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Trapinch" shouldSleep="" speed="1" sprite="328" type="pokemon" x="138" y="20">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="7" y="7">
        <path>DOWNx2,LEFTx2,RIGHTx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Skarmory" speed="1" sprite="227" type="pokemon" x="24" y="4">
        <path>DOWNx3,LEFTx7,UPx3,RIGHTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Swellow" speed="1" sprite="277" type="pokemon" x="34" y="26">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Swellow" speed="1" sprite="277" type="pokemon" x="67" y="10">
        <path>UPx3,RIGHTx6,DOWNx3,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>