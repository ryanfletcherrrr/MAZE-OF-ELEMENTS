<npcs>

    <npc direction="DOWN" id="1000" name="Youngster Borris" sprite="4" x="48" y="18">
        <speech>Oyi estranho, você também é membro da Sutta Gang?</speech>
        <speech>É bom saber disso, pois eles dificultaram nossa vida.</speech>
    </npc>

    <npc direction="UP" id="1001" name="Dragon Tamer Ren" sprite="173" x="47" y="46">
        <speech>Quero ser o melhor domador de dragões do mundo.</speech>
        <speech>Será que é pedir demais? Não acho que seja muito difícil controlar dragões. Tudo o que você precisa é de uma fada para
            mantê-los sob controle hwehehehe.
        </speech>
    </npc>

    <npc direction="DOWN" id="1002" name="Priest Samurai" sprite="167" x="51" y="34">
        <speech>Está vendo este sino? Dizem que o sino começa a tocar quando a lenda do dragão nos visita.
        </speech>
        <speech>Não o ouvi tocar nem uma vez sequer, mas acredito no que meus ancestrais me disseram. No final das contas, esse sino deve
            existir por algum motivo.
        </speech>
    </npc>

    <npc direction="UP" id="1003" name="Fisherman Chu" sprite="16" x="43" y="46">
        <speech>Estou tentando encontrar um Dratini aqui. Será que eles vivem aqui ou migraram para outro lugar?</speech>
        <speech>Quem sabe... Vou continuar tentando.</speech>
    </npc>

    <npc direction="RIGHT" id="1004" name="Weird Guy Tim" sprite="48" x="27" y="22">
        <speech>O quê?</speech>
        <speech>Pare de olhar para mim como se eu fosse um ladrão.</speech>
    </npc>

    <npc direction="LEFT" id="1005" name="Dragon Tamer Paul" sprite="174" x="64" y="15">
        <speech>Venho aqui para meditar todos os dias. Aqui é muito tranquilo. Venho para cá depois de treinar com meu
            Bagon.
        </speech>
        <speech>Na minha opinião, é um dos lugares mais tranquilos de Jvaloh.</speech>
    </npc>

    <npc direction="LEFT" id="1006" name="Random Interviewer" sprite="51" x="11" y="20">
        <speech>Você já visitou a Dragon Tower? Gostaria de compartilhar sua experiência conosco?</speech>
    </npc>

    <npc direction="RIGHT" id="1007" name="Cute Girl Disha" sprite="77" x="10" y="60">
        <speech>Adoro caminhar por essa área. Adoro o terreno, as pontes, os lagos e os dragões.</speech>
        <speech>Uma vez vi uma cobra verde voando por aí, mas ninguém quer acreditar em mim porque a campainha não tocou
            não tocou :(
        </speech>
    </npc>

    <npc direction="RIGHT" id="1008" name="Pokemon Trainer Cena" sprite="77" x="33" y="53">
        <speech>Chegamos a um ponto em que "Gotta Catch'em all" não deveria existir.</speech>
        <speech>Refiro-me a mais de 700 pokémons. Vamos lá... Não consigo mais acompanhar.</speech>
        <speech>Perdi toda a minha motivação. Eu me pergunto o que faz você continuar.</speech>
    </npc>

    <npc direction="DOWN" id="1008" name="Psychic Boy Laksh" sprite="72" x="54" y="47">
        <speech>Fico aqui sentado o dia todo esperando que algo aconteça. Não sei o que é esse algo, mas não tenho
            nada melhor para fazer.
        </speech>
    </npc>

    <conversation id="1">
        <speeches id="1">
            <speech>Saudações! Bem-vindo à Skynet Travel Technologies!</speech>
            <speech>Você gostaria de viajar para algum lugar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Isso é lamentável. Volte sempre que quiser viajar para outro lugar.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Saudações! Bem-vindo ao sistema de caixas eletrônicos do Banco de Jvaloh!</speech>
            <speech>Você gostaria de sacar ou depositar dinheiro?</speech>
        </speeches>
        <speeches id="2">
            <speech>Retorne sempre que desejar fazer uma transação.</speech>
        </speeches>
        <speeches id="3">
            <speech>Esse recurso está disponível somente para pessoas com uma "associação ao banco".</speech>
            <speech>Para todos os não associados, a agência principal do nosso banco na cidade de Bijli está disponível para uso.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Hey $PLAYER_NAME, Charil não está na academia no momento.</speech>
            <speech>Um de seus Pokémon está muito doente e ela foi para a Vila Jannat para tratamento.</speech>
            <speech>Talvez você possa ir vê-la?</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Você é um desafiante? Qual é o seu nome?</speech>
            <speech>Hey $PLAYER_NAME, Charil não está na academia no momento.</speech>
            <speech>Ela foi para a Jannat Village às pressas, e ninguém sabe quando ela voltará.</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>Então, você finalmente recebeu seu 8º emblema!</speech>
            <speech>Sua vitória sobre $GYM8_LEADER mostra que você ficou mais forte, o que é bom, porque eu também fiquei muito mais forte.
                muito mais forte também!
            </speech>
            <speech>E, como é de costume, é hora de descobrir qual de nós é o melhor treinador no momento.</speech>
            <speech>Então, não há tempo a perder! Vamos colocar esse show na estrada.</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau. Você nunca deixa de me surpreender.</speech>
            <speech>Durante todo esse tempo, tenho treinado muito para ficar mais forte do que nunca.
                nunca antes, mas ainda não tenho nenhuma chance diante de você.
            </speech>
            <speech>Você é simplesmente incrível $PLAYER_NAME. Tenho sorte de tê-lo como meu rival.</speech>
            <speech>Antes de sair desse local, vá em direção à Dragon Tower e à estátua de Rayquaza.</speech>
            <speech>As lendas dizem que as linhas vermelhas no corpo do Rayquaza pertencem ao sangue da esposa de Osíris que corre em seu corpo.
                corpo.
            </speech>
            <speech>Vamos dar uma olhada.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau. Você nunca deixa de me surpreender.</speech>
            <speech>Durante todo esse tempo, tenho treinado muito para ficar mais forte do que nunca.
                nunca antes, mas ainda não tenho nenhuma chance diante de você.
            </speech>
            <speech>Você é simplesmente incrível $PLAYER_NAME. Tenho sorte de tê-lo como meu rival.</speech>
            <speech>Antes de sair desse local, vá em direção à Dragon Tower e à estátua de Rayquaza.</speech>
            <speech>As lendas dizem que as linhas vermelhas no corpo do Rayquaza pertencem ao sangue de sua esposa que corre em seu corpo.
                corpo.
            </speech>
            <speech>Vamos dar uma olhada.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sua vitória sobre $GYM8_LEADER foi um acaso ou eu me tornei muito forte a ponto de você não ser mais meu rival?
                mais meu rival.
            </speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME, tenho mais informações sobre o Osiris.</speech>
            <speech>Osíris era um sacerdote pacífico que estava obcecado por sua esposa.</speech>
            <speech>Sua esposa era uma senhora arrogante que conseguiu viajar para Hoenn e capturar um Rayquaza.</speech>
            <speech>O Rayquaza foi torturado por ela. Ela achava que estava cuidando bem do Rayquaza, mas não estava.
                não estava.
            </speech>
            <speech>Um dia, Rayquaza se cansou de ser assediado por ela e a consumiu completamente.</speech>
            <speech>Depois disso, houve uma explosão e Rayqyuaza nunca mais foi visto.</speech>
            <speech>Ninguém sabe o que aconteceu com o Rayquaza, mas a lenda diz que foi ele que explodiu devido ao egoísmo e à arrogância de seu dono.
                egoísmo e arrogância de seu dono.
            </speech>
            <speech>Osíris ficou louco desde aquele dia. No início, ele tentou convocar Rayquaza construindo sua estátua.
            </speech>
            <speech>Depois, ele tentou caçar Rayquaza na região de Hoenn, mas isso também não deu certo.</speech>
            <speech>Finalmente, ele decidiu convocar o Ho-Oh e usar seus poderes para trazer sua esposa de volta à vida.</speech>
            <speech>Acho que esse é o motivo pelo qual ele está capturando os cães lendários.</speech>
            <speech>Os habitantes locais dizem que convocar Ho-Oh para trazer sua esposa de volta também pode trazer Rayqyaza de volta.</speech>
            <speech>E esse Rayquaza não vai ficar feliz... Os habitantes locais acham que ele assumirá sua forma mega e incendiará
                Jvaloh inteira.
            </speech>
            <speech>Temos que detê-lo antes que seja tarde demais.</speech>
            <speech>Ah, outra coisa. Ganhei meu oitavo distintivo de ginástica há alguns dias. Estou ficando muito forte agora.</speech>
            <speech>Quero me testar contra você, mas, antes disso, quero que você também ganhe o 8º emblema.</speech>
            <speech>Esperarei por você no sul da cidade de Goldburn para batalhar. Até mais tarde.</speech>
            <speech>FERALIGATR!!!</speech>
        </speeches>
    </conversation>
</npcs>