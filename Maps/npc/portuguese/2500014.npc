<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Por favor, selecione um andar.{ENDCOLOR}</speech>
            <speech>Os botões aguardam sua entrada, prontos para levá-lo aonde você precisa.</speech>
        </speeches>
        <speeches id="2">
            <speech>{O console do elevador se fecha sozinho com um clique suave.</speech>
            <speech>Você precisará ativá-lo novamente se quiser usá-lo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{A porta está trancada. Pode ser necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>A ciência tem a ver com resultados. Se as batalhas ajudam minha pesquisa, que assim seja!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impossível! Os dados não previram esse resultado!</speech>
        </speeches>
        <speeches id="3">
            <speech>Impossível! Os dados não previram esse resultado!</speech>
        </speeches>
        <speeches id="4">
            <speech>Mais uma vitória para acrescentar aos meus cálculos. Você nunca teve uma chance.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Você está indo direto para a encrenca, garoto!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Você teve sorte dessa vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Você teve sorte dessa vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! A Equipe Rocket sempre vence no final!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Você quer brigar comigo? Hehe... Talvez você se arrependa disso!</speech>
        </speeches>
        <speeches id="2">
            <speech>Agh! Ugh... Tanto faz. Eu não estava realmente tentando.</speech>
        </speeches>
        <speeches id="3">
            <speech>Agh! Ugh... Tanto faz. Eu não estava realmente tentando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Muito fácil! Talvez eu fique com a sua carteira como prêmio... Brincadeira!</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>Ah, que surpresa {COLOR=CYAN}deliciosa{ENDCOLOR}! Um treinador ousado o suficiente para desafiar as operações da {COLOR=RED}Team Rocket{ENDCOLOR}.</speech>
            <speech>Eu sou {COLOR=PURPLE}James{ENDCOLOR} e devo dizer que este {COLOR=GOLD}Projeto T.E.R.A.{ENDCOLOR} tem sido um empreendimento {COLOR=CYAN}fascinante{ENDCOLOR}!</speech>
            <speech>A {COLOR=PURPLE}Tera Energy{ENDCOLOR} deu ao meu Pokémon uma elegância {COLOR=GOLD} tão refinada{ENDCOLOR} em batalha - é realmente {COLOR=CYAN}maravilhosa{ENDCOLOR}!</speech>
            <speech>Eu o derrotarei com a {COLOR=PURPLE}maior sofisticação{ENDCOLOR} e {COLOR=RED}encanto vil{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="2">
            <speech>Nossa, nossa... que desempenho inesperadamente habilidoso{ENDCOLOR} de sua parte!</speech>
            <speech>Devo admitir que sua estratégia foi bastante {COLOR=PURPLE}impressionante{ENDCOLOR} - quase tão refinada quanto a minha!</speech>
            <speech>Essa derrota é dolorosa, mas vou me retirar com {COLOR=GOLD}dignidade{ENDCOLOR} intacta!</speech>
            <speech>{A Equipe Rocket{ENDCOLOR} se lembrará desse encontro... e estaremos mais bem preparados{ENDCOLOR} da próxima vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>Devo dizer que foi uma experiência muito {COLOR=CYAN}desafiadora{ENDCOLOR}... Você lutou com {COLOR=PURPLE}uma habilidade considerável{ENDCOLOR}.</speech>
            <speech>Talvez o {COLOR=GOLD}Projeto T.E.R.A.{ENDCOLOR} precisasse de mais {COLOR=RED}refinamento{ENDCOLOR} antes de ser implementado...</speech>
            <speech>Até nos encontrarmos novamente, treinador... Estarei {COLOR=PURPLE}estudando{ENDCOLOR} suas técnicas com grande interesse!</speech>
        </speeches>
        <speeches id="4">
            <speech>Excelente! Uma vitória perfeitamente executada{ENDCOLOR}, se é que posso dizer isso!</speech>
            <speech>Minha equipe de {COLOR=GOLD}Tera-enhanced{ENDCOLOR} atuou com uma precisão tão {COLOR=CYAN}elegante{ENDCOLOR}!</speech>
            <speech>Agora, então, acredito que é hora de você fazer uma saída {COLOR=RED}graciosa{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="5">
            <speech>Oh, minha nossa, que impaciência {COLOR=RED}{ENDCOLOR}! Isso é um tanto {COLOR=PURPLE}improper{ENDCOLOR}, você não acha?</speech>
            <speech>Um {COLOR=CYAN}verdadeiro cavalheiro{ENDCOLOR} trata os assuntos na ordem correta - esvazie o prédio primeiro!</speech>
            <speech>Estarei esperando aqui, talvez desfrutando de um pouco de {COLOR=GOLD}Earl Grey{ENDCOLOR} enquanto você termina seu {COLOR=RED}trabalho preliminar{ENDCOLOR}!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Dr. Terrance" shouldSleep="" speed="1" sprite="5" type="npc" x="22" y="6">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Almofadas de teletransporte, paredes invisíveis, Slowkings falantes...</speech>
        <speech>Sinceramente, Kanto atingiu o auge em termos de estranheza há décadas e continuou a crescer.</speech>
    </movingNpc>
</npcs>