<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Você conseguiu encontrar o Pikachu? Eu estava muito preocupada desde que ele fugiu!</speech>
        </speeches>
        <speeches id="2">
            <speech>Muito obrigado por encontrar meu amigo! Você é um salva-vidas! Não tenho palavras para lhe agradecer. Eu estava com tanto medo de não ver o Pikachu novamente.</speech>
            <speech>Aceite isto como um símbolo de minha gratidão.</speech>  </speeches>
        <speeches id="3">
            <speech>Oh não, por que você recusaria a recompensa? É o mínimo que posso fazer.</speech>  </speeches>
        <speeches id="4">
            <speech>É muito gentil de sua parte! Encontrei esse Starpiece na praia e esses Heat Shards no quarto do meu pai.</speech>
            <speech>Não são nada de especial, mas...</speech>
            <speech>De qualquer forma, agora que o Pikachu está de volta, posso travar algumas batalhas com ele! Ele adora testar suas habilidades contra novos treinadores.</speech>
            <speech>Vou pegar meus outros Pokémon no Centro Pokémon e voltarei para cá em breve.</speech>
            <speech>Você pode voltar aqui e me desafiar sempre que quiser!</speech>
        </speeches>
        <speeches id="5">
            <speech>De qualquer forma, agora que o Pikachu está de volta, posso travar algumas batalhas com ele! Ele adora testar suas habilidades contra novos treinadores.</speech>
            <speech>Vou pegar meus outros Pokémon no Centro Pokémon e voltarei para cá em breve.</speech>
            <speech>Você pode voltar aqui e me desafiar sempre que quiser!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Bem-vindo de volta, $PLAYER_NAME!</speech>
            <speech>Você está pronto para um desafio real? Eu adoraria ter uma batalha Pokémon difícil com você.</speech>
            <speech>Vamos começar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, isso foi impressionante! Aqui está uma recompensa por suas incríveis habilidades: 30 Heat Shards (fragmentos de calor).</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso de uma pequena pausa para recarregar as baterias. Volte em $DURATION e estarei pronto para uma batalha ainda mais difícil!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu avisei que isso não seria um passeio no parque!</speech>
        </speeches>
        <speeches id="5">
            <speech>Gosto de um bom desafio, portanto, só lutarei com você se tiver um Pikachu autocapturado de nível mínimo 80 em sua forma de verão em seu grupo.</speech>
            <speech>É uma batalha de um contra três, portanto, você só pode levar um Pokémon.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Você conseguiu encontrar o Pikachu? Estou muito preocupado desde que ele foi levado.</speech>
        </speeches>
        <speeches id="2">
            <speech>Muito obrigado por resgatar o Pikachu. Sua coragem é louvável.</speech>
            <speech>Não tenho palavras para expressar o quanto estou aliviado e agradecido.</speech>
            <speech>Como sinal de minha gratidão, aceite esta Pedra do Trovão de Verão e estas Sombras do Esquadrão Squirtle.</speech>
            <speech>Esses itens têm um significado especial para nós.</speech>
        </speeches>
        <speeches id="3">
            <speech>Por favor, não recuse a recompensa. É o mínimo que posso fazer por sua ajuda.</speech>
        </speeches>
        <speeches id="4">
            <speech>Fico feliz que você tenha entendido. Esses itens são muito importantes para nós.</speech>
            <speech>Além disso, tenho boas notícias.</speech>
            <speech>Sylvaris aprendeu sua lição e agora promete proteger as selvas.</speech>
            <speech>Ele ficou impressionado com sua batalha e está ansioso para enfrentar novos desafios.</speech>
            <speech>Sinta-se à vontade para desafiar Sylvaris nas florestas sempre que quiser.</speech>
        </speeches>
        <speeches id="5">
            <speech>Você teve tempo de desafiar Sylvaris novamente?</speech>
        </speeches>
    </conversation>


</npcs>