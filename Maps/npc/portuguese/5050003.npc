<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Bem, bem, vejam quem está aqui. $PLAYER_NAME, não é? Vamos dar uma olhada no seu Pokémon.</speech>
            <speech>... Hmm... Estou vendo... Esse Pokémon parece ser bastante feliz...</speech>
            <speech>Hm! Confiar seu parceiro a você não foi um erro, ao que parece!</speech>
            <speech>Quando vi vocês dois prestes a entrar na grama alta sem Pokémon, fiquei chocado.</speech>
            <speech>Fiquei surpreso com essas crianças imprudentes. Mas agora, você me surpreendeu de uma maneira totalmente diferente.</speech>
            <speech>Já há um vínculo crescendo entre você e esse Pokémon. Sinto-me privilegiado por ter conhecido você.</speech>
            <speech>Tenho certeza de que seu parceiro sente o mesmo por você.</speech>
            <speech>É por isso que eu lhe peço que valorize esse seu Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>Er-hem!</speech>
            <speech>Vamos passar para o tópico principal.</speech>
            <speech>Há algo que quero que você faça por mim.</speech>
            <speech>Primeiro, permita que eu me apresente adequadamente.</speech>
            <speech>Meu nome, como você sabe, é Rowan. Eu estudo Pokémon.</speech>
            <speech>Antes de mais nada, quero saber exatamente quais tipos de Pokémon vivem na região de Sinnoh.</speech>
            <speech>Para isso, é necessário coletar dados usando o Pokédex.</speech>
            <speech>Isso é o que eu quero pedir a você. Quero confiar a você este Pokédex.</speech>
            <speech>Você vai usá-lo para registrar dados sobre todos os Pokémon em Sinnoh para mim?</speech>
            <speech>Hm! Boa resposta!</speech>
            <speech>Essa Pokedex é um dispositivo de alta tecnologia. Ele registrará automaticamente os dados de todos os tipos de Pokémon que você encontrar.</speech>
            <speech>$PLAYER_NAME, peço que você vá a todos os lugares e conheça todos os tipos de Pokémon nesta região!"</speech>
        </speeches>
        <speeches id="3">
            <speech>Quando você subiu a Route 201 com seu Pokémon, o que sentiu?</speech>
            <speech>Eu vivi por 60 longos anos. Mesmo agora, fico emocionado quando estou com um Pokémon.</speech>
            <speech>Agora, você deve saber que há inúmeros Pokémon neste mundo.</speech>
            <speech>Isso significa que há muitas emoções esperando por você lá fora!</speech>
            <speech>Agora vá! $PLAYER_NAME, sua grande aventura começa agora mesmo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Vá em frente! $PLAYER_NAME, sua grande aventura o aguarda!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>Fico muito feliz que você seja gentil com o Pokémon!</speech>
            <speech>Se você não fosse, eu teria que...</speech>
            <speech>Oh, não consigo dizer isso...</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu também tenho um!</speech>
        </speeches>
        <speeches id="3">
            <!--turtwig-->
            <speech>O Pokémon que encontrei pela primeira vez foi um Turtwig!</speech>
            <speech>Se você tivesse escolhido um Turtwig na Rota 201, nós teríamos o mesmo Pokémon agora!</speech>
            <speech>Não que isso importe, mas... De qualquer forma, eu sou Dawn.</speech>
            <speech>Eu também ajudo o professor a adicionar páginas ao Pokédex.</speech>
            <speech>Então, de certa forma, sou igual a você. Apenas tive um pequeno avanço em relação a você, só isso.</speech>
            <speech>Terei prazer em lhe ensinar coisas. Prazer em conhecê-lo, $PLAYER_NAME</speech>
        </speeches>
        <speeches id="4">
            <!--chimchar-->
            <speech>O Pokémon que encontrei pela primeira vez foi um Chimchar!</speech>
            <speech>Se você tivesse escolhido um Chimchar na Rota 201, nós teríamos o mesmo Pokémon agora!</speech>
            <speech>Não que isso importe, mas... De qualquer forma, eu sou Dawn.</speech>
            <speech>Eu também ajudo o professor a adicionar páginas ao Pokédex.</speech>
            <speech>Então, de certa forma, sou igual a você. Apenas tive um pequeno avanço em relação a você, só isso.</speech>
            <speech>Terei prazer em lhe ensinar coisas. Prazer em conhecê-lo, $PLAYER_NAME</speech>
        </speeches>
        <speeches id="5">
            <!--piplup-->
            <speech>O Pokémon que encontrei pela primeira vez foi um Piplup!</speech>
            <speech>Se você tivesse escolhido um Piplup na Rota 201, nós teríamos o mesmo Pokémon agora!</speech>
            <speech>Não que isso importe, mas... De qualquer forma, eu sou Dawn.</speech>
            <speech>Também ajudo o professor a adicionar páginas ao Pokédex.</speech>
            <speech>Então, de certa forma, sou igual a você. Apenas tive um pequeno avanço em relação a você, só isso.</speech>
            <speech>Terei prazer em lhe ensinar coisas. Prazer em conhecê-lo, $PLAYER_NAME</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Está vendo esta máquina aqui? Ela pode ser usada para extrair poções IV de Pokémons.</speech>
            <speech>Mas há um porém: o Pokémon precisa ser ultra raro.</speech>
            <speech>Entre em contato comigo se quiser Poções IV e estiver disposto a trocar suas Ultra Raras.</speech>
        </speeches>
        <speeches id="2">
            <speech>Está vendo esta máquina aqui? Ela pode ser usada para extrair poções IV de Pokémons.</speech>
            <speech>Mas há um porém: o Pokémon precisa ser ultra raro.</speech>
            <speech>Quer que eu faça IV Potions para você em troca de Pokémon Ultra Raros?</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou vendo... Você gosta de colecionar Ultra Rares.</speech>
        </speeches>
        <speeches id="4">
            <speech>**A máquina está fazendo ruídos assustadores</speech>
            <speech>Aqui está. Aproveite a poção intravenosa.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Está vendo esta máquina aqui? Ela pode ser usada para extrair poções IV de Pokémons.</speech>
            <speech>Mas há um problema: o Pokémon precisa ser brilhante.</speech>
            <speech>Entre em contato comigo se quiser poções IV e estiver disposto a trocar seus Pokémons brilhantes.</speech>
        </speeches>
        <speeches id="2">
            <speech>Está vendo esta máquina aqui? Ela pode ser usada para extrair poções IV de Pokémons.</speech>
            <speech>Mas há um problema: o Pokémon precisa ser brilhante.</speech>
            <speech>Quer que eu faça IV Potions para você em troca de Pokémon brilhantes?</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou vendo... Você gosta de colecionar brilhantes.</speech>
        </speeches>
        <speeches id="4">
            <speech>**A máquina está fazendo ruídos assustadores</speech>
            <speech>Aqui está. Aproveite a poção intravenosa.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Está vendo esta máquina aqui? Ela pode ser usada para extrair poções IV de Pokémons.</speech>
            <speech>Mas há um porém: o Pokémon precisa ser lendário.</speech>
            <speech>Entre em contato comigo se quiser poções IV e estiver disposto a trocar sua lendária.</speech>
        </speeches>
        <speeches id="2">
            <speech>Está vendo esta máquina aqui? Ela pode ser usada para extrair poções IV de Pokémons.</speech>
            <speech>Mas há um porém: o Pokémon precisa ser lendário.</speech>
            <speech>Quer que eu faça 3 IV Potions para você em troca de Pokémon lendários?</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou vendo... Você gosta de colecionar Legendaries.</speech>
        </speeches>
        <speeches id="4">
            <speech>**A máquina está fazendo ruídos assustadores</speech>
            <speech>Aqui está. Aproveite as poções intravenosas.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Saudações, viajante! Sou especialista na ciência de Máquinas Técnicas e Registros Técnicos.</speech>
            <speech>Se você tiver TMs ou TRs de gerações anteriores, posso atualizá-los para que sejam compatíveis com a tecnologia da última geração.</speech>
        </speeches>
        <speeches id="2">
            <speech>Saudações, viajante! Sou especialista na ciência de Máquinas Técnicas e Registros Técnicos.</speech>
            <speech>Se você tiver TMs ou TRs de gerações anteriores, posso atualizá-los para que sejam compatíveis com a tecnologia da última geração.</speech>
            <speech>Ah, vejo que você trouxe alguns TMs e TRs para atualização.</speech>
            <speech>Excelente escolha! A atualização permitirá que seus Pokémon aprendam movimentos que antes não podiam aprender com as versões desatualizadas.</speech>
            <speech>Você está pronto para prosseguir? Uma vez iniciado o processo de upgrade, não é possível revertê-lo.</speech>
        </speeches>
        <speeches id="3">
            <speech>É compreensível, pois se trata de uma decisão importante. Reserve um tempo para pensar sobre isso.</speech>
            <speech>Sempre que decidir, estarei aqui, pronto para ajudar com suas necessidades tecnológicas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vamos começar a atualização, então. Agradecemos sua confiança na capacidade de nosso laboratório.</speech>
            <speech>...E aqui estamos. Seus TMs e TRs agora estão totalmente atualizados e são compatíveis com os sistemas de última geração.</speech>
            <speech>Seus Pokémon agora podem aprender novos movimentos para aumentar sua força nas batalhas.</speech>
            <speech>Nosso laboratório está sempre aqui para dar suporte a treinadores como você, ampliando os limites do treinamento e da compatibilidade de Pokémon.</speech>
            <speech>Caso encontre mais TMs ou TRs que precisem de um upgrade, você sabe onde me encontrar. Boa viagem!</speech>
        </speeches>
        <speeches id="5">
            <speech>Obrigado por confiar seus TMs e TRs ao nosso laboratório. Suas atualizações estão completas. Use-os bem em sua jornada futura.</speech>
        </speeches>
    </conversation>

    <conversation id="$id">
        <speeches id="1">
            <speech>Isso não é um problema. Volte mais tarde se mudar de ideia.</speech>
        </speeches>
        <speeches id="2">
            <speech>Olá, jovem instrutor.</speech>
            <speech>Vejo que você chegou recentemente a Sinnoh.</speech>
            <speech>As restrições regionais aqui podem ser um grande desafio, especialmente o fato de não poder usar Pokémon de outras regiões.</speech>
            <speech>Mas não se preocupe, eu tenho uma solução para você. Posso converter qualquer número de seus Pokémon para que sejam reconhecidos como nativos de Sinnoh.</speech>
            <speech>Isso significa que você pode usá-los livremente sem se preocupar com proibições regionais.</speech>
            <speech>Você pode atualizar qualquer Pokémon que esteja abaixo do limite máximo de nível, que é calculado pela fórmula (Total Badges * 10) + 5.</speech>
            <speech>No seu caso, você pode atualizar o Pokémon até o nível $LEVEL.</speech>
            <speech>Deseja prosseguir com essa atualização?</speech>
        </speeches>
        <speeches id="3">
            <speech>Olá, jovem instrutor.</speech>
            <speech>Bem-vindo a Sinnoh!</speech>
            <speech>Entendo que as restrições regionais podem ser frustrantes, especialmente a impossibilidade de usar Pokémon de outras regiões.</speech>
            <speech>Felizmente, eu posso ajudar. Posso converter seu Pokémon para que seja reconhecido como nativo de Hoenn.</speech>
            <speech>Isso permitirá que você os use livremente, contornando as proibições regionais.</speech>
            <speech>Você pode atualizar qualquer Pokémon abaixo do limite máximo de nível, calculado como (Total Badges * 10) + 5.</speech>
            <speech>Na sua situação, você pode atualizar Pokémon até o nível $LEVEL.</speech>
            <speech>Infelizmente, você não tem nenhum Pokémon elegível em seu grupo.</speech>
            <speech>Sinto muito, mas parece que não posso ajudá-lo mais neste momento.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aqui está. Seu companheiro agora é reconhecido em Sinnoh como um local.</speech>
        </speeches>
    </conversation>
    <npc direction="RIGHT" id="1" name="Dawn's Father" sprite="8" x="4" y="14">
        <speech>Eu sou o pai da Dawn.</speech>
        <speech>Terei o maior prazer em ajudá-lo em sua busca pelo professor.</speech>
        <speech>Não se esqueça de que alguns Pokémon evoluem por meio de pedras especiais.</speech>
        <speech>Eles podem ser encontrados em toda a região.</speech>
        <speech>Tenho certeza de que podemos contar com você!</speech>
    </npc>
    <npc direction="LEFT" id="2" name="Lab Assistant Roseanne" sprite="7" x="15" y="13">
        <speech>O professor Rowan inventou uma nova Pokedex enquanto trabalhava com um professor da região de Kanto.</speech>
        <speech>Oh, meu nome é Roseanne.</speech>
        <speech>É uma honra ser assistente de nosso professor!</speech>
        <speech>Ele garante que sempre tenhamos algo para fazer.</speech>
        <speech>Mas é ótimo saber que o trabalho que fazemos faz tanta diferença!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="3" name="Rowan's Wife" sprite="55" x="23" y="7">
        <speech>Gostaria que meu marido não trabalhasse tanto!</speech>
        <speech>Mas ele realmente adora sua pesquisa...</speech>
    </npc>
</npcs>