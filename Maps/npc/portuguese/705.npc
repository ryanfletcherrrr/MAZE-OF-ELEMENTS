<npcs>
    <npc direction="DOWN" id="1000" name="Black Belt Master Miles" randomRotation="true" sprite="34" x="19" y="72">
        <speech>Eu sou Miles, o faixa-preta mais forte de Jvaloh.</speech>
        <speech>Atualmente, estou desafiando a Elite 4, já que meu treinamento chegou ao auge.</speech>
        <speech>Eles dizem: "aceite os desafios para que você possa sentir a alegria da vitória".</speech>
        <speech>Eu, com certeza, aceitei o desafio de realizar o que nenhum outro faixa-preta jamais realizou.</speech>
        <speech>Eu, Miles, me certificarei de que meu legado permanecerá como o mais forte faixa-preta de todos os tempos!</speech>
    </npc>
    <npc direction="UP" id="1001" name="Police Executive Jo" sprite="126" x="23" y="76">
        <speech>O policial executivo Jo está de plantão, senhor!</speech>
        <speech>É muito melhor ousar coisas poderosas, conquistar triunfos gloriosos, ainda que marcados pelo fracasso...
        </speech>
        <speech>...do que se classificar entre aqueles pobres espíritos que não desfrutam nem sofrem muito, porque vivem em um crepúsculo cinzento que não conhece vitória nem derrota.
        </speech>
        <speech>Eu e Arcanine, Arcanine e eu!</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Advanced Pokemon Collector Clinton" randomRotation="true" sprite="33" x="34" y="76">
        <speech>Pelo que vi, estou muito perto de atingir a meta dos meus sonhos, que era coletar todas as espécies de Pokémon em todas as regiões.</speech>
        <speech>Você acha que foi fácil? Levei uma vida inteira. Visitei toneladas de regiões diferentes, alguns lugares que você nem imagina.</speech>
        <speech>Mas aqui estou eu. É melhor conquistar a si mesmo do que vencer mil batalhas.</speech>
        <speech>Então, a vitória é sua. Ela não pode ser tirada de você, nem por anjos nem por demônios, nem pelo céu nem pelo inferno.</speech>
        <speech>Mesmo que os treinadores da Elite 4 sejam considerados os mais fortes da região, eu os superarei, não importa o que aconteça.</speech>
    </npc>
    <npc direction="UP" id="1003" name="Hiker Veteran Deandre" randomRotation="true" sprite="10" x="38" y="36">
        <speech>Cheguei a um estado que nenhum outro caminhante alcançou. Você pensaria que eu, Dreandre, jamais desistiria?</speech>
        <speech>Você também não deveria. Eu sei perfeitamente quem você é, $PLAYER_NAME, você está se tornando bastante famoso nesta região.</speech>
        <speech>Você sabe... há um poder incrível em conhecer sua alma interior e aprender a usá-la e não brigar com o mundo.</speech>
        <speech>Faça o que o deixa feliz, e o sucesso acabará chegando.</speech>
        <speech>Esse desafio da Elite 4 me deixa muito feliz, sabe. Usarei minhas capacidades e personalidade, e o resto fluirá lindamente.</speech>
    </npc>
    <npc direction="UP" id="1004" name="Master Dragon Tamer Willie" sprite="173" x="62" y="76">
        <speech>Você parece bastante forte, bem-vindo à Elite 4.</speech>
        <speech>Sou um domador de dragões. O mistério do poder do dragão ilumina minha alma, bem no fundo, desde que eu era criança.
        </speech>
        <speech>A primeira vez que vi um Salamence, senti as lágrimas saírem tão rápido de mim... a pressão, o mistério, o poder.
        </speech>
        <speech>Naquela época, as lágrimas eram sagradas. Naquela época, elas eram a marca da fraqueza. Agora, elas são a marca do poder.
        </speech>
        <speech>Eles falam com mais fluência do que dez mil línguas. São os mensageiros de uma dor avassaladora, de uma profunda contrição e de um amor indescritível.
        </speech>
        <speech>O melhor conselho que posso lhe dar, entre esses fortes, não, na verdade, entre os mais fortes treinadores de Jvaloh é:</speech>
        <speech>Nunca perca a esperança em seu Pokémon, ou ele acabará perdendo a esperança em você também.
        </speech>
    </npc>
</npcs>