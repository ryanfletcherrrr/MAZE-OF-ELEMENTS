<npcs>
    <npc direction="DOWN" hidden="false" id="1000" name="Guard" sprite="126" triggerX="15" triggerY="7" type="speech" x="15" y="5">
        <speech>Tenha cuidado se você decidir atravessar o deserto. É arriscado lá fora!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Ei, se não é $PLAYER_NAME? Como você tem passado? Além disso, você já conseguiu vencer o Gym 4?</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Oh, olá! Eu tenho sido ótimo, sim!</speech>
            <speech>Eu venci o Gym 4, sim. Mas há algo mais importante com que estou me preocupando no momento</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Não sei se você notou, mas há um monte de pessoas obscuras circulando por Jvaloh.</speech>
            <speech>Eu já os vi mais de uma vez. Eles se autodenominam "Team Chaos", mas não é esse o nome que me interessa.</speech>
            <speech>Pelo que vi, esses caras não estão tramando nada de bom. Embora eu não saiba o que eles estão tramando, tenho certeza de que se trata de algo grande...</speech>
            <speech>Pelo menos, foi isso que entendi em meu encontro com o chefe deles... *$PLAYER_NAME narra toda a história*</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>"Equipe do Caos", hein? Esse é um nome patético.</speech>
            <speech>Mas, pensando bem, isso é muito parecido com o que aqueles perdedores que derrotamos antes chamavam a si mesmos, não é, Ayaan?</speech>
            <speech>Sim, acho que foi isso. Idiotas irritantes, eles estão apenas desperdiçando o tempo de todos.</speech>
            <speech>Mas tenho que admitir que sua descrição da caverna escondida e da usina de energia me interessa. Talvez devêssemos dar uma olhada também, não?</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Bem, se esses caras estão por aí causando problemas para todos, acho que é justo fazer uma visita à caverna abandonada.</speech>
            <speech>Na verdade, vou acompanhá-lo. Talvez encontremos algo que valha a pena lá.</speech>
            <speech>Você deve se cuidar, $PLAYER_NAME. Além disso, nós o encontraremos na Lansoil Town, se você descobrir mais alguma coisa sobre esses caras.</speech>
            <speech>Enfim, paz!</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Você ouviu o que ele disse - hora de ir embora!</speech>
            <speech>Nós o avisaremos se encontrarmos alguma coisa naquela caverna antiga, então você pode ir em frente. Já temos o 5º emblema, então podemos deixar você se atualizar.</speech>
            <speech>Até mais tarde!</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
</npcs>