<npcs>
    <conversation id="1">
        <!-- First Battle (Uses Original Game Dialogues) -->
        <speeches id="1">
            <speech>Ei, garoto! O que pensa que está fazendo aqui? Você não vai durar muito em combate, não com seu poder insignificante!</speech>
            <speech>O [AMARELO]Pokémon Elétrico[] me salvou durante a guerra, garoto!</speech>
            <speech>Eles paralisaram meus inimigos em [CYAN]paralisia[]! O mesmo acontecerá com você!</speech>
            <speech>Então você quer me desafiar? Tudo bem, mas quando começamos, não há como voltar atrás!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau! Você tem muita coragem, garoto! Você mereceu essa vitória!</speech>
            <speech>Aqui, pegue isso - você lutou como um verdadeiro soldado hoje!</speech>
            <speech>E aqui, pegue o [AMARELO]TM068[]-[CYAN]Thunder Punch[]. Ele nunca falha, assim como um golpe bem colocado!</speech>
            <speech>Agora não fique convencido! Uma vitória não significa que você está pronto para a guerra!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah! Isso acabou antes mesmo de começar!</speech>
            <speech>Volte quando estiver pronto para receber ordens como um recruta de verdade!</speech>
        </speeches>
        <speeches id="4">
            <speech>Está pensando duas vezes? Jogada inteligente.</speech>
            <speech>Este campo de batalha não é para os fracos. Volte quando você for forte o suficiente para lidar com isso!</speech>
        </speeches>
        <!-- Repeated Battle (Tougher, Military-Themed) -->
        <speeches id="5">
            <speech>De volta para mais, soldado? Você tem coragem - tenho que admitir.</speech>
            <speech>[AMARELO]Mas a coragem não é suficiente![] Você precisa de tática, velocidade e força para vencer neste campo de batalha.</speech>
            <speech>Se não conseguir acompanhar o ritmo, eu lhe darei um tapa tão forte que você verá estrelas!</speech>
            <speech>Agora, mostre-me se você realmente melhorou ou se é apenas mais um recruta pronto para ser mandado para casa chorando!</speech>
        </speeches>
        <speeches id="6">
            <speech>Bem, bem... Parece que você realmente aprendeu alguma coisa!</speech>
            <speech>[GOLD]$TOTAL_VICTORY[] vence contra mim... e [CYAN]$CONSECUTIVE[] em uma sequência?! Nada mal, garoto!</speech>
            <speech>Você luta com velocidade e precisão - eu respeito isso.</speech>
        </speeches>
        <speeches id="7">
            <speech>Ah! Eu sabia que você não conseguiria lidar com meu poder de fogo!</speech>
            <speech>[AMARELO]Você hesitou, e isso lhe custou caro![] Soldados de verdade não pensam - eles agem!</speech>
            <speech>Da próxima vez, traga mais do que apenas confiança - traga estratégia!</speech>
        </speeches>
        <speeches id="8">
            <speech>Não está lutando hoje? Ah. Eu sabia que você não estava pronto.</speech>
            <speech>A guerra não espera por ninguém, e eu também não!</speech>
        </speeches>
        <speeches id="9">
            <speech>Calma aí, espertinho! Você acabou de lutar comigo recentemente.</speech>
            <speech>Até mesmo uma [AMARELO]máquina de guerra[] precisa de tempo para recarregar. Volte em [CYAN]$DURATION[].</speech>
            <speech>Quando você voltar, estarei esperando com uma nova estratégia de batalha [RED].</speech>
        </speeches>
        <!-- Special Condition: Battle Requirement Not Met -->
        <speeches id="10">
            <speech>Preste atenção, verme! Isso não é um playground, é um campo de batalha!</speech>
            <speech>Você precisa de [AMARELO]pelo menos 3 Pokémon do tipo elétrico[] para me desafiar novamente.</speech>
            <speech>Volte quando sua equipe estiver pronta para a GUERRA!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Um verdadeiro cavalheiro sabe o valor da precisão... Vamos testar a sua?</speech>
        </speeches>
        <speeches id="2">
            <speech>Impressionante. Uma excelente demonstração de habilidade.</speech>
        </speeches>
        <speeches id="3">
            <speech>Impressionante. Uma excelente demonstração de habilidade.</speech>
        </speeches>
        <speeches id="4">
            <speech>Graça e estratégia são as chaves para a vitória. Talvez você aprenda isso com o tempo.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Eu aumento o volume, e meus Pokémon aumentam a voltagem!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que eu não me dei bem... vou precisar ajustar minha equipe.</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que eu não me dei bem... vou precisar ajustar minha equipe.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você sentiu isso? Esse é o poder do ritmo do rock e da eletricidade bruta!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>As batalhas são como as tempestades no mar: você precisa enfrentar as ondas ou será arrastado!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que fui jogado ao mar desta vez...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que fui jogado ao mar desta vez...</speech>
        </speeches>
        <speeches id="4">
            <speech>Mãos firmes e instintos aguçados: é assim que você navega rumo à vitória!</speech>
        </speeches>
    </conversation>
    <conversation id="25">
        <speeches id="1">
            <speech>O poder não é nada sem controle. Vamos ver se você tem os dois.</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que entrei em curto-circuito... Você tem a melhor carga hoje.</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que entrei em curto-circuito... Você tem a melhor carga hoje.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você se sobrecarregou muito rápido. Da próxima vez, aterre-se antes de entrar em ação!</speech>
        </speeches>
    </conversation>
</npcs>