<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Oh, ei, $PLAYER_NAME!</speech>
            <speech>Eu disse ao seu pai que você decidiu embarcar em sua jornada em Hoenn.</speech>
            <speech>Ele está muito animado para vê-lo!</speech>
            <speech>Não se esqueça de encontrar seu pai na academia antes de sair da cidade.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Devo encontrar meu pai na academia antes de sair da cidade.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Ah! $PLAYER_NAME!</speech>
            <speech>Não o vejo há algum tempo. Que coincidência!</speech>
            <speech>Acabei de voltar à casa dos meus pais para pegar algo que havia esquecido.</speech>
            <speech>Sério? Você realmente acha isso? Hehe... Obrigado! É muito gentil de sua parte dizer isso!</speech>
            <speech>Eu realmente quero me tornar tão forte quanto você!</speech>
            <speech>Acho que é melhor eu começar, então. Vou embora por enquanto. Até a próxima!</speech>
            <speech>Vamos lá, $PLAYER_NAME! Vamos juntos!</speech>
            <speech>O Sr. Norman nos disse para continuarmos indo além da Rota 118, não foi?</speech>
            <speech>A Rota 118 é a que fica a leste de Mauville City, não é?</speech>
            <speech>Ok, vejo você lá!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Devo ajudar Wally na Rota 102, conforme solicitado por meu pai, antes de sair da cidade.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Agora que ajudei Wally, devo informá-lo antes de deixar a cidade.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Você ainda não provou sua força, Treinador.</speech>
            <speech>Você não está pronto para desafiar o Normal Gym.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Saudações, $PLAYER_NAME. Então, você aspira desafiar o quinto Ginásio em Hoenn?</speech>
            <speech>Mas primeiro, você deve demonstrar seu crescimento como Treinador, além de meras batalhas.</speech>
            <speech>A Vanguarda Vigoroth protege o Ginásio. Eles simbolizam a jornada da preguiça ao vigor.</speech>
            <speech>Para passar, você deve evoluir um Slakoth para Vigoroth ou Slaking no nível 35 ou superior.</speech>
            <speech>Isto representa seu compromisso de superar a complacência e abraçar a força.</speech>
            <speech>É um teste de paciência e determinação, virtudes fundamentais de um verdadeiro Treinador.</speech>
            <speech>Apenas aqueles que podem transformar inatividade em ação são dignos de enfrentar o desafio do Ginásio.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Saudações, $PLAYER_NAME. Então, você aspira desafiar o quinto Ginásio em Hoenn?</speech>
            <speech>Mas primeiro, você deve demonstrar seu crescimento como Treinador, além de meras batalhas.</speech>
            <speech>A Vanguarda Vigoroth protege o Ginásio. Eles simbolizam a jornada da preguiça ao vigor.</speech>
            <speech>Para passar, você deve evoluir um Slakoth para Vigoroth ou Slaking no nível 35 ou superior.</speech>
            <speech>Isto representa seu compromisso de superar a complacência e abraçar a força.</speech>
            <speech>É um teste de paciência e determinação, virtudes fundamentais de um verdadeiro Treinador.</speech>
            <speech>Apenas aqueles que podem transformar inatividade em ação são dignos de enfrentar o desafio do Ginásio.</speech>
        </speeches>
        <speeches id="2">
            <speech>Posso inspecionar seu Vigoroth ou Slaking, $PLAYER_NAME?</speech>
        </speeches>
        <speeches id="3">
            <speech>Sem completar esta tarefa, o caminho para o Ginásio permanece fechado. Perseverança é fundamental, $PLAYER_NAME.</speech>
        </speeches>
        <speeches id="4">
            <speech>Impressionante, $PLAYER_NAME! Você mostrou verdadeiro crescimento, evoluindo da inação para a ação.</speech>
            <speech>A Vanguarda Vigoroth reconhece sua força. O caminho para o Ginásio agora está aberto para você.</speech>
            <speech>Que suas batalhas lá dentro reflitam o vigor que você demonstrou hoje.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Luvdisc" shouldSleep="" speed="1" sprite="370" type="pokemon" x="3" y="21">
        <path>DOWNx10,RIGHTx3,UPx10,LEFTx3</path>
        <onCollisionSpeech gap="4">luluv!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
        <speech>O Pokémon olha para você, pisca para você e continua seu dia</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Damon" randomRotation="true" sprite="5" x="18" y="13">
        <speech>Ouvi dizer que o líder da academia tem um filho em algum lugar.</speech>
        <speech>Fico imaginando se um dia ele/ela desafiará essa academia e se tornará campeão mais tarde...</speech>
        <speech>É muito emocionante! Mal posso esperar para ver o que o futuro nos reserva e como tudo vai se desenrolar.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="3" name="Carol" randomRotation="true" sprite="55" x="25" y="33">
        <speech>Apenas ..... Dê uma olhada nas flores, Lizzie.</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="4" name="Lizzie" randomRotation="true" sprite="82" x="25" y="31">
        <speech>Carol, por que você continua dizendo isso? É algo que você viu na TV novamente?</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Slakoth" shouldSleep="" speed="1" sprite="287" type="pokemon" x="21" y="16">
        <path>RIGHTx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Koth?</onCollisionSpeech>
        <speech>O Slakoth está rolando, tentando encontrar a posição certa para tirar um cochilo.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Surskit" speed="1" sprite="283" type="pokemon" x="21" y="4">
        <path>RIGHTx8,DOWNx6,LEFTx8,UPx6</path>
        <onCollisionSpeech gap="4">Surskit!</onCollisionSpeech>
        <speech>Uau! É como se a Surskit estivesse andando sobre a água.</speech>
    </movingNpc>
</npcs>