<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Prepare-se! Sou Victor, da família Winstrate. Vamos ver o que você tem!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impressionante! Você me superou, mas vamos ver como você se sai contra o resto dos Winstrates!</speech>
        </speeches>
        <speeches id="3">
            <speech>Agora não, estou treinando. Volte em $DURAÇÃO para outro desafio!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah! Vitória para a família Winstrate! Esse é o resultado de nosso treinamento rigoroso!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Eu sou a Victoria e não vou pegar leve com você só porque você derrotou o Victor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Muito bem! Você tem muito espírito. Mas será que conseguirá manter o ritmo contra o resto de nós?</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso me reagrupar. Retorne em $DURATION para mais uma chance de vitória!</speech>
        </speeches>
        <speeches id="4">
            <speech>Uma vitória para mim! Essa é a força da família Winstrate. Melhor sorte na próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Olá, eu sou a Vivi! Você acha que consegue me acompanhar? Vamos descobrir!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você é realmente bom! Você me derrotou, mas ainda há mais um desafio pela frente!</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou um pouco cansado agora. Volte em $DURATION para mais uma batalha emocionante!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim, eu ganhei! Você foi ótimo, mas não o suficiente para um Winstrate!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Eu sou Vicky, a matriarca da família Winstrate. Vamos ver se você consegue lidar com minha experiência!</speech>
        </speeches>
        <speeches id="2">
            <speech>Bem, eu estarei! Você tem um talento e tanto. Mas lembre-se, a experiência sempre conta em uma batalha!</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso de um pouco de descanso. Volte em $DURATION, e eu lhe mostrarei o poder da experiência!</speech>
        </speeches>
        <speeches id="4">
            <speech>A vitória é minha! A idade e a sabedoria triunfam mais uma vez. Você aprenderá muito com isso!</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Olá! Sou Vito, da família Winstrate.</speech>
            <speech>Ouvi falar de seu triunfo sobre a Elite Four. Eu consegui o mesmo feito.</speech>
            <speech>Vamos ver como nos saímos em uma batalha de campeões!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impressionante! Suas habilidades são tão boas quanto dizem.</speech>
            <speech>É uma honra lutar com outro conquistador da Elite Four.</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou sempre buscando melhorar.</speech>
            <speech>Vamos fazer uma revanche em $DURATION. Estou ansioso para ver como ambos cresceremos!</speech>
        </speeches>
        <speeches id="4">
            <speech>Essa foi uma batalha intensa! Como esperado de um colega vencedor da Elite Four.</speech>
            <speech>Vamos fazer isso de novo algum dia!</speech>
        </speeches>
    </conversation>
</npcs>