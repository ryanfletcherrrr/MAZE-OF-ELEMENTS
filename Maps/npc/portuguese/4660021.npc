<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Você parece um pouco fraco. Que tal se eu o colocasse no espremedor?</speech>
        </speeches>
        <speeches id="2">
            <speech>Você conseguiu! Da próxima vez, você vai me fazer passar pelo espremedor, hein?</speech>
        </speeches>
        <speeches id="3">
            <speech>Você conseguiu! Da próxima vez, você vai me fazer passar pelo espremedor, hein?</speech>
        </speeches>
        <speeches id="4">
            <speech>Ahahaha! Ainda não! Eu ainda não terminei!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Ei, garoto! Você é novo? Sou o domador de dragões de quem todo mundo está sempre falando.</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que comecei a amolecer. Ei, não posso esperar ficar no topo do meu jogo para sempre.</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que comecei a amolecer. Ei, não posso esperar ficar no topo do meu jogo para sempre.</speech>
        </speeches>
        <speeches id="4">
            <speech>Criança! Lembre-se de mim! Eu sou o Trabalhador de quem todo mundo fala!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Vamos mergulhar na batalha! Meus Pokémon dragões são imbatíveis!</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está se excedendo! Talvez você deva ficar na piscina infantil.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Você vai afundar como uma pedra quando enfrentar meu Pokémon de água!</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu sou aquele que veio à tona... Você flutuou para a vitória.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu sou aquele que veio à tona... Você flutuou para a vitória.</speech>
        </speeches>
        <speeches id="4">
            <speech>Agora você está no fundo do oceano!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Vamos transformar essa batalha em um redemoinho! Meus Pokémon vão sugá-lo para a derrota!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sou eu quem está esgotado... Você escapou do meu redemoinho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sou eu quem está esgotado... Você escapou do meu redemoinho.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você foi sugado pelo meu redemoinho! Melhor sorte da próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Você vai estar todo sujo quando essa batalha terminar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sou eu quem está com sede... Você acabou com minhas chances de vencer.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sou eu quem está com sede... Você acabou com minhas chances de vencer.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está encharcado e afundando rapidamente!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Você vai estar todo sujo quando essa batalha terminar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sou eu quem está com sede... Você acabou com minhas chances de vencer.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sou eu quem está com sede... Você acabou com minhas chances de vencer.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está encharcado e afundando rapidamente!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Você vai ficar molhado e selvagem nesta batalha! Meus Pokémon vão encharcá-lo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sou eu quem está seco... Você me encharcou de derrota.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sou eu quem está seco... Você me encharcou de derrota.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está encharcado! É hora de se secar e repensar sua estratégia.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Minha idade média me deu tanta importância quanto as montanhas que escalo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Pelo menos não posso perder quando se trata do IMC!</speech>
        </speeches>
        <speeches id="3">
            <speech>Pelo menos não posso perder quando se trata do IMC!</speech>
        </speeches>
        <speeches id="4">
            <speech>Bwahaha! Você também vai ganhar se aumentar um pouco a ingestão de calorias!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Vamos pegar ondas! Meus Pokémon estão prontos para surfar em cima de você!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, não</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, não</speech>
        </speeches>
        <speeches id="4">
            <speech>Você é apenas uma ondulação em meu oceano de vitória!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Yo!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Vamos transformar essa batalha em um redemoinho! Meus Pokémon vão sugá-lo para a derrota!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sou eu quem está esgotado... Você escapou do meu redemoinho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sou eu quem está esgotado... Você escapou do meu redemoinho.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você foi sugado pelo meu redemoinho! Melhor sorte da próxima vez.</speech>
        </speeches>
    </conversation>
</npcs>