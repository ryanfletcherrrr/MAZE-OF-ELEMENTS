<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>O oceano é minha segunda casa, espero que você consiga acompanhar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que estou nadando de volta para a prancheta de desenho...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que estou nadando de volta para a prancheta de desenho...</speech>
        </speeches>
        <speeches id="4">
            <speech>Para mim, a navegação foi tranquila! Melhor sorte na próxima maré.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>A água está calma agora... mas eu serei a tempestade que o afundará!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que virei o barco...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que virei o barco...</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Até mesmo mares calmos podem surpreendê-lo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Estou pegando essas ondas desde que comecei a andar! Você acha que consegue manter sua cabeça acima da água?</speech>
        </speeches>
        <speeches id="2">
            <speech>Caramba... acho que perdi o controle.</speech>
        </speeches>
        <speeches id="3">
            <speech>Caramba... acho que perdi o controle.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah! Você afundou mais rápido do que uma pedra!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Aposto que você não consegue nadar melhor do que um cara que praticamente vive na água!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que preciso me dedicar mais às correntes...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que preciso me dedicar mais às correntes...</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! Da próxima vez, traga um snorkel!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Vamos transformar essa batalha em um redemoinho! Meus Pokémon vão sugá-lo para a derrota!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sou eu quem está esgotado... Você escapou do meu redemoinho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sou eu quem está esgotado... Você escapou do meu redemoinho.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você foi sugado pelo meu redemoinho! Melhor sorte da próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Levei lanches... e estratégias de batalha! Vamos lá!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que eu deveria ter me limitado a sanduíches...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que eu deveria ter me limitado a sanduíches...</speech>
        </speeches>
        <speeches id="4">
            <speech>Estratégia e lanches... uma combinação imbatível!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>O oceano é minha segunda casa... espero que você saiba nadar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que fui levado pela correnteza...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que fui levado pela correnteza...</speech>
        </speeches>
        <speeches id="4">
            <speech>Como uma corrente forte, continuo avançando!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Lutar pode bagunçar meu cabelo... mas você vai cair mesmo assim!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Agora preciso arrumar meu cabelo e minha estratégia.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Agora preciso arrumar meu cabelo e minha estratégia.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vitória impecável! Assim como meu visual.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Meus pássaros têm olhos afiados e são rápidos! Você acha que consegue acompanhá-los?</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que meu bando precisa de mais treinamento de voo...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que meu bando precisa de mais treinamento de voo...</speech>
        </speeches>
        <speeches id="4">
            <speech>Supremacia aérea! Nada melhor que o vento em suas costas.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Já enfrentei correntes mais fortes do que qualquer treinador! Você acha que pode superar a maré?</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que fui levado pela correnteza...</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que fui levado pela correnteza...</speech>
        </speeches>
        <speeches id="4">
            <speech>Você se debateu como um Magikarp em águas agitadas!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>As ondas me mantêm calmo... mas meus Pokémon? Eles são ferozes!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que minha calma quebrou...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que minha calma quebrou...</speech>
        </speeches>
        <speeches id="4">
            <speech>Meus Pokémon surgem como uma maré que não pode ser detida!</speech>
        </speeches>
    </conversation>
    <npc direction="UP" hidden="false" id="1" name="Sailor Jimbo" randomRotation="true" sprite="11" x="30" y="18">
        <speech>Estou no mar há tanto tempo que esqueci o cheiro da terra...</speech>
        <speech>Mas tenho certeza de que não é esse Magikarp encharcado.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="3" name="Researcher Dana" randomRotation="false" sprite="7" x="64" y="14">
        <speech>Dizem que as correntes próximas às Ilhas Seafoam são assombradas...</speech>
        <speech>Eu digo que isso é apenas energia de Cloyster com raiva.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Fisherman Pete" randomRotation="false" sprite="16" x="68" y="27">
        <speech>Uma vez fisguei um Sharpedo e ele me encarou.</speech>
        <speech>Desde então, não pesquei mais. Agora fico aqui sentado e refletindo.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="5" name="Lost Tourist Sheila" randomRotation="true" sprite="94" x="84" y="14">
        <speech>Você tem alguma ideia da distância entre Cinnabar e Vermilion de carro alegórico?</speech>
        <speech>Porque eu não sei. Por favor, me ajude.</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="11" y="15">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="30" y="15">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Slowpoke" shouldSleep="" speed="1" sprite="79" type="pokemon" x="40" y="22">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Gyarados" shouldSleep="" speed="1" sprite="130" type="pokemon" x="8" y="31">
        <path>RIGHTx10,LEFTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Sharpedo" shouldSleep="" speed="1" sprite="319" type="pokemon" x="15" y="8">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Tentacruel" shouldSleep="" speed="1" sprite="73" type="pokemon" x="59" y="4">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Staryu" shouldSleep="" speed="1" sprite="120" type="pokemon" x="103" y="11">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Shellder" shouldSleep="" speed="1" sprite="90" type="pokemon" x="74" y="13">
        <path>DOWNx3,UPx4,DOWNx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Horsea" shouldSleep="" speed="1" sprite="116" type="pokemon" x="102" y="20">
        <path>DOWNx3,RIGHTx5,LEFTx5,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Swimmer Riko" shouldSleep="" speed="1" sprite="21" type="npc" x="6" y="20">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Estou nadando desde o Fuchsia!</speech>
        <speech>Com certeza, precisarei fazer o upload disso para minha história.</speech>
    </movingNpc>
</npcs>