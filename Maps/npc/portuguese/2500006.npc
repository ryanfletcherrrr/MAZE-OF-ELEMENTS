<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Por favor, selecione um andar.{ENDCOLOR}</speech>
            <speech>Os botões aguardam sua entrada, prontos para levá-lo aonde você precisa.</speech>
        </speeches>
        <speeches id="2">
            <speech>{O console do elevador se fecha com um clique suave.</speech>
            <speech>Você precisará ativá-lo novamente se quiser usá-lo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{Você também está aqui? Ótimo! Este lugar é um desastre!</speech>
            <speech>A Equipe Rocket invadiu o prédio, prendendo cientistas e roubando tecnologia!</speech>
            <speech>Ouvi dizer que o chefe deles {COLOR=PURPLE}{ENDCOLOR} está escondido no {COLOR=CYAN} último andar{ENDCOLOR}. Se não os detivermos, quem sabe o que acontecerá?</speech>
            <speech>Vou procurar uma maneira de subir. {Você deve fazer o mesmo - vamos derrubar esses caras!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{Eles estão de volta! A Equipe Rocket bloqueou o QG de Silph e está fazendo experimentos com Porygon!</speech>
            <speech>Eles estão usando fragmentos de um antigo protótipo chamado {COLOR=YELLOW}Project T.E.R.A.{ENDCOLOR} para corromper nossos sistemas!</speech>
            <speech>Nossas unidades {COLOR=CYAN}Porygon{ENDCOLOR} estão se tornando hostis, e todo o edifício está comprometido!</speech>
            <speech>Os sistemas de segurança foram completamente invadidos - eles assumiram o controle dos andares 2 a 11!</speech>
            <speech>Por favor, você pode se infiltrar no prédio e deter a Equipe Rocket{ENDCOLOR} antes que algo catastrófico aconteça?</speech>
        </speeches>
        <speeches id="2">
            <speech>Obrigado! Tenha muito cuidado lá dentro!</speech>
            <speech>A Equipe Rocket armou nosso Porygon usando a instável {COLOR=YELLOW}Tera Energy{ENDCOLOR}!</speech>
            <speech>Você enfrentará vários grunhidos em todo o edifício, e o líder deles está em algum lugar nos andares superiores!</speech>
            <speech>O destino da Silph Co. - e possivelmente de toda Kanto - depende de você!</speech>
            <speech>Boa sorte, treinador!</speech>
        </speeches>
        <speeches id="3">
            <speech>Entendo que isso é perigoso, mas estamos ficando sem tempo!</speech>
            <speech>A cada minuto que eles estão lá, mais {COLOR=CYAN}Porygon{ENDCOLOR} estão sendo corrompidos!</speech>
            <speech>Por favor, reconsidere - precisamos de sua ajuda!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ainda estou trabalhando para reparar os danos causados pela invasão da Equipe Rocket.</speech>
            <speech>Os sistemas {COLOR=CYAN}Porygon{ENDCOLOR} estão sendo lentamente restaurados ao seu estado normal.</speech>
            <speech>Meus reparos serão concluídos em {COLOR=YELLOW}$DURATION{ENDCOLOR}, então poderemos avaliar se eles retornaram.</speech>
            <speech>Obrigado por sua paciência enquanto restauro nossos protocolos de segurança.</speech>
        </speeches>
        <speeches id="5">
            <speech>Espere! Você precisa se preparar adequadamente antes de enfrentar a Equipe Rocket!</speech>
            <speech>Eles estão usando {COLOR=RED}tecnologia avançada{ENDCOLOR} e {COLOR=YELLOW}Tera Energy{ENDCOLOR}!</speech>
            <speech>Certifique-se de que você está pronto para esse desafio!</speech>
        </speeches>
        <speeches id="6">
            <speech>O prédio ainda está sob o controle da Equipe Rocket!</speech>
            <speech>Estou detectando sinais hostis dos andares superiores - o líder deles ainda está lá dentro!</speech>
            <speech>Você precisa {COLOR=RED}derrotar o comandante deles{ENDCOLOR} para liberar totalmente a Silph Co.</speech>
        </speeches>
        <speeches id="7">
            <speech>Os sistemas do {COLOR=YELLOW}Project T.E.R.A.{ENDCOLOR} ainda estão ativos em algum lugar do edifício!</speech>
            <speech>A Equipe Rocket deve ter uma {COLOR=RED}grande operação{ENDCOLOR} em andamento nos andares superiores!</speech>
            <speech>Até que sua força principal seja derrotada, nosso Porygon permanecerá corrompido!</speech>
            <speech>Por favor, encontre e detenha seu líder antes que ele conclua seus planos!</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Receptionist Elva" randomRotation="false" sprite="7" x="37" y="17">
        <speech>Bem-vindo à Silph Co., o lar da inovação e dos avanços induzidos pelo estresse!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Intern Jayson" shouldSleep="" speed="1" sprite="8" type="npc" x="21" y="6">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Fui contratado esta manhã e já estava perdido no elevador.</speech>
        <speech>Por favor, envie ajuda.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Executive Mina" randomRotation="false" sprite="19" x="27" y="24">
        <speech>Se mais um turista perguntar onde fica o "Mega Stone Department", eu pularei pela janela.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Conspiracy Guy Dennis" shouldSleep="" speed="1" sprite="37" type="npc" x="2" y="11">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Você acha que a Silph só fabrica Pokébolas?</speech>
        <speech>Abra seus olhos, garoto. Eu já vi um Slowpoke com Bluetooth.</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="5" name="" randomRotation="true" sprite="162" x="36" y="17">
        <speech>Bem-vindo à Silph Co., o lar da inovação e dos avanços induzidos pelo estresse!</speech>
    </npc>
</npcs>