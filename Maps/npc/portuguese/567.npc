<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Apresentarei a vocês movimentos elegantes dignos do título de Rich Boy!</speech>
        </speeches>
        <speeches id="2">
            <speech>Pensar que alguém pode ser mais forte do que eu! ...Você não é qualquer um!</speech>
        </speeches>
        <speeches id="3">
            <speech>Pensar que alguém pode ser mais forte do que eu! ...Você não é qualquer um!</speech>
        </speeches>
        <speeches id="4">
            <speech>Dizem que a força de um Pokémon depende de seu treinamento. A culpa não é sua. Não pode ser
                ajudado.
            </speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Sempre quis ser uma Beauty, então comecei do zero, concentrando-me em minha aparência.</speech>
        </speeches>
        <speeches id="2">
            <speech>Seis meses de investimento nos tratamentos mais recentes... Olhe para mim agora! Estou brilhando como nunca antes!
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Seis meses de investimento nos tratamentos mais recentes... Olhe para mim agora! Estou brilhando como nunca antes!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Seja qual for o seu sonho, se você quiser torná-lo realidade, terá de fazer o que for preciso.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Meu pai, um grande homem, sempre dizia: "Os fins justificam os meios, desde que você ganhe!</speech>
        </speeches>
        <speeches id="2">
            <speech>Por quê?! Será que as palavras de meu pai estavam erradas?</speech>
        </speeches>
        <speeches id="3">
            <speech>Por quê?! Será que as palavras de meu pai estavam erradas?</speech>
        </speeches>
        <speeches id="4">
            <speech>É exatamente como meu pai dizia... A história é escrita pelos vencedores.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Vim aqui por causa do meu irmão mais velho, que sempre se esconde em seu quarto.</speech>
        </speeches>
        <speeches id="2">
            <speech>Gostaria que meu irmão mais velho saísse de seu quarto e brincasse comigo...</speech>
        </speeches>
        <speeches id="3">
            <speech>Gostaria que meu irmão mais velho saísse de seu quarto e brincasse comigo...</speech>
        </speeches>
        <speeches id="4">
            <speech>Meu irmão mais velho, olhe para fora pelo menos uma vez! Eu ganhei para você! Então, saia e brinque!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Embora minha educação e comportamento sejam ruins, criei bem meus Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ao contrário do meu eu diabólico, esses são alguns bons Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ao contrário do meu eu diabólico, esses são alguns bons Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>Certo? Um Pokémon muito bom, não é? Sou adequado para criar coisas.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Apesar de minha aparência, eu era um Ace Trainer até recentemente.</speech>
        </speeches>
        <speeches id="2">
            <speech>Todos os Ace Trainers que já passaram de uma certa idade mudaram suas carreiras.</speech>
        </speeches>
        <speeches id="3">
            <speech>Todos os Ace Trainers que já passaram de uma certa idade mudaram suas carreiras.</speech>
        </speeches>
        <speeches id="4">
            <speech>Depois de uma certa idade, é hora de deixar de ser um Ace Trainer e seguir em frente.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>O tempo está muito ruim para eu trabalhar! Estou apenas me divertindo aqui.</speech>
        </speeches>
        <speeches id="2">
            <speech>Se ao menos minha habilidade fosse Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>Se ao menos minha habilidade fosse Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>Uau! Estou em um clima de dia ensolarado!!!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Graças ao meu Pokémon, passo todos os dias totalmente viciado em meu trabalho de meio período.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vivendo a vida pelo Pokémon... Se estou bem com isso...</speech>
        </speeches>
        <speeches id="3">
            <speech>Vivendo a vida pelo Pokémon... Se estou bem com isso...</speech>
        </speeches>
        <speeches id="4">
            <speech>Tenho um Pokémon guloso que está destruindo meu orçamento. Não é brincadeira!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Não me importa quem você é ou de onde você vem.</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso repensar meu relacionamento com meus Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso repensar minha relação com meus Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>Um rótulo não é importante, não é mesmo? Afinal de contas, você é você mesmo, certo?</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Que bom! Vou dar tudo o que tenho! Vamos dar o nosso melhor!</speech>
        </speeches>
        <speeches id="2">
            <speech>No final de uma batalha, sem fôlego... Não é legal? Totalmente!</speech>
        </speeches>
        <speeches id="3">
            <speech>No final de uma batalha, sem fôlego... Não é legal? Totalmente!</speech>
        </speeches>
        <speeches id="4">
            <speech>Que bom! Bom trabalho. Tentei tudo o que pude, mas ainda estou muito decepcionado!</speech>
        </speeches>
    </conversation>
</npcs>