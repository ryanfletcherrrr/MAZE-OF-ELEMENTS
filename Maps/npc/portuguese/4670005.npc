<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ah! $PLAYER_NAME! Aposto que você deve estar surpreso por me ver em um lugar como este!</speech>
            <speech>A promessa que fizemos naquela época</speech>
            <speech>Obrigado por cumprir sua parte. Foi realmente graças a você que consegui chegar até aqui, $PLAYER_NAME.</speech>
            <speech>Foi só porque perdi para você naquela época que pude me tornar ainda mais forte.</speech>
            <speech>Tenho certeza de que você e seu Pokémon também tiveram que superar muita coisa</speech>
            <speech>Para chegar até aqui. Certo, $PLAYER_NAME? Todos cresceram muito E agora vamos ver do que somos capazes.</speech>
            <speech>Ficar aqui diante de você novamente me dá calafrios, mas eu não vou desistir! Não perderei mais.</speech>
            <speech>Meus Pokémon me deram a coragem e a força para lutar.</speech>
            <speech>Tenho que vencer para o bem deles! Portanto, preparem-se, aqui vou eu!</speech>
        </speeches>
        <speeches id="2">
            <speech>... Arghhh!!! ... ... Hah. $PLAYER_NAME, você e seu Pokémon também.</speech>
            <speech>Obrigado por não se conter quando lutou contra nós...</speech>
            <speech>Por não ter se contido quando nos derrotou e fez o Gallade All.</speech>
            <speech>Muito obrigado, sinto que consegui dar mais um passo à frente graças a vocês!</speech>
            <speech>Ah! Eu sei! Vou lhe dar isso para guardar.</speech>
            <speech>Espero que ele sempre o lembre de sua batalha comigo, com Gallade e com o resto da minha equipe.</speech>
            <speech>Se você tiver um Kirlia masculino como um de seus parceiros, $PLAYER_NAME, espero que você possa usar essa Dawn Stone nele para mim.</speech>
            <speech>Não consegui derrotá-lo desta vez, $PLAYER_NAME. Mas ficarei aqui e continuarei treinando.</speech>
            <speech>E um dia, cuidado! Juro que um dia vou alcançá-lo!</speech>
            <speech>Quando eu o fizer, prometo que batalharemos novamente! Essa é uma promessa que pretendo cumprir!</speech>
        </speeches>
        <speeches id="3">
            <speech>... Arghhh!!! ... ... Hah. $PLAYER_NAME, você e seu Pokémon também.</speech>
            <speech>Obrigado por não se conter quando lutou contra nós...</speech>
            <speech>Por não ter se contido quando nos derrotou e fez o Gallade All.</speech>
            <speech>Muito obrigado, sinto que consegui dar mais um passo à frente graças a vocês!</speech>
            <speech>Ah! Eu sei! Vou lhe dar isso para guardar.</speech>
            <speech>Espero que ele sempre o lembre de sua batalha comigo, com Gallade e com o resto da minha equipe.</speech>
            <speech>Se você tiver um Kirlia masculino como um de seus parceiros, $PLAYER_NAME, espero que você possa usar essa Dawn Stone nele para mim.</speech>
            <speech>Não consegui derrotá-lo desta vez, $PLAYER_NAME. Mas ficarei aqui e continuarei treinando.</speech>
            <speech>E um dia, cuidado! Juro que um dia vou alcançá-lo!</speech>
            <speech>Quando eu o fizer, prometo que batalharemos novamente! Essa é uma promessa que pretendo cumprir!</speech>
        </speeches>
        <speeches id="4">
            <speech>Você é fraco, mas vou deixá-lo tentar novamente $PLAYER_NAME.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME! É incrível ver o quanto nós dois crescemos desde nossas aventuras.</speech>
            <speech>Tenho treinado com o Mega Swampert, com o objetivo de alcançar novos patamares.</speech>
            <speech>O que acha de testarmos nossos pontos fortes? Estou ansioso para ver como estamos nos saindo agora!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, isso foi intenso! Você realmente está mais forte do que nunca, $PLAYER_NAME.</speech>
            <speech>Mas não vou desistir! Vou continuar treinando e, da próxima vez, estarei pronto para vocês.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mega Swampert e eu precisamos refinar um pouco mais nossas táticas.</speech>
            <speech>Vamos levar $DURAÇÃO para treinar. Prometo que seremos um desafio mais difícil!</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que ainda temos um longo caminho a percorrer para alcançá-lo, $PLAYER_NAME.</speech>
            <speech>Mas não pense que isso acabou. Treinaremos mais e voltaremos mais fortes!</speech>
        </speeches>
        <speeches id="5">
            <speech>Só para confirmar antes de começarmos... Você está pronto para um desafio, certo?</speech>
            <speech>Estou me preparando para essa batalha, com o objetivo de superar meus limites!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Jenna" randomRotation="true" sprite="33" x="34" y="9">
        <speech>Sou a Jenna.</speech>
        <speech>O Victory Road não é para os fracos de coração, mas nós, treinadores, gostamos da adrenalina de lutar contra Pokémon difíceis.</speech>
        <speech>É como um rito de passagem, sabe? Mal posso esperar para ver o que os outros desafiantes estão enfrentando!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Seaking" speed="1" sprite="119" type="pokemon" x="3" y="14">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Seaking!" speed="1" sprite="119" type="pokemon" x="1" y="15">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Lumineon" speed="1" sprite="457" type="pokemon" x="4" y="29">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Lumineon!</onCollisionSpeech>
        <speech>Lumineon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="4" y="45">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="1" y="47">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="4" y="48">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="38" y="36">
        <path>RIGHTx16,LEFTx16</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="27" y="31">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="49" y="50">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="50" y="50">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="51" y="48">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="48" y="48">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="49" y="47">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Altaria" speed="1" sprite="334" type="pokemon" x="47" y="62">
        <path>LEFTx7,RIGHTx7,UPx9,DOWNx9</path>
        <onCollisionSpeech gap="4">Altaria!</onCollisionSpeech>
        <speech>Altaria!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Altaria" speed="1" sprite="334" type="pokemon" x="19" y="54">
        <path>UPx5,RIGHTx3,LEFTx3,DOWNx5</path>
        <onCollisionSpeech gap="4">Altaria!</onCollisionSpeech>
        <speech>Altaria!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="19" y="62">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Torkoal!</onCollisionSpeech>
        <speech>Torkoal!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Lairon" speed="1" sprite="305" type="pokemon" x="38" y="47">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Lairon!</onCollisionSpeech>
        <speech>Lairon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Rhyhorn" speed="1" sprite="111" type="pokemon" x="38" y="52">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Rhyhorn!</onCollisionSpeech>
        <speech>Rhyhorn!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Pelipper" speed="1" sprite="279" type="pokemon" x="30" y="3">
        <path>RIGHTx8,UPx1,LEFTx8,DOWNx1</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Seaking" speed="1" sprite="119" type="pokemon" x="58" y="18">
        <path>LEFTx5,UPx6,DOWNx6,RIGHTx5</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Sableye" shouldSleep="" speed="1" sprite="302" type="pokemon" x="45" y="17">
        <path>UPx2,LEFTx2,DOWNx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Sableye!</onCollisionSpeech>
        <speech>Sableye!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Mawile" shouldSleep="" speed="1" sprite="303" type="pokemon" x="18" y="36">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Mawile!</onCollisionSpeech>
        <speech>Mawile!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Skarmory" speed="1" sprite="227" type="pokemon" x="6" y="6">
        <path>RIGHTx8,UPx4,LEFTx8,DOWNx4</path>
        <onCollisionSpeech gap="4">Skarmory!</onCollisionSpeech>
        <speech>Skarmory!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="25" name="Golem" shouldSleep="" speed="1" sprite="76" type="pokemon" x="15" y="15">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Golem!</onCollisionSpeech>
        <speech>Golem!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="26" name="Mawile" shouldSleep="" speed="1" sprite="303" type="pokemon" x="23" y="24">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4">Mawile!</onCollisionSpeech>
        <speech>Mawile!</speech>
    </movingNpc>
</npcs>