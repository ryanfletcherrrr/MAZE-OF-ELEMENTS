<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Por favor, selecione um andar.{ENDCOLOR}</speech>
            <speech>Os botões aguardam sua entrada, prontos para levá-lo aonde você precisa.</speech>
        </speeches>
        <speeches id="2">
            <speech>{O console do elevador se fecha sozinho com um clique suave.</speech>
            <speech>Você precisará ativá-lo novamente se quiser usá-lo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{A porta está trancada. Pode ser necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>{A porta está trancada. Pode ser necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Você parece perdido, garoto. Talvez eu possa convencê-lo a dar meia-volta antes que as coisas fiquem complicadas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tudo bem, tudo bem! Não precisa esfregar isso na cara!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tudo bem, tudo bem! Não precisa esfregar isso na cara!</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Eu lhe disse que essa luta não era sua.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Você acha que pode simplesmente entrar aqui? Hah! Eu adoro derrubar treinadores arrogantes como você!</speech>
        </speeches>
        <speeches id="2">
            <speech>Odeio perder mais do que tudo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Odeio perder mais do que tudo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Tch, fracos como vocês não pertencem a este lugar!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Moral? Ética? Não! O progresso exige sacrifícios!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não... Minha pesquisa foi impecável! Como isso pôde acontecer?</speech>
        </speeches>
        <speeches id="3">
            <speech>Não... Minha pesquisa foi impecável! Como isso pôde acontecer?</speech>
        </speeches>
        <speeches id="4">
            <speech>Você não pode parar a inovação. Meu trabalho continuará, não importa o que aconteça!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Glitchbert" shouldSleep="" speed="1" sprite="8" type="npc" x="7" y="9">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Sinceramente, estou surpreso que você tenha permissão para estar aqui sem o Surf e uma falha na bicicleta.</speech>
    </movingNpc>
    <conversation id="12">
        <speeches id="1">
            <speech>Então... você é a {COLOR=RED}peste persistente{ENDCOLOR} que está desmantelando nossas operações andar por andar.</speech>
            <speech>Eu sou {COLOR=PURPLE}Admin Archer{ENDCOLOR} da {COLOR=RED}Team Rocket{ENDCOLOR} - arquiteto dos protocolos de armamento do {COLOR=GOLD}Projeto T.E.R.A.</speech>
            <speech>Você demonstrou {COLOR=CYAN}habilidade notável{ENDCOLOR} contra meus subordinados, mas eu opero em um nível totalmente diferente.</speech>
            <speech>Minha especialidade são {COLOR=RED}ataques de precisão{ENDCOLOR} e {COLOR=PURPLE}exageros avassaladores{ENDCOLOR} - Não deixo nada ao acaso!</speech>
            <speech>Essa tecnologia {COLOR=GOLD}Tera Energy{ENDCOLOR} revolucionará a guerra Pokémon, e você não impedirá essa visão!</speech>
        </speeches>
        <speeches id="2">
            <speech>Calculado... mas inesperado. Sua abordagem tática excedeu minhas projeções {COLOR=CYAN}estatísticas{ENDCOLOR}.</speech>
            <speech>Meus golpes de precisão {COLOR=RED}{ENDCOLOR} deveriam tê-lo eliminado com {COLOR=PURPLE}certeza matemática{ENDCOLOR}...</speech>
            <speech>Esta é apenas uma {COLOR=GOLD}retirada tática{ENDCOLOR}. {A Equipe Rocket analisará esses dados e voltará mais forte!</speech>
            <speech>{O Projeto T.E.R.A.{ENDCOLOR} é maior do que qualquer operação isolada - você só atrasou o inevitável!</speech>
            <speech>Lembre-se dessa vitória, treinador... pode ser a sua última contra a {COLOR=RED}Team Rocket{ENDCOLOR}.</speech>
        </speeches>
        <speeches id="3">
            <speech>Meus {COLOR=PURPLE}algoritmos de combate{ENDCOLOR} estão sendo recalibrados após nosso encontro...</speech>
            <speech>Você me forçou a reavaliar completamente os protocolos de aprimoramento da {COLOR=GOLD}Tera Energy{ENDCOLOR}.</speech>
            <speech>Essa instalação pode ter sido perdida, mas a pesquisa da Equipe Rocket continua em {COLOR=CYAN}múltiplos locais{ENDCOLOR}.</speech>
            <speech>{O Projeto T.E.R.A.{ENDCOLOR} ressurgirá - mais {COLOR=RED}preciso{ENDCOLOR} e mais {COLOR=PURPLE}devastador{ENDCOLOR} do que antes!</speech>
        </speeches>
        <speeches id="4">
            <speech>Execução impecável. Meus {COLOR=RED}cálculos de precisão{ENDCOLOR} previram esse resultado com {COLOR=GOLD}99,7% de exatidão{ENDCOLOR}.</speech>
            <speech>Sua derrota demonstra o verdadeiro potencial da guerra estratégica aprimorada por {COLOR=PURPLE}Tera{ENDCOLOR}!</speech>
            <speech>{O projeto T.E.R.A.{ENDCOLOR} prosseguirá agora para sua fase final - a implementação global{ENDCOLOR}!</speech>
            <speech>Você deve se sentir honrado por ter contribuído para o {COLOR=CYAN}avanço científico{ENDCOLOR}... mesmo que tenha fracassado.</speech>
        </speeches>
        <speeches id="5">
            <speech>Aguarde. Você ainda não liberou o prédio de minhas {COLOR=CYAN}unidades operacionais{ENDCOLOR}.</speech>
            <speech>Não perco tempo com {COLOR=RED}objetivos incompletos{ENDCOLOR} - elimino meus {COLOR=PURPLE}Elite Grunts{ENDCOLOR} primeiro.</speech>
            <speech>Somente quando você provar ser capaz de lidar com meus {COLOR=GOLD}subordinados{ENDCOLOR} é que o considerarei digno de minha atenção.</speech>
            <speech>Retorne quando tiver demonstrado {COLOR=RED}competência tática{ENDCOLOR} contra uma oposição adequada {COLOR=PURPLE}de nível elitista{ENDCOLOR}.</speech>
        </speeches>
    </conversation>
</npcs>