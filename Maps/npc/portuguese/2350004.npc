<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Eu estava esperando fazer um piquenique agradável ao ar livre, mas me perdi nesta caverna.</speech>
        </speeches>
        <speeches id="2">
            <speech>Bem, isso não saiu como planejado, assim como o meu piquenique.</speech>
        </speeches>
        <speeches id="3">
            <speech>Bem, isso não saiu como planejado, assim como o meu piquenique.</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Mesmo em uma caverna escura, um pouco de diversão e uma boa batalha podem alegrar o ambiente!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Você acha que pode simplesmente passear pelo Rock Tunnel? Sem força, você não conseguirá ir muito longe!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... Talvez você seja mais forte do que parece. Continue escalando.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... Talvez você seja mais forte do que parece. Continue escalando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Como eu pensava. Força não é apenas músculo, mas também resistência!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Essa caverna guarda segredos antigos, mas, no momento, estou mais interessado em testar suas habilidades de batalha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que preciso me aprofundar mais em meu treinamento...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que preciso me aprofundar mais em meu treinamento...</speech>
        </speeches>
        <speeches id="4">
            <speech>Outra descoberta! A estratégia e o conhecimento são tão importantes quanto a força bruta.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>... As sombras sussurram sobre sua chegada. Vamos ver se você tem o que é preciso para andar entre elas.</speech>
        </speeches>
        <speeches id="2">
            <speech>A escuridão se dissipa, mas só por enquanto. Ela sempre retorna.</speech>
        </speeches>
        <speeches id="3">
            <speech>A escuridão se dissipa, mas só por enquanto. Ela sempre retorna.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você sente isso? O peso do desconhecido pressionando? Abrace-o ou se perca nele</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ahh, nada como o ar fresco de uma caverna e uma boa batalha! Vamos nos acalmar e nos manter firmes.</speech>
        </speeches>
        <speeches id="2">
            <speech>Bem, isso foi um deslizamento de terra. Acho que vou me sentar aqui e aproveitar a brisa do túnel.</speech>
        </speeches>
        <speeches id="3">
            <speech>Bem, isso foi um deslizamento de terra. Acho que vou me sentar aqui e aproveitar a brisa do túnel.</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Não há necessidade de pressa, a força vem da paciência e de uma base sólida!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Acho que estou indo na direção certa. Mas, ei, uma batalha parece mais divertida do que checar meu mapa!</speech>
        </speeches>
        <speeches id="2">
            <speech>Talvez perder e ficar perdido não seja minha melhor combinação.</speech>
        </speeches>
        <speeches id="3">
            <speech>Talvez perder e ficar perdido não seja minha melhor combinação.</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Às vezes, sair do caminho comum leva ao sucesso.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Hahaha! O Rock Tunnel é meu campo de treinamento, e você é apenas mais uma pedra para esmagar!</speech>
        </speeches>
        <speeches id="2">
            <speech>O quê?! Não pode ser! Essa era para ser minha vitória esmagadora!</speech>
        </speeches>
        <speeches id="3">
            <speech>O quê?! Não pode ser! Essa era para ser minha vitória esmagadora!</speech>
        </speeches>
        <speeches id="4">
            <speech>É assim que se faz! Poder, confiança e um pouco de gritaria nunca fazem mal!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Uma caverna escura e úmida não é exatamente glamourosa, mas eu nunca deixo minha elegância desaparecer. Vamos batalhar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh, agora estou todo arranhado, e não apenas em meu orgulho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh, agora estou todo arranhado, e não apenas em meu orgulho.</speech>
        </speeches>
        <speeches id="4">
            <speech>A graça e o poder da verdadeira beleza brilham, não importa onde você esteja!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Zubat" speed="1" sprite="41" type="pokemon" x="29" y="53">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Zuuubaat!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="ONIX" speed="1" sprite="95" type="pokemon" x="56" y="36">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Oniiiiix!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Emma" speed="1" sprite="31" type="npc" x="45" y="33">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Não sei bem por que, mas meu Nacli parece diferente dos outros que encontrei e brilha quando sai de sua Pokébola.</speech>
        <speech>Devo liberá-lo?</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="4" name="Jasper" randomRotation="true" sprite="39" x="16" y="16">
        <speech>Na minha época, tínhamos que desperdiçar um slot HM só para usar o Flash!</speech>
        <speech>Se ainda estiver fazendo isso, rapaz, é melhor fazer um exame de vista!</speech>
    </npc>
</npcs>