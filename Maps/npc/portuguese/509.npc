<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Sou iniciante, mas farei o meu melhor! Darei tudo o que puder. Me observe!</speech>
        </speeches>
        <speeches id="2">
            <speech>Desculpe se o aborreci! Vou me esforçar mais na próxima vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>Desculpe se o aborreci! Vou me esforçar mais na próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh! Esqueci de terminar nossa batalha! Ainda preciso estudar mais...</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Não baixe a guarda, ou você poderá chorar quando uma criança bater em você.</speech>
        </speeches>
        <speeches id="2">
            <speech>Posso ser jovem, mas isso não significa que perderei - mesmo para um adulto.</speech>
        </speeches>
        <speeches id="3">
            <speech>Posso ser jovem, mas isso não significa que perderei - mesmo para um adulto.</speech>
        </speeches>
        <speeches id="4">
            <speech>Caramba! Você não consegue ver que sou apenas uma criança! Não foi justo da sua parte fazer tudo isso!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>As minissaias são inacreditáveis, certo?</speech>
        </speeches>
        <speeches id="2">
            <speech>É preciso aproveitar uma moda passageira enquanto se pode, certo?</speech>
        </speeches>
        <speeches id="3">
            <speech>É preciso aproveitar uma moda passageira enquanto se pode, certo?</speech>
        </speeches>
        <speeches id="4">
            <speech>Elas são fáceis de vestir e bonitas. Qualquer coisa que não seja uma minissaia seria inacreditável, certo?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Que bom que você conseguiu! A partir daqui, não será uma tarefa fácil.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu me empolguei um pouco antes, mas de que trabalho eu estava falando?</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu me empolguei um pouco antes, mas de que trabalho eu estava falando?</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! O que eu disse a você? Você ainda não está pronto.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Uhnn... Que lugar é esse? Não tem nem um pouco o aroma de um conto de fadas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso sair deste lugar. Meu conto de fadas vai desaparecer!</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso sair deste lugar. Meu conto de fadas vai desaparecer!</speech>
        </speeches>
        <speeches id="4">
            <speech>Não, não, isso não serve, não serve de jeito nenhum. Quando estou com problemas, me sinto mais distante dos contos de fadas.
                contos de fadas.
            </speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Minha última batalha... É assim que eu gostaria que víssemos essa partida...</speech>
        </speeches>
        <speeches id="2">
            <speech>Foi muito divertido... Vamos ter outra última batalha novamente algum dia...</speech>
        </speeches>
        <speeches id="3">
            <speech>Foi muito divertido... Vamos ter outra última batalha novamente algum dia...</speech>
        </speeches>
        <speeches id="4">
            <speech>Um dia nos encontraremos novamente... Heh. Se isso fosse verdade...</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Ralts" shouldSleep="" speed="1" sprite="280" type="pokemon" x="13" y="45">
        <path>LEFTx1, RIGHTx1</path>
        <onCollisionSpeech gap="4">Ra Ra</onCollisionSpeech>
        <speech>Ralts agora está rastreando você!!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Budew" shouldSleep="" speed="1" sprite="406" type="pokemon" x="12" y="49">
        <path>LEFTx1, RIGHTx1</path>
        <onCollisionSpeech gap="4">Bu! Bude! Bu!</onCollisionSpeech>
        <speech>Buuuuuuudew!!!!</speech>
    </movingNpc>
<!--
    <movingNpc direction="DOWN" id="3" name="Lotad" shouldSleep="" speed="1" sprite="270" type="pokemon" x="19" y="47">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Looootad!</onCollisionSpeech>
        <speech>*Lotad uses Water Gun*</speech>
        <speech>$PLAYER_NAME you better change your T-Shirt!!!!</speech>
    </movingNpc>
-->
    <movingNpc direction="RIGHT" id="5" name="Roselia" shouldSleep="" speed="1" sprite="315" type="pokemon" x="6" y="35">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Roselia...Roselia...!</onCollisionSpeech>
        <speech>Roseeelia!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="6" name="Minun" shouldSleep="" speed="1" sprite="312" type="pokemon" x="21" y="9">
        <path>LEFTx1, RIGHTx1</path>
        <onCollisionSpeech gap="4">Minun!</onCollisionSpeech>
        <speech>Mi-Mi-Mi!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Plusle" shouldSleep="" speed="1" sprite="311" type="pokemon" x="24" y="7">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Plusle!</onCollisionSpeech>
        <speech>Plusle....Plusle!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Robby" shouldSleep="" speed="1" sprite="4" type="npc" x="12" y="17">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Yaaaay!!!</onCollisionSpeech>
        <speech>Consegui derrotar Roark com meu Psyduck!</speech>
        <speech>Se eu não tivesse recebido o conselho daquele cara chamado Tom, eu não teria conseguido fazer isso!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Psyduck" shouldSleep="" speed="1" sprite="54" type="pokemon" x="26" y="70">
        <path>UPx3, DOWNx3</path>
        <onCollisionSpeech gap="4">Psyduck</onCollisionSpeech>
        <speech>O Psyduck lhe dá dor de cabeça!</speech>
    </movingNpc>
    <conversation id="9">
        <speeches id="2">
            <speech>Olá! Sou um palhaço da campanha do Tutorial do PBO. Vamos lá, minha pergunta!</speech>
            <speech>Você pode alocar EVs manualmente no PBO?</speech>
        </speeches>
        <speeches id="3">
            <speech>Essa não é a resposta correta. Vamos tentar novamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>Você está absolutamente correto.</speech>
            <speech>Abra o menu Pokémon, clique em EV e você o encontrará lá!</speech>
        </speeches>
        <speeches id="5">
            <speech>Aqui está! Por favor, aceite este Pomeg Berry!</speech>
            <speech>Reduz o HP de um Pokémon em 10 EVs!</speech>
        </speeches>
    </conversation>
</npcs>