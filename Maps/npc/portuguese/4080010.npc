<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Sou o Sr. Stone, presidente da Devon Corporation.</speech>
            <speech>Acabei de saber que temos muito a lhe agradecer. Portanto, você ajudou minha equipe não apenas uma, mas duas vezes!</speech>
            <speech>Há um favor que eu gostaria de pedir a um instrutor confiável como você.</speech>
            <speech>Agora quero que você saiba que sou um presidente em quem você pode confiar.</speech>
            <speech>Eu nunca seria tão ruim a ponto de pedir um favor sem receber nada em troca.</speech>
            <speech>Aqui, pegue esse Blaze Radar.</speech>
            <speech>Quero lhe pedir que entregue esta carta a um homem chamado Steven. Você deve encontrá-lo em Dewford.</speech>
            <speech>Você terá que atravessar o mar para chegar a Dewford, é claro.</speech>
            <speech>Pedirei ao Sr. Briney, o velho marinheiro que mora naquele chalé na Rota 104, para ajudar na travessia.</speech>
            <speech>Vá procurá-lo, e ele deve concordar em ajudá-lo.</speech>
            <speech>Estou contando com você, garoto!</speech>
            <speech>Se você não tiver certeza do que fazer, venha conversar comigo novamente!</speech>
        </speeches>
        <speeches id="2">
            <speech>Entregue a carta para Steven em Dewford Town para mim!</speech>
            <speech>Você terá que atravessar o mar para chegar a Dewford, é claro.</speech>
            <speech>Pedirei ao Sr. Briney, o velho marinheiro que mora naquele chalé na Rota 104, para ajudar na travessia.</speech>
            <speech>Vá procurá-lo, e ele deve concordar em ajudá-lo. Estou contando com você, garoto!</speech>
        </speeches>
    </conversation>
    <npc direction="UP" hidden="false" id="1" name="Kevin" randomRotation="true" sprite="10" x="25" y="8">
        <speech>Eu penso: por que perder tempo dizendo muitas palavras, se poucas palavras são suficientes?</speech>
    </npc>
    <npc direction="UP" hidden="false" id="2" name="Stanley" randomRotation="true" sprite="5" x="27" y="5">
        <speech>Sim, eu tenho um sonho.</speech>
        <speech>Quero ser proprietário de um farol desativado.</speech>
        <speech>E eu quero morar no topo. E ninguém sabe que eu moro lá.</speech>
        <speech>E há um botão que posso pressionar, que lança o farol no espaço.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="3" name="Kelly" randomRotation="true" sprite="31" x="15" y="17">
        <speech>Quem diz exatamente o que está pensando?</speech>
        <speech>Que tipo de jogo é esse?</speech>
    </npc>
    <npc direction="UP" hidden="false" id="4" name="Andy" randomRotation="true" sprite="23" x="5" y="11">
        <speech>Eu gostaria que houvesse uma maneira de saber que você está nos bons velhos tempos antes de realmente deixá-los.</speech>
    </npc>
</npcs>