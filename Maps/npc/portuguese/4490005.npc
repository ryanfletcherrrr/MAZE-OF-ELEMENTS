<npcs>
    <movingNpc direction="DOWN" id="1" name="Duskull" speed="1" sprite="355" type="pokemon" x="8" y="23">
        <path>LEFTx1,DOWNx2,UPx2,RIGHTx1</path>
        <onCollisionSpeech gap="4">Duskull</onCollisionSpeech>
        <speech>Duskull</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Shuppet" speed="1" sprite="353" type="pokemon" x="13" y="7">
        <path>DOWNx5,RIGHTx1,LEFTx1,UPx5</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Duskull" speed="1" sprite="355" type="pokemon" x="24" y="8">
        <path>DOWNx2,LEFTx2,RIGHTx2,UPx2</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Shuppet" speed="1" sprite="353" type="pokemon" x="38" y="11">
        <path>LEFTx11,RIGHTx11</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Chimecho" speed="1" sprite="358" type="pokemon" x="71" y="31">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Chimecho!</onCollisionSpeech>
        <speech>Chimecho!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Dusknoir" speed="1" sprite="477" type="pokemon" x="36" y="34">
        <path>LEFTx16,UPx1,DOWNx1,RIGHTx16</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Duskull" speed="1" sprite="355" type="pokemon" x="23" y="58">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="11" name="Hex Maniac Esmeralda" randomRotation="true" sprite="169" x="41" y="88">
        <speech>Os Sableye levam uma vida tranquila nas profundezas das cavernas.</speech>
        <speech>Eles são temidos, no entanto, porque se acredita que esses Pokémon roubam os espíritos das pessoas...</speech>
        <speech>Quando seus olhos ardem com um brilho sinistro na escuridão.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="12" name="Hex Maniac Lilith" randomRotation="true" sprite="170" x="35" y="60">
        <speech>O Duskull pode atravessar qualquer parede, independentemente de sua espessura.</speech>
        <speech>Quando esse Pokémon escolher um alvo, ele perseguirá obstinadamente a vítima pretendida até o amanhecer.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="13" name="Hex Maniac Morrigan" randomRotation="true" sprite="171" x="41" y="30">
        <speech>O corpo de Dusknoir é totalmente oco. Não há absolutamente nada em seu interior. Dizem que seu corpo é como um buraco negro.</speech>
        <speech>Esse Pokémon absorverá qualquer coisa em seu corpo, mas nada sairá de lá!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="14" name="Hex Maniac Nyx" randomRotation="true" sprite="170" x="45" y="13">
        <speech>O Shuppet é atraído por sentimentos de ciúme e vingança.</speech>
        <speech>Se alguém desenvolver fortes sentimentos de vingança, esse Pokémon aparecerá em um enxame e se alinhará sob o beiral da casa dessa pessoa.</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Banette" speed="1" sprite="354" type="pokemon" x="49" y="68">
        <path>RIGHTx2,DOWNx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4">Banette!</onCollisionSpeech>
        <speech>Banette!</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="16" name="Hex maniac Thalia" randomRotation="true" sprite="171" x="63" y="65">
        <speech>O Banette gera energia para lançar maldições fortes ao espetar alfinetes em seu próprio corpo.</speech>
        <speech>Originalmente, esse Pokémon era um lamentável boneco de pelúcia que foi jogado fora.</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Sableye!" speed="1" sprite="302" type="pokemon" x="65" y="11">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Sableye!</onCollisionSpeech>
        <speech>Sableye!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Sableye" shouldSleep="" speed="1" sprite="302" type="pokemon" x="29" y="84">
        <path>LEFTx2,UPx2,DOWNx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Sableye!</onCollisionSpeech>
        <speech>Sableye!</speech>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>
        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os poderes antigos que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, ligados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>
        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>
        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo ordenado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu auge.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>
        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, ligados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>
        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os poderes antigos que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>
        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo determinado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu auge.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>
        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, ligados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>
        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>
        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo determinado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu zênite.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>
        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, ligados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>
        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>
        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo determinado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu auge.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>
        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, ligados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>
        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>
        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo determinado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu auge.</speech>
        </speeches>
    </conversation>
</npcs>