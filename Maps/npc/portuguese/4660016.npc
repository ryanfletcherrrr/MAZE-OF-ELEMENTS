<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME. Eu sou a Dra. Elara Fennel. Atualmente, estamos pesquisando um método para acalmar o Mega Swampert usando as propriedades especiais encontradas nas guelras do Mudkip.</speech>
            <speech>Precisamos de Mudkips que sejam:</speech>
            <speech>- Capturado por você nas águas de Hoenn, sem nenhum item guardado.</speech>
            <speech>- Com IVs totais de 100 ou mais, mostrando sua força e raridade.</speech>
            <speech>- Pelo menos o nível 1, garantindo que eles tenham se relacionado com você, o que é crucial para o nosso processo.</speech>
            <speech>Se você tiver Mudkips que atendam a esses critérios, poderia trazê-los aqui? Prometemos uma extração cuidadosa que não prejudicará seu Mudkip.</speech>
        </speeches>
        <speeches id="2">
            <speech>É maravilhoso ver que você encontrou Mudkips adequados! Pronto para prosseguir com a extração das guelras? Seu Mudkip estará perfeitamente seguro.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não tenha pressa, $PLAYER_NAME. Entendemos a importância dessa decisão. Estaremos aqui quando você estiver pronto.</speech>
        </speeches>
        <speeches id="4">
            <speech>Obrigado por confiar em nós. Agora vamos extrair cuidadosamente as brânquias. ...E está feito.</speech>
            <speech>Aqui estão as brânquias, e seu Mudkip está saudável como sempre. Essas brânquias são vitais para nossa próxima etapa em Sootópolis.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Sou a professora Iris Greenwood. Com as brânquias que você forneceu, estamos prontos para criar a Mystic Potion, a chave para acalmar a inquietação do Mega Swampert.</speech>
            <speech>Você tem 10 brânquias em forma de estrela? Elas são essenciais para a poção.</speech>
        </speeches>
        <speeches id="2">
            <speech>Maravilhoso! Com essas brânquias, podemos começar. A criação da Poção Mística é um processo delicado, mas, com sua ajuda, estamos confiantes. Vamos lá?</speech>
        </speeches>
        <speeches id="3">
            <speech>Não há pressa. Esta etapa é tão crucial quanto delicada. Volte quando você e seus Mudkips estiverem prontos.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vamos começar a preparar a poção. ...A Mystic Potion está pronta, graças ao seu esforço e às guelras do Mudkip.</speech>
            <speech>Essa é uma conquista significativa para pacificar o Mega Swampert.</speech>
            <speech>Agora vou continuar minha pesquisa sobre Mega-Evoluções e sua agressividade indomável.</speech>
        </speeches>
    </conversation>

</npcs>