<npcs>
    <npc direction="RIGHT" id="1000" name="Aroma Lady Jenna" sprite="27" x="20" y="37">
        <speech>Grayroot Town é uma cidade agradável e tranquila, apesar de estar tão perto da cidade de Glassmoor.</speech>
        <speech>Você encontrará pessoas amigáveis aqui, portanto, não precisa se preocupar com isso. Sempre tentamos manter uma atitude fortemente
            atitude centrada na comunidade.
        </speech>
        <speech>Espero que você se divirta aqui e tire um tempo para sentir o delicioso aroma desses narcisos,
            Tenho certeza de que você vai gostar deles.
        </speech>
    </npc>
    <npc direction="RIGHT" id="1001" name="Artist Obi" sprite="28" x="43" y="36">
        <speech>O truque é entender o tema de sua arte, sua superfície e seu volume. Uma vez que você tenha feito isso,
            recriá-lo se torna muito mais simples.
        </speech>
        <speech>Percebeu como esses galhos individuais têm sua própria forma e textura? Um artista nunca deve tentar
            suprimir essa beleza natural, homogeneizando-a.
        </speech>
        <speech>Fazer isso significaria simplesmente rejeitar a beleza da natureza, o que seria uma pena</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Artist Hikai" sprite="29" x="43" y="37">
        <speech>Vou criar uma bela paisagem, basta você observar.</speech>
        <speech>Ela terá muita cor e muito realismo, ao contrário dos modernistas que tendem a favorecer a arte abstrata em vez de peças realistas.
            arte abstrata em vez de peças realistas.
        </speech>
        <speech>Ser capaz de replicar exatamente o que seus sentidos percebem, não é uma sensação maravilhosa?</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Saudações! Bem-vindo à Skynet Travel Technologies!</speech>
            <speech>Você gostaria de viajar para algum lugar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Isso é lamentável. Volte sempre que desejar viajar para outro lugar.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" id="1003" name="Artist Diallo" sprite="28" x="14" y="29">
        <speech>Esse lugar é lindo.</speech>
        <speech>As pessoas, os Pokémon e a natureza estão em perfeita harmonia.</speech>
        <speech>Será que existe algum outro lugar como esse na Terra?</speech>
    </npc>
    <npc direction="DOWN" id="1004" name="Artist Leonardo" sprite="28" x="14" y="29">
        <speech>A vida, a fortuna e a beleza são muito influenciadas pela maneira como cada um encara a vida.</speech>
        <speech>Os pessimistas considerariam que este mundo não tem nada além de decepção e tristeza, como
            um copo que está meio vazio.
        </speech>
        <speech>Por outro lado, um otimista veria o mérito de sua existência e reconheceria as alegrias e a beleza da vida.
            beleza da vida.
        </speech>
        <speech>E quanto a você? Já se perguntou que tipo de pessoa você é?</speech>
    </npc>
    <conversation id="2">
        <speeches id="1">
            <speech>Quer um presente, jovem treinador? Tenho algumas Great Balls para as quais não tenho mais utilidade.</speech>
        </speeches>
        <speeches id="2">
            <speech>E é isso. Não se preocupe.</speech>
        </speeches>
        <speeches id="3">
            <speech>Bem, então pegue estes. Acho que elas serão mais úteis para você do que para mim.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ainda tenho um grande lote em minha casa. Portanto, se você puder voltar em 2 horas, posso lhe dar um pouco mais.
                mais.
            </speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Esse é o quarto crachá que vejo ali? Oof... Parabéns, eu acho!</speech>
            <speech>Aurelia me disse que você está pronto para enfrentá-los sozinho na antiga usina de energia?</speech>
            <speech>Você sabe como chegar à antiga usina de energia?</speech>
            <speech>Venha para Patthar Village e eu lhe mostrarei.</speech>
            <speech>Tchau!</speech>
        </speeches>
    </conversation>
</npcs>