<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ei! Você não pode ir mais fundo nessas cavernas!</speech>
            <speech>Nós... uh... ainda estamos tratando de assuntos importantes da Equipe Rocket lá embaixo!</speech>
            <speech>Não há nada para você ver - especialmente nenhum Pokémon assustado escondido por aí!</speech>
        </speeches>
        <speeches id="2">
            <speech>Argh! Meu Zubat não conseguiu detê-lo...</speech>
            <speech>De qualquer forma, já conseguimos o que queríamos durante a invasão.</speech>
            <speech>Se houver alguma Cleffa perdida lá embaixo, isso não é mais problema nosso!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tudo bem, tudo bem... vá resgatar sua preciosa Cleffa.</speech>
            <speech>Nunca deveríamos ter ficado no Mt. Moon depois que o chefe cancelou a operação.</speech>
            <speech>Só não espere que nós o ajudemos a encontrá-lo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah! Eu lhe disse que meu Zubat conhece essas cavernas melhor do que ninguém!</speech>
            <speech>Agora dê meia-volta e deixe a Cleffa em paz - ela já passou por muita coisa!</speech>
            <speech>A Equipe Rocket não precisa de mais problemas de benfeitores como você!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Ugh... Não acredito que fiquei com o dever do Mt. Moon... Acho que vou bater em você e voltar a cochilar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ótimo... agora tenho que dizer ao chefe que perdi e não terminei meu cochilo...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ótimo... agora tenho que dizer ao chefe que perdi e não terminei meu cochilo...</speech>
        </speeches>
        <speeches id="4">
            <speech>Finalmente! Agora posso voltar às... atividades importantes relacionadas ao descanso.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Esses fósseis? Apenas uma pequena peça do quebra-cabeça. Quando o plano de Giovanni se concretizar... oh, cara, você vai desejar não ter entrado em nosso caminho!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Nunca vou subir no ranking desse jeito... Talvez eu deva roubar dois fósseis da próxima vez...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Nunca vou subir na hierarquia desse jeito... Talvez eu deva roubar dois fósseis da próxima vez...</speech>
        </speeches>
        <speeches id="4">
            <speech>Um passo mais perto de uma promoção... Giovanni verá que não sou um grunhido... sou um futuro executivo!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Fósseis hoje... Energia amanhã. Giovanni está construindo algo grande, e esta montanha é apenas o começo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não! Se o Giovanni souber que eu perdi, vou ficar esfregando o chão!</speech>
        </speeches>
        <speeches id="3">
            <speech>Não! Se o Giovanni souber que eu perdi, vou ficar esfregando o chão!</speech>
        </speeches>
        <speeches id="4">
            <speech>Essa é uma praga a menos em nosso caminho... A visão de Giovanni irá remodelar o mundo!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Os fósseis não são apenas ossos velhos... eles são poder. E quando Giovanni desvendar seus segredos, a Equipe Rocket será imbatível!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não... eu falhei com ele... A ira de Giovanni é pior do que perder!</speech>
        </speeches>
        <speeches id="3">
            <speech>Não... eu falhei com ele... A ira de Giovanni é pior do que perder!</speech>
        </speeches>
        <speeches id="4">
            <speech>Você não pode parar o futuro. A visão de Giovanni esmagará tudo em seu caminho!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Ei! Esses fósseis são meus! Eu os encontrei de forma justa nas profundezas dessas ruínas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmph... De forma alguma vou lhe dizer qual é o melhor. Isso cabe a um treinador de verdade decidir!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tudo bem, tudo bem... Você lutou bem. Acho que posso me separar de um. Mas só um!</speech>
            <speech>Vá em frente, escolha um fóssil - mas escolha com sabedoria. Poderes antigos repousam nessas pedras...</speech>
        </speeches>
        <speeches id="4">
            <speech>Vá em frente, escolha um fóssil - mas escolha com sabedoria. Poderes antigos repousam nessas pedras...</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Clef? Cleffa? *se aproxima cautelosamente, sentindo suas intenções gentis*.</speech>
            <speech>*A Cleffa finalmente emerge, olhando para você com olhos esperançosos e cheios de lágrimas.</speech>
            <speech>Cleffa! *assente com entusiasmo e começa a se dirigir para a saída da caverna*.</speech>
        </speeches>
        <speeches id="2">
            <speech>Cleffa! Clef! *pula alegremente à frente, sem mais medo*.</speech>
            <speech>*O Cleffa faz uma pausa ocasional para se certificar de que você está acompanhando.</speech>
            <speech>Clef! *cantarola animadamente, ansiosa para se reunir com sua família*.</speech>
        </speeches>
        <speeches id="3">
            <speech>Clef... cleffa... *suspira suavemente*</speech>
            <speech>*A pequena Cleffa se encolhe atrás da rocha caída, tremendo de medo.</speech>
            <speech>Cleffa! Clef! *olha ao redor freneticamente para sua família*.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Geodude" speed="1" sprite="74" type="pokemon" x="32" y="11">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Geoodudeee</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Geodude" speed="1" sprite="74" type="pokemon" x="31" y="26">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Geoooo!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Paras" speed="1" sprite="46" type="pokemon" x="54" y="10">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">paar paar</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="4" name="Roggenrola" speed="1" sprite="524" type="pokemon" x="46" y="36">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Rollaaaaa!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Travis" randomRotation="true" sprite="39" x="53" y="47">
        <speech>Ufa... Achei que já tinha visto de tudo.</speech>
        <speech>Aquele Pokémon do tipo Pedra e Veneno quase acabou com toda a minha equipe.</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Geodude" speed="1" sprite="74" type="pokemon" x="28" y="56">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Geoooo</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Seth" randomRotation="false" sprite="101" x="22" y="30">
        <speech>Certifique-se de que seus Pokémon permaneçam saudáveis, certo?</speech>
        <speech>Não se pode ser muito cuidadoso aqui fora com esses caras obscuros.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="8" name="Samantha" randomRotation="false" sprite="82" x="17" y="5">
        <speech>Waaah!!!</speech>
        <speech>Oh, você parece amigável... Eu queria encontrar uma Pedra da Lua para minha Clefairy, mas o Monte da Lua ficou muito escuro de repente...</speech>
        <speech>Agora estou com muito medo de me mudar!</speech>
    </npc>
    <movingNpc direction="LEFT" id="9" name="Roggenrola" speed="1" sprite="524" type="pokemon" x="9" y="22">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">rolaaaaaa</onCollisionSpeech>
    </movingNpc>
</npcs>