<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Sou um jardineiro, mas também sou bom em batalhas de Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>Sou jardineiro, portanto meu verdadeiro trabalho é jardinagem.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sou jardineiro, portanto meu verdadeiro trabalho é jardinagem.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sou um jardineiro, mas talvez eu tente me tornar o campeão.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>A Viridian Forest é o nosso território! Meus insetos estão prontos para picar, morder e acabar com você!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, cara, acho que preciso treiná-los antes que eles evoluam.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, cara, acho que preciso treiná-los antes que eles evoluam.</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Os insetos podem ser pequenos, mas eles vão se aglomerar em cima de você!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Se você não tiver consideração pelos mais velhos, será arrancado pela raiz!</speech>
        </speeches>
        <speeches id="2">
            <speech>Os frutos de minha vitória... já foram colhidos...</speech>
        </speeches>
        <speeches id="3">
            <speech>Os frutos de minha vitória... já foram colhidos...</speech>
        </speeches>
        <speeches id="4">
            <speech>Aposto que isso deixou seu cabelo branco!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>O fato de ser chamada de Bela não me entusiasma nem um pouco. Parece apenas um elogio barato.</speech>
        </speeches>
        <speeches id="2">
            <speech>É simplesmente assustador quando alguém usa elogios para chamar sua atenção. Que horror!</speech>
        </speeches>
        <speeches id="3">
            <speech>É simplesmente assustador quando alguém usa elogios para chamar sua atenção. Que horror!</speech>
        </speeches>
        <speeches id="4">
            <speech>Certos tipos de pessoas usam conversa fiada, independentemente de sua aparência. Isso não tem sentido.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Vim aqui por causa do meu irmão mais velho, que sempre se esconde em seu quarto.</speech>
        </speeches>
        <speeches id="2">
            <speech>Gostaria que meu irmão mais velho saísse de seu quarto e brincasse comigo...</speech>
        </speeches>
        <speeches id="3">
            <speech>Gostaria que meu irmão mais velho saísse de seu quarto e brincasse comigo...</speech>
        </speeches>
        <speeches id="4">
            <speech>Meu irmão mais velho, olhe para fora pelo menos uma vez! Eu ganhei para você, então saia e brinque!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Muito bem! Aqui vou eu! Vou lhe mostrar meu poder!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau! Vocês são incríveis! Estou impressionado e surpreso!</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau! Vocês são incríveis! Estou impressionado e surpreso!</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está impressionado? Surpreso? Com o poder do meu Pokémon?!</speech>
        </speeches>
    </conversation>
    <!-- Buzzing Hide & Seek Quest Speeches -->
    <conversation id="7">
        <speeches id="1">
            <speech>Oh não! Estávamos brincando de esconde-esconde, mas agora meu irmão não voltou!</speech>
            <speech>Ele disse que ia se esconder bem no fundo da floresta... e então ouvimos um zumbido.</speech>
            <speech>Zumbido alto. Por favor, me ajude a encontrá-lo!</speech>
            <speech>Ele saiu com outros dois amigos, então talvez eles possam ajudar?</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Eu o vi perto de uma grande árvore oca. Ele disse que aquele era o melhor esconderijo de todos!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Ouvi um zumbido perto daquela parte da floresta e corri de volta... Eu estava com medo.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Obrigado por me salvar... Aquele Beedrill não estava apenas com raiva.</speech>
            <speech>Ele estava assustado... e era maior do que os outros.</speech>
            <speech>Nunca mais vou me esconder tão fundo na floresta!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>BZZZZZZT! O enxame de Beedrill está agitado e pronto para atacar!</speech>
        </speeches>
        <speeches id="2">
            <speech>O Beedrill fugiu de volta para sua colméia. A floresta está segura novamente.</speech>
        </speeches>
        <speeches id="3">
            <speech>BZZZZZZT! O enxame de Beedrill bloqueia seu caminho!</speech>
        </speeches>
        <speeches id="4">
            <speech>O Beedrill fugiu de volta para sua colméia. A floresta está segura novamente.</speech>
        </speeches>
    </conversation>
    <conversation id="14">
        <speeches id="1">
            <speech>Olá! Eu sou Ash Ketchum, de Pallet Town!</speech>
            <speech>Estou a caminho de me tornar o melhor treinador de Pokémon - como ninguém jamais foi!</speech>
            <speech>Você parece ter o que é preciso para ser um ótimo treinador também!</speech>
            <speech>Que tal uma batalha? Pikachu e eu estamos sempre prontos para um desafio!</speech>
            <speech>Vamos ver o que você e seu Pokémon podem fazer!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau! Essa foi uma batalha incrível!</speech>
            <speech>Você realmente sabe como trazer o melhor de seus Pokémon!</speech>
            <speech>Ei, eu tenho algo especial para você - um {COLOR=GOLD}Pokémon{ENDCOLOR} de presente que eu acho que seria perfeito para a sua equipe!</speech>
            <speech>Esse pequenino tem uma habilidade realmente única que a maioria dos treinadores nunca viu antes!</speech>
            <speech>Sei que você cuidará muito bem dele! Cuide bem de seu novo parceiro, ok?</speech>
            <speech>Talvez um dia voltemos a nos enfrentar - estarei ainda mais forte da próxima vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>Olá! É bom vê-lo novamente!</speech>
            <speech>Como está indo sua jornada Pokémon? Aposto que está ficando mais forte a cada dia!</speech>
        </speeches>
        <speeches id="4">
            <speech>Muito bem! O Pikachu e eu formamos uma boa equipe, não é mesmo?</speech>
            <speech>Mas você foi muito forte! Continue treinando duro com seus Pokémon!</speech>
            <speech>Aqui, pegue esse Pokémon especial {COLOR=GOLD}{ENDCOLOR} mesmo assim - ele tem algumas habilidades incríveis!</speech>
            <speech>Sei que você será um ótimo instrutor para isso!</speech>
            <speech>Vamos lutar novamente quando estivermos ainda mais fortes!</speech>
        </speeches>
        <speeches id="5">
            <speech>Ah, não! Parece que sua festa está cheia e suas caixas de PC também!</speech>
            <speech>Você precisará abrir espaço antes que eu possa lhe dar esse Pokémon especial!</speech>
            <speech>Volte quando tiver espaço - acho que você vai gostar muito desse pequenino!</speech>
        </speeches>
    </conversation>
    <conversation id="15">
        <speeches id="1">
            <speech>Nossa! Você me encontrou!</speech>
            <speech>Achei que tinha escolhido o esconderijo perfeito!</speech>
            <speech>Você é muito bom nesse jogo de esconde-esconde!</speech>
            <speech>Mas agora que você me encontrou, temos que batalhar primeiro - essas são as regras!</speech>
            <speech>Vamos ver se você é tão bom em batalhas quanto em buscas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Essa foi uma batalha incrível!</speech>
            <speech>Você e seu Pokémon trabalham muito bem juntos!</speech>
            <speech>Ok, você ganhou essa rodada de esconde-esconde - eu saio agora!</speech>
            <speech>Continue procurando os outros dois! Eles estão escondidos em outro lugar da floresta!</speech>
            <speech>Boa sorte para encontrá-los - eles escolheram locais ainda mais complicados do que os meus!</speech>
        </speeches>
        <speeches id="3">
            <speech>Obrigado por brincar de esconde-esconde conosco!</speech>
            <speech>Foi muito divertido! Deveríamos jogar de novo amanhã!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hehe! Vou poder ficar escondido por mais algum tempo!</speech>
            <speech>Mas você esteve muito perto de vencer! Tente novamente!</speech>
            <speech>Eu acredito em você - você definitivamente pode me vencer se continuar tentando!</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>Uau! Você realmente me encontrou!</speech>
            <speech>Estou me escondendo aqui há muito tempo! A maioria das pessoas nunca pensa em olhar com cuidado!</speech>
            <speech>Você deve ter olhos muito atentos para me ver!</speech>
            <speech>Já que você encontrou meu esconderijo, vamos fazer uma batalha Pokémon!</speech>
            <speech>Tenho treinado minha equipe enquanto espero - vamos ver o que você tem!</speech>
        </speeches>
        <speeches id="2">
            <speech>Batalha incrível! Seus Pokémon são super fortes!</speech>
            <speech>Acho que não posso mais ficar escondido - você mereceu!</speech>
            <speech>Já é um a menos! Você ainda precisa encontrar mais dois amigos!</speech>
            <speech>Eles provavelmente estão nos observando agora mesmo de seus esconderijos!</speech>
            <speech>Continue pesquisando - você está se saindo muito bem nesse jogo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oi de novo! Quer brincar de esconde-esconde amanhã?</speech>
            <speech>Talvez eu encontre um esconderijo ainda melhor da próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, cara! Achei que poderia ficar escondido por mais tempo!</speech>
            <speech>Mas você quase me venceu! Continue tentando!</speech>
            <speech>Sei que você pode vencer se não desistir!</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>De jeito nenhum! Como você me encontrou?</speech>
            <speech>Eu tinha tanta certeza de que ninguém pensaria em dar uma olhada por aqui!</speech>
            <speech>Você é como um super detetive ou algo assim!</speech>
            <speech>Bem, já que você me encontrou de forma justa, vamos batalhar!</speech>
            <speech>Meus Pokémon estão ficando inquietos só de ficarem escondidos aqui!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau! Essa batalha foi incrível!</speech>
            <speech>Você realmente sabe como comandar seus Pokémon em batalha!</speech>
            <speech>Tudo bem, tudo bem, você me pegou! Vou sair do meu esconderijo!</speech>
            <speech>Dois já foram, falta mais um! O último amigo está muito bem escondido!</speech>
            <speech>Você precisará ser extremamente cuidadoso para encontrar o último!</speech>
        </speeches>
        <speeches id="3">
            <speech>Olá! Pronto para outra rodada de esconde-esconde?</speech>
            <speech>Da próxima vez, vou procurar um local ainda mais secreto!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ufa! Posso continuar me escondendo por enquanto!</speech>
            <speech>Mas essa foi uma batalha muito acirrada! Você está ficando mais forte!</speech>
            <speech>Não desista - eu sei que você pode me vencer!</speech>
        </speeches>
    </conversation>
    <conversation id="18">
        <speeches id="1">
            <speech>Puxa! Você me encontrou!</speech>
            <speech>Eu tinha certeza de que estava completamente invisível!</speech>
            <speech>Você deve ter uma incrível capacidade de observação!</speech>
            <speech>Já que a brincadeira acabou, que tal fazermos uma batalha Pokémon?</speech>
            <speech>Tenho praticado alguns movimentos novos enquanto me escondo - prepare-se!</speech>
        </speeches>
        <speeches id="2">
            <speech>Foi uma batalha muito emocionante!</speech>
            <speech>Você e sua equipe realmente deram tudo de si!</speech>
            <speech>Tudo bem, você venceu! Vou parar de me esconder agora!</speech>
            <speech>Você está muito perto de ganhar o jogo inteiro!</speech>
            <speech>Só falta encontrar mais um amigo e você terá encontrado todos nós!</speech>
        </speeches>
        <speeches id="3">
            <speech>Excelente trabalho com o jogo de esconde-esconde!</speech>
            <speech>Nós nos divertimos muito! Vamos jogar novamente em breve!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim! Posso ficar escondido por mais algum tempo!</speech>
            <speech>Mas você está lutando muito bem! Continuem assim!</speech>
            <speech>Tenho fé que você me vencerá na próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="19">
        <speeches id="1">
            <speech>Eek! Você me encontrou!</speech>
            <speech>Eu estava tão quieto e calmo - como você me viu?</speech>
            <speech>Você é como um mestre em jogos de esconde-esconde!</speech>
            <speech>Agora temos que lutar, já que você encontrou meu esconderijo!</speech>
            <speech>Meus Pokémon estão prontos para lhe mostrar o que temos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Que batalha incrível! Você é tão habilidoso!</speech>
            <speech>Seus Pokémon realmente confiam em você - eu posso dizer!</speech>
            <speech>Ok, você me pegou de jeito!</speech>
            <speech>Esse é outro encontrado! Continuem assim!</speech>
            <speech>Os outros provavelmente estão ficando nervosos por você ser tão bom nisso!</speech>
        </speeches>
        <speeches id="3">
            <speech>Obrigado por brincar conosco! Esse foi o melhor jogo de esconde-esconde de todos os tempos!</speech>
            <speech>Teremos que pensar em lugares ainda melhores da próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! Meu esconderijo está seguro por enquanto!</speech>
            <speech>Mas você quase venceu essa batalha! Por muito pouco!</speech>
            <speech>Continue tentando - acredito que você conseguirá!</speech>
        </speeches>
    </conversation>
    <conversation id="20">
        <speeches id="1">
            <speech>Oh, meu Deus! Você realmente me encontrou!</speech>
            <speech>Subi em um lugar tão bom achando que ninguém iria olhar!</speech>
            <speech>Você é definitivamente o melhor buscador com quem já jogamos!</speech>
            <speech>Já que você se esforçou tanto para me encontrar, vamos ter uma batalha épica!</speech>
            <speech>Meu Pokémon e eu estávamos esperando por um bom desafio!</speech>
        </speeches>
        <speeches id="2">
            <speech>Incrível! Essa foi uma das melhores batalhas que já tive!</speech>
            <speech>Você realmente trouxe à tona o melhor de nossas duas equipes!</speech>
            <speech>Muito bem, você me pegou! Entrego meu esconderijo!</speech>
            <speech>Você já está quase terminando o jogo!</speech>
            <speech>Só falta encontrar mais um amigo - boa sorte!</speech>
        </speeches>
        <speeches id="3">
            <speech>Foi um jogo muito divertido! Obrigado por jogar conosco!</speech>
            <speech>No mesmo horário amanhã? Nós adoramos esconde-esconde!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ufa! Vou poder manter meu esconderijo em segredo por mais algum tempo!</speech>
            <speech>Mas, nossa, você é muito forte! Foi por pouco!</speech>
            <speech>Não desista - você pode me vencer!</speech>
        </speeches>
    </conversation>
    <conversation id="21">
        <speeches id="1">
            <speech>Ahhh! Você me encontrou no meu esconderijo super secreto!</speech>
            <speech>Esse era para ser o melhor esconderijo!</speech>
            <speech>Você deve ser o melhor jogador de esconde-esconde de todos os tempos!</speech>
            <speech>Bem, já que você me encontrou, temos que batalhar - essa é a regra!</speech>
            <speech>Vou lhe mostrar por que fui escolhido para o desafio final!</speech>
        </speeches>
        <speeches id="2">
            <speech>UAU! Essa foi a batalha mais incrível de todas!</speech>
            <speech>Você realmente é um instrutor incrível!</speech>
            <speech>Parabéns! Você encontrou todos nós e venceu todas as batalhas!</speech>
            <speech>Você é oficialmente o campeão de esconde-esconde!</speech>
            <speech>Todos nós nos divertimos muito brincando com você hoje!</speech>
        </speeches>
        <speeches id="3">
            <speech>Você foi incrível no esconde-esconde! Que jogo fantástico!</speech>
            <speech>Teremos que pensar em locais ainda mais desafiadores para a próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim! O esconderijo definitivo continua invicto!</speech>
            <speech>Mas essa foi uma batalha tão acirrada! Você é incrivelmente forte!</speech>
            <speech>Sei que você me pegará da próxima vez - continue tentando!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="2" name="Butterfree" speed="1" sprite="12" type="pokemon" x="68" y="33">
        <path>RIGHTx5,DOWNx1,LEFTx5,UPx1</path>
        <onCollisionSpeech gap="4">Butterfreeeeeee</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Jacob" speed="1" sprite="58" type="npc" x="30" y="77">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Uma vez vi um Kakuna piscar...</speech>
        <speech>Jure!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Beedrill" speed="1" sprite="15" type="pokemon" x="15" y="61">
        <path>DOWNx4,RIGHTx4,UPx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Beeedrilll!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="6" name="Adam" randomRotation="false" sprite="49" x="23" y="60">
        <speech>Essa floresta é o lar de muitos Pokémon do tipo inseto e outros que preferem a sombra.</speech>
        <speech>Você pode até encontrar um Pikachu!</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Pikachu" speed="1" sprite="25" type="pokemon" x="49" y="54">
        <path>DOWNx1,LEFTx4,RIGHTx4,UPx1</path>
        <onCollisionSpeech gap="4">Pikkkaa!</onCollisionSpeech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="8" name="Markus" randomRotation="false" sprite="5" x="54" y="65">
        <speech>Hmmm... Será que essa estátua tem algum significado para atrair Pokémon para cá?</speech>
        <speech>Que diabo, de onde ele veio em primeiro lugar.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="9" name="Pinsir" speed="1" sprite="127" type="pokemon" x="56" y="48">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Pinnnsiiiir!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="10" name="Nathan" randomRotation="true" sprite="71" x="54" y="82">
        <speech>Alguns Pokémon se escondem durante o dia e só saem à noite.</speech>
        <speech>Que legal, não é?!</speech>
    </npc>
    <movingNpc direction="DOWN" id="13" name="Wormadam" speed="1" sprite="413" type="pokemon" x="13" y="32">
        <path>DOWNx1,LEFTx3,RIGHTx3,UPx1</path>
        <onCollisionSpeech gap="4">Wormmaaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Ashley" speed="1" sprite="82" type="npc" x="49" y="10">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Tudo o que eu quero é um Shuckle. Eu até faltei à escola por causa disso!</speech>
        <speech>Vou me meter em problemas em breve...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Shuckle" shouldSleep="" speed="1" sprite="213" type="pokemon" x="74" y="12">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Shuuuckle?</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Heracross" speed="1" sprite="214" type="pokemon" x="76" y="77">
        <path>DOWNx1,LEFTx5,RIGHTx5,UPx1</path>
        <onCollisionSpeech gap="4">Herrraaa!</onCollisionSpeech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="17" name="Simon" randomRotation="true" sprite="111" x="72" y="76">
        <speech>Supostamente, há segredos escondidos na Viridian Forest.</speech>
        <speech>O que será que são?</speech>
    </npc>
    <movingNpc direction="RIGHT" id="18" name="Pikachu" shouldSleep="" speed="1" sprite="25" type="pokemon" x="55" y="95">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Pikaaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="1" name="Eliza" speed="1" sprite="68" type="npc" x="72" y="37">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Mmm... Butterfree... Não pegue meu Pecha Berry.</speech>
    </movingNpc>
</npcs>