<npcs>
    <npc direction="UP" id="1000" name="Sailor Orin" sprite="11" x="47" y="34">
        <speech>Baleia, baleia, baleia... o que temos aqui?</speech>
        <speech>O que você sabe sobre a Marine Line, garoto?</speech>
        <speech>Então... nada? Nesse caso, deixe-me esclarecê-lo.</speech>
        <speech>A Marine Line conecta Lehar Town ao arquipélago ao norte, que é inacessível de outra forma.
        </speech>
        <speech>Como assim, você pergunta? A resposta é simples: o caminho para as ilhas está cheio de redemoinhos.</speech>
        <speech>E, por causa disso, marinheiros como eu não podem ir até lá por mar, entende?</speech>
    </npc>
    <npc direction="LEFT" id="1001" name="Fisherman Min" sprite="16" x="28" y="50">
        <speech>Este é um ótimo local de pesca.</speech>
        <speech>Oh, espere! Há algo na linha! ...</speech>
        <speech>aaannnd ... é outro Magikarp. Pfft, minha sorte é patética!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Ei, $PLAYER_NAME. Estou bloqueando a entrada do ginásio contra esses grunhidos malignos.</speech>
            <speech>Vamos ajudar a Izumi e acabar com todos esses grunhidos do mal desta cidade!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Saudações! Bem-vindo à Skynet Travel Technologies!</speech>
            <speech>Você gostaria de viajar para algum lugar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Isso é lamentável. Volte sempre que desejar viajar para outro lugar.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hmm ... vamos tentar conseguir o terceiro distintivo primeiro.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Estou me sentindo um tanto generoso agora, então deixe-me fazer uma pergunta, garoto:</speech>
            <speech>Você quer um brinde? Acho que é assim que se chama hoje em dia</speech>
        </speeches>
        <speeches id="2">
            <speech>Interessante, você parece ser diferente dos outros.</speech>
        </speeches>
        <speeches id="3">
            <speech>Aqui está, então. Você é como os outros...</speech>
        </speeches>
        <speeches id="4">
            <speech>Retorno em 3 horas. Talvez eu me sinta generoso novamente, quem sabe</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Você venceu meus dois irmãos mais novos, hein?</speech>
            <speech>Imagino que esteja se sentindo muito confiante agora, e não o culpo. Mas eu sou muito mais forte do que qualquer um deles, então vamos ver o que você tem!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você é bom, hein! Ou talvez eu não seja tão bom assim?</speech>
            <speech>Pfft, bobagem! Você é bom, certo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Podemos batalhar amanhã também, se você estiver disposto a isso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu lhe disse que sou forte...</speech>
        </speeches>
        <speeches id="5">
            <speech>Você ainda não é bom o suficiente para lutar comigo.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Saudações! Bem-vindo ao sistema de caixas eletrônicos do Banco de Jvaloh!</speech>
            <speech>Você gostaria de sacar ou depositar dinheiro?</speech>
        </speeches>
        <speeches id="2">
            <speech>Retorne sempre que desejar fazer uma transação.</speech>
        </speeches>
        <speeches id="3">
            <speech>Esse recurso está disponível somente para pessoas com uma "associação ao banco".</speech>
            <speech>Para todos os não associados, a agência principal do nosso banco na cidade de Bijli está disponível para uso.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>O que está fazendo aqui?</speech>
        </speeches>
        <speeches id="2">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="3">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="4">
            <speech>Espero que você nunca mais mostre seu rosto.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>O que está fazendo aqui?</speech>
        </speeches>
        <speeches id="2">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="3">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="4">
            <speech>Espero que você nunca mais mostre seu rosto.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>O que está fazendo aqui?</speech>
        </speeches>
        <speeches id="2">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="3">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="4">
            <speech>Espero que você nunca mais mostre seu rosto.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>O que está fazendo aqui?</speech>
        </speeches>
        <speeches id="2">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="3">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="4">
            <speech>Espero que você nunca mais mostre seu rosto.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>O que está fazendo aqui?</speech>
        </speeches>
        <speeches id="2">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="3">
            <speech>Garoto, você precisa sair dessa região.</speech>
        </speeches>
        <speeches id="4">
            <speech>Espero que você nunca mais mostre seu rosto.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Eu deveria derrotar todos os grunhidos antes de tentar falar com esse cara.</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>Você de novo?</speech>
            <speech>O que você está procurando aqui? Doces?</speech>
            <speech>Garotinho, está tudo pronto. Já capturamos o Suicune.</speech>
            <speech>Agora, passaremos para a próxima fase de nosso plano.</speech>
            <speech>No entanto, fez um bom trabalho ao derrotar esses fracos.</speech>
        </speeches>
    </conversation>
    <conversation id="14">
        <speeches id="1">
            <speech>Olá $PLAYER_NAME.</speech>
            <speech>Acabei de ganhar meu terceiro emblema e conversei com Izumi sobre o motivo da captura do Suicune.</speech>
            <speech>Ela não tem certeza de si mesma, mas está preocupada.</speech>
            <speech>Vamos continuar nossa jornada e tentar descobrir quem está por trás de toda essa destruição e detê-los.</speech>
            <speech>Izumi está esperando por você, boa sorte com sua batalha na academia.</speech>
        </speeches>
    </conversation>

    <conversation id="15">
        <speeches id="1">
            <speech>Oh, ei, $PLAYER_NAME!</speech>
            <speech>Parabéns pelo 3º distintivo de ginástica.</speech>
            <speech>Eu estava saindo da cidade, mas queria conversar com você antes de partir.</speech>
            <speech>Quero ver o quanto nós dois avançamos desde a última batalha.</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você é realmente forte.</speech>
            <speech>Não estou muito longe, considerando que esta é minha primeira vez como treinador de Pokémon.</speech>
            <speech>A propósito, o Ace Trainer que está por perto me disse que há pessoas malignas à frente.</speech>
            <speech>Vamos ser cuidadosos. Vejo vocês por aí.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau, você é realmente forte.</speech>
            <speech>Não estou muito longe, considerando que esta é minha primeira vez como treinador de Pokémon.</speech>
            <speech>A propósito, o Ace Trainer que está por perto me disse que há pessoas malignas à frente.</speech>
            <speech>Vamos ser cuidadosos. Vejo vocês por aí.</speech>
        </speeches>
        <speeches id="4">
            <speech>Uh oh! Acabei de derrotá-lo? Sinto muito...</speech>
            <speech>Você foi feito para ser forte...</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="16">
        <speeches id="1">
            <speech>Então você é o garoto que trouxe o equilíbrio de volta a Jvaloh...</speech>
            <speech>Bastante jovem, devo dizer...</speech>
            <speech>De qualquer forma, meditei durante 50 anos de minha vida para poder falar telepaticamente com Suicune.</speech>
            <speech>Eu fiz isso para poder proteger Jvaloh de qualquer perigo invisível. E veja como isso aconteceu</speech>
            <speech>Você quer cuidar do Suicune? Hmm, depois do que aconteceu em Jvaloh, acho que o Suicune não se importará com um mestre.</speech>
            <speech>Mas para que eu possa convocá-lo para você, preciso testar sua força.</speech>
            <speech>Derrote-me e eu invocarei o Suicune para você!</speech>
        </speeches>
        <speeches id="2">
            <speech>Saia da frente!</speech>
            <speech>...</speech>
            <speech>Suicune apareceu agora em Jvaloh.</speech>
            <speech>Boa sorte, treinador!</speech>
        </speeches>
        <speeches id="3">
            <speech>Não tão cedo, garoto. Levo tempo para reunir energia para me comunicar telepaticamente.</speech>
            <speech>Volte depois de $DAYS.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você precisa treinar mais. Volte quando estiver pronto.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
</npcs>