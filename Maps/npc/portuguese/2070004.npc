<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>A escuridão das cavernas não incomoda meus insetos. Eles se desenvolvem nas sombras!</speech>
        </speeches>
        <speeches id="2">
            <speech>Talvez eles precisem de mais luz solar, afinal...</speech>
        </speeches>
        <speeches id="3">
            <speech>Talvez eles precisem de mais luz solar, afinal...</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Mesmo nas cavernas mais profundas, os insetos sempre encontrarão uma maneira de rastejar para cima!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Sou iniciante, mas farei o meu melhor! Darei tudo o que puder. Me observe!</speech>
        </speeches>
        <speeches id="2">
            <speech>Desculpe se o aborreci! Vou me esforçar mais na próxima vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>Desculpe se o aborreci! Vou me esforçar mais na próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh! Esqueci de terminar nossa batalha! Ainda preciso estudar mais...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hehehe Você não tem a menor chance! Meus cálculos garantem a vitória!</speech>
        </speeches>
        <speeches id="2">
            <speech>ERRO ERRO Isso não estava em minha simulação!</speech>
        </speeches>
        <speeches id="3">
            <speech>ERRO ERRO Isso não estava em minha simulação!</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Conhecimento é poder! Minha estratégia foi perfeita!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>As minissaias são inacreditáveis, certo?</speech>
        </speeches>
        <speeches id="2">
            <speech>É preciso aproveitar uma moda passageira enquanto se pode, certo?</speech>
        </speeches>
        <speeches id="3">
            <speech>É preciso aproveitar uma moda passageira enquanto se pode, certo?</speech>
        </speeches>
        <speeches id="4">
            <speech>Elas são fáceis de vestir e bonitas. Qualquer coisa que não seja uma minissaia seria inacreditável, certo?</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>As cavernas são escuras e assustadoras? Não! Elas são apenas um playground gigante para treinadores durões como eu!</speech>
        </speeches>
        <speeches id="2">
            <speech>Talvez eu devesse ter trazido uma lanterna e um Pokémon mais forte.</speech>
        </speeches>
        <speeches id="3">
            <speech>Talvez eu devesse ter trazido uma lanterna e um Pokémon mais forte.</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha! Acho que sou o rei da caverna! Melhor sorte da próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Montanhas, cavernas e batalhas difíceis, isso é o que eu chamo de uma verdadeira aventura!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que tenho que treinar mais... assim como escalar uma trilha íngreme!</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que tenho que treinar mais... assim como escalar uma trilha íngreme!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah! A resistência vence a batalha! Assim como em uma caminhada, devagar e sempre você chega ao topo!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Geodude" speed="1" sprite="74" type="pokemon" x="6" y="47">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Geoooo!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Roggenrola" speed="1" sprite="524" type="pokemon" x="40" y="39">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">roggg-roll!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Geodude" speed="1" sprite="74" type="pokemon" x="57" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Geooooo!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="4" name="Paras" speed="1" sprite="46" type="pokemon" x="19" y="16">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Parr!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="5" name="Cubone" speed="1" sprite="104" type="pokemon" x="10" y="12">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Cuuuuu!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="6" name="Bella" randomRotation="true" sprite="12" x="44" y="19">
        <speech>Meu Deus, a Clefairy é muuuito fofa!!!</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Clefairy" speed="1" sprite="35" type="pokemon" x="32" y="21">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Clefaiiirry!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="8" name="Sarah" randomRotation="false" sprite="53" x="62" y="45">
        <speech>Roggenrola é muito raro de se encontrar.</speech>
        <speech>Elas são muito parecidas com uma pedra normal!</speech>
    </npc>
</npcs>