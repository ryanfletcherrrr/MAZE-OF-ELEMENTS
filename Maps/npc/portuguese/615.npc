<npcs>
    <npc direction="RIGHT" hidden="false" id="1" name="Fisherman Ben" randomRotation="false" sprite="16" x="15" y="15">
        <speech>Tenha cuidado nessas águas!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Horsea" shouldSleep="" speed="1" sprite="116" type="pokemon" x="30" y="21">
        <path>LEFTx4, RIGHTx4</path>
        <onCollisionSpeech gap="4">!!!</onCollisionSpeech>
        <speech>*Você assusta Horsea</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Tropius" shouldSleep="" speed="1" sprite="357" type="pokemon" x="49" y="15">
        <path>LEFTx3, RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Venomoth" shouldSleep="" speed="1" sprite="49" type="pokemon" x="53" y="6">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Timmy" shouldSleep="" speed="1" sprite="24" type="npc" x="46" y="7">
        <path>LEFTx6, DOWNx1, RIGHTx6, UPx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Ouvi dizer que há um novo Pokémon inseto por aqui!</speech>
        <speech>VENHA PARA A TIMMY!!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Golduck" shouldSleep="" speed="1" sprite="55" type="pokemon" x="25" y="9">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>Você olha para baixo, se perdeu e veio aqui para relaxar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está! Você não é tão ruim assim.</speech>
        </speeches>
        <speeches id="3">
            <speech>Aí está! Você não é tão ruim assim.</speech>
        </speeches>
        <speeches id="4">
            <speech>Não é bom!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Quero um outro Bird, ouvi dizer que há um bem legal aqui.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vou continuar procurando por um</speech>
        </speeches>
        <speeches id="3">
            <speech>Vou continuar procurando por um</speech>
        </speeches>
        <speeches id="4">
            <speech>Vou continuar procurando por um</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>O que está vendo? Meu nome é Slim</speech>
        </speeches>
        <speeches id="2">
            <speech>Por que você ainda está aqui?</speech>
        </speeches>
        <speeches id="3">
            <speech>Por que você ainda está aqui?</speech>
        </speeches>
        <speeches id="4">
            <speech>É assim que fazemos isso!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Ah, o campeão chega. Os ventos fortes da Rota 227 são perfeitos para aprimorar nossas habilidades, não é?</speech>
            <speech>Meu Kingdra está ansioso por um desafio real. E o seu? Pronto para entrar em conflito com as ondas?</speech>
        </speeches>
        <speeches id="2">
            <speech>Impressionante! Você tem as características de um verdadeiro Mestre dos Dragões, sem dúvida alguma.</speech>
            <speech>Mas lembre-se, as profundezas do oceano são infinitas. Sempre há mais para dominar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Estamos nos segurando, não é? O rugido do mar não é para os fracos de coração.</speech>
            <speech>Venha me encontrar quando estiver pronto para mergulhar fundo na batalha, com Kingdra ao seu lado.</speech>
        </speeches>
        <speeches id="4">
            <speech>A vitória é sua, campeão. Você passou por esse desafio com louvor.</speech>
            <speech>Que essa vitória o guie enquanto você navega pelo vasto mar de batalhas que está por vir.</speech>
        </speeches>
        <speeches id="5">
            <speech>Os segredos do oceano são vastos, e seus guardiões são formidáveis. Somente aqueles que realmente entendem as profundezas podem invocar sua força.</speech>
            <speech>Um certo dragão das profundezas ainda pode ter a chave para me superar. Procure-o, se você tiver coragem.</speech>
        </speeches>
    </conversation>
</npcs>