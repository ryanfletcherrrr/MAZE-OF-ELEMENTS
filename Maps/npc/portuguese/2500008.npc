<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=YELLOW}Por favor, selecione um andar.{ENDCOLOR}</speech>
            <speech>Os botões aguardam sua entrada, prontos para levá-lo aonde você precisa.</speech>
        </speeches>
        <speeches id="2">
            <speech>{O console do elevador se fecha com um clique suave.</speech>
            <speech>Você precisará ativá-lo novamente se quiser usá-lo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{A porta está trancada. Talvez seja necessário um cartão-chave especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Você não deveria estar aqui! Se a Equipe Rocket descobrir que falei com você, estou acabado... mas talvez você possa pôr um fim a essa loucura.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu sabia que deveria ter passado mais tempo treinando... não apenas no laboratório.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu sabia que deveria ter passado mais tempo treinando... não apenas no laboratório.</speech>
        </speeches>
        <speeches id="4">
            <speech>Não quero brigar, mas não posso correr o risco de ser pego ajudando você. Cuidado!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Hah! Você não faz ideia de com quem está se metendo. A Silph Co. é só o começo, estou subindo até o topo da Equipe Rocket!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não, não, não! Isso não deveria ter acontecido! Minha grande chance, arruinada!</speech>
        </speeches>
        <speeches id="3">
            <speech>Não, não, não! Isso não deveria ter acontecido! Minha grande chance, arruinada!</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Estou indo a lugares importantes! Em breve, serei eu quem estará dando as ordens!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Você não deveria ter vindo aqui, garoto! {O Projeto T.E.R.A.{ENDCOLOR} é propriedade da Equipe Rocket{ENDCOLOR} agora!</speech>
            <speech>Essas unidades {COLOR=CYAN}Porygon{ENDCOLOR} estão respondendo muito bem às nossas modificações {COLOR=GOLD}Tera Energy{ENDCOLOR}!</speech>
            <speech>Meu terreno elétrico {COLOR=YELLOW}{ENDCOLOR} fritará seu Pokémon antes que você possa sequer piscar!</speech>
            <speech>É hora de ver o que a tecnologia armada {ENDCOLOR} pode realmente fazer!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impossível! Meus {COLOR=YELLOW} sistemas elétricos{ENDCOLOR} deveriam ser infalíveis!</speech>
            <speech>O protótipo {COLOR=CYAN}Porygon-Z{ENDCOLOR} ainda precisa de mais calibração...</speech>
            <speech>Mas não pense que isso acabou! {A Equipe Rocket tem planos maiores para este lugar!</speech>
        </speeches>
        <speeches id="3">
            <speech>Meu equipamento está queimado... O {COLOR=YELLOW}gerador de terreno elétrico{ENDCOLOR} está completamente quebrado.</speech>
            <speech>Você pode ter me detido, mas os outros {COLOR=RED}operativos da Rocket{ENDCOLOR} não serão tão fáceis!</speech>
            <speech>{O projeto T.E.R.A.{ENDCOLOR} é muito valioso para ser abandonado agora!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah! {A superioridade elétrica{ENDCOLOR} vence novamente!</speech>
            <speech>Meu {COLOR=CYAN}Porygon-Z{ENDCOLOR} e {COLOR=PURPLE}Magneton{ENDCOLOR} formam uma dupla tecnológica {COLOR=GOLD} imparável{ENDCOLOR}!</speech>
            <speech>Agora saia daqui antes que eu chame reforços!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Intern Mina" shouldSleep="" speed="1" sprite="7" type="npc" x="7" y="6">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Uma vez, derramei café em um ladrilho de dobra e me teletransportei para um armário.</speech>
        <speech>Fiquei lá por 3 horas. Sem arrependimentos.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Guardian Ryu" shouldSleep="" speed="1" sprite="126" type="npc" x="25" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Costumava limpar este chão quando o Game Boy original foi lançado. Peguei um Clefairy em um intervalo.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Executive Taro" randomRotation="false" sprite="75" x="36" y="14">
        <speech>Se alguém perguntar, estou em uma reunião crucial.</speech>
        <speech>Se eles insistirem, diga que é sobre o creme dental da marca Rattata.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Rattata" shouldSleep="" speed="1" sprite="19" type="pokemon" x="32" y="16">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>