<npcs>
    <conversation id="1">
        <!-- First Battle (Classic Blaine Style) -->
        <speeches id="1">
            <speech>{Hah! Bem-vindo, desafiador!</speech>
            <speech>Parece que você aguenta o calor, mas será que consegue resistir às minhas chamas?</speech>
            <speech>Eu sou {COLOR=ORANGE}Blaine{ENDCOLOR}, o mestre do tipo Fogo do Ginásio Cinnabar!</speech>
            <speech>Meus Pokémon queimam com uma intensidade inigualável e minha estratégia de batalha é tão explosiva quanto um vulcão em erupção!</speech>
            <speech>Se você acha que pode apagar minhas chamas, então dê um passo à frente! Vamos aumentar o calor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hah! Você atravessou minhas defesas!</speech>
            <speech>Aqui, pegue isto - o {COLOR=GOLD}Volcano Badge{ENDCOLOR} - prova de que você domou o inferno!</speech>
            <speech>E isso também -{COLOR=RED}TM50 Overheat{ENDCOLOR}.</speech>
            <speech>Um movimento devastador que se inflama com um poder inigualável, mas atenção - muito fogo pode queimar até mesmo as chamas mais fortes.</speech>
            <speech>Use-o com sabedoria e lembre-se: quanto mais forte o fogo, mais brilhante ele queima!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hah! Parece que você não aguentou o calor!</speech>
            <speech>Vá treinar, acenda sua fogueira e volte quando estiver pronto para enfrentar o inferno mais uma vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>O quê? Segundas intenções? Tem medo de se queimar?</speech>
            <speech>Tudo bem, mas quando estiver pronto para sentir o calor, você sabe onde me encontrar.</speech>
        </speeches>
        <!-- Repeated Battle (More Intense & Thematic) -->
        <speeches id="5">
            <speech>Ah-ha! De volta para mais? Você deve adorar brincar com fogo!</speech>
            <speech>{As chamas nunca ficam paradas - elas crescem, se espalham e consomem!</speech>
            <speech>Vamos ver se você consegue lidar com um desafio ainda mais quente!</speech>
        </speeches>
        <speeches id="6">
            <speech>Impressionante! Você enfrentou as chamas mais uma vez!</speech>
            <speech>{vitórias contra mim... e {COLOR=CYAN}$CONSECUTIVO{ENDCOLOR} seguidas?</speech>
            <speech>Seu fogo está aceso, mas será que vai continuar aceso para sempre?</speech>
        </speeches>
        <speeches id="7">
            <speech>Ah! Você achou que tinha me entendido?</speech>
            <speech>O fogo é imprevisível, selvagem, indomável - você nunca poderá controlá-lo totalmente!</speech>
            <speech>Volte quando suas chamas estiverem mais quentes!</speech>
        </speeches>
        <speeches id="8">
            <speech>Está desistindo agora? Estou vendo...</speech>
            <speech>Bem, o fogo não espera por ninguém! Quando estiver pronto para testar seus limites, eu estarei aqui!</speech>
        </speeches>
        <speeches id="9">
            <speech>Calma aí! Até mesmo as chamas mais quentes precisam de tempo para reacender!</speech>
            <speech>Volte em {COLOR=YELLOW}$DURATION{ENDCOLOR}, e verei se você aguenta o tranco mais uma vez!</speech>
        </speeches>
        <!-- Special Condition: Battle Requirement Not Met -->
        <speeches id="10">
            <speech>Espere! Você quer me desafiar, mas a sua equipe não tem o mesmo fogo interior!</speech>
            <speech>Para lutar comigo novamente, você deve ter {COLOR=RED} pelo menos 3 Pokémon do tipo Fogo{ENDCOLOR} em sua equipe.</speech>
            <speech>Volte quando suas chamas estiverem fortes o suficiente para me enfrentar!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>O fogo é feroz e selvagem... exatamente como meu estilo de batalha! Você consegue lidar com o calor?</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que minhas chamas se apagaram... Preciso atiçar mais o fogo da próxima vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que minhas chamas se apagaram... Preciso atiçar mais o fogo da próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>Já se esgotou? Você precisa aprender a abraçar as chamas, não a temê-las!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Você está prestes a enfrentar a força total da combustão, o calor bruto de uma reação química!</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu subestimei as variáveis! O fogo é caótico... e sua estratégia também. Preciso ajustar minhas equações.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu subestimei as variáveis! O fogo é caótico... e sua estratégia também. Preciso ajustar minhas equações.</speech>
        </speeches>
        <speeches id="4">
            <speech>Excelente. Quando a estratégia encontra a combustão controlada, a vitória é inevitável. A ciência prevalece!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Bem-vindo ao Cinnabar Gym! Estudei todos os tipos de fogo da Pokedex. Minha equipe foi otimizada para produzir o máximo de calor. Vamos testar sua estratégia!</speech>
        </speeches>
        <speeches id="2">
            <speech>Falha crítica! Meus cálculos estavam errados. Vou ajustar as estatísticas da minha equipe e desafiá-lo novamente!</speech>
        </speeches>
        <speeches id="3">
            <speech>Falha crítica! Meus cálculos estavam errados. Vou ajustar as estatísticas da minha equipe e desafiá-lo novamente!</speech>
        </speeches>
        <speeches id="4">
            <speech>Vitória confirmada! Meus tipos de fogo brilharam muito hoje. Fique por perto. Tenho curiosidades sobre o Cinnabar Volcano que você não encontrará em nenhum livro!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Eu crio os tipos Fire com cuidado, mas eles são lutadores ferozes. Pronto para sentir o calor?</speech>
        </speeches>
        <speeches id="2">
            <speech>Minha equipe não estava pronta dessa vez. Vamos descansar e voltar mais fortes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Minha equipe não estava pronta dessa vez. Vamos descansar e voltar mais fortes!</speech>
        </speeches>
        <speeches id="4">
            <speech>Bom trabalho, equipe! Vocês têm fogo, mas vamos treinar mais para a próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Eu disseco a volatilidade do tipo Fire há anos. Meus dados de batalha são impecáveis. Você acha que pode ser mais esperto do que minhas equações incríveis?</speech>
        </speeches>
        <speeches id="2">
            <speech>Impossível! Você embaralhou minhas fórmulas. Vou recalibrar meus óculos de proteção e incendiar sua estratégia da próxima vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Impossível! Você embaralhou minhas fórmulas. Vou recalibrar meus óculos de proteção e incendiar sua estratégia da próxima vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hipótese confirmada! Meu brilho ardente prevalece. Estude mais, treinador. Minhas anotações de laboratório ainda o superam!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Blaine me ensinou tudo! Seu fogo é lendário, e meus Pokémon cospem chamas igualmente quentes. Você está frito!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ai! Você apagou minha faísca. Blaine ainda é o verdadeiro rei do fogo. Vou treinar mais!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ai! Você apagou minha faísca. Blaine ainda é o verdadeiro rei do fogo. Vou treinar mais!</speech>
        </speeches>
        <speeches id="4">
            <speech>Está sentindo esse calor? O gênio de Blaine corre em minhas veias. Você precisará de mais para enfrentar o mestre!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Ei, você acha que pode suportar o calor? Meus Pokémon de fogo são super legais. Pronto para se queimar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você aumentou a temperatura! Vou me acalmar e tentar novamente.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau, você aumentou a temperatura! Vou me acalmar e tentar novamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Meus Pokémon são demais! Repense seu plano antes de enfrentar Blaine. O fogo está apenas começando!</speech>
        </speeches>
    </conversation>
</npcs>