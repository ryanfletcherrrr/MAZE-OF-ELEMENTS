<npcs>
    <movingNpc direction="DOWN" id="1" name="Zubat" speed="1" sprite="41" type="pokemon" x="13" y="6">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Zubat!</onCollisionSpeech>
        <speech>ZUUUUU!</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="2" name="Cooper" randomRotation="true" sprite="25" x="18" y="16">
        <speech>Um Zubat selvagem conseguiu entrar no Centro Pokémon...</speech>
        <speech>É hora de pegá-lo usando... minha poderosa rede de captura de insetos.</speech>
    </npc>

    <conversation id="7">
        <speeches id="1">
            <speech>Ei! Eu gosto muito de colecionar Pokémon, é o meu maior hobby! Mas escolher o próximo é um pouco difícil...</speech>
            <speech>Preciso de um pouco de tempo para pensar em qual Pokémon quero ver a seguir em minha coleção.</speech>
            <speech>Você poderia voltar mais tarde? Prometo que terei um Pokémon incrível para encontrarmos juntos!</speech>
            <speech>Retorne em $DURATION, e tenho certeza de que terei decidido um desafio superlegal para nós dois.</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="2">
            <speech>Olá! Nunca vi você por aqui antes. Estou em uma missão para me tornar um mestre Pokémon e preciso de sua ajuda!</speech>
            <speech>Primeiramente, estou muito curioso sobre a Marill. Ele é tão bonito e redondo, não acha?</speech>
            <speech>Você pode me mostrar um Marill no nível 12?</speech>
            <speech>Tenho algo especial para você, se fizer isso! Vai ser incrível, prometo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, você não quer? Tudo bem, eu acho. Talvez em outra ocasião!</speech>
            <speech>Se algum dia você encontrar uma Marill de nível 12 e quiser mostrá-la para mim, estarei aqui esperando!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim! Eu sabia que você estaria pronto para isso! Ver uma Marill nível 12 vai ser muito legal!</speech>
            <speech>E não se preocupe, eu tenho uma recompensa muito legal para você. Mal posso esperar para vê-la!</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>Você já encontrou uma Marill de nível 12? Estou pensando nisso sem parar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você realmente encontrou uma Marill de nível 12? Isso é muito legal! Posso vê-lo, por favor?</speech>
            <speech>Não acredito que vou ver um Marill de verdade de perto! Este vai ser o melhor dia de todos!</speech>
        </speeches>
        <speeches id="3">
            <speech>Sem sorte, hein? Está tudo bem. Marill pode ser bem difícil de encontrar, eu acho.</speech>
            <speech>Mas, se algum dia você encontrar um e quiser me mostrar, ficarei muito feliz!</speech>
        </speeches>
        <speeches id="4">
            <speech>Você conseguiu! Estou muito animado para ver a Marill! Este é o melhor dia de todos!</speech>
            <speech>Tenho que pensar em qual Pokémon quero ver em seguida... Mas, por enquanto, aqui está sua incrível recompensa!</speech>
            <speech>Vocês são os melhores! Muito obrigado por me ajudar com meu sonho de colecionar Pokémon!</speech>
        </speeches>
    </conversation>

    <conversation id="10">
        <speeches id="2">
            <speech>Olá! Você se lembra de mim? Ainda estou em minha busca para me tornar um mestre Pokémon, e adivinhe só? Preciso de sua ajuda novamente!</speech>
            <speech>Desta vez, estou super curioso sobre o Slakoth. Ele é tão frio e se move tão lentamente... É bem legal, não é?</speech>
            <speech>Você poderia me mostrar um Slakoth no nível 12? Aposto que ele é tão relaxado quanto dizem!</speech>
            <speech>Se você conseguir encontrar um para mim, terei algo muito legal para você. É uma promessa!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, não está interessado? Isso é uma pena. Mas sem pressão, de fato!</speech>
            <speech>Se você encontrar um Slakoth de nível 12 e quiser compartilhar, já sabe onde me encontrar!</speech>
        </speeches>
        <speeches id="4">
            <speech>Fantástico! Eu sabia que você estaria a bordo. Um Slakoth nível 12 é algo que eu preciso ver!</speech>
            <speech>E não se preocupe, preparei uma recompensa muito especial para seus esforços. Mal posso esperar para entregá-la a você!</speech>
        </speeches>
    </conversation>

    <conversation id="11">
        <speeches id="1">
            <speech>Então, você já conheceu um Slakoth nível 12? Aposto que ele é muito legal de se conviver!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você tem um Slakoth de nível 12? Isso é incrível! Você pode mostrá-lo para mim, por favor?</speech>
            <speech>Estou muito animado para ver como o Slakoth é realmente relaxado. Isso vai ser muito legal!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ainda não há Slakoth? Ah, está tudo bem. Afinal, eles adoram seus cochilos.</speech>
            <speech>Mas, se você encontrar um Slakoth de nível 12 e quiser compartilhar, estarei aqui esperando ansiosamente!</speech>
        </speeches>
        <speeches id="4">
            <speech>Vocês são os melhores! Ver um Slakoth de perto vai ser incrível. Obrigado por fazer isso!</speech>
            <speech>Tenho que começar a pensar no próximo Pokémon que quero ver... Mas antes, aqui está sua recompensa!</speech>
            <speech>Muito obrigado! Sua ajuda significa muito para mim e para meus sonhos de mestre Pokémon!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="2">
            <speech>Sou eu de novo! Graças a vocês, minha jornada Pokémon está ficando muito empolgante. Mas ainda há mais para explorar!</speech>
            <speech>Desta vez, estou totalmente intrigado com o Shroomish. Eles são tão misteriosos e cheios de musgo, certo?</speech>
            <speech>Você poderia encontrar e me mostrar um Shroomish no Nível 12? Aposto que é tão fascinante quanto parece!</speech>
            <speech>Assim como antes, tenho uma recompensa muito legal esperando por você. Você vai adorar!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmm, não está se sentindo bem? Tudo bem, não há pressa. Estou aqui sempre que você estiver pronto para compartilhar.</speech>
            <speech>Lembre-se, se você encontrar um Shroomish de nível 12 e quiser exibi-lo, serei todo ouvidos!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim! Eu sabia que você não me decepcionaria. Um Shroomish nível 12 com certeza será um espetáculo para se ver!</speech>
            <speech>E quanto à recompensa, acredite em mim, vale a pena o esforço. Mal posso esperar para ver o que você traz de volta!</speech>
        </speeches>
    </conversation>

    <conversation id="13">
        <speeches id="1">
            <speech>Conseguiu encontrar o Shroomish nível 12? Estou super curioso para ver um!</speech>
        </speeches>
        <speeches id="2">
            <speech>Você encontrou um Shroomish de nível 12? Isso é incrível! Posso dar uma olhada, por favor?</speech>
            <speech>Estou muito feliz por ver um Shroomish na vida real. Isso vai ser incrível!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ainda está procurando pelo Shroomish? Não se preocupe, eles podem ser um pouco evasivos.</speech>
            <speech>Mas se você conseguir um Shroomish nível 12, ficarei muito feliz em vê-lo. Mantenha-me informado!</speech>
        </speeches>
        <speeches id="4">
            <speech>Uau, você realmente conseguiu! Ver um Shroomish vai fazer meu dia feliz!</speech>
            <speech>Agora, deixe-me pensar em qual Pokémon devemos descobrir em seguida... Enquanto isso, aqui está sua merecida recompensa!</speech>
            <speech>Muito obrigado pela ajuda. Vocês estão realmente fazendo com que meus sonhos de mestre Pokémon se tornem realidade!</speech>
        </speeches>
        <speeches id="5">
            <speech>Muito obrigado por me mostrar todos esses Pokémon incríveis! Você realmente me inspirou.</speech>
            <speech>Sei que um dia me tornarei um mestre Pokémon, e tudo isso graças a vocês. Até lá, continuarei sonhando alto!</speech>
        </speeches>
    </conversation>

</npcs>