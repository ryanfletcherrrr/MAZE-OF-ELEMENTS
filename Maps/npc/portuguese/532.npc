<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ei, $PLAYER_NAME, você vai aceitar o desafio da academia?</speech>
            <speech>Nossa, você está cada vez mais difícil, não é mesmo?</speech>
            <speech>Eu? Bem, fui fazer compras na loja de departamentos e...</speech>
            <speech>Quero dizer, bem, é claro que tenho trabalhado em meu Pokédex, mas...</speech>
        </speeches>
        <speeches id="2">
            <speech>...</speech>
            <speech>Então, uh, $PLAYER_NAME. Boa sorte em seu desafio na academia.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>O anel é meu mar revolto.</speech>
            <speech>As ondas imponentes me moldaram.</speech>
            <speech>Crash! Crash! Crasher Wake!</speech>
            <speech>Crash! Crash! Crasher Wake!</speech>
            <speech>Eu sou o maremoto de poder que o levará embora!</speech>
            <speech>Apague o fogo, Crasher Wake!</speech>
            <speech>Fuja da eletricidade, Crasher Wake!</speech>
            <speech>Ah, ah, aaaah!</speech>
            <speech>O anel é o meu mar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Olá, rapaz e moça! Você está desafiando o líder do ginásio, não é?</speech>
            <speech>Vou lhe dizer agora, ela é jovem, mas é um gênio nato. Tentei treinar com ela e fiquei
                fiquei surpreso com sua resistência!
            </speech>
            <speech>Opa! É melhor eu lhe dizer quem eu sou!</speech>
            <speech>Sou o líder de ginásio com três ameaças: Pokémon, luta livre e música.</speech>
            <speech>Eu sou Crasher Wake do Pastoria Gym! Nós nos encontraremos novamente!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME! Por favor, você pode me ajudar?</speech>
            <speech>Alguns capangas da Equipe Galáctica tiraram meu Pokédex de mim.</speech>
            <speech>Preciso de sua ajuda para recuperá-lo. Estarei esperando em frente aos armazéns.</speech>
            <speech>Por favor, venha!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME! Por favor, você pode me ajudar?</speech>
            <speech>Você se lembra da Team Galactic? Aquelas pessoas horríveis? Eles tentaram roubar a pesquisa do Prof. Rowan
                Rowan em Jubilife, lembra?
            </speech>
            <speech>Eu os encontrei e eles levaram meu Pokédex.</speech>
            <speech>Por favor, preciso de sua ajuda. Batalhe e derrote esses caras para mim.</speech>
        </speeches>
        <speeches id="2">
            <speech>O que está acontecendo? Por que a Equipe Galáctica está nas ruas como se fosse a dona do lugar? $PLAYER_NAME,
                muito obrigado, sinceramente.
            </speech>
            <speech>Eu teria ficado perdido sem meu Pokédex. Ele é indispensável para ajudar o Prof. Rowan em seus
                estudos.
            </speech>
            <speech>Então, $PLAYER_NAME, o que você vai fazer agora? Estou pensando em ir para a Pokémon Mansion na
                Route 212.
            </speech>
            <speech>Ouvi dizer que eles mostram Pokémon raros aos visitantes de lá.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh... É aquele homem engraçado da Jubilife...</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu sinto muito. A Equipe Galáctica levou minha Pokédex, por isso fiquei muito irritado...</speech>
            <speech>Acabei de deixar escapar... ... ... Devo ir embora agora. Cuidado com a Equipe Galáctica.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ei, garoto, vá embora. Estamos ocupados planejando nosso próximo grande assalto.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, isso é uma droga. Nossos Pokémon são uns idiotas!</speech>
            <speech>Deveríamos receber novos da sede.</speech>
            <speech>Humph! Afinal, quem se importa com um Pokédex?</speech>
            <speech>A Equipe Galáctica vai acabar com todos os Pokémon do mundo...</speech>
            <speech>Não, no universo...</speech>
            <speech>Aqui está seu Pokédex.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Como se chama esse dispositivo que você tem?</speech>
            <speech>Um Pokédex? Hmm...</speech>
        </speeches>
        <speeches id="2">
            <speech>As coisas que tínhamos no armazém já foram transferidas para Pastoria City de qualquer maneira...</speech>
            <speech>Portanto, diremos "Você terá o seu!" e correremos como grunhidos que somos.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Garoto! Pare aí mesmo.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Não tenha medo, eu vim correndo. Ouvi falar de crianças brigando com a Equipe Galáctica.</speech>
            <speech>É claro que se trata de você.</speech>
        </speeches>
        <speeches id="2">
            <speech>Você me insulta na minha cara? Que falta de educação de sua parte.</speech>
        </speeches>
        <speeches id="3">
            <speech>Isso não tem importância. O mais interessante é o comportamento criminoso da Equipe Galactic.</speech>
            <speech>Eles tentam roubar os pertences de uma criança? A escala de sua criminalidade parece bastante minúscula.</speech>
            <speech>A trivialidade de suas ações as torna mais sinistras, talvez.</speech>
            <speech>O depósito deles precisa ser investigado. Venha comigo e vamos dar uma olhada!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Aí está! Quer dar uma olhada nessas antenas?</speech>
            <speech>Não sei o que elas fazem, mas são antenas enormes!</speech>
            <speech>Ei, é você! Aposto que você não se lembra de mim, mas eu ainda me lembro de você!</speech>
            <speech>Por sua causa, eles tiraram meu CLEFAIRY...</speech>
            <speech>Meu parceiro desistiu e voltou para seu país...</speech>
            <speech>Uau! Eu não sei de nada! Não sei nada sobre nenhuma chave de armazenamento!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Ah-hah! Você deixa isso para mim!</speech>
            <speech>A chave de armazenamento para entrar no esconderijo da Equipe Galáctica está bem aqui.</speech>
            <speech>Um ataque frontal não é possível.</speech>
            <speech>Mas podemos entrar em seu esconderijo. E então? Você vai entrar no esconderijo? Você tem seus motivos, certo?</speech>
            <speech>Muito bem. Dentro do armazém da Equipe Galáctica. Nós nos encontraremos lá. Prepare-se o melhor que puder.</speech>
            <speech>Vou me juntar a você em breve.</speech>
        </speeches>
    </conversation>
    <npc direction="RIGHT" hidden="false" id="1" name="Lass Sally" sprite="12" x="36" y="57">
        <speech>Eu queria ir ao Veilstone Game Corner, mas parece que ele está fechado.</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="2" name="Youngster Rylease" sprite="26" x="43" y="50">
        <speech>Há uma previsão exata de chegada do Veilstone Gamer Corner?</speech>
        <speech>Eles disseram que isso acontecerá "em breve".</speech>
        <speech>Eles me disseram que eu poderia ser um testador beta do cassino. Quando será a versão beta? Quando!!!</speech>
        <speech>Não acho que esteja chegando.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Spencer" sprite="26" x="16" y="49">
        <speech>Havia um cara aqui que cantava macho, macho man.</speech>
        <speech>A policial Jenny o afastou por perturbar a paz!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Youngster Tony" sprite="26" x="53" y="36">
        <speech>Fui lutar contra a quarta líder de ginásio, Maylene.</speech>
        <speech>Meu Torterra não foi capaz de vencer a equipe dela, preciso de mais pokemon na minha equipe.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Jackie" sprite="34" x="42" y="36">
        <speech>Seu foco precisa de mais foco!</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="6" name="Beauty Annie" sprite="6" x="38" y="29">
        <speech>As pessoas ficam me perguntando: "Annie, você está bem? Você está bem, Annie?"</speech>
        <speech>Eu estou bem. Eu estou bem. Ha! Espero que todos esses meus fãs venham me apoiar quando eu desafiar Maylene, a líder da academia.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="7" name="Lass Charlotte" sprite="12" x="32" y="31">
        <speech>Mal posso esperar para fazer compras com minha Cleffa!!!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="8" name="Cleffa" shouldSleep="" speed="1" sprite="173" type="pokemon" x="31" y="31">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Cleffa! Cleffa!</onCollisionSpeech>
        <speech>Cleffa! Cleffa!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Machamp" shouldSleep="" speed="1" sprite="68" type="pokemon" x="41" y="36">
        <path>DOWNx1,LEFTx1,UPx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Machamp!</onCollisionSpeech>
        <speech>Machamp!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="10" name="Elder Kerry" shouldSleep="" speed="1" sprite="39" type="npc" x="36" y="39">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Carry on wayward Trainer.</onCollisionSpeech>
        <speech>Continue com a Trainer rebelde. Haverá paz quando você terminar.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="11" name="Scientist Kenny" sprite="8" x="66" y="53">
        <speech>Por que os desenvolvedores Java usam óculos?</speech>
        <speech>Porque eles não são c#!</speech>
        <speech>Na verdade, estou aqui para descobrir se há algum fóssil nessas rochas</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="12" name="Beauty Belle" sprite="6" x="31" y="43">
        <speech>Eu gostaria de ir ao The Great Marsh em Pastoria City, mas não quero sujar minhas roupas.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="13" name="Skater Chad" sprite="80" x="25" y="37">
        <speech>Parece que há um item na outra saliência, se ao menos pudéssemos patinar sobre essas saliências.
        </speech>
    </npc>
    <movingNpc direction="DOWN" id="14" name="Toxicroak" shouldSleep="" speed="1" sprite="454" type="pokemon" x="18" y="52">
        <path>LEFTx3,RIGHTx7,LEFTx4</path>
        <onCollisionSpeech gap="4">Croak! Croak!</onCollisionSpeech>
        <speech>Toxicroak!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="15" name="Nerd Timothy" sprite="8" x="32" y="10">
        <speech>Estou escondendo deles os grunhidos da Equipe Galáctica</speech>
        <speech>O quê?! Eles se foram?</speech>
    </npc>
</npcs>