<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Esta mansão guarda segredos inimagináveis... e eu pretendo descobrir todos eles! Mas, primeiro, vamos testar seu intelecto na batalha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Fascinante... sua estratégia superou meus cálculos. Terei de reavaliar minha abordagem.</speech>
        </speeches>
        <speeches id="3">
            <speech>Fascinante... sua estratégia superou meus cálculos. Terei de reavaliar minha abordagem.</speech>
        </speeches>
        <speeches id="4">
            <speech>Como esperado! Conhecimento e preparação são os pilares do sucesso. Você deve fazer anotações.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Mesmo entre ruínas, um verdadeiro guerreiro nunca vacila. Treino meus punhos e minha mente em lugares de história e força. Mostre-me o que você tem!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impressionante... Sua técnica é forte. Preciso refinar mais a minha.</speech>
        </speeches>
        <speeches id="3">
            <speech>Impressionante... Sua técnica é forte. Preciso refinar mais a minha.</speech>
        </speeches>
        <speeches id="4">
            <speech>Seus golpes não têm disciplina! Treine mais e talvez nos encontremos novamente!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Esse lugar tem uma vibração incrível! Os ecos, a história... é como uma música esperando para ser tocada. Vamos ver se você consegue acompanhar o meu ritmo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você me tirou totalmente do meu ritmo! Preciso aperfeiçoar minhas habilidades.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau, você me tirou totalmente do meu ritmo! Preciso aperfeiçoar minhas habilidades.</speech>
        </speeches>
        <speeches id="4">
            <speech>Foi como um solo matador, impecável e eletrizante!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="2" name="lampert" speed="1" sprite="608" type="pokemon" x="45" y="6">
        <path>DOWNx3,LEFTx2,RIGHTx2,UPx3</path>
        <onCollisionSpeech gap="4">Laaamp!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Alfred" randomRotation="true" sprite="112" x="36" y="9">
        <speech>Não me importo que a Lampent cozinhe demais minha comida.</speech>
        <speech>Ele é feito com amor e, para mim, esse é o melhor ingrediente de todos.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Numel" speed="1" sprite="322" type="pokemon" x="33" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Nuuu?</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Nicholas" randomRotation="true" sprite="75" x="2" y="20">
        <speech>Veio até aqui para oferecer uma grande quantia para comprar a mansão e descobrir seus segredos.</speech>
        <speech>Mas, aparentemente, é uma propriedade protegida.</speech>
        <speech>Tsk... Acho que algumas coisas simplesmente não podem ser compradas.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="6" name="Maxwell" speed="1" sprite="29" type="npc" x="41" y="23">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Eu mal consigo pintar sem cair no chão.</speech>
        <speech>E, no entanto, é tudo tão bonito aqui.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="" randomRotation="false" sprite="162" x="16" y="21">
        <speech>- fragmento de um caderno de campo queimado, bordas chamuscadas</speech>
        <speech>... É estranho como tudo começa sempre em branco. Uma sala, uma escolha, um caminho intocado. A luz dos laboratórios - estéril, imóvel.</speech>
        <speech>Depois vem o azul. Dois seres. Dois rivais. A separação.</speech>
        <speech>O branco contém potencial. Azul, consequência.</speech>
        <speech>Talvez toda a Kanto se desenvolva a partir desse primeiro -</speech>
        <speech>(o restante da página está faltando)</speech>
    </npc>
</npcs>