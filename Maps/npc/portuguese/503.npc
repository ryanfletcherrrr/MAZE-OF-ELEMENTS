<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>O que está acontecendo...?</speech>
        </speeches>
        <speeches id="2">
            <speech>O que foi isso?</speech>
            <speech>Um cara estranho.</speech>
            <speech>OK $NOME_DO_JOGADOR! Vamos pegar aquele Pokémon lendário!</speech>
        </speeches>
        <speeches id="3">
            <speech>Você ouviu isso, $PLAYER_NAME?!</speech>
            <speech>Esse era o lendário Pokémon chorando!</speech>
            <speech>Só pode ser isso! OK! Essa é a nossa chance!</speech>
            <speech>Vamos pegá-lo!</speech>
            <speech>...Espere! O que...?</speech>
            <speech>Não temos nada conosco!</speech>
            <speech>Você sabe, Poké Balls! Bolas P-O-K-accent-E!</speech>
            <speech>Se não os tivermos, não poderemos capturar Pokémon nem levá-los conosco!</speech>
            <speech>...Você acha que o Prof. Rowan nos daria um pouco se pedíssemos a ele?</speech>
            <speech>Você sabe, você se lembra do que ele disse, não é?</speech>
            <speech>Ele disse para visitá-lo em seu laboratório se precisássemos de alguma coisa. OK, $NOME_DO_JOGADOR! Vou correr com você!</speech>
            <speech>O primeiro a chegar ao laboratório do professor em Sandgem Town é o vencedor!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>...O tempo de fluxo...</speech>
            <speech>O espaço em expansão...</speech>
            <speech>Um dia, farei com que ela seja toda minha...</speech>
            <speech>Cyrus é o meu nome. Lembre-se dele...</speech>
            <speech>Até lá, durmam enquanto podem, lendário Pokémon do lago bed....</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Esse rosto...! Isso me traz lembranças ruins! Estou falando dos moinhos de vento!</speech>
            <speech>Tive muitos problemas por causa desse pequeno incidente. Por que essa expressão em seu rosto?
            </speech>
            <speech>Você se lembra de mim, não é? Tudo bem, não importa. Vou lhe dizer quem eu sou novamente!</speech>
            <speech>Sou Mars, um dos comandantes da Equipe Galáctica. Então, o que é isso?</speech>
            <speech>Vocês são um casal amoroso para o resgate?</speech>
            <speech>Nem uma chance! Nem mesmo uma pequena chance! Todos vocês vão cair!</speech>
        </speeches>
        <speeches id="2">
            <speech>Perdi novamente...</speech>
            <speech>Então, primeiro as usinas eólicas e agora o Lago Verity, pelo qual estou em dívida com você!</speech>
            <speech>Isso não deveria estar acontecendo com o Comandante da Equipe Galáctica...</speech>
            <speech>...Acalme-se, Marte... Eu fiz minha parte em tudo isso... Minha missão era transportar os Pokémon do lago
                Pokémon do lago para o nosso QG...
            </speech>
            <speech>...É isso mesmo! Cumpri minha missão sem problemas! Equipe! Estamos nos retirando! O chefe está
                esperando no QG!
            </speech>
            <speech>Os Pokémon dos três lagos estão conectados de alguma forma. Graças à atitude de Saturno no Lago
                Valor, uma caverna apareceu aqui.
            </speech>
            <speech>Era a caverna onde o Pokémon Mesprit dormia. O Mesprit também apareceu, provavelmente
                para ir ajudar seus amigos.
            </speech>
            <speech>Isso funcionou bem para nós. Foi muito fácil de pegar.</speech>
            <speech>Então, agora temos todos eles</speech>
            <speech>Mesprit, o Ser da Emoção.</speech>
            <speech>Azelf, o Ser da Força de Vontade.</speech>
            <speech>Uxie, o Ser da Inteligência.</speech>
            <speech>Agora que já temos todos eles... Você pode esperar ansiosamente pelos planos que a Equipe Galáctica tem para eles!</speech>
        </speeches>
        <speeches id="3">
            <speech>Como você conseguiu chegar até aqui?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Ah, $PLAYER_NAME! Que timing!</speech>
            <speech>Os canalhas da Equipe Galáctica estão atrás do Pokémon lendário!</speech>
            <speech>Você tem que ajudar a Dawn!</speech>
        </speeches>
        <speeches id="2">
            <speech>Como se atrevem! Seus bandidos mal orientados! $PLAYER_NAME! Dawn precisa de sua ajuda!</speech>
        </speeches>
        <speeches id="3">
            <speech>Estou vendo... Isso também ocorreu no Lago Valor...</speech>
            <speech>Outro Pokémon lendário foi levado pela Equipe Galáctica...</speech>
            <speech>Vocês dois enfrentaram criminosos de verdade...</speech>
            <speech>O fato de estar ileso é motivo suficiente para comemorar. ...Mas e quanto ao Barry?</speech>
            <speech>O que está acontecendo no Lake Acuity? Barry está seguro?</speech>
            <speech>Preciso que você vá ao Lake Acuity imediatamente. Estou preocupado com o Barry.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ai! Ai! O que há com o veterano?</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="6">
        <speeches id="1">
            <speech>É nossa missão empatar você. Desculpe, mas temos que fazer nosso trabalho.</speech>
        </speeches>
        <speeches id="2">
            <speech>Perder também fazia parte do meu trabalho. ... Sinto-me melhor ao dizer isso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Perder também fazia parte do meu trabalho. ... Sinto-me melhor ao dizer isso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Não volte aqui novamente.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation canSkip="false" id="7">
        <speeches id="1">
            <speech>Vou colocar todos os seus Pokémon em órbita!</speech>
        </speeches>
        <speeches id="2">
            <speech>Minha mente está entrando em órbita.</speech>
        </speeches>
        <speeches id="3">
            <speech>Minha mente está entrando em órbita.</speech>
        </speeches>
        <speeches id="4">
            <speech>Não volte aqui novamente.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>$PLAYER_NAME! É o T-Team Galactic! Oh não! O Pokémon do lago...?</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>*O Lapras quer levá-lo para algum lugar</speech>
            <speech>Você quer viajar com os Lapras?</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>*O pequeno pinguim está tentando levá-lo a algum lugar.</speech>
            <speech>Você quer viajar com o pequeno Pinguim?</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="12">
        <speeches id="1">
            <!-- Before Battle Speech -->
            <speech>Você de novo? Já ouvi falar de sua pequena conquista. Um milhão em danos à Dynamax, não foi?</speech>
            <speech>Nada mal, mas vamos ver se você é bom em uma batalha real. Não vou ser brando com você!</speech>
            <speech>Escolha seu nível de dificuldade. Espero que você esteja pronto para o que está por vir.</speech>
        </speeches>
        <speeches id="2">
            <!-- Victory Speech -->
            <speech>O quê? Você me derrotou? Isso não acontece... com um comandante da Equipe Galáctica!</speech>
            <speech>Aproveite sua vitória, ela não durará muito. Voltarei mais forte do que nunca!</speech>
        </speeches>
        <speeches id="3">
            <!-- Not Battling Speech -->
            <speech>Fugindo? Eu esperava mais de você. Muito bem, nos encontraremos novamente.</speech>
            <speech>Digamos, depois de $DURATION? Use o tempo com sabedoria. Da próxima vez, nada de correr.</speech>
        </speeches>
        <speeches id="4">
            <!-- Loss Speech -->
            <speech>Ah! Exatamente como eu pensava. Você não está pronto para enfrentar alguém como eu.</speech>
            <speech>Volte quando estiver mais forte. Estarei esperando por um desafio real.</speech>
        </speeches>
        <speeches id="5">
            <!-- Before Criteria Speech -->
            <speech>Espere, você ainda não causou [GOLD]1 milhão de dano Dynamax[]? Isso é decepcionante.</speech>
            <speech>Volte quando não for apenas conversa. Estarei esperando para testar sua verdadeira força.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="17" y="30">
        <path>LEFTx3, RIGHTx3, DOWNx2, UPx2</path>
        <onCollisionSpeech gap="4">*The Tentacool slaps you with a tentacle as you pass by*</onCollisionSpeech>
        <speech>Tenta!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Lapras" shouldSleep="" speed="1" sprite="131" type="pokemon" x="40" y="20">
        <path>LEFTx2, RIGHTx2, UPx2, DOWNx2</path>
        <onCollisionSpeech gap="4">*The Lapras stares at you with a serene gaze*</onCollisionSpeech>
        <speech>Laaaaaaaapras!!!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Gyarados" shouldSleep="" speed="1" sprite="130" type="pokemon" x="22" y="10">
        <path>LEFTx3, RIGHTx3</path>
        <onCollisionSpeech gap="4">*The Gyarados roars at you and glares!*</onCollisionSpeech>
        <speech>GYARA!!!!</speech>
    </movingNpc>
</npcs>