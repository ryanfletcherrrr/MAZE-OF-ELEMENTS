<npcs>
    <conversation id="2">
        <speeches id="1">
            <speech>Se não for $PLAYER_NAME! Está treinando agora mesmo?</speech>
            <speech>Então, já que está treinando, pode me fazer um favor? Eu gostaria que você patrulhasse a Montanha Stark
                para mim.
            </speech>
            <speech>Passando por aqui, há um vulcão. É a Montanha Stark. Em seu interior há uma rocha especial chamada
                Pedra de Magma.
            </speech>
            <speech>Não sei explicar bem, mas é muito importante. Ele mantém um Pokémon dormindo.</speech>
            <speech>Mas, ultimamente, tenho ouvido rumores sobre vândalos na Stark Mountain. Dizem que capangas em trajes espaciais
                estão causando problemas lá.
            </speech>
            <speech>O quê? O quê, eu? Eu estava a caminho do Centro Pokémon porque meu Pokémon está com pouco HP.</speech>
            <speech>Portanto, se você puder ir até a Stark Mountain agora, seria ótimo. Obrigado!</speech>
        </speeches>
        <speeches id="2">
            <speech>OK! Você está no comando! Patrulhe a Montanha Stark por mim! Não se preocupe comigo. Nem um pouco,
                ESTÁ BEM?
            </speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>É isso aí! Montanha Stark!</speech>
            <speech>Agora preciso me aprofundar.</speech>
            <speech>Será que esse velho pode realmente assumir o controle?</speech>
            <speech>Ele pode substituir o Mestre Cyrus?</speech>
            <speech>Talvez este seja um bom momento para eu terminar com essa coisa de Equipe Galáctica...</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Você deu uma olhada minuciosa no interior da Stark Mountain?</speech>
            <speech>Há algo suspeito acontecendo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Isso! Isso é uma Pedra Magma!!! Como você conseguiu isso?</speech>
            <speech>Ah!!!</speech>
            <speech>Sempre soube que o velho não entrava na montanha para se bronzear.</speech>
            <speech>Dê-me a pedra e eu a restaurarei.</speech>
        </speeches>
        <speeches id="3">
            <speech>Você está brincando, certo?</speech>
        </speeches>
        <speeches id="4">
            <speech>Obrigado pela ajuda, garoto.</speech>
            <speech>Além disso, já que você encontrou o Heatran, por que não vai fazer uma visita ao professor Rowan?</speech>
            <speech>Ele gostaria de saber mais sobre o Heatran.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>


    <movingNpc direction="DOWN" id="1" name="Fearow" shouldSleep="false" speed="1" sprite="22" type="pokemon" x="33" y="20">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">....</onCollisionSpeech>
        <speech>*Fearow parece irritado*.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Golem" speed="1" sprite="76" type="pokemon" x="12" y="27">
        <path>UPx2, LEFTx2, UPx1, LEFTx2, RIGHTx3, DOWNx1, RIGHTx1, DOWNx2</path>
        <onCollisionSpeech gap="4">.....</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="3" name="Scientist Stacy" randomRotation="false" sprite="7" x="28" y="7">
        <speech>Estou aqui para estudar os Pokémon aqui na Stark Mountain. Ouvi dizer que há alguns ótimos para serem vistos!
        </speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Hiker Glen" randomRotation="true" sprite="10" x="11" y="32">
        <speech>Shhh, fique quieto...</speech>
        <speech>A Equipe Galáctica está por aqui!</speech>
    </npc>
    <movingNpc direction="LEFT" id="5" name="Numel" speed="1" sprite="322" type="pokemon" x="26" y="11">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="UP" hidden="false" id="6" name="Rey" randomRotation="false" sprite="34" x="14" y="22">
        <speech>Vim aqui para treinar meu Marowak, mas não está indo bem com a Equipe Galáctica.</speech>
    </npc>

</npcs>