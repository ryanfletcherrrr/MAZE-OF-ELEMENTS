<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Você veio ver a estátua do Pokémon, certo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, ei! Quando batemos um no outro, tive um lampejo brilhante de inspiração!</speech>
            <speech>Uma maneira fácil de se tornar um excelente treinador! Sim, isso mesmo! Muito bem.</speech>
            <speech>Ouça com atenção... Certifique-se de que todos os seus ataques sejam acertados! Evite os ataques inimigos com certeza!</speech>
            <speech>Se fizer isso, você nunca perderá! Você seria o Treinador invencível!</speech>
            <speech>De qualquer forma, vá dar uma olhada na estátua do Pokémon. Vejo vocês por aí!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>...Então, esta é a estátua de Pokémon de Eterna...</speech>
            <speech>O tempo e o espaço estão moldando nosso mundo em uma espiral que se entrelaça.</speech>
            <speech>Reverenciados em Sinnoh são os Pokémon do tempo e do espaço...</speech>
            <speech>O mito de Sinnoh...</speech>
            <speech>Sua verdade precisa ser investigada...</speech>
        </speeches>
        <speeches id="2">
            <speech>...Desculpe-me. Afaste-se.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>Oi, eu sou a Gardênia! Sou a líder do ginásio desta cidade!</speech>
            <speech>Meu último adversário foi um jovem muito rápido.</speech>
            <speech>...Na verdade, o nome dele era Barry. Ele me falou sobre você.</speech>
            <speech>Ele disse que outro desafiante está a caminho, o que me deixou ansioso!</speech>
            <speech>No meu ginásio, ninguém pode lutar com o líder do ginásio, eu, até o final.</speech>
            <speech>O desafiante precisa vencer todos os outros Gym Trainers primeiro. Estarei esperando por você nos fundos,
                Treinador. Não me decepcione!
            </speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>Ah, esse dispositivo que você tem... É um Pokédex?</speech>
            <speech>Uau, isso me traz algumas lembranças. Desculpe-me, mas qual é o seu nome?</speech>
            <speech>...OK, olá, $PLAYER_NAME. Vou me lembrar desse nome!</speech>
            <speech>Meu nome é Cynthia. Sou uma instrutora como você.</speech>
            <speech>Tenho estudado a mitologia Pokémon ultimamente, apenas por curiosidade.</speech>
            <speech>Aqui em Eterna City, há uma estátua de um Pokémon antigo.</speech>
            <speech>Você já o viu? Segundo a lenda, era um Pokémon extremamente poderoso.</speech>
            <speech>Quem sabe? Talvez você encontre algo parecido quando estiver viajando com seu Pokédex.</speech>
            <speech>Ah, eu sei! Tente usar isso. Deve ser útil.</speech>
        </speeches>
        <speeches id="2">
            <speech>Lembre-se de que o movimento oculto Cut pode ser usado no campo.</speech>
            <speech>Ele permitirá que você vá a lugares que antes eram inacessíveis para você.</speech>
            <speech>Isso é importante para preencher seu Pokédex, certo? Então, que a sorte esteja com você, jovem Treinador!</speech>
            <speech>Ah, só mais uma coisa! Por favor, dê meus cumprimentos ao Prof. Rowan.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Eu deveria dar uma olhada na estátua de Pokémon de Eterna antes de sair da cidade.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Jack" sprite="20" x="10" y="37">
        <speech>É ótimo andar de bicicleta com o vento em seu rosto, não é?</speech>
    </npc>
    <npc direction="UP" hidden="false" id="2" name="Frank" sprite="2" x="52" y="18">
        <speech>Dizem que esse é um Pokémon incrível que as pessoas viram há muito tempo.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="3" name="Sharon" shouldSleep="" speed="1" sprite="33" type="npc" x="27" y="63">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Eeeei!</onCollisionSpeech>
        <speech>Dizem que essa é uma cidade antiga.</speech>
        <speech>Mas não parece.</speech>
        <speech>Não com todos esses prédios altos.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Shirley" shouldSleep="" speed="1" sprite="17" type="npc" x="37" y="63">
        <path>DOWNx2, UPx2</path>
        <onCollisionSpeech gap="4">Oh, hi!</onCollisionSpeech>
        <speech>Olhe para este prédio gigante!</speech>
    </movingNpc><!--
    <movingNpc direction="RIGHT" id="5" name="Drif" shouldSleep="" speed="1" sprite="426" type="pokemon" x="31" y="38">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>-->
    <movingNpc direction="DOWN" id="6" name="Machoke" shouldSleep="" speed="1" sprite="67" type="pokemon" x="18" y="63">
        <path>DOWNx4, UPx4</path>
        <onCollisionSpeech gap="4">Choke!! Machoke!!</onCollisionSpeech>
        <speech>Machoke quer abraçar você...</speech>
        <speech>...é melhor você correr!!!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Roserade" shouldSleep="" speed="1" sprite="407" type="pokemon" x="39" y="71">
        <path>RIGHTx2, DOWNx2, LEFTx2, UPx2</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Golduck" shouldSleep="" speed="1" sprite="55" type="pokemon" x="54" y="82">
        <path>UPx2, RIGHTx2, LEFTx2, DOWNx2</path>
        <onCollisionSpeech gap="4">Golduck!</onCollisionSpeech>
        <speech>Golduck!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="9" name="Turtwig" shouldSleep="" speed="1" sprite="387" type="pokemon" x="45" y="71">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Tur! Tur!</onCollisionSpeech>
        <speech>Turtwig gosta de você, $PLAYER_NAME.</speech>
    </movingNpc>
    <movingNpc direction="UP" id="10" name="Jess" shouldSleep="" speed="1" sprite="35" type="npc" x="19" y="77">
        <path>UPx5, RIGHTx2, LEFTx2, DOWNx5</path>
        <onCollisionSpeech gap="4">La la lalalala!</onCollisionSpeech>
        <speech>Estou muito animado!</speech>
        <speech>Essa cidade é linda!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="11" name="Diane" speed="1" sprite="53" type="npc" x="10" y="27">
        <path>RIGHTx5, LEFTx5</path>
        <onCollisionSpeech gap="4">Don't stop me!</onCollisionSpeech>
        <speech>Estou me aquecendo antes de lutar contra a líder de ginásio Angela!</speech>
        <speech>Você consegue sentir meu brilho?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Togepi" speed="1" sprite="175" type="pokemon" x="25" y="19">
        <path>DOWNx1, RIGHTx1, UPx1, LEFTx1</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="14" name="Jerry" sprite="20" x="19" y="21">
        <speech>Turtwig, Chimchar e Piplup.</speech>
        <speech>Três entradas interessantes...</speech>
    </npc>
    <movingNpc direction="DOWN" id="13" name="Chatot" speed="1" sprite="441" type="pokemon" x="12" y="22">
        <path>DOWNx2, UPx2</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="UP" id="15" name="Dennis" speed="1" sprite="23" type="npc" x="17" y="48">
        <path>UPx6, LEFTx6, RIGHTx6, DOWNx6</path>
        <onCollisionSpeech gap="4">No!!!!</onCollisionSpeech>
        <speech>Não interrompa meu treinamento!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="16" name="Gyarados" speed="1" sprite="130" type="pokemon" x="57" y="21">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Gyaaaaa!</onCollisionSpeech>
        <speech>Gyyyyyyya!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="17" name="Alexander" sprite="5" x="46" y="12">
        <speech>Você está contemplando essa magnífica estátua Ho-Oh?</speech>
        <speech>Você sabia que ele costumava ser um tributo à Palkia? Infelizmente, uma grande tempestade o destruiu...</speech>
    </npc>
    <movingNpc direction="DOWN" id="18" name="Seaking" shouldSleep="" speed="1" sprite="119" type="pokemon" x="71" y="39">
        <path>DOWNx1, RIGHTx2, UPx1, LEFTx2</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>Mar... rei!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Diglett1" speed="1" sprite="50" type="pokemon" x="47" y="42">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Diglett2" speed="1" sprite="50" type="pokemon" x="47" y="43">
        <path>LEFTx1, RIGHTx1</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Dugtrio" speed="1" sprite="51" type="pokemon" x="45" y="41">
        <path>DOWNx3, UPx3</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="22" name="Diglett3" speed="1" sprite="50" type="pokemon" x="48" y="43">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="23" name="Frank" sprite="4" x="19" y="81">
        <speech>Felicidade é andar de bicicleta e sentir o vento em sua bochecha esquerda.</speech>
    </npc>

    <conversation id="24">
        <speeches id="2">
            <speech>Olá! Sou um palhaço da campanha do Tutorial do PBO. Vamos lá, minha pergunta!</speech>
            <speech>Você pode participar do Concurso de Pesca duas vezes por semana?</speech>
        </speeches>
        <speeches id="3">
            <speech>Essa não é a resposta correta. Vamos tentar novamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>Você está absolutamente correto.</speech>
            <speech>Você pode participar de concursos de pesca duas vezes por semana!</speech>
            <speech>Tudo o que você precisa fazer é verificar "Eterna Forest"!</speech>
        </speeches>
        <speeches id="5">
            <speech>Aqui está! Por favor, aceite este Oran Berry!</speech>
            <speech>Um item de retenção que restaura 10 HP em batalha!</speech>
        </speeches>
    </conversation>
</npcs>