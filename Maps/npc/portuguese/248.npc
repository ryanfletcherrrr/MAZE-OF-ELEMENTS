<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>As batalhas são como piqueniques, você precisa aproveitar o momento e saborear a diversão!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh não! Agora meus sanduíches estão realmente torrados!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh não! Agora meus sanduíches estão realmente torrados!</speech>
        </speeches>
        <speeches id="4">
            <speech>Nada supera uma ótima refeição e uma vitória: o melhor dia de todos!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Tch. Você está muito bem arrumado. Vamos bagunçar um pouco as coisas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Acho que tenho que respeitar sua força. Mas não deixe que isso suba à sua cabeça!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Acho que tenho que respeitar sua força. Mas não deixe que isso suba à sua cabeça!</speech>
        </speeches>
        <speeches id="4">
            <speech>Muito lento! Você precisa lutar com atitude se quiser vencer!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>A estrada é minha, assim como esta batalha! Você acha que consegue acompanhar o ritmo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Grr... Talvez eu devesse ter ajustado meu Pokémon em vez de minha bicicleta.</speech>
        </speeches>
        <speeches id="3">
            <speech>Grr... Talvez eu devesse ter ajustado meu Pokémon em vez de minha bicicleta.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Muito lento! Você precisa andar muito e batalhar mais!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Lutar é como escolher uma roupa, você precisa saber o que funciona melhor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph! Talvez minha estratégia não tenha sido tão boa quanto eu pensava...</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph! Talvez minha estratégia não tenha sido tão boa quanto eu pensava...</speech>
        </speeches>
        <speeches id="4">
            <speech>Está vendo? Estilo e habilidade andam de mãos dadas!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Meu Pokémon e eu somos melhores amigos! Sempre lutamos juntos com sorrisos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, não... Precisamos treinar mais! Mas vamos nos manter positivos!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, não... Precisamos treinar mais! Mas vamos nos manter positivos!</speech>
        </speeches>
        <speeches id="4">
            <speech>Muito bom! Ganhar é ainda melhor quando você está se divertindo!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Hora de um haiku de batalha! Este é muito bom. Meu oponente é uma criança. Com certeza vou ganhar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hora de um haiku de batalha! Não posso acreditar nisso. Ainda posso continuar. Ainda posso batalhar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hora de um haiku de batalha! Não posso acreditar nisso. Ainda posso continuar. Ainda posso batalhar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hora de um haiku de batalha! Eu sabia que venceria. Sim, meu Pokmon e eu somos realmente tão fortes.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Meus Pokémon voam mais alto do que os outros! Vamos ver se você consegue acompanhar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que minhas asas foram cortadas. É hora de treinar mais!</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que minhas asas foram cortadas. É hora de treinar mais!</speech>
        </speeches>
        <speeches id="4">
            <speech>Outra vitória, assim como o vento que leva meus Pokémon a novas alturas!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>O vento sussurra segredos e me diz que você terá uma batalha difícil.</speech>
        </speeches>
        <speeches id="2">
            <speech>O vento muda Parece que dessa vez não era para eu ganhar.</speech>
        </speeches>
        <speeches id="3">
            <speech>O vento muda Parece que dessa vez não era para eu ganhar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Assim como os pássaros migratórios, eu sigo em frente, sempre em busca do próximo desafio.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Um bom treinador entende o fluxo da batalha, assim como os pássaros entendem o vento.</speech>
        </speeches>
        <speeches id="2">
            <speech>Até mesmo os melhores pilotos são pegos em uma tempestade às vezes...</speech>
        </speeches>
        <speeches id="3">
            <speech>Até mesmo os melhores pilotos são pegos em uma tempestade às vezes...</speech>
        </speeches>
        <speeches id="4">
            <speech>Paciência e precisão, é assim que um verdadeiro Bird Keeper vence!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>A batalha faz meu motor funcionar! Vamos fazer deste um passeio selvagem</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh, meu ímpeto acabou de cair. Melhor acelerar para a próxima vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh, meu ímpeto acabou de cair. Melhor acelerar para a próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hah! Deixei você na poeira! Você precisa acelerar o ritmo!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Uma boa batalha é como uma boa pescaria; você só precisa esperar o momento certo para atacar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que deixei essa escapar. Deveria ter usado uma linha mais forte!</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que deixei essa escapar. Deveria ter usado uma linha mais forte!</speech>
        </speeches>
        <speeches id="4">
            <speech>A paciência compensa, garoto. Assim como na pesca, assim como nas batalhas!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Veja! Os melhores artistas do céu sobem ao palco! Veja como meus pássaros dançam na batalha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uma trágica queda dos céus, mas toda grande apresentação tem um bis!</speech>
        </speeches>
        <speeches id="3">
            <speech>Uma trágica queda dos céus, mas toda grande apresentação tem um bis!</speech>
        </speeches>
        <speeches id="4">
            <speech>Maravilhoso! Meus Pokémon mais uma vez pintaram o céu com a vitória!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="73" y="35">
        <path>RIGHTx3,DOWNx1,RIGHTx3,LEFTx3,UPx1,LEFTx3</path>
        <onCollisionSpeech gap="4">Luuuuv!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Kevin" speed="1" sprite="24" type="npc" x="65" y="37">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Você não ouviu isso de mim, mas adivinhe?</speech>
        <speech>Às vezes, você pode encontrar uma Heracronita na Heracross!</speech>
        <speech>Não é incrível?!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Tatsugiri" speed="1" sprite="1458" type="pokemon" x="110" y="3">
        <path>DOWNx9,LEFTx1,UPx9,RIGHTx1</path>
        <onCollisionSpeech gap="4">Tatsuuuuuuu!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="4" name="Phil" randomRotation="true" sprite="39" x="89" y="24">
        <speech>Agora, tenha um pouco de paciência com essas rotas, garoto.</speech>
        <speech>Se você não mantiver seus Pokémon saudáveis, eles ficarão mais irritados do que eu antes do meu café da manhã!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Zack" randomRotation="false" sprite="49" x="86" y="37">
        <speech>O que está acontecendo?</speech>
        <speech>Acho que os Pokémon do tipo Água daqui não estão gostando do Raichu e de mim tocando no ensaio da banda!</speech>
        <speech>Talvez eles estejam apenas com inveja de nossos movimentos!</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Raichu" speed="1" sprite="26" type="pokemon" x="88" y="37">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Raii!? Raichu!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="7" name="Pelipper" speed="1" sprite="279" type="pokemon" x="80" y="46">
        <path>RIGHTx8,UPx3,RIGHTx5,LEFTx5,DOWNx3,LEFTx8</path>
        <onCollisionSpeech gap="4">WRAAAAWK!!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="8" name="Heracross" speed="1" sprite="214" type="pokemon" x="97" y="50">
        <path>RIGHTx10,LEFTx10</path>
        <onCollisionSpeech gap="4">Herrrraaaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="10" name="Bounsweet" speed="1" sprite="761" type="pokemon" x="73" y="23">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Sweeeeet!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="11" name="Steve" randomRotation="false" sprite="35" x="67" y="28">
        <speech>Estou usando meu Rastreador Brilhante para encontrar um Pelipper e estou quase chegando a 70%, portanto, saia daqui!</speech>
        <speech>O que é isso? Ah, sim, você pode encontrar um em qualquer Poké Mart por 30.000.</speech>
        <speech>Você recebe um aumento progressivo até 100% na sua taxa de encontros brilhantes com esse Pokémon.</speech>
    </npc>
    <movingNpc direction="LEFT" id="12" name="Andrew" speed="1" sprite="39" type="npc" x="65" y="22">
        <path>LEFTx8,UPx1,RIGHTx8,DOWNx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Você já obteve o Hidden Power para seus Pokémon?</speech>
        <speech>Meu Magneton conhece o Hidden Power Fire, ele derrete outros tipos de aço como manteiga!</speech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="14" name="Amanda" randomRotation="true" sprite="60" x="36" y="11">
        <speech>Uau! Eu estava alimentando todos os Skwovet por aqui e um apareceu com uma aparência muito doentia e brilhante!</speech>
        <speech>Ele fugiu assim que me aproximei... Espero que esteja tudo bem!</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Skwovet" speed="1" sprite="1097" type="pokemon" x="26" y="3">
        <path>DOWNx4,RIGHTx3,DOWNx2,UPx2,LEFTx3,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="UP" id="16" name="Fearow" speed="1" sprite="22" type="pokemon" x="0" y="20">
        <path>UPx2,RIGHTx1,UPx2,RIGHTx1,LEFTx1,DOWNx2,LEFTx1,DOWNx2</path>
        <onCollisionSpeech gap="4">Fearooww!</onCollisionSpeech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="17" name="Noah" randomRotation="true" sprite="8" x="10" y="34">
        <speech>Você já ouviu falar de um Pokémon chamado Toucannon?</speech>
        <speech>Você poderia literalmente cozinhar alimentos em seu bico enquanto ele usa o Beak Blast!</speech>
        <speech>Mas... tome cuidado, pois ele pode queimar você também!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="13" name="Rhys" speed="1" sprite="80" type="npc" x="44" y="25">
        <path>RIGHTx3,DOWNx4,LEFTx3,UPx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Eles deveriam realizar competições de corrida aqui!</speech>
    </movingNpc>
</npcs>