<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Haw haw haw... Vou lhe mostrar como meus Pokémon são incríveis!</speech>
        </speeches>
        <speeches id="2">
            <speech>Será que... Como... Meu Pokémon e eu somos os mais fortes, no entanto...</speech>
        </speeches>
        <speeches id="3">
            <speech>Será que... Como... Meu Pokémon e eu somos os mais fortes, no entanto...</speech>
        </speeches>
        <speeches id="4">
            <speech>O que você acha? Incrível, não é? Meu Pokémon e eu somos os mais fortes!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Ho lá! Você é uma montanha que está no meu caminho, não é?</speech>
        </speeches>
        <speeches id="2">
            <speech>Grrr... Minha vitória desapareceu em alguma fenda escura...</speech>
        </speeches>
        <speeches id="3">
            <speech>Grrr... Minha vitória desapareceu em alguma fenda escura...</speech>
        </speeches>
        <speeches id="4">
            <speech>Yahoo! Yahooooo!!! Ouçam meu grito de triunfo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Vamos lá, vamos continuar com isso! Não há necessidade de se preocupar com detalhes!</speech>
        </speeches>
        <speeches id="2">
            <speech>Mesmo que eu tente esquecer, não consigo me lembrar... Isso é provavelmente tudo o que eu preciso saber, não é?</speech>
        </speeches>
        <speeches id="3">
            <speech>Mesmo que eu tente esquecer, não consigo me lembrar... Isso é provavelmente tudo o que eu preciso saber, não é?</speech>
        </speeches>
        <speeches id="4">
            <speech>Os arrependimentos do passado, as preocupações com o futuro, esqueçam tudo isso! Tudo o que importa é aqui e agora!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Não é que eu esteja chamando as montanhas. São as montanhas que estão me chamando!</speech>
        </speeches>
        <speeches id="2">
            <speech>Posso ouvir uma voz chorosa... As montanhas estão chorando...</speech>
        </speeches>
        <speeches id="3">
            <speech>Posso ouvir uma voz chorosa... As montanhas estão chorando...</speech>
        </speeches>
        <speeches id="4">
            <speech>Um homem que é amado pelas montanhas... Culpado como acusado...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Eu certamente gostaria de lutar em vez de lutar com meus Pokémon, se pudesse.</speech>
        </speeches>
        <speeches id="2">
            <speech>Heh...</speech>
        </speeches>
        <speeches id="3">
            <speech>Heh...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, estou empolgado. Eu certamente gostaria de lutar...</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>As batalhas Pokémon e as sessões de estudo são muito parecidas. Vamos ser eficientes!</speech>
        </speeches>
        <speeches id="2">
            <speech>Se você se descuidou dos estudos, não terá nenhuma chance. Garotas capazes como eu são capazes.</speech>
        </speeches>
        <speeches id="3">
            <speech>Se você se descuidou dos estudos, não terá nenhuma chance. Garotas capazes como eu são capazes.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você é muito ineficiente. Você precisa ser mais rápido e ágil.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Vá embora, garoto! Nós capturamos essa área.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Ajuda, ajuda, treinador! Por favor, quero ver meu papai.</speech>
            <speech>Meu pai e eu morávamos na Valley Windworks.</speech>
            <speech>Mas então um grupo de pessoas vestidas como homens do espaço apareceu...</speech>
            <speech>Eles me expulsaram e estão obrigando meu pai a fazer alguma coisa.</speech>
            <speech>Por favor, treinador! Sinto falta do meu papai!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Whiscash" shouldSleep="" speed="1" sprite="340" type="pokemon" x="7" y="58">
        <path>DOWNx4, UPx4</path>
        <onCollisionSpeech gap="4">Whiscash</onCollisionSpeech>
        <speech>Whiscash</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Gyarados" shouldSleep="" speed="1" sprite="130" type="pokemon" x="20" y="84">
        <path>LEFTx4, RIGHTx4</path>
        <onCollisionSpeech gap="4">Raaaawr!</onCollisionSpeech>
        <speech>Gyaradossssss!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Gastrodon" shouldSleep="" speed="1" sprite="422" type="pokemon" x="30" y="72">
        <path>LEFTx1, RIGHTx1</path>
        <onCollisionSpeech gap="4">She! Shellos!</onCollisionSpeech>
        <speech>*Shellos usa Mud-Slap!!!!*</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Beautifly" shouldSleep="" speed="1" sprite="267" type="pokemon" x="25" y="64">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Fly! Fly! Fly!</onCollisionSpeech>
        <speech>Ela não é adorável?</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="5" name="Buizel" shouldSleep="" speed="1" sprite="418" type="pokemon" x="24" y="77">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Bui! Bui! Bui!</onCollisionSpeech>
        <speech>*Luizel rosna</speech>
    </movingNpc>
</npcs>