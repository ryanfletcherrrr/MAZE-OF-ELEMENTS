<npcs>
    <movingNpc direction="DOWN" id="1" name="Torchic" shouldSleep="" speed="1" sprite="255" type="pokemon" x="14" y="8">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Torchic!</onCollisionSpeech>
        <speech>Torchic!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Whismer" shouldSleep="" speed="1" sprite="293" type="pokemon" x="30" y="3">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Fletchling" shouldSleep="" speed="1" sprite="661" type="pokemon" x="10" y="28">
        <path>LEFTx2,UPx2,RIGHTx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Fletchling!!</onCollisionSpeech>
        <speech>Fletchling!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Doduo" shouldSleep="" speed="1" sprite="84" type="pokemon" x="31" y="28">
        <path>DOWNx2,RIGHTx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Aron" shouldSleep="" speed="1" sprite="304" type="pokemon" x="54" y="23">
        <path>LEFTx1,UPx3,DOWNx3,RIGHTx1</path>
        <onCollisionSpeech gap="4">Aron!</onCollisionSpeech>
        <speech>Aron!</speech>
    </movingNpc>
        
    <movingNpc direction="DOWN" id="7" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="29" y="18">
        <path>UPx1,RIGHTx3,LEFTx3,DOWNx1</path>
        <onCollisionSpeech gap="4">Numel!</onCollisionSpeech>
        <speech>Numel!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Fletchling" shouldSleep="" speed="1" sprite="661" type="pokemon" x="52" y="4">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Fletchling!</onCollisionSpeech>
        <speech>Fletchling!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Whismur" shouldSleep="" speed="1" sprite="293" type="pokemon" x="59" y="18">
        <path>RIGHTx1,UPx3,DOWNx3,LEFTx1</path>
        <onCollisionSpeech gap="4">Whismur!</onCollisionSpeech>
        <speech>Whismur!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Doduo" shouldSleep="" speed="1" sprite="84" type="pokemon" x="55" y="27">
        <path>DOWNx3,RIGHTx1,LEFTx1,UPx3</path>
        <onCollisionSpeech gap="4">Doduo!</onCollisionSpeech>
        <speech>Doduo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="12" y="13">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Numel!</onCollisionSpeech>
        <speech>Numel!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Aron" shouldSleep="" speed="1" sprite="304" type="pokemon" x="37" y="26">
        <path>LEFTx3,UPx2,DOWNx2,RIGHTx3</path>
        <onCollisionSpeech gap="4">Aron!</onCollisionSpeech>
        <speech>Aron!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Houndour" shouldSleep="" speed="1" sprite="228" type="pokemon" x="13" y="35">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Houndour!</onCollisionSpeech>
        <speech>Houndour!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Whismur" shouldSleep="" speed="1" sprite="293" type="pokemon" x="41" y="29">
        <path>UPx1,RIGHTx3,LEFTx3,DOWNx1</path>
        <onCollisionSpeech gap="4">Whismur!</onCollisionSpeech>
        <speech>Whismur!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Doduo" shouldSleep="" speed="1" sprite="84" type="pokemon" x="37" y="7">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Doduo!</onCollisionSpeech>
        <speech>Doduo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="20" y="31">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>Ei! Eu gosto muito de colecionar Pokémon, especialmente pássaros, mas não temos muitos deles aqui no Hoenn Safari.</speech>
            <speech>Escolher o próximo a ser encontrado é sempre muito difícil...</speech>
            <speech>Preciso de um pouco de tempo para pensar sobre qual Pokémon pássaro quero ver em minha coleção.</speech>
            <speech>Você poderia voltar mais tarde? Prometo que terei um Pokémon pássaro incrível para encontrarmos juntos!</speech>
            <speech>Retorne em $DURATION, e tenho certeza de que terei decidido um desafio superlegal para nós dois.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="2">
            <speech>Olá! Nunca vi você por aqui antes. Estou em uma missão para coletar Pokémon pássaros e preciso de sua ajuda!</speech>
            <speech>Em primeiro lugar, estou muito curioso sobre o Wattrel. Ele é tão elegante e seu voo é hipnotizante, você não acha?</speech>
            <speech>Você pode me mostrar um Wattrel no nível 20?</speech>
            <speech>Tenho algo especial para você, se fizer isso! Vai ser incrível, prometo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, você não quer? Tudo bem, eu acho. Talvez em outra ocasião!</speech>
            <speech>Se algum dia você encontrar um Wattrel de nível 20 e quiser mostrá-lo para mim, estarei aqui esperando!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim! Eu sabia que você estaria pronto para isso! Ver um Wattrel de nível 20 vai ser muito legal!</speech>
            <speech>E não se preocupe, eu tenho uma recompensa muito legal para você. Mal posso esperar para vê-la!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Você já encontrou um Wattrel de nível 20? Estou pensando nisso sem parar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você realmente encontrou um Wattrel de nível 20? Isso é muito legal! Posso vê-lo, por favor?</speech>
            <speech>Não acredito que vou ver um Wattrel de verdade de perto! Este vai ser o melhor dia de todos!</speech>
        </speeches>
        <speeches id="3">
            <speech>Sem sorte, hein? Está tudo bem. O Wattrel pode ser bem complicado de encontrar, eu acho.</speech>
            <speech>Mas, se algum dia você encontrar um e quiser me mostrar, ficarei muito feliz!</speech>
        </speeches>
        <speeches id="4">
            <speech>Você conseguiu! Estou muito animado para ver o Wattrel! Este é o melhor dia de todos!</speech>
            <speech>Tenho que pensar em qual Pokémon pássaro eu quero ver em seguida... Mas, por enquanto, aqui está sua incrível
                prêmio!
            </speech>
            <speech>Vocês são os melhores! Muito obrigado por me ajudar com meu sonho de colecionar pássaros!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="2">
            <speech>Olá! Você se lembra de mim? Ainda estou em minha busca para coletar Pokémon pássaros, e adivinhe só? Preciso de sua
                ajuda novamente!
            </speech>
            <speech>Desta vez, estou muito curioso sobre o Fletchling. Ele é tão ardente e seu chilrear é tão alegre... É
                legal, não é?
            </speech>
            <speech>Você poderia me mostrar um Fletchling no nível 20? Aposto que ele é tão vibrante quanto dizem!</speech>
            <speech>Se você conseguir encontrar um para mim, terei algo muito legal para você. É uma promessa!</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, não está interessado? Isso é uma pena. Mas sem pressão, de fato!</speech>
            <speech>Se você encontrar um Fletchling de nível 20 e quiser compartilhar, já sabe onde me encontrar!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Fantástico! Eu sabia que você estaria a bordo. Um Fletchling de nível 20 é algo que eu preciso ver!</speech>
            <speech>E você não</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Então, você já conheceu um Fletchling nível 20? Aposto que ele é super vibrante e cheio de energia!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau, você tem um Fletchling de nível 20? Isso é incrível! Você pode mostrá-lo para mim, por favor?</speech>
            <speech>Estou muito animado para ver como o Fletchling é realmente ardente. Isso vai ser muito legal!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ainda não há Fletchling? Ah, está tudo bem. Afinal, eles têm uma tendência a voar por aí.</speech>
            <speech>Mas, se você encontrar um Fletchling de nível 20 e quiser compartilhar, estarei aqui esperando ansiosamente!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Você é o melhor! Ver um Fletchling de perto vai ser incrível. Obrigado por fazer isso!
            </speech>
            <speech>Tenho que começar a pensar no próximo Pokémon pássaro que quero ver... Mas antes, aqui está sua
                prêmio!
            </speech>
            <speech>Muito obrigado! Sua ajuda é muito importante para mim e para meus sonhos de colecionar pássaros!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="2">
            <speech>Sou eu de novo! Graças a vocês, minha jornada Pokémon pássaro está ficando muito emocionante. Mas ainda há mais para
                explorar!
            </speech>
            <speech>Desta vez, estou totalmente intrigado com o Taillow. Eles são tão velozes e seus chamados são tão agudos, certo?
            </speech>
            <speech>Você poderia encontrar e me mostrar um Taillow no Nível 20? Aposto que é tão fascinante quanto parece!</speech>
            <speech>Assim como antes, tenho uma recompensa muito legal esperando por você. Você vai adorar!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmm, não está se sentindo bem? Tudo bem, não há pressa. Estou aqui sempre que você estiver pronto para compartilhar.</speech>
            <speech>Lembre-se, se você encontrar um Taillow de nível 20 e quiser exibi-lo, serei todo ouvidos!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sim! Eu sabia que você não me decepcionaria. Um Taillow de nível 20 com certeza será um espetáculo para se ver!</speech>
            <speech>E quanto à recompensa, acredite em mim, vale a pena o esforço. Mal posso esperar para ver o que você traz de volta!
            </speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Conseguiu encontrar o Taillow de nível 20? Estou super curioso para ver um!</speech>
        </speeches>
        <speeches id="2">
            <speech>Você encontrou um Taillow de nível 20? Isso é incrível! Posso dar uma olhada, por favor?</speech>
            <speech>Estou muito feliz por ver um Taillow na vida real. Isso vai ser incrível!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ainda está procurando a Taillow? Não se preocupe, eles podem ser um pouco evasivos.</speech>
            <speech>Mas se você conseguir um Taillow de nível 20, ficarei muito feliz em vê-lo. Mantenha-me informado!</speech>
        </speeches>
        <speeches id="4">
            <speech>Uau, você realmente conseguiu! Ver um Taillow vai fazer meu dia feliz!</speech>
            <speech>Agora, deixe-me pensar em qual Pokémon devemos descobrir em seguida... Enquanto isso, aqui está sua
                merecida recompensa!
            </speech>
            <speech>Muito obrigado pela ajuda. Vocês estão realmente fazendo com que meus sonhos de colecionar pássaros se tornem realidade!</speech>
        </speeches>
        <speeches id="5">
            <speech>Muito obrigado por me mostrar todos esses Pokémon pássaros incríveis! Você realmente me inspirou.</speech>
            <speech>Sei que um dia me tornarei um mestre Pokémon de pássaros, e tudo isso graças a você. Até lá, continuarei
                sonhando alto!
            </speech>
        </speeches>
    </conversation>
</npcs>