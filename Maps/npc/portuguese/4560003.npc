<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Você se atreve a desafiar a Equipe Aqua? Nosso plano para expandir o mar é imparável!</speech>
            <speech>Com o Eon Duo, os oceanos serão vastos o suficiente para que todos os Pokémon aquáticos possam prosperar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Como? Como você poderia me derrotar? O sonho da Equipe Aqua de um mar expandido... é apenas uma fantasia?</speech>
            <speech>O Eon Duo deveria ser a chave... Talvez tenhamos subestimado sua força.</speech>
        </speeches>
        <speeches id="3">
            <speech>De volta para mais? As profundezas do mar guardam segredos que você não consegue entender. Você não vai parar nossa missão!</speech>
            <speech>Somente os fortes sobrevivem no vasto oceano.</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que você ainda não está pronto para enfrentar o poder da Equipe Aqua. Volte quando estiver mais forte.</speech>
            <speech>O oceano é implacável, e nós também. Treine mais se quiser nos derrotar!</speech>
        </speeches>
    </conversation>


    <conversation id="2">
        <speeches id="1">
            <speech>Você acha que pode simplesmente entrar e atrapalhar os planos da Equipe Aqua? Pense de novo!</speech>
            <speech>Latios e Latias são fundamentais para nossa missão. Não permitiremos que você interfira em nossos objetivos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não consigo acreditar nisso... Como eu poderia perder? Nossa missão de controlar os mares... está desmoronando?</speech>
            <speech>Latios e Latias deveriam ser nossos trunfos... Você é mais forte do que parece.</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que você me pegou dessa vez...</speech>
        </speeches>
        <speeches id="4">
            <speech>Você ainda não está pronto para enfrentar o poder da Equipe Aqua. Vá treinar mais.</speech>
            <speech>O poder do mar é imenso, assim como nossa determinação. Volte quando estiver realmente preparado.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Ah, se não é o famoso $PLAYER_NAME. Sua força é conhecida até mesmo entre as fileiras da Equipe Aqua.</speech>
            <speech>Nós nos encontramos novamente, mas em circunstâncias diferentes. A dupla de Eons, Latios e Latias, é crucial para nosso plano revisado.</speech>
            <speech>Aprendemos que o caminho do Primal Kyogre era o da destruição. Agora, buscamos uma abordagem mais equilibrada.</speech>
            <speech>Expandir o mar, mas com harmonia. É uma linha delicada, e precisamos do Eon Duo para esse equilíbrio.</speech>
        </speeches>
        <speeches id="2">
            <speech>Devo admitir que sua força é admirável. Mas derrotar-me não encerrará a missão da Equipe Aqua.</speech>
            <speech>Latios e Latias eram nossa esperança de uma expansão controlada, sem o caos do Primal Kyogre.</speech>
            <speech>Procuramos evitar os erros do passado, mas aqui estamos nós, frustrados novamente. O destino do mar continua incerto.</speech>
            <speech>Você venceu, $PLAYER_NAME, mas os sussurros do mar ainda ecoam. A jornada da Equipe Aqua ainda não terminou.</speech>
        </speeches>
        <speeches id="3">
            <speech>Voltou para obter mais informações sobre nossos planos? Sua curiosidade é tão grande quanto o oceano, $PLAYER_NAME.</speech>
            <speech>Nossos métodos podem parecer extremos, mas acreditamos em um mundo onde Pokémon e humanos possam coexistir em harmonia.</speech>
            <speech>A determinação da Equipe Aqua não vai vacilar. Encontraremos nosso equilíbrio, com ou sem o Eon Duo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sua força é inegável, mas o apelo do mar também é. Não nos intimidamos facilmente.</speech>
            <speech>Lembre-se, $PLAYER_NAME, toda maré tem seu fluxo e refluxo. A Equipe Aqua voltará quando for a hora certa.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>LATIIIIIIIIIIIIIIIIIIIIIAAAAAAAAA!!!</speech>
            <speech>*Latias solta um grito angustiado, com os olhos cheios de inquietação, antes de desaparecer no éter.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>LATIIIIIIIIIIIIIIIIIIIIIOOOOOOOOO!!!</speech>
            <speech>*Latios ecoa um rugido perturbado, com um brilho de frustração em seu olhar, antes de desaparecer no ar.</speech>
        </speeches>
    </conversation>
</npcs>