<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Olá, jovem instrutor, você gostaria de viajar para algum lugar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Sem problemas, espero vê-lo novamente.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>...Você é?</speech>
            <speech>OK, você é o $PLAYER_NAME.</speech>
            <speech>Eu sou Riley. Sou treinador, sim, e é um pouco estranho que eu esteja treinando aqui.</speech>
            <speech>De qualquer forma, é sempre bom conhecer outro Trainer. Aqui está um presente.</speech>
        </speeches>
        <speeches id="2">
            <speech>Essa Hidden Machine contém o movimento Strength. Para usá-lo fora da batalha, você precisa do Mine Badge
                do Canalave Gym.
            </speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Olá $PLAYER_NAME.</speech>
            <speech>Estou com um grande problema. Meu Lucario simplesmente fugiu.</speech>
            <speech>A Equipe Galáctica estava tentando ativar as Ruínas de Ferro e isso teve algum tipo de efeito sobre Lucario e o fez ficar
                fez com que ele ficasse Berserk.
            </speech>
            <speech>Não sei onde ele está. Ele começou a correr em direção ao sul depois de me dar um soco na cabeça.
            </speech>
            <speech>Estou muito preocupada com ele. Você me ajudaria a procurá-lo?</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Olá, $PLAYER_NAME. Eu encontrei o Lucario.</speech>
            <speech>Ele está gravemente ferido e precisa de atenção urgente.</speech>
            <speech>Você pode me encontrar uma Poção de Mercúrio?</speech>
            <speech>Há alguém dentro das cavernas que poderá lhe dar uma.</speech>
            <speech>Eu mesmo teria feito isso, mas o Lucario me atacou e estou machucado.</speech>
        </speeches>
        <speeches id="2">
            <speech>$PLAYER_NAME, posso pegar a Poção de Mercúrio?</speech>
        </speeches>
        <speeches id="3">
            <speech>Mas por quê? ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Você é uma alma incrível. Muito obrigado pela ajuda.</speech>
            <speech>Aqui está o passe para as Steel Caves (Cavernas de Aço) dentro das Iron Islands (Ilhas de Ferro).</speech>
            <speech>É um lugar onde eu e Riolu costumávamos treinar.</speech>
        </speeches>
    </conversation>
</npcs>