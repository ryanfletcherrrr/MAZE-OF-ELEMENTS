<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>Seus Pokémon parecem cansados. Gostaria que eu os curasse?</speech>
        </speeches>
        <speeches id="2">
            <speech>Aí está, todos saudáveis e felizes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tenho certeza de que eles gostariam de ter descansado.</speech>
        </speeches>
    </conversation>
    <!-- Option Display Dialogue -->
    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>Bem-vindo, $PLAYER_NAME, à vastidão selvagem da Safari Zone!</speech>
            <speech>Mostre suas descobertas apresentando até $MAX_SUBMISSIONS Pokémon Ultra Raros capturados por você mesmo em nossas terras.</speech>
            <speech>Menos é aceitável, mas cada um deve ser um testemunho de sua habilidade como instrutor.</speech>
            <speech>Lute pelo título de Safari Champion e pela Legendary Safari Crown!</speech>
            <speech>Este desafio termina em $CONCLUDES_IN_DURATION. Faça cada momento valer a pena!</speech>
            <speech>Que aventura o chama para essas terras indomáveis hoje?</speech>
        </speeches>
        <!-- Concluded Dialogue -->
        <speeches id="2">
            <speech>O desafio da Safari Zone agora se acalma à medida que o sol se põe abaixo do horizonte, marcando o fim da competição deste ano.</speech>
            <speech>Os campeões são nomeados, as histórias são forjadas nos anais da Safari Zone. Por enquanto, nos despedimos, $PLAYER_NAME, até o chamado da próxima temporada.</speech>
        </speeches>
        <!-- No Eligible Submission Dialogue -->
        <speeches id="3">
            <speech>Ah, $PLAYER_NAME, sua coleção parece não ter o brilho dos Ultra Raros.</speech>
            <speech>A Safari Zone é vasta e repleta de cantos ocultos onde os Pokémon mais raros se escondem.</speech>
            <speech>Procure-os e retorne quando tiver capturado a essência da raridade.</speech>
        </speeches>
        <!-- Max Submissions Dialogue -->
        <speeches id="4">
            <speech>Impressionante, $PLAYER_NAME! Você alcançou o auge dos envios com sua coleção atual.</speech>
            <speech>Lembre-se, você pode enviar menos do que $MAX_SUBMISSIONS se acreditar que o Pokémon escolhido reflete melhor suas habilidades.</speech>
            <speech>Caso deseje ajustar suas entradas, a opção de redefinir está disponível.</speech>
        </speeches>
        <!-- Invalid Submission Dialogue -->
        <speeches id="5">
            <speech>Espere, $PLAYER_NAME! Seu envio parece ter se desviado do caminho do Ultra Raro.</speech>
            <speech>Certifique-se de que cada Pokémon que você apresentar seja uma joia do Safari, capturando a verdadeira essência do que significa ser raro nessas regiões selvagens.</speech>
        </speeches>
        <!-- Successful Submission Dialogue -->
        <speeches id="6">
            <speech>Muito bem, $PLAYER_NAME! Suas ofertas estão de acordo com o espírito da Safari Zone.</speech>
            <speech>Você está entre os candidatos de elite ao título de Campeão do Safari.</speech>
            <speech>Que seu nome suba bem alto na tabela de classificação das lendas!</speech>
        </speeches>
        <!-- Successful Reset Dialogue -->
        <speeches id="7">
            <speech>Sua coleção foi espalhada pelos ventos, $PLAYER_NAME, e uma nova lousa lhe foi concedida.</speech>
            <speech>O Safari aguarda seu esforço renovado. Embarque novamente com os olhos bem abertos para as maravilhas que ele guarda.</speech>
        </speeches>
        <speeches id="8">
            <speech>Você está pronto para reiniciar sua jornada, $PLAYER_NAME.</speech>
            <speech>Essa escolha limpará seu registro atual de descobertas, permitindo que você busque novas raridades dentro de nossos limites.</speech>
            <speech>Esse passo é irreversível. Prossiga somente se estiver decidido a criar uma nova coleção que capte melhor a essência do Safari.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Bem-vindo à nossa troca exclusiva de fantasias de Guarda florestal. Você quer comprar algo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ok, até logo!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Wynaut" shouldSleep="" speed="1" sprite="360" type="pokemon" x="12" y="32">
        <path>LEFTx1,UPx1,RIGHTx1,DOWNx1</path>
        <onCollisionSpeech gap="4">Wynaut?</onCollisionSpeech>
        <speech>Wynaut?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Kecleon" shouldSleep="" speed="1" sprite="352" type="pokemon" x="42" y="17">
        <path>UPx2,LEFTx2,RIGHTx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Kecleon!</onCollisionSpeech>
        <speech>Kecleon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Tauros" speed="1" sprite="128" type="pokemon" x="41" y="26">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4">Tauros!</onCollisionSpeech>
        <speech>Tauros!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Toedscool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="13" y="7">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Girafarig" shouldSleep="" speed="1" sprite="203" type="pokemon" x="18" y="19">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Girafarig!</onCollisionSpeech>
        <speech>Girafarig!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="30" y="32">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Zigzagoon!</onCollisionSpeech>
        <speech>Zigzagoon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Pidove" speed="1" sprite="519" type="pokemon" x="46" y="36">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="31" y="13">
        <path>DOWNx2,LEFTx2,RIGHTx2,UPx2</path>
        <onCollisionSpeech gap="4">Zigzagoon!</onCollisionSpeech>
        <speech>Zigzagoon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Kecleon" shouldSleep="" speed="1" sprite="352" type="pokemon" x="17" y="27">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Kecleon!</onCollisionSpeech>
        <speech>Kecleon!</speech>
    </movingNpc>
</npcs>