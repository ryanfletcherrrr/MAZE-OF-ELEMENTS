<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Somente os melhores treinadores ultrapassam seus limites. Vamos ver se você tem o que é preciso para estar no topo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... Você é mais forte do que eu esperava.  Vou me lembrar disso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... Você é mais forte do que eu esperava.  Vou me lembrar disso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Exatamente como esperado. Força, estratégia e controle... sem os três, a vitória está fora de alcance.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Velocidade, resistência e adaptabilidade... três chaves para o sucesso em uma corrida... e em uma batalha! Vamos ver se você consegue acompanhar o ritmo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que fiquei sem energia... mas, da próxima vez, estarei pronto para ir até o fim!</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que fiquei sem energia... mas, da próxima vez, estarei pronto para ir até o fim!</speech>
        </speeches>
        <speeches id="4">
            <speech>Isso foi apenas um aquecimento! Em uma corrida de verdade, eu o deixaria na poeira!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Esta velha mansão pode estar caindo aos pedaços, mas minhas chamas estão mais fortes do que nunca! Vamos aumentar o calor!</speech>
        </speeches>
        <speeches id="2">
            <speech>Acho que meu fogo não estava quente o suficiente para lidar com você.</speech>
        </speeches>
        <speeches id="3">
            <speech>Acho que meu fogo não estava quente o suficiente para lidar com você.</speech>
        </speeches>
        <speeches id="4">
            <speech>Queimado até ficar crocante! Você deveria saber que não deveria desafiar um mestre do fogo!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="" randomRotation="false" sprite="162" x="40" y="9">
        <speech>Você leu uma nota que dizia:</speech>
        <speech>"O crepúsculo substituído pela luz da manhã..."</speech>
    </npc>
    <movingNpc direction="LEFT" id="2" name="Ariados" speed="1" sprite="168" type="pokemon" x="30" y="6">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Skrrrrreeeeek!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wynaut" speed="1" sprite="360" type="pokemon" x="1" y="47">
        <path>DOWNx1,RIGHTx3,LEFTx3,UPx1</path>
        <onCollisionSpeech gap="4">Wyyyynaut!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="4" name="Justin" randomRotation="false" sprite="95" x="31" y="49">
        <speech>Há muitos Pokémon raros aqui.</speech>
        <speech>Eu nunca vou embora! Wynaut?</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Haunter" speed="1" sprite="93" type="pokemon" x="5" y="6">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Haaaunt</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="6" name="Emily" randomRotation="true" sprite="94" x="8" y="6">
        <speech>Por que todos estão tão assustados?</speech>
        <speech>Não há nada de errado em um Haunter servir bebidas! Pessoalmente, adoro o Ariados Float. Muito assustador e muito doce!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="7" name="Cinderella" randomRotation="true" sprite="43" x="37" y="35">
        <speech>Eles não podem ordenar que eu pare de sonhar.</speech>
    </npc>
</npcs>