<npcs>
    <npc direction="RIGHT" id="1" name="Scientist Janna" sprite="7" x="19" y="11">
        <speech>O gerador está funcionando corretamente. Nada de especial aqui.</speech>
        <speech>Ouça, jovem, às vezes a consistência é a melhor coisa. Não deixe ninguém lhe dizer o contrário.</speech>
    </npc>
    <npc direction="RIGHT" id="2" name="Scientist Marion" sprite="7" x="6" y="25">
        <speech>Gosto de trabalhar aqui, na companhia de todas essas máquinas.</speech>
        <speech>Às vezes, eles são muito melhores do que as pessoas, pelo menos é o que eu acho.</speech>
        <speech>Quero dizer... eles não querem prejudicá-lo ativamente, ao contrário de algumas pessoas.</speech>
        <speech>Ah, bem, que o passado seja passado...</speech>
    </npc>
    <npc direction="DOWN" id="3" name="Scientist Rick" sprite="8" x="17" y="35">
        <speech>Não toque em nada sem perguntar ao garoto, pois é perigoso.</speech>
        <speech>Quero dizer, temos algumas máquinas incrivelmente poderosas aqui, mas isso também aumenta o risco.</speech>
        <speech>Não tenho nada contra você, mas desde aquele incidente, é difícil confiar nas pessoas.</speech>
        <speech>O que aconteceu, você pergunta? Para ser sincero, não tenho certeza se entendi tudo isso.</speech>
    </npc>
    <npc direction="RIGHT" id="4" name="Scientist Morty" sprite="8" x="9" y="39">
        <speech>Não se preocupe com o Rick, ele tem estado duvidoso desde que aquelas pessoas chegaram aqui naquele dia.</speech>
        <speech>Que pessoas? Bem, eles eram um grupo estranho, vestindo laranja/branco e exigindo que mostrássemos a eles "a sala".</speech>
        <speech>Embora tenhamos protestado que não sabíamos nada sobre isso, eles não cederam. Não por algumas horas, pelo menos.</speech>
        <speech>Quando perceberam que não tínhamos informações, finalmente foram embora, mas não sem causar muitos danos.</speech>
        <speech>O que mais me surpreendeu, porém, foi o fato de o policial que veio aqui não parecer nem um pouco preocupado...</speech>
    </npc>
    <npc direction="UP" id="5" name="Scientist Jun" sprite="8" triggerX="29" triggerY="34" x="28" y="34">
        <speech>Meus pais costumavam me contar histórias sobre a antiga usina elétrica e como ela foi perdida.</speech>
        <speech>Ah, você também quer ouvir?</speech>
        <speech>Bem, o que aconteceu foi que um dia um grande terremoto atingiu essa parte da região. Como resultado, houve
            houve uma enorme fissura no solo.
        </speech>
        <speech>Aparentemente, diz-se que ele engoliu toda a usina de energia, juntamente com a área ao redor.
        </speech>
        <speech>Felizmente, ninguém estava lá dentro naquele dia, pois era feriado e tudo mais.</speech>
        <speech>Mesmo assim, eu me pergunto o que realmente aconteceu com ele depois disso...</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Olá, acho que sim.</speech>
            <speech>Por acaso você tem algum "Yellow Shards" com você? Estou procurando um pequeno, com cerca de 2,5 cm.</speech>
            <speech>Digamos que eu precise de um para, uhh, "fins de pesquisa".</speech>
            <speech>Se você conseguir um para mim, poderei recompensá-lo muito bem. Há algo que você queira, em particular?</speech>
            <speech>Um "Power Plant Pass"? Esse é um pedido estranho, mas acho que posso conseguir um, se você puder me dar aquele fragmento amarelo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Fantástico! Você quer me dar esse fragmento amarelo em troca de um passe?</speech>
        </speeches>
        <speeches id="3">
            <speech>Mas eu preciso daquele fragmento amarelo...</speech>
        </speeches>
        <speeches id="4">
            <speech>Aqui está, um autêntico Power Plant Pass. Na verdade, eu o encontrei caído no chão há algum tempo.</speech>
            <speech>De qualquer forma, obrigado.</speech>
        </speeches>
        <speeches id="5">
            <speech>Se alguém perguntar, você não me conhece, e eu não conheço você.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Seus pirralhos, parem de se intrometer em nossos planos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Seu humano imbecil!!!</speech>
            <speech>Você ao menos sabe o que está enfrentando?</speech>
            <speech>Nosso trabalho aqui está concluído, mas farei com que meu mestre saiba sobre você.</speech>
            <speech>Afaste-se!</speech>
        </speeches>
        <speeches id="4">
            <speech>Não se atreva a voltar aqui e se intrometer conosco.</speech>
            <speech>O que vamos alcançar está muito além de seus cérebros simplórios.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>**$JVALOH_RIVAL começa a chorar...**</speech>
            <speech>Desculpe-me $PLAYER_NAME... Eu não deveria ter sido tão impaciente.</speech>
            <speech>Obrigado por me salvar.</speech>
            <speech>Ouvi um dos grunhidos dizer algo sobre o fato de ser o motor errado.</speech>
            <speech>Eles também estavam descrevendo como causarão muitos danos ao estado pacífico de Jvaloh ao continuar o plano maligno de seu mestre.</speech>
            <speech>Tenho a sensação de que esses Powerplants, Suicune e Electric Legendary Dogs estão todos ligados de alguma forma.</speech>
            <speech>Temos que descobrir um plano e detê-los antes que seja tarde demais.</speech>
            <speech>Vamos elaborar um plano e atacá-los! Vou para a academia 3 agora e pensarei em um plano.</speech>
        </speeches>
    </conversation>
</npcs>