<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Já enfrentou o poder do fogo de Magma? Vamos testar sua resistência!</speech>
        </speeches>
        <speeches id="2">
            <speech>Nosso fogo foi apagado por enquanto, mas a brasa da vingança continua ardendo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Então, a maré virou contra nós. Mas o fogo do Magma nunca se extingue de fato.</speech>
        </speeches>
        <speeches id="4">
            <speech>BURNN!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Dizem que todo Grunt tem seu dia. Hoje, eu provo que isso está certo!</speech>
        </speeches>
        <speeches id="2">
            <speech>A derrota é apenas um trampolim em meu caminho para a grandeza. Observe minha ascensão!</speech>
        </speeches>
        <speeches id="3">
            <speech>Não é o meu dia, não é? Não importa. Todo Grunt tem seu retorno. Eu estarei esperando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você subestimou um Grunt, não foi? Nós também temos nossos momentos de glória!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Um grunhido com gosto por ópera? Esse sou eu. Vamos ver se você consegue acompanhar meu ritmo!</speech>
        </speeches>
        <speeches id="2">
            <speech>A derrota é apenas a abertura da minha história. O final ainda está por vir!</speech>
        </speeches>
        <speeches id="3">
            <speech>Outra perda, mas toda ópera tem suas reviravoltas dramáticas. Voltarei ao palco.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, desta vez a vitória é minha! No entanto, como na ópera, a história não termina até o último ato. Prepare-se para nosso próximo encontro!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>

        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>

        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, vinculados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>

        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os poderes antigos que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>

        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo ordenado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu auge.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Volte mais tarde, pois no momento não tenho nada para vender.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, olá, estamos no dia 19 do mês e você está aqui com meu Gastly favorito.</speech>
            <speech>Aqui está meu cofre de itens especiais, diga-me o que deseja comprar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, olá, estamos no dia 19 do mês, eu sou o Storyteller e estou aqui para vender itens exclusivos.</speech>
            <speech>No entanto, gostaria que você me mostrasse meu Pokémon favorito, o Gastly, antes de eu lhe mostrar meu cofre de itens.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Meditite" shouldSleep="" speed="1" sprite="307" type="pokemon" x="22" y="14">
        <path>RIGHTx3,UPx3,DOWNx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Meditite!</onCollisionSpeech>
        <speech>Meditite!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Duskull" shouldSleep="" speed="1" sprite="355" type="pokemon" x="3" y="2">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Vulpix" shouldSleep="" speed="1" sprite="37" type="pokemon" x="19" y="3">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Vulpix!</onCollisionSpeech>
        <speech>Vulpix!</speech>
    </movingNpc>
</npcs>