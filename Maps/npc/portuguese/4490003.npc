<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Nasci em um cemitério e fui criado em um cemitério. Deixe todas as suas maldições e rancores comigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Derrotar-me é incrível! Você deve estar meio amaldiçoado também!</speech>
        </speeches>
        <speeches id="3">
            <speech>Derrotar-me é incrível! Você deve estar meio amaldiçoado também!</speech>
        </speeches>
        <speeches id="4">
            <speech>Terrível! Você não está guardando rancor suficiente! Se quiser vencer, aplique mais em suas maldições!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Heheh... Estou vendo tudo claramente... Você é um médico de um planeta maligno, não é?</speech>
        </speeches>
        <speeches id="2">
            <speech>Eh... ondas de rádio... Há ondas de rádio saindo de seu nariz...</speech>
        </speeches>
        <speeches id="3">
            <speech>Eh... ondas de rádio... Há ondas de rádio saindo de seu nariz...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ugh... Meus poderes... Meus poderes são... Acho que preciso de uma enfermeira...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Um jovem aventureiro que viaja pelo mundo. Esse sou eu!</speech>
        </speeches>
        <speeches id="2">
            <speech>A aventura está me chamando. Adeus! Vejo você novamente!</speech>
        </speeches>
        <speeches id="3">
            <speech>A aventura está me chamando. Adeus! Vejo você novamente!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ver Pokémon de todo o mundo é o objetivo de minha jornada.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Sussurros de um poder antigo ecoam pela noite. Você se atreve a atender ao chamado deles?</speech>
            <speech>Sob o olhar atento da lua, nosso convênio se reúne. O desafio das eras aguarda sua coragem.</speech>
        </speeches>

        <speeches id="2">
            <speech>Embora vocês triunfem, a escuridão eterna tece sua paciência. Nossa determinação permanece inabalável, intacta.</speech>
            <speech>As sombras se separam, revelando um caminho para nosso enigmático líder. Uma recompensa para os corajosos, os fortes e os vitoriosos.</speech>
        </speeches>

        <speeches id="3">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
            <speech>Nossos rituais, vinculados à dança celestial, não são favoráveis a esta hora. O momento certo ainda nos escapa.</speech>
            <speech>Retorne quando a lua reinar suprema sobre a noite, em $DURATION. Só então o véu se levantará.</speech>
        </speeches>

        <speeches id="4">
            <speech>Incrível! Sua força perfura o véu da noite, rivalizando com os antigos poderes que comandamos.</speech>
            <speech>Velado em segredo, nosso líder o aguarda. Sua vitória lhe rendeu uma audiência no coração das sombras.</speech>
        </speeches>

        <speeches id="5">
            <speech>Os corpos celestes ainda não se alinharam; nosso poder está adormecido, aguardando o tempo determinado.</speech>
            <speech>Retorne na sexta-feira, quando o brilho da lua perfurar o véu da realidade e nosso poder estiver em seu auge.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Dusclops" speed="1" sprite="356" type="pokemon" x="1" y="6">
        <path>DOWNx5,RIGHTx3,LEFTx3,UPx5</path>
        <onCollisionSpeech gap="4">Dusclops!</onCollisionSpeech>
        <speech>Dusclops!</speech>
    </movingNpc>
</npcs>