<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>$PLAYER!</speech>
            <speech>Então você veio... Eu estava esperando por você... Que calor terrível.</speech>
            <speech>A sensação é de que o mundo inteiro será queimado...</speech>
            <speech>Ah, sim. Você precisa ouvir o que meu amigo tem a dizer.</speech>
        </speeches>
        <speeches id="2">
            <speech>Essa luz solar... As pessoas e os Pokémon precisam da luz do sol para viver.</speech>
            <speech>Então, por que essa luz do sol nos causa tanto medo?</speech>
            <speech>O sol escaldante sobre Sootópolis está ficando ainda mais intenso...</speech>
            <speech>Em breve, toda Hoenn será apanhada sob seu brilho fulminante... Se isso acontecer...</speech>
        </speeches>
        <speeches id="3">
            <speech>$NOME_DO_JOGADOR...</speech>
            <speech>E pensar que você tinha o Orbe Azul...</speech>
            <speech>Você ficará bem. Você e seu Pokémon podem lidar com isso, aconteça o que acontecer. Eu acredito nisso.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Meu nome é Wallace.</speech>
            <speech>Sou o líder do ginásio desta cidade.</speech>
            <speech>Também me foi confiada a proteção da Caverna da Origem.</speech>
            <speech>Essa seca está sendo causada por um poder que emana da Caverna da Origem.</speech>
            <speech>Esse é o Orbe Azul. Estou vendo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Não há nada a temer. O Orbe Azul que essa criança carrega...</speech>
            <speech>Seus poderes ancestrais protegerão tanto a criança quanto seu Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sim. A energia que está transbordando da Caverna da Origem agora mesmo...</speech>
            <speech>É a mesma energia que dá ao Groudon seu poder...</speech>
            <speech>Com a Blue Orb, que contém o poder de suprimir essa...</speech>
            <speech>Deve ser possível acalmar a fúria desse dilúvio de magma.</speech>
            <speech>É claro que o poder da Blue Orb por si só não o levará até onde Groudon está esperando.</speech>
            <speech>Você não chegará ao Hoenn's Core dessa forma. Use o traje que acabou de receber.</speech>
            <speech>Com isso, finalmente será possível enfrentar as forças da natureza.</speech>
        </speeches>
        <speeches id="4">
            <speech>Nenhum homem ou mulher de Sootópolis tem permissão para entrar na Caverna da Origem.</speech>
            <speech>Mas você precisa ir, junto com sua Blue Orb. Você deve ir, independentemente do que o espera dentro
                daquela caverna...
            </speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>...sei o que deve ser feito. Vou confiar isso a você agora.</speech>
            <speech>É o fruto de nossa colaboração com a Devon Corporation e representa o auge do conhecimento e da habilidade tecnológica de Hoenn.
                conhecimento e habilidade tecnológica de Hoenn.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>E ainda assim... Mesmo com o Magma Suit, é provável que alguém possa passar por esse magma, agora
                mais feroz do que nunca devido às forças da natureza?
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Criança, você...</speech>
            <speech>Não. Não tenho o direito de chamá-lo de "criança". Companheiro treinador.</speech>
            <speech>Causei grandes danos e, por isso, peço minhas mais sinceras desculpas.</speech>
            <speech>Mas agora nos encontramos em um impasse, e você e seu Pokémon são tudo com que a humanidade tem que contar
                em sua luta contra Groudon...
            </speech>
            <speech>O destino de nosso mundo... O mundo no qual toda a humanidade prospera... O destino de nosso mundo está em
                suas mãos!
            </speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Líder Maxie... para aquela criança...</speech>
        </speeches>
        <speeches id="2">
            <speech>Na verdade, estávamos preparando isso em antecipação ao contato com Groudon...</speech>
            <speech>Mas, neste momento, parece que não há nenhuma esperança de que isso aconteça conosco...</speech>
            <speech>Não há nada que possamos fazer, exceto deixar isso com você.</speech>
        </speeches>
        <speeches id="3">
            <speech>Isso é verdade. É bem possível que sua energia seja muito maior do que nossos cálculos mostram.
            </speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Estávamos esperando, seu vagabundo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Você acertou em cheio!</speech>
            <speech>Aqueles velhos do Monte Pyre disseram algo sobre isso...</speech>
            <speech>Que a Red Orb liberaria os poderes primordiais de Groudon... E desencadearia uma Reversão Primordial.</speech>
            <speech>Já o Orbe Azul tinha o poder de reverter essa situação e acalmar a fera.</speech>
        </speeches>
        <speeches id="3">
            <speech>Também reuniremos nosso pessoal aqui em cima, para ajudar qualquer pessoa e Pokémon em apuros.</speech>
            <speech>Meu pequeno salvador...</speech>
            <speech>Parece que estamos fazendo com que você carregue todo o fardo em seus pequenos ombros sozinho.</speech>
            <speech>Sinto muito por isso... Mas sei que você vai levar isso até o fim!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>$PLAYER!</speech>
            <speech>Ouvi no noticiário que as coisas estavam acontecendo de forma desordenada em Sootopolis. E então eu o vi no BuzzNav,
                $PLAYER!
            </speech>
            <speech>Eu não podia ficar sentado e não fazer nada quando sabia que você estava aqui no meio da confusão, então vim
                voando!
            </speech>
            <speech>Bwuh?! Aquela não é a Equipe Magma? E a Equipe Aqua?!</speech>
            <speech>OK, posso dizer que estou chocado e confuso em muitos níveis neste momento?</speech>
            <speech>Isso provavelmente é algo muito maior do que eu posso imaginar, não é?</speech>
            <speech>Portanto, nem vou perguntar agora.</speech>
            <speech>Tentarei descobrir o que posso fazer para ajudar e farei o melhor que puder com isso.</speech>
            <speech>E vou continuar esperando e acreditando que você vai ficar bem lá fora.</speech>
            <speech>Porque... Porque você... Você é o melhor amigo que eu tenho!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>$PLAYER_NAME, devemos a você um grande agradecimento.</speech>
            <speech>Olhe acima de você. O céu sobre Sootopolis voltou ao normal.</speech>
        </speeches>
        <speeches id="2">
            <speech>...</speech>
            <speech>A Equipe Magma e a Equipe Aqua são formadas por pessoas com ideais e objetivos completamente opostos.</speech>
            <speech>Mas talvez até mesmo eles possam aprender a se encontrar no meio do caminho... uma pequena concessão de cada vez.</speech>
            <speech>Sei que é exagero esperar que tudo mude de uma vez, mas...</speech>
            <speech> Espero que esta crise possa, pelo menos, ajudá-los a dar esse primeiro passo vital.</speech>
            <speech>Imagino que muitas mudanças estejam acontecendo agora em toda Hoenn.</speech>
            <speech>Espero que você possa viajar por esse mundo e ver sua riqueza com seus próprios olhos - e deleitar-se com sua novidade em seu próprio coração.</speech>
            <speech>Mas, por enquanto, talvez você queira primeiro desafiar o ginásio Pokémon dessa cidade.</speech>
            <speech>Lá, você encontrará o mesmo Wallace que nos ajudou tanto, esperando por você.</speech>
            <speech>Ele é forte. Mas do jeito que você está agora, deve ser capaz de lutar com ele em pé de igualdade.</speech>
            <speech>$NOME_DO_JOGADOR...</speech>
            <speech>À medida que você e seu Pokémon vivem e crescem nesse mundo transformado, eu me pergunto que efeito isso terá sobre você.</speech>
            <speech>Sobre o que você vai pensar? Em quais ideais você acreditará?</speech>
            <speech>Se tivermos a oportunidade de nos encontrar novamente, espero que você possa mostrar a mim e à minha equipe as respostas que encontrou.</speech>
            <speech>Até lá...</speech>
            <speech>Vejo você mais tarde...</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>A energia que foi acumulada nas profundezas da Caverna da Origem está agora fluindo para o mundo maior?
                mundo maior?
            </speech>
            <speech>É como se a incerteza de momentos atrás nunca tivesse existido.</speech>
            <speech>Meu coração está tranquilo agora.</speech>
        </speeches>
        <speeches id="2">
            <speech>... Acho que... você pode estar certo...</speech>
            <speech>No entanto...</speech>
            <speech>Pessoalmente, no meu caso... Alguns erros não podem ser reparados, não importa o quanto você tente corrigi-los.
            </speech>
            <speech>E cometi erros tão grandes que o mundo inteiro ficou de joelhos.</speech>
            <speech>Pode ser que eu... Talvez seja demais supor que eu mereça a chance de começar algo
                de novo.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>T-Tabitha...</speech>
            <speech>...</speech>
            <speech>Obrigado.</speech>
        </speeches>
        <speeches id="4">
            <speech>Seu uso hábil do Orbe Azul realmente me impressionou.</speech>
            <speech>De agora em diante, protegerei a Red Orb, para vigiar o Groudon.</speech>
            <speech>Tenha certeza de que não permitirei que nenhuma força nesta terra perturbe seu sono novamente.</speech>
            <speech>Até nos encontrarmos novamente, adeus.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Líder... Sem dúvida, você cometeu uma ofensa que jamais poderá ser perdoada.</speech>
            <speech>Você prejudicou não apenas a Equipe Magma, mas todos os seres vivos deste planeta, sejam eles grandes ou pequenos.</speech>
            <speech>No entanto, é exatamente por isso que você deve corrigir as coisas agora.</speech>
            <speech>Você deve continuar a expiar os pecados que cometeu, mesmo com o risco de sua própria vida...</speech>
            <speech>Corrigir os erros que você cometeu, sem fugir com medo - não é assim que um adulto aceita a responsabilidade?</speech>
            <speech>... Se você encontrar a determinação para fazer isso dentro de si mesmo, então eu...</speech>
            <speech>Tabitha, administradora da Equipe Magma... Servirei ao seu lado como conselheiro para sempre.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>De alguma forma, é... tão quente...</speech>
        </speeches>
        <speeches id="2">
            <speech>... O mar ou a terra...</speech>
            <speech>Pokémon ou humanidade...</speech>
            <speech>Durante todo esse tempo, estivemos apenas tentando agarrar a felicidade de um deles, mesmo que isso significasse
                destruir o outro...
            </speech>
            <speech>Veja como as coisas aconteceram, agora que o mundo recuperou seu equilíbrio natural...</speech>
            <speech>Temos que repensar isso desde o início...</speech>
            <speech>Temos que refazer tudo o que fizemos do zero - e fazer tudo certo desta vez. O que você acha?
                Maxie...
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Sabe como é...</speech>
            <speech>Um dia, nós, adultos, teremos que entregar este mundo a esse pequeno malandro e ao resto de sua geração.</speech>
            <speech>Mas que tipo de mundo nós, adultos, vamos criar?</speech>
            <speech>Que tipo de mundo queremos passar para essas crianças?</speech>
            <speech>Se nem nós mesmos descobrimos isso, nunca chegaremos a lugar algum.</speech>
            <speech>Então, vamos criar um mundo onde todos possam coexistir juntos?</speech>
            <speech>Ou, afinal de contas, será um mundo que reivindicaremos pela força?</speech>
            <speech>Uma coisa pela qual lutamos e brigamos...</speech>
            <speech>Não sei, mas acho que podemos pelo menos começar dando um tempo e refletindo sobre isso.</speech>
            <speech>Todos nós podemos fazer isso, quer sejamos da Equipe Aqua ou da Equipe Magma ou qualquer outra...</speech>
        </speeches>
        <speeches id="4">
            <speech>E isso é tudo para mim! Até mais, vagabundo!</speech>
        </speeches>
    </conversation>

    //May after its all over
    <conversation id="11">
        <speeches id="1">
            <speech>$PLAYER_NAME!</speech>
            <speech>Então está tudo acabado...</speech>
        </speeches>
        <speeches id="2">
            <speech>Ufa!</speech>
            <speech>E finalmente somos apenas nós dois novamente.</speech>
            <speech>Portanto, tenho que dizer... obrigado por tudo o que você fez pela nossa região, $PLAYER_NAME.</speech>
            <speech>Sabe, achei que deveríamos ter saído juntos de Littleroot, mas...</speech>
            <speech>Mas você, $PLAYER_NAME... Parece que você está cada vez mais à frente de mim...</speech>
            <speech>Até comecei a sentir que você tinha ido para um lugar que eu não conseguia alcançar.</speech>
            <speech>É muito solitário, sabe?</speech>
            <speech>Não! O que você pensaria se eu realmente dissesse algo assim?</speech>
            <speech>Hee hee! De qualquer forma, você fez algo realmente incrível hoje, então tente ir com calma por um tempo!</speech>
            <speech>Até logo!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>O líder da academia não está na academia no momento.</speech>
            <speech>Por favor, volte mais tarde.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>A casa parece estar trancada.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>NADARMMMPPPPP!!!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Zoro" randomRotation="true" sprite="339" x="43" y="43">
        <speech>Perdido de novo, não é? É de se imaginar. Bem, é melhor aproveitar ao máximo.</speech>
        <speech>Cidade de Sootopolis, hein? Não é um lugar ruim para ficar abandonado. Pelo menos há muita água para treinar por perto.</speech>
        <speech>É hora de aprimorar minhas habilidades e esperar que a tripulação me alcance. Eles acabarão me encontrando... espero que sim.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Relicanth" speed="1" sprite="369" type="pokemon" x="26" y="27">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Relicanth!</onCollisionSpeech>
        <speech>Relicanth!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Bagon" shouldSleep="" speed="1" sprite="371" type="pokemon" x="42" y="5">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Bagon!</onCollisionSpeech>
        <speech>Bagon!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="4" name="Mingyu" randomRotation="false" sprite="11" x="21" y="39">
        <speech>Bem-vindo ao Sootopolis Gym, onde as batalhas são tão imprevisíveis quanto as marés.</speech>
        <speech>Os Pokémon do tipo Água do líder do ginásio são adversários ferozes, mas, com determinação e estratégia, você pode criar suas próprias ondas!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Altaria" speed="1" sprite="334" type="pokemon" x="33" y="58">
        <path>LEFTx13,RIGHTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Shelgon" shouldSleep="" speed="1" sprite="372" type="pokemon" x="42" y="50">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Goldeen" speed="1" sprite="118" type="pokemon" x="21" y="51">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Goldeen!</onCollisionSpeech>
        <speech>Goldeen!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Chinchou" shouldSleep="" speed="1" sprite="170" type="pokemon" x="37" y="36">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Chinchou!</onCollisionSpeech>
        <speech>Chinchou!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Horsea" speed="1" sprite="116" type="pokemon" x="36" y="49">
        <path>UPx5,LEFTx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Horsea!</onCollisionSpeech>
        <speech>Horsea!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wingull" speed="1" sprite="278" type="pokemon" x="5" y="27">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="55" y="38">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Salamence" speed="1" sprite="373" type="pokemon" x="5" y="10">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="14" name="''Slim'' Shady Dealer" randomRotation="true" sprite="115" x="22" y="14">
        <speech>Ei, você está aí!</speech>
        <speech>Quer comprar algumas... bagas?</speech>
        <speech>Oh, eu não vendo. Mas conheço um cara....</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="6" y="44">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Tao" shouldSleep="" speed="1" sprite="48" type="npc" x="48" y="28">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Hey! Watch it!</onCollisionSpeech>
        <speech>Faça um passeio tranquilo pelo Sootopolis Park e aprecie a beleza serena da natureza, bem no coração da cidade.</speech>
    </movingNpc>
</npcs>