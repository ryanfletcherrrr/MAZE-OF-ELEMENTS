<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Ops! Hehehe! Não vou bater em você toda vez que nos encontrarmos!</speech>
            <speech>Como está indo, $PLAYER_NAME?</speech>
            <speech>Melhorando seu Pokémon, hein?</speech>
            <speech>Vou testar você e seus Pokémon para ver se são fortes e resistentes!</speech>
        </speeches>
        <speeches id="2">
            <speech>O que acabou de acontecer?! Está me dizendo que eu perdi?!</speech>
            <speech>Sim, talvez você tenha ficado um pouco mais duro desde a última vez.</speech>
            <speech>Isso até me chocou um pouco, então, sim, levei uma surra porque fui descuidado.</speech>
            <speech>Ah, sim, eu me juntei ao Sr. Wake como aprendiz! Tipo, eu quero minha própria música tema!</speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>Não perca suas esperanças. Você não era tão ruim assim. Eu é que sou bom demais.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Oh, ei! Você tem o distintivo de ginástica aqui, não é? O que eu lhe disse? O Sr. Wake - quero dizer, o mestre - é muito legal, não é?</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, mestre!</speech>
        </speeches>
        <speeches id="3">
            <speech>Isso não importa. Eu fiz de você meu mestre!</speech>
            <speech>Eu decidi! Mas esqueça isso! Há problemas se formando!</speech>
            <speech>Há um capanga da Equipe Galáctica em frente ao Portão do Observatório. Ele disse algo sobre uma bomba!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ei! Mestre! Espere!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Que barulho é esse, então? Oh, são vocês dois.</speech>
        </speeches>
        <speeches id="2">
            <speech>...Ouça, garoto. Eu conheço seu pai. Não vou negar isso.</speech>
            <speech>Mas não me lembro de tê-lo tomado como aprendiz. Nem um pouco.</speech>
            <speech>Além disso, vocês dois não precisam de mim.</speech>
            <speech>Você pode se tornar forte por si mesmo sem ser meu aprendiz.</speech>
        </speeches>
        <speeches id="3">
            <speech>O QUE?</speech>
            <speech>Ninguém mexe com a Pastoria! Não no meu turno!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Então, onde está esse Galac...</speech>
        </speeches>
        <speeches id="2">
            <speech>VOCÊ! O que você fez?!</speech>
        </speeches>
        <speeches id="3">
            <speech>O Great Marsh tem um valor inestimável...</speech>
            <speech>Vocês dois! NÃO me sigam! Não deixem mais ninguém entrar também!</speech>
            <speech>Haverá grandes problemas se sobrar alguma coisa dessa bomba!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Fweh! Isso foi difícil.</speech>
        </speeches>
        <speeches id="2">
            <speech>O que eu fiz, você está se perguntando?</speech>
            <speech>Bem, tecnicamente falando, não fui eu.</speech>
            <speech>O pacote que chega, veja, era uma bomba, chamada de Bomba Galáctica.</speech>
            <speech>A mim, foi dito para apertar o botão.</speech>
            <speech>Então eu fiz. Tipo, "Poink"!</speech>
            <speech>É isso mesmo! Não posso me esquecer!</speech>
            <speech>Os resultados dos testes precisam ser relatados!</speech>
            <speech>Então, saúde! Seu idiota, sua máscara é absurda!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Ei! O que sou eu, um fígado picado? Não se esqueça de que também estou aqui!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ei! $PLAYER_NAME! Vá atrás daquele capanga galáctico!</speech>
            <speech>Vou ficar aqui, como disse o Mestre! Tenho que evitar que os outros entrem!</speech>
            <speech>Não deixe aquele galáctico escapar!</speech>
        </speeches>
        <speeches id="3">
            <speech>Qual é o problema?! Por que você ainda não foi embora?! Vá atrás daquele capanga galáctico!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Safia" shouldSleep="" speed="1" sprite="17" type="npc" x="40" y="28">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Alguns Treinadores impedem deliberadamente a evolução de seus Pokémon.</speech>
        <speech>Eles esperam até que o Pokémon suba de nível e aprenda determinados movimentos.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Leanna" shouldSleep="" speed="1" sprite="60" type="npc" x="47" y="26">
        <path>LEFTx2,DOWNx1,RIGHTx2,UPx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Alguém me deu uma baga, então eu a plantei e cresci mais um pouco.</speech>
        <speech>Em seguida, peguei as bagas e as cozinhei em Poffins.</speech>
        <speech>Todo o trabalho vale a pena quando vejo como eles deixam meus Pokémon felizes!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Kaidan" shouldSleep="" speed="1" sprite="34" type="npc" x="33" y="43">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>Ouvi dizer que o líder do ginásio Pastoria participa de lutas profissionais para ganhar prêmios em dinheiro.</speech>
        <speech>Esse dinheiro é destinado a ajudar pessoas e Pokémon com problemas.</speech>
        <speech>Gostaria de saber quem venceria entre Crasher Wake e Masked Royal em Alola?</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Gene" sprite="37" x="35" y="40">
        <speech>Aqui onde estou, estou bem no meio da cidade.</speech>
        <speech>Ok, o centro da cidade é, na verdade, aquela árvore atrás de mim, mas é perto o suficiente.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Kynan" sprite="11" x="42" y="52">
        <speech>Não posso usar o movimento Surf fora da batalha até vencer o Gym Leader local.</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Cohan" shouldSleep="" speed="1" sprite="26" type="npc" x="21" y="57">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>O Great Marsh mantém o clima fresco no verão.</speech>
        <speech>Essa é uma boa cidade para Pokémon do tipo Água.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Clefairy" shouldSleep="" speed="1" sprite="35" type="pokemon" x="24" y="57">
        <path>DOWNx1,UPx1</path>
        <onCollisionSpeech gap="4">Fiiih?!</onCollisionSpeech>
        <speech>*A fada acena com o dedo para você</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Bronwen" shouldSleep="" speed="1" sprite="8" type="npc" x="19" y="62">
        <path>RIGHTx1,UPx2,DOWNx2,LEFTx1</path>
        <onCollisionSpeech gap="4">Need to find rare Pokemon!</onCollisionSpeech>
        <speech>Eu estudo Pokémon raros que aparecem apenas no Great Marsh.</speech>
        <speech>Se você encontrar algum, posso oferecer algumas recompensas.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Benny" shouldSleep="" speed="1" sprite="32" type="npc" x="40" y="59">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>Você já visitou a Pokemon Mansion? Ela fica na Route 212.</speech>
        <speech>O proprietário, Sr. Backlot, gosta de se gabar de seu rebanho de Pokémon raros.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Mabel" shouldSleep="" speed="1" sprite="31" type="npc" x="60" y="21">
        <path>DOWNx2,LEFTx1,RIGHTx1,UPx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>Estou visitando aqui para ver o Great Marsh.</speech>
        <speech>Estou hospedado no hotel à beira do lago.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="11" name="Psyduck" speed="1" sprite="54" type="pokemon" x="27" y="65">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Psyyyyyyy</onCollisionSpeech>
        <speech>Psyyyyyyyyy!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="12" name="Tentacruel" speed="1" sprite="73" type="pokemon" x="60" y="66">
        <path>RIGHTx5, UPx5, DOWNx5, LEFTx5</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Phelps" sprite="21" x="53" y="61">
        <speech>Cuidado com esses Tentacruéis $PLAYER_NAME.</speech>
        <speech>Eles estão sempre irritados!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="14" name="Micas" speed="1" sprite="22" type="npc" x="49" y="53">
        <path>RIGHTx3, DOWNx2, RIGHTx2, LEFTx2, UPx2, LEFTx3</path>
        <onCollisionSpeech gap="4">1, 2, 3,4... 1,2,3,4...</onCollisionSpeech>
        <speech>Um dia, nadarei mais rápido do que Phelps. Tenho treinado muito ultimamente!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Pelipper" speed="1" sprite="279" type="pokemon" x="36" y="19">
        <path>DOWNx1, RIGHTx3, UPx1, LEFTx3</path>
        <onCollisionSpeech gap="4">Ahhhhh!</onCollisionSpeech>
        <speech>* Pelipper parece gostar de você</speech>
    </movingNpc>
</npcs>