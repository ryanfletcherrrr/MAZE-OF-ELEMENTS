<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ah! $PLAYER_NAME!</speech>
            <speech>Ralts e eu nos tornamos muito mais fortes desde que nos conhecemos.</speech>
            <speech>Crescendo juntos! Quero provar isso a você</speech>
            <speech>Por favor... me ajude mais uma vez... E batalhe comigo!</speech>
            <speech>Nós vamos vencer, Ralts! Temos que</speech>
        </speeches>
        <speeches id="2">
            <speech>Uau... Você realmente é forte, $PLAYER_NAME!</speech>
            <speech>Vou voltar para o Verdanturf...</speech>
            <speech>$PLAYER_NAME, obrigado... Ser um instrutor é difícil, não é?</speech>
            <speech>Não é suficiente apenas batalhar com seu Pokémon. Não posso me tornar um verdadeiro Treinador assim... Na verdade, não...</speech>
            <speech>I... Estou definitivamente... Vou ficar mais forte. Muito, muito mais forte!</speech>
            <speech>Sinto que aprendi muito com apenas uma batalha Pokémon com você... Sobre meus próprios limites... e os de Ralts...</speech>
            <speech>Então... hum... É por isso que... $PLAYER_NAME... Se estiver tudo bem... Eu poderia...</speech>
            <speech>Posso chamá-lo de... meu r-riv-</speech>
            <speech>Ah, não importa! S-perdão! Não foi nada! Por favor, esqueça isso!</speech>
            <speech>Guh... adeus!</speech>
        </speeches>
        <speeches id="3">
            <speech>Uau... Você realmente é forte, $PLAYER_NAME!</speech>
            <speech>Vou voltar para o Verdanturf...</speech>
            <speech>$PLAYER_NAME, obrigado... Ser um treinador é difícil, não é?</speech>
            <speech>Não é suficiente apenas batalhar com seu Pokémon. Não posso me tornar um verdadeiro Treinador assim... Na verdade, não...</speech>
            <speech>I... Estou definitivamente... Vou ficar mais forte. Muito, muito mais forte!</speech>
            <speech>Sinto que aprendi muito com apenas uma batalha Pokémon com você... Sobre meus próprios limites... e os de Ralts...</speech>
            <speech>Então... hum... É por isso que... $PLAYER_NAME... Se estiver tudo bem... Eu poderia...</speech>
            <speech>Posso chamá-lo de... meu r-riv-</speech>
            <speech>Ah, não importa! S-perdão! Não foi nada! Por favor, esqueça isso!</speech>
            <speech>Guh... adeus!</speech>
        </speeches>
        <speeches id="4">
            <speech>Uau! Eu acabei de ganhar de você...?</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Ufa... É realmente muito longe, não é?</speech>
            <speech>Todo o caminho até Mauville...</speech>
            <speech>Portanto, essa deve ser a Rota 118 adiante...</speech>
            <speech>Fico imaginando que tipo de Pokémon encontrarei lá. Mal posso esperar para descobrir!</speech>
            <speech>Vejo você mais tarde, $PLAYER_NAME! Estou indo direto para a Rota 118!</speech>
            <speech>Vamos definitivamente ter uma batalha na próxima vez que nos encontrarmos! É uma promessa, OK? E você não pode quebrar uma promessa!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Receio não poder deixar ninguém passar para o norte até que isso seja resolvido. É muito perigoso.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Oh! Olá, $PLAYER_NAME. Você chegou em um momento bastante problemático.</speech>
            <speech>Estamos enfrentando uma pequena crise aqui em New Mauville. O gerador da usina de energia está falhando.</speech>
            <speech>Receio não poder deixar ninguém passar para o norte até que isso seja resolvido. É muito perigoso.</speech>
            <speech>Você poderia investigar a situação para nós? Você demonstrou grande habilidade nas academias.</speech>
            <speech>Há alguns treinadores dentro da usina que podem saber mais. Tenha cuidado.</speech>
            <speech>Se você puder encontrar a bateria do gerador e corrigir o problema, será de grande ajuda.</speech>
            <speech>É uma tarefa desafiadora, mas acredito que alguém do seu calibre pode dar conta do recado. Boa sorte, $PLAYER_NAME!</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Maravilhoso, $PLAYER_NAME! Você restaurou a energia em New Mauville! A cidade inteira está cheia de energia novamente.</speech>
            <speech>Sua experiência em lidar com uma situação tão crítica é realmente louvável.</speech>
            <speech>Como prova da gratidão de nossa cidade, tenho algo especial para você.</speech>
        </speeches>
        <speeches id="2">
            <speech>Esta Thunder Stone é um pequeno símbolo de nossa imensa gratidão. Ela tem o poder de evoluir certos Pokémon.</speech>
            <speech>Que ela o ajude em sua jornada tanto quanto você ajudou New Mauville.</speech>
            <speech>Mais uma vez, obrigado, $PLAYER_NAME. Você tem sido uma verdadeira centelha de esperança para todos nós!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Pare!</speech>
            <speech>Pare! Isso não é uma piada, sua menina tola!</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>Ah, você está de volta! Mas parece que você ainda não encontrou o Badge Case.</speech>
            <speech>A segurança de nossos crachás é fundamental para a honra da academia.</speech>
            <speech>Poderia continuar sua busca? Estou contando com você para trazê-lo de volta.</speech>
            <speech>Os futuros concorrentes não poderão competir sem esses emblemas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Esse é o meu estojo de crachá que você tem aí? Esplêndido trabalho, Trainer!</speech>
            <speech>Eu sabia que poderia contar com alguém tão confiável como você.</speech>
            <speech>Por gentileza, poderia devolvê-lo? Com os crachás de volta, podemos garantir que o legado da academia continue intacto.</speech>
        </speeches>
        <speeches id="3">
            <speech>Entendo que talvez você queira mantê-lo por mais algum tempo. Talvez você sinta que há mais a ser feito?</speech>
            <speech>Bem, a academia e eu estaremos aqui esperando.</speech>
            <speech>Lembre-se de que, quanto mais cedo tivermos esses emblemas de volta, mais cedo poderemos voltar ao normal.</speech>
            <speech>Não tenha pressa, mas não nos deixe esperando por muito tempo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Muito obrigado, de verdade! Com o Badge Case de volta em boas mãos, podemos continuar a desafiar e inspirar instrutores de todo o mundo.</speech>
            <speech>Você prestou um grande serviço à cidade de Mauville hoje.</speech>
            <speech>Como sinal de minha gratidão, deixe-me oferecer-lhe algo especial. Pegue este TM82, Thunder wave!</speech>
            <speech>Sua bravura e determinação me lembram a própria essência do que significa ser um Treinador Pokémon.</speech>
            <speech>Obrigado, e volte sempre que quiser desafiar a academia!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>Ah, $PLAYER_NAME! Estou em uma situação complicada. Meu amado navio, aquele em que naveguei por anos, foi roubado pelos capangas da Equipe Aqua!</speech>
            <speech>Eles saíram correndo em direção à Rota 104 e, como meu Peeko também foi levado, estou preso aqui, sem saída e muito preocupado.</speech>
            <speech>Nunca me senti tão desamparado... Você já demonstrou tanta bravura antes, devo perguntar, poderia me emprestar sua força mais uma vez?</speech>
            <speech>Encontre-me na Rota 104, na borda da floresta. Começaremos nossa busca de lá. Conto com você, $PLAYER_NAME!</speech>
            <speech>Juntos, acredito que podemos consertar esse erro e colocar os mares em ordem novamente. Peeko e eu estaremos esperando por sua ajuda.</speech>
        </speeches>
    </conversation>

    <npc direction="DOWN" hidden="false" id="1" name="Laxus" randomRotation="false" sprite="49" x="21" y="8">
        <speech>Meu velho Makarov em Sinnoh? Isso é inesperado.</speech>
        <speech>Eu me pergunto como ele está se mantendo em um lugar como aquele. Conhecendo-o, ele provavelmente está causando problemas ou sendo pego em alguma aventura selvagem.</speech>
        <speech>Bem, seja o que for que ele esteja fazendo, espero que esteja bem</speech>
        <speech>O mestre da Fairy Tail não pode sair por aí sem um bom motivo.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Rolland" speed="1" sprite="35" type="npc" x="36" y="9">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">More inside!</onCollisionSpeech>
        <speech>Pedale até nossa loja de bicicletas hoje mesmo! Quer você seja um ciclista experiente ou esteja apenas começando, temos rodas para todas as jornadas.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Todd" randomRotation="false" sprite="2" x="29" y="39">
        <speech>Seu sorriso é mais brilhante do que um Pikachu usando o Flash! Continue espalhando essa alegria, Trainer!</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Bug Catcher Bert" shouldSleep="" speed="1" sprite="25" type="npc" x="43" y="23">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Oi!</onCollisionSpeech>
        <speech>Oi, aqui é o Bug Catcher Bert. Se estiver procurando por ação real com insetos, saia de Mauville e vá para as rotas ao redor de Petalburg.</speech>
        <speech>É lá que os insetos realmente se aglomeram!</speech>
        <speech>Mas não descarte Mauville por completo, você pode acabar encontrando algo especial nessas selvas urbanas!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Erlend" shouldSleep="" speed="1" sprite="20" type="npc" x="38" y="42">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Move out of the way.</onCollisionSpeech>
        <speech>Ah, artesanato requintado! Esta escultura fala muito com seus detalhes intrincados e sua técnica magistral.</speech>
        <speech>Uma verdadeira obra-prima que captura a essência da beleza em cada curva e linha.</speech>
        <speech>Uma obra de arte para ser admirada pelas próximas gerações.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Pachirisu" shouldSleep="" speed="1" sprite="417" type="pokemon" x="9" y="18">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4">Pachirisu!</onCollisionSpeech>
        <speech>Pachirisu!</speech>
    </movingNpc>
</npcs>