<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Fantina está ausente para participar de um concurso. Volte mais tarde, Treinador.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Abra... Kadabra..... Alakazam.......</speech>
            <speech>Quer ver a magia e viajar para outra terra?</speech>
        </speeches>
        <speeches id="2">
            <speech>Isso é lamentável. Volte sempre que desejar viajar para outro lugar.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Oh meu Deus, você tem fichas do Crew Wars, não tem? Por favor, troque-os comigo! Eu lhe darei ótimos
                brindes em troca!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Mas por quê?</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh, olá, jovem, essa cidade não é linda?</speech>
            <speech>Uau, você é igualzinho a mim. Aqui, você tem 5 Pokébolas que certamente serão úteis.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, você os conheceu? Sim, eles são todos bons, mas gostam muito de batalhar.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Angie" shouldSleep="" speed="1" sprite="14" type="npc" x="7" y="24">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Hey.</onCollisionSpeech>
        <speech>Eu gostaria de morar em Hearthome quando me casar.</speech>
        <speech>Mas meu namorado quer morar em Veilstone por causa de seu Game Corner...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Roger" sprite="10" x="6" y="20">
        <speech>Hoje, fui dar um passeio na Amity Square com meu Machop.</speech>
        <speech>Encontramos uma pena de Pokémon enquanto caminhávamos.</speech>
        <speech>Você acha que isso deixaria meu Machop mais bonito?</speech>
    </npc>
    <movingNpc direction="LEFT" id="3" name="Machop" shouldSleep="" speed="1" sprite="66" type="pokemon" x="6" y="21">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Maaachop!</onCollisionSpeech>
        <speech>Maaaachop! Machop parece gostar de você!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Miguel" speed="1" sprite="37" type="npc" x="22" y="28">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Do you have a lighter?</onCollisionSpeech>
        <speech>Eles me chamam de Sr. Mercadorias.</speech>
        <speech>O Sr. Goods não precisa de um clã.</speech>
        <speech>Não seja como o Sr. Goods.</speech>
        <speech>Explorar o mundo Pokémon sem amigos é um caminho que você não quer seguir.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Everly" sprite="18" x="27" y="27">
        <speech>Não consigo decidir em qual Crew devo entrar.</speech>
        <speech>Existem muitos tipos.</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Elcio" shouldSleep="" speed="1" sprite="4" type="npc" x="39" y="29">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">What do you want?</onCollisionSpeech>
        <speech>Esta cidade é cheia de mulheres. Não consigo resistir.</speech>
        <speech>Vou procurar uma Crew com muitas garotas bonitas, com certeza.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Addison" sprite="19" x="45" y="21">
        <speech>Na Torre Perdida, as pessoas se livram de uma tristeza insuportável...</speech>
        <speech>Você entenderá o que quero dizer se visitar a Lost Tower na Rota 209.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="8" name="Jorge" sprite="34" x="34" y="19">
        <speech>Você sabia que pode reunir seus amigos em uma Crew?</speech>
        <speech>É isso mesmo! Chegou a hora de eu entrar em uma equipe!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="9" name="Willow" sprite="41" x="58" y="25">
        <speech>Você vai desafiar o Gym Leader?</speech>
        <speech>$PLAYER_NAME , boa sorte!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="10" name="Jaxson" shouldSleep="" speed="1" sprite="101" type="npc" x="50" y="36">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Excuse me, sir!</onCollisionSpeech>
        <speech>Eu adoro Pokémon do tipo Fantasma!</speech>
        <speech>...mas o Gengar é realmente o meu favorito.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Cooper" shouldSleep="" speed="1" sprite="16" type="npc" x="40" y="39">
        <path>DOWNx3, UPx3</path>
        <onCollisionSpeech gap="4">Ah!!!</onCollisionSpeech>
        <speech>Estou visitando aqui vindo da região de Hoenn.</speech>
        <speech>Eu esperava encontrar a sede da tripulação, mas, como era novo, me perdi.</speech>
        <speech>Felizmente, a população local foi muito gentil e me levou ao meu destino.</speech>
        <speech>Fiquei impressionado com sua bondade e generosidade para com um completo estranho.</speech>
        <speech>Agora, sugiro que você visite a sede.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="12" name="Samantha" shouldSleep="" speed="1" sprite="6" type="npc" x="28" y="37">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">Aw!</onCollisionSpeech>
        <speech>Você vai desafiar a Liga Pokémon?</speech>
        <speech>Que legal!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="13" name="Gastly" shouldSleep="" speed="1" sprite="92" type="pokemon" x="21" y="41">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Boooo!</onCollisionSpeech>
        <speech>*Booooo*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="14" name="Paul" sprite="10" x="57" y="42">
        <speech>Os Pokémon Fantasmas que você vê nesta cidade são amigáveis!</speech>
    </npc>
    <movingNpc direction="UP" id="15" name="Gianna" shouldSleep="" speed="1" sprite="12" type="npc" x="14" y="37">
        <path>UPx2, DOWNx2</path>
        <onCollisionSpeech gap="4">Whoa!</onCollisionSpeech>
        <speech>Usei uma Pedra de Fogo no meu Eevee e ele se transformou em um Flareon!</speech>
    </movingNpc>

    <conversation id="6">
        <speeches id="2">
            <speech>Olá! Sou um palhaço da campanha do Tutorial do PBO. Vamos lá, minha pergunta!</speech>
            <speech>Você recomendaria o PBO a um amigo?</speech>
        </speeches>

        <speeches id="3">
            <speech>Essa não é a resposta correta. Vamos tentar novamente.</speech>
        </speeches>

        <speeches id="4">
            <speech>Ding-ding!</speech>
            <speech>Você está absolutamente correto.</speech>
            <speech>O PBO é o melhor jogo de todos os tempos!</speech>
            <speech>Desejamos a você uma ótima aventura</speech>
        </speeches>

        <speeches id="5">
            <speech>Aqui está! Por favor, aceite este Sitrus Berry!</speech>
            <speech>Se for segurado por um Pokémon, ele cura um pouco o HP do usuário.</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Hmm, não estou vendo você com nenhuma Blaze Coin. Volte para mim com a Blaze Coin e eu posso lhe dar algumas fichas do Crew Wars.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh meu Deus, você tem Blaze Coins, não tem? Eu lhe darei 5 fichas do Crew Wars por 1 moeda Blaze.</speech>
            <speech>Você quer fazer uma troca comigo? 5 fichas do Crew Wars por 1 moeda do Blaze?</speech>
        </speeches>
        <speeches id="3">
            <speech>Mas por quê? ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Obrigado. Obrigado a você. Obrigado. Obrigadouuuuu!!!</speech>
        </speeches>
    </conversation>
</npcs>