<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ho, ho, ho! Bem-vindo, $PLAYER_NAME! Receio que tenhamos um pequeno problema neste Natal.</speech>
            <speech>O Grinch roubou todos os presentes.</speech>
            <speech>Todos os anos, estou ansioso para levar alegria a CrystalPeak Town, mas, desta vez, nossas festividades estão em perigo.</speech>
            <speech>Preciso de sua ajuda para salvar o Natal. Sem os presentes, nosso espírito natalino está em risco!</speech>
            <speech>Tenho a sensação de que o Grinch está fazendo seus velhos truques novamente. Eu o vi pela última vez perto do Bosque do Pico do Cristal.</speech>
            <speech>Ele é astuto e conhecido por deixar um rastro de pegadas. Siga seus rastros, pois eles o levarão ao seu esconderijo.</speech>
            <speech>Você encontrará a entrada para o CrystalPeak Grove logo após a praça da cidade.</speech>
            <speech>Geralmente é um lugar tranquilo, mas agora pode ser a chave para encontrar o Grinch e os presentes roubados.</speech>
            <speech>Tenha cuidado, $PLAYER_NAME. O Grinch é astuto e pode estar preparando armadilhas.</speech>
            <speech>Precisamos recuperar esses presentes para trazer de volta o espírito natalino!</speech>
        </speeches>
        <speeches id="2">
            <speech>A última vez que vi o Grinch foi perto do Bosque do Pico de Cristal. Siga as pegadas dele; elas são sua melhor pista.</speech>
            <speech>A entrada para CrystalPeak Grove fica logo após a praça da cidade. Comece por lá e fique atento.</speech>
            <speech>Fique atento aos rastros dele. Elas devem levá-lo diretamente ao local onde ele está escondido.</speech>
            <speech>Seja cauteloso, $PLAYER_NAME. O Grinch não é apenas astuto, mas também cheio de surpresas.</speech>
            <speech>Lembre-se de que a restauração do espírito natalino depende de encontrarmos esses presentes. Boa sorte!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Ho, ho, ho! Você já voltou com os presentes de Natal? A recuperação deles é crucial para trazer de volta o espírito natalino.</speech>
        </speeches>
        <speeches id="2">
            <speech>Esses presentes não são apenas presentes, mas símbolos de alegria e doação.</speech>
            <speech>Eles são essenciais para o Natal em CrystalPeak Town.</speech>
            <speech>Sem eles, a alegria e o calor da estação estão em risco.</speech>
            <speech>Você tem os presentes com você?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ainda não há presentes? Não podemos perder a esperança.</speech>
            <speech>Continue procurando, pois eles trazem mais do que apenas sorrisos - eles trazem o espírito do Natal.</speech>
        </speeches>
        <speeches id="4">
            <speech>Que maravilha! Você encontrou os presentes!</speech>
            <speech>Vamos distribuí-los imediatamente e encher a cidade de alegria natalina.</speech>
            <speech>Só um momento para eu dar uma olhada...</speech>
            <speech>Sim, todos os presentes foram contabilizados. Você fez um trabalho maravilhoso, $PLAYER_NAME!</speech>
            <speech>Seus esforços salvaram o Natal em CrystalPeak Town. Vamos espalhar a alegria imediatamente!</speech>
            <speech>Com esses presentes, o calor e a alegria das festas de fim de ano podem ser sentidos mais uma vez.</speech>
            <speech>Obrigado por sua dedicação e bravura. Como prova de nossa gratidão, aceite este Abomasite.</speech>
        </speeches>
        <speeches id="5">
            <speech>Com esses presentes de Natal de volta em nossas mãos, a magia do Natal pode ser restaurada.</speech>
        </speeches>
    </conversation>

</npcs>