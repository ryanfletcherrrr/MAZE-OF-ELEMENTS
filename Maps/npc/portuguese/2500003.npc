<npcs>
    <conversation id="1">
        <!-- First Battle (Classic Sabrina Style) -->
        <speeches id="1">
            <speech>{Eu sabia que você viria...</speech>
            <speech>A previsão é um dom... ou uma maldição. Eu vi todas as possibilidades, mas preciso testar todas elas.</speech>
            <speech>Meu nome é {COLOR=PINK}Sabrina{ENDCOLOR}, a líder da Saffron Gym.</speech>
            <speech>Meus {COLOR=CYAN}Pokémon do tipo psíquico{ENDCOLOR} veem o que você não vê, atacam antes de você se mover e controlam o próprio campo de batalha.</speech>
            <speech>Vamos ver se sua mente é forte o suficiente para resistir ao invisível!</speech>
        </speeches>
        <speeches id="2">
            <speech>...Fascinante.</speech>
            <speech>Você superou minhas visões e alterou o próprio destino.</speech>
            <speech>Leve isto: o {COLOR=GOLD}Marsh Badge{ENDCOLOR}. Com ele, Pokémon até o {COLOR=CYAN}Nível 70{ENDCOLOR} obedecerão a você.</speech>
            <speech>E este TM... {COLOR=CYAN}Expanding Force{ENDCOLOR}. Um movimento que se torna mais forte quando a mente domina o campo de batalha.</speech>
            <speech>Talvez você também seja capaz de alcançar um estado de ser mais elevado.</speech>
        </speeches>
        <speeches id="3">
            <speech>O destino falou, e você ainda não estava pronto.</speech>
            <speech>Treine sua mente, aguce sua consciência e retorne quando o resultado mudar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah... Você hesita. A dúvida obscurece sua mente.</speech>
            <speech>Volte quando seu espírito estiver limpo, e eu testarei sua força mais uma vez.</speech>
        </speeches>
        <!-- Repeated Battle (More Intense & Thematic) -->
        <speeches id="5">
            <speech>Então você retorna, buscando reescrever o destino mais uma vez?</speech>
            <speech>Muito bem... A mente é ilimitada, evoluindo além do que podemos compreender.</speech>
            <speech>Mostre-me se seus pensamentos ultrapassaram os limites anteriores.</speech>
        </speeches>
        <speeches id="6">
            <speech>Curioso... Seu poder continua a crescer.</speech>
            <speech>Vitórias {COLOR=GOLD}$TOTAL_VICTORY{ENDCOLOR}... e {COLOR=CYAN}$CONSECUTIVE{ENDCOLOR} em sequência.</speech>
            <speech>Sua presença dobra a própria probabilidade. Preciso continuar a estudar seu potencial.</speech>
        </speeches>
        <speeches id="7">
            <speech>Até mesmo as mentes mais fortes enfrentam a derrota.</speech>
            <speech>Não se desespere - o fracasso é apenas outra visão do futuro, que ainda pode ser mudada.</speech>
            <speech>Retorne quando sua determinação estiver fortalecida.</speech>
        </speeches>
        <speeches id="8">
            <speech>Você ainda não está pronto? Estou vendo...</speech>
            <speech>Quando for o momento certo, dê um passo à frente. Eu estarei esperando.</speech>
        </speeches>
        <speeches id="9">
            <speech>A mente precisa descansar para aguçar seus sentidos.</speech>
            <speech>Retorne em {COLOR=YELLOW}$DURATION{ENDCOLOR}, e veremos se sua vontade se fortaleceu.</speech>
        </speeches>
        <!-- Special Condition: Battle Requirement Not Met -->
        <speeches id="10">
            <speech>Ah... Você busca outra batalha, mas sua mente está sem foco.</speech>
            <speech>Para me enfrentar novamente, você deve ter {COLOR=CYAN} pelo menos 3 Pokémon do tipo Psychic{ENDCOLOR} em sua equipe.</speech>
            <speech>Quando você estiver pronto para desafiar o próprio destino, volte para mim.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>As sombras sussurram neste ginásio. Meus tipos psíquicos ecoam seus cânticos. Você consegue enfrentar o vazio?</speech>
        </speeches>
        <speeches id="2">
            <speech>A escuridão recuou! Sua mente perfurou a minha. Eu a chamarei de volta.</speech>
        </speeches>
        <speeches id="3">
            <speech>A escuridão recuou! Sua mente perfurou a minha. Eu a chamarei de volta.</speech>
        </speeches>
        <speeches id="4">
            <speech>A tristeza de Sabrina me levanta! O abismo o reclama. Minha maldição é forte!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Seus pensamentos são muito altos. Meus tipos psíquicos percebem cada falha. Você pode proteger sua mente?</speech>
        </speeches>
        <speeches id="2">
            <speech>Minha visão está embaçada! Você turvou meu foco. Vou meditar mais profundamente.</speech>
        </speeches>
        <speeches id="3">
            <speech>Minha visão está embaçada! Você turvou meu foco. Vou meditar mais profundamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Seu destino está selado! Sabrina me ensinou bem. Minha mente supera a sua!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Eu vejo seu próximo movimento. Meu Pokémon dobra a realidade. Pronto para se perder?</speech>
        </speeches>
        <speeches id="2">
            <speech>Um ponto cego! Sua vontade quebrou a minha. Vou realinhar minha aura.</speech>
        </speeches>
        <speeches id="3">
            <speech>Um ponto cego! Sua vontade quebrou a minha. Vou realinhar minha aura.</speech>
        </speeches>
        <speeches id="4">
            <speech>A clareza reina! O poder de Sabrina flui em mim. Seu futuro escurece!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Aprimorei minha mente e minha equipe. O melhor aluno da Sabrina está aqui. Pronto para ser superado?</speech>
        </speeches>
        <speeches id="2">
            <speech>A estratégia falhou! Você tem habilidade. Vou afiar minha borda.</speech>
        </speeches>
        <speeches id="3">
            <speech>A estratégia falhou! Você tem habilidade. Vou afiar minha borda.</speech>
        </speeches>
        <speeches id="4">
            <speech>A perfeição prevalece! O treinamento da Sabrina brilha. Você não é páreo</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Meus tipos psíquicos são perfeitos. Eu dominei a arte da Sabrina. Você consegue acompanhar?</speech>
        </speeches>
        <speeches id="2">
            <speech>Superado! Você é mais esperto do que eu pensava. Vou me adaptar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Superado! Você é mais esperto do que eu pensava. Vou me adaptar.</speech>
        </speeches>
        <speeches id="4">
            <speech>A vitória é minha! As lições da Sabrina são fundamentais. Você está um passo atrás!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Seus medos são muito claros. Meus tipos psíquicos se aproveitam da dúvida. Você consegue resistir?</speech>
        </speeches>
        <speeches id="2">
            <speech>Meu foco foi destruído! Você mascarou sua mente. Da próxima vez, eu a perfurarei.</speech>
        </speeches>
        <speeches id="3">
            <speech>Meu foco foi destruído! Você mascarou sua mente. Da próxima vez, eu a perfurarei.</speech>
        </speeches>
        <speeches id="4">
            <speech>A vontade de Sabrina flui através de mim! Seus pensamentos se dobram. Eu venci!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Espíritos vagueiam por essas paredes. Meus Pokémon tecem seu pavor. Já está sentindo o olhar deles?</speech>
        </speeches>
        <speeches id="2">
            <speech>Um lampejo quebrou meu transe!   Você mexeu com o invisível. Eu o amarrarei com mais força.</speech>
        </speeches>
        <speeches id="3">
            <speech>Um lampejo quebrou meu transe!   Você mexeu com o invisível. Eu o amarrarei com mais força.</speech>
        </speeches>
        <speeches id="4">
            <speech>O éter se curva a mim! O poder da Sabrina alimenta meu feitiço. Você está marcado agora!</speech>
        </speeches>
    </conversation>
</npcs>