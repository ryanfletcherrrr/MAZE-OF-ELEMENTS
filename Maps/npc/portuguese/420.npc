<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Não acredito em coisas como amuletos da sorte, mas em momentos como esse me dá vontade de rezar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Talvez eu perca porque estou prestando mais atenção na oração do que na batalha.</speech>
        </speeches>
        <speeches id="3">
            <speech>Talvez eu perca porque estou prestando mais atenção na oração do que na batalha.</speech>
        </speeches>
        <speeches id="4">
            <speech>Minha opinião é que o fato de suas orações serem ou não atendidas depende de seus próprios talentos!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Você estará perdido no mar quando eu liberar meu Pokémon aquático!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não posso acreditar nisso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não posso acreditar nisso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está preso em minha ilha da vitória!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Vamos mergulhar na batalha! Meus Pokémon aquáticos são imbatíveis!</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está se excedendo! Talvez você deva ficar na piscina infantil.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Uma pessoa que quer lutar, lutar e lutar para sempre. Esse é o jeito do Ás.</speech>
        </speeches>
        <speeches id="2">
            <speech>Você não pode se tornar um Ace Trainer lutando dessa forma.</speech>
        </speeches>
        <speeches id="3">
            <speech>Você não pode se tornar um Ace Trainer lutando dessa forma.</speech>
        </speeches>
        <speeches id="4">
            <speech>Seu estilo de luta combina muito bem com você. Você poderia ser um Ace Trainer.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Você estará fora de seu alcance nesta batalha! Meus Pokémon são campeões do fundo do mar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Eu sou aquele que está profundamente... derrotado. Você venceu de forma justa.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eu sou aquele que está profundamente... derrotado. Você venceu de forma justa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está na parte rasa! É hora de aprender a nadar.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Prepare-se! A ira do mar cairá sobre você nesta batalha!</speech>
        </speeches>
        <speeches id="2">
            <speech>Não posso acreditar nisso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Não posso acreditar nisso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Haha, você foi pego pela minha maré! É melhor nadar mais rápido da próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Vamos pegar ondas! Meus Pokémon estão prontos para surfar em cima de você!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, não</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, não</speech>
        </speeches>
        <speeches id="4">
            <speech>Você é apenas uma ondulação em meu oceano de vitória!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Vamos mergulhar na batalha! Meus Pokémon aquáticos são imbatíveis!</speech>
        </speeches>
        <speeches id="2">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Preciso de uma boia salva-vidas</speech>
        </speeches>
        <speeches id="4">
            <speech>Você está se excedendo! Talvez você deva ficar na piscina infantil.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Então, você conseguiu passar pelo meu colega grunhido, $PLAYER_NAME. Impressionante, mas, no final das contas, inútil.</speech>
            <speech>Peeko está comigo, e a nave que você procura está um pouco além do seu alcance.</speech>
            <speech>Nós, da Equipe Aqua, temos grandes planos para os mares, e cada peça desempenha um papel importante</speech>
            <speech>incluindo o que já tomamos. Mas vamos ver se você realmente tem o que é preciso para nos deter.</speech>
        </speeches>
        <speeches id="2">
            <speech>Certo, certo! Admito a derrota, $PLAYER_NAME. Você demonstrou força e determinação incríveis. Vou liberar a nave, conforme prometido.</speech>
            <speech>E veja, Peeko, sua lealdade é louvável. Volte para o Sr. Briney, pequenino. Ele está muito preocupado com você.</speech>
            <speech>Lembre-se, $PLAYER_NAME, a missão da Equipe Aqua é vasta e profunda. Esse contratempo não nos deterá. Os mares nos chamam, e devemos responder.</speech>
        </speeches>
        <speeches id="3">
            <speech>Surpreso por me ver firme em minha posição? O oceano nos ensina a sermos resilientes, $PLAYER_NAME. E, assim como o oceano, a determinação da Equipe Aqua não tem fim.</speech>
            <speech>Nós nos encontraremos novamente, em águas turbulentas ou em mares calmos.</speech>
            <speech>Nossa jornada está longe de terminar, e as profundezas ainda guardam muitos segredos para descobrirmos.</speech>
        </speeches>
        <speeches id="4">
            <speech>Você retorna, como a maré. Mas saiba disso, $PLAYER_NAME: a generosidade do oceano é ilimitada, assim como as ambições da Equipe Aqua.</speech>
            <speech>Hoje, você nos superou. Mas o mar está sempre mudando, e seu chamado é irresistível.</speech>
            <speech>Vamos nos cruzar novamente, com as correntes a nosso favor.</speech>
        </speeches>
    </conversation>


    <movingNpc direction="DOWN" id="1" name="Gyarados" speed="1" sprite="130" type="pokemon" x="30" y="9">
        <path>LEFTx10,DOWNx2,RIGHTx10,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Gyarados" speed="1" sprite="130" type="pokemon" x="30" y="9">
        <path>DOWNx1,LEFTx10,UPx1,RIGHTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wingull" speed="1" sprite="278" type="pokemon" x="23" y="15">
        <path>DOWNx12,LEFTx7,UPx12,RIGHTx7</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Wingull" speed="1" sprite="278" type="pokemon" x="41" y="23">
        <path>UPx9,RIGHTx16,DOWNx9,LEFTx16</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Gyarados" speed="1" sprite="130" type="pokemon" x="59" y="3">
        <path>DOWNx7,RIGHTx6,UPx7,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Gyarados" speed="1" sprite="130" type="pokemon" x="63" y="10">
        <path>LEFTx9,UPx4,RIGHTx9,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Gyarados" speed="1" sprite="130" type="pokemon" x="63" y="3">
        <path>DOWNx7,LEFTx7,UPx7,RIGHTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Pelipper" speed="1" sprite="279" type="pokemon" x="77" y="17">
        <path>LEFTx5,DOWNx5,UPx0,RIGHTx5,UPx5</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="86" y="25">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4">Tenta!</onCollisionSpeech>
        <speech>Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="106" y="28">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4">Tentacool!</onCollisionSpeech>
        <speech>Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wingull" speed="1" sprite="278" type="pokemon" x="100" y="11">
        <path>LEFTx5,DOWNx14,RIGHTx5,UPx14</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="24" y="35">
        <path>RIGHTx20,LEFTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Wingull" speed="1" sprite="278" type="pokemon" x="53" y="32">
        <path>LEFTx13,RIGHTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>