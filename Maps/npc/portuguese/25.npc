<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Uau, vejam só! Qual é o tamanho dessa usina de energia?</speech>
            <speech>Vamos dar uma olhada por dentro.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Tenho estudado todos os dias, então estou fazendo uma pausa para variar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, meu Pokémon perdido... Talvez eu continue estudando.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, meu Pokémon perdido... Talvez eu continue estudando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Veja bem, brincar com Pokémon é divertido. Eu quero estudar Pokémon.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>O problema é saber se você deve colocar toda a sua força na corrida inicial ou no último jato de esforço.</speech>
        </speeches>
        <speeches id="2">
            <speech>Muito bem! A corrida inicial decidiu nossa batalha!</speech>
        </speeches>
        <speeches id="3">
            <speech>Muito bem! A corrida inicial decidiu nossa batalha!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah... Se ao menos você pudesse ter guardado um pouco de força para o último esforço...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Não vou pegar leve com você só porque você é uma criança. Vamos lá!</speech>
        </speeches>
        <speeches id="2">
            <speech>Harrumph. Ainda estou fraco. Tenho pena de meus Pokémon...</speech>
        </speeches>
        <speeches id="3">
            <speech>Harrumph. Ainda estou fraco. Tenho pena de meus Pokémon...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah. Você não pode lutar se tiver medo de perder.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Minha pesquisa levará este mundo à paz e à alegria.</speech>
        </speeches>
        <speeches id="2">
            <speech>Meu experimento falhou, portanto, estou acabado no mundo acadêmico.</speech>
        </speeches>
        <speeches id="3">
            <speech>Meu experimento falhou, portanto, estou acabado no mundo acadêmico.</speech>
        </speeches>
        <speeches id="4">
            <speech>Eu sou um gênio... Eu não deveria perder para alguém como você...</speech>
        </speeches>
    </conversation>
</npcs>