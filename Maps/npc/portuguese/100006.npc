<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Qual é o seu nome e o que está fazendo aqui?</speech>
            <speech>Estou vendo $PLAYER_NAME. Isso é muito otimista.</speech>
            <speech>O mundo espiritual costumava ser cheio de paz. Os espíritos daqueles que faleceram entram no mundo espiritual e vivem felizes depois disso.</speech>
            <speech>Embora Chamunda esteja tentando dominar o mundo espiritual, absorvendo todas as almas e deixando o mundo abandonado.</speech>
            <!--CHANGED-->
            <speech>A única maneira de restaurar a paz é encontrando-a e derrotando-a antes que ela capture Giratina.</speech>
            <!--CHANGED-->
            <speech>Não posso ajudar muito agora, pois meu Mismagius desapareceu... Ele contém a chave para muitas de suas perguntas.</speech>
            <!--CHANGED-->
        </speeches>
        <speeches id="2">
            <speech>Esplêndido! Você encontrou meu Mismagius.</speech>
            <speech>*Magiiii Mag Mag Magiiiii*</speech>
            <speech>Lutar contra Chamunda não é fácil. Somente um treinador com Delphox segurando a "Fiery Witch Wand" pode passar pela barreira que ele colocou em torno de si mesmo.</speech>
            <!--CHANGED-->
            <speech>Infelizmente, havia apenas uma Fiery Witch Wand, que foi quebrada em vários fragmentos quando o demônio apareceu.</speech>
            <speech>Embora eu saiba como montar "Fragmentos de Varinha de Bruxa Ardente" para formar uma Varinha de Bruxa.</speech>
            <!--CHANGED-->
            <speech>Sei que muitos encontraram esses fragmentos espalhados pelo Spirit World.</speech>
            <!--CHANGED-->
            <speech>Se você conseguir 10 desses fragmentos, posso transformá-los em uma Varinha de Bruxa Ardente que, por sua vez, permitirá que você passe por essa barreira.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>Lutar contra essa bruxa não é fácil. Somente um treinador com Delphox segurando a "Fiery Witch Wand" pode passar pela barreira que ele colocou em torno de si mesmo.</speech>
            <speech>Infelizmente, não tenho mais acesso a essa varinha de condão. Embora eu saiba como montar "Fragmentos de varinha de bruxa ardente" para formar uma varinha de bruxa.</speech>
            <speech>Sei que muitos encontraram esses fragmentos espalhados pelo Spirit World.</speech>
            <speech>Se você conseguir 10 desses fragmentos, posso transformá-los em uma Varinha de Bruxa Ardente que, por sua vez, permitirá que você passe por essa barreira.</speech>
        </speeches>
        <speeches id="2">
            <speech>Você quer entregar esses fragmentos para mim?</speech>
        </speeches>
        <speeches id="3">
            <speech>Um instrutor comum não pode suportar a varinha de qualquer maneira.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aqui, pegue essa varinha da Fiery Witch. Derrote-a antes que ele capture o Giratina.</speech>
            <!--CHANGED-->
            <speech>Quando o demônio for derrotado, o mundo espiritual estará livre de todo o mal e os espíritos voltarão a vagar livremente e felizes.</speech>
            <!--CHANGED-->
            <speech>Boa sorte.</speech>
        </speeches>
        <speeches id="5">
            <speech>Aqui, pegue essa varinha de bruxa de fogo. Derrote-o antes que ele capture o Giratina.</speech>
            <!--CHANGED-->
            <speech>Quando o demônio for derrotado, o mundo espiritual estará livre de todo o mal e os espíritos voltarão a vagar livremente e felizes.</speech>
            <!--CHANGED-->
            <speech>Boa sorte.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>Vejo que você derrotou Chamunda. Essa é uma tarefa muito louvável e quase impossível.</speech>
            <speech>No entanto, para prosseguir, você precisa de um espaço em seu grupo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vejo que você derrotou Chamunda. Essa é uma tarefa muito louvável e quase impossível.</speech>
            <speech>É triste que ele tenha conseguido capturar Giratina. Giratina é a única força que agora está entre o Spirit World e a paz.</speech>
            <!--CHANGED-->
            <speech>No entanto, derrotar esse Giratina (que está sendo controlado por Chamunda) não é uma tarefa fácil.</speech>
            <speech>Ele destruirá tudo o que estiver em seu caminho.</speech>
            <speech>Somente um pokémon que consegue aprender um "Poder Místico" enquanto segura a Varinha de Bruxa Ardente pode desafiar um Giratina possuído.</speech>
            <speech>Está vendo esse Fennekin?</speech>
            <speech>Esse Fennekin é aquele que Chamunda capturou.</speech>
            <speech>Fennekin é o único pokemon que tem a capacidade de aprender o "Poder Místico" para desafiar o Giratina e restaurar o Mundo Espiritual de volta.</speech>
            <speech>Deseja assumir o controle desse pequeno Fennekin e treiná-lo até que ele aprenda seu "Poder Místico" para poder derrotar Giratina?</speech>
        </speeches>
        <speeches id="3">
            <speech>Você não tem a vontade e a determinação necessárias.</speech>
        </speeches>
        <speeches id="4">
            <speech>Fennekin é o único pokemon que tem a capacidade de aprender o "Poder Místico" para desafiar o Giratina e restaurar o Mundo Espiritual de volta.</speech>
            <speech>Desejo a você toda a sorte para derrotar o Giratina $PLAYER_NAME</speech>
        </speeches>
        <speeches id="5">
            <speech>Fennekin é o único pokemon que tem a capacidade de aprender o "Poder Místico" para desafiar o Giratina e restaurar o Mundo Espiritual de volta.</speech>
            <speech>Desejo a você toda a sorte para derrotar o Giratina $PLAYER_NAME</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>Esplêndido! Incrível!</speech>
            <speech>Você derrotou o Giratina! Eu havia perdido todas as esperanças e achava que isso nunca aconteceria.</speech>
            <speech>Como forma de agradecimento, sinta-se à vontade para manter a Delphox com você, pois parece que a Delphox não gostaria que fosse de outra forma.</speech>
            <speech>Ele parece muito feliz com você e parece reconhecê-lo.</speech>
            <speech>Agora farei minha mágica e restaurarei todo o Mundo Espiritual de volta.</speech>
            <speech>A propósito, devo lhe dizer uma coisa antes de ir embora.</speech>
            <speech>Sou a mesma pessoa que o levou para o mundo espiritual.</speech>
            <speech>Sim. Eu sou do futuro e vi o que aconteceu em minha dimensão. Vi potencial em você e não estava errado. Obrigado por salvar meu mundo.</speech>
            <speech>Ah, e antes de ir, devo dizer que o mundo agora está protegido por Yveltal, então isso não deve acontecer novamente.</speech>
            <speech>Isso ajudará a manter a paz e a harmonia aqui.</speech>
            <speech>Despeço-me de você, jovem treinador.</speech>
        </speeches>
    </conversation>
    <!--Já agora te vou contar uma coisa antes de partir.
Sou a mesma pessoa que o levou para o mundo dos espíritos.
Sim. Eu sou do futuro e vi o que aconteceu na minha dimensão. Eu vi potencial em você e não estava enganado. Obrigado por salvar o meu mundo-->
    <movingNpc direction="DOWN" id="1" name="Litwick" speed="1" sprite="607" type="pokemon" x="28" y="30">
        <path>LEFTx4,DOWNx1,RIGHTx4,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Gastly" speed="1" sprite="93" type="pokemon" x="5" y="24">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Shuppet" speed="1" sprite="353" type="pokemon" x="17" y="11">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Honedge" shouldSleep="" speed="1" sprite="679" type="pokemon" x="3" y="44">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Vullaby" shouldSleep="" speed="1" sprite="629" type="pokemon" x="36" y="25">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Mandibuzz" speed="1" sprite="630" type="pokemon" x="2" y="2">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Houndoom" shouldSleep="" speed="1" sprite="229" type="pokemon" x="23" y="22">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Doublade" shouldSleep="" speed="1" sprite="680" type="pokemon" x="25" y="44">
        <path>RIGHTx5,LEFTx5,UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Litwick" speed="1" sprite="607" type="pokemon" x="34" y="15">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>