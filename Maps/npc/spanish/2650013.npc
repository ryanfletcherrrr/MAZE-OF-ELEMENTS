<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Una batalla refinada es una verdadera prueba de habilidad. Mantengamos esto digno, ¿de acuerdo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Bien jugado, mi buen entrenador. ¡Una buena muestra de estrategia e ingenio!</speech>
        </speeches>
        <speeches id="3">
            <speech>Bien jugado, mi buen entrenador. ¡Una buena muestra de estrategia e ingenio!</speech>
        </speeches>
        <speeches id="4">
            <speech>Como era de esperar. Uno siempre debe ser sereno... tanto en la batalla como en la vida.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>No hay nada como luchar en mar abierto. Mantiene la mente aguda para cuando los grandes de verdad empiezan a picar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Bueno... ¡supongo que esta vez me ganaron!</speech>
        </speeches>
        <speeches id="3">
            <speech>Bueno... ¡supongo que esta vez me ganaron!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te atrapó fácilmente! Igual que un Magikarp en un día tranquilo.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Llevamos años navegando por estas aguas! ¡Veamos si tu Pokémon puede capear el temporal!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Volado por la borda! ¡Tienes mucha fuerza en ese equipo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Volado por la borda! ¡Tienes mucha fuerza en ese equipo!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ese es el poder de la disciplina de un marinero! ¡Quizá la próxima vez, marinero de agua dulce!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Poliwrath" speed="1" sprite="62" type="pokemon" x="2" y="6">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Wraaath!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Shellder" speed="1" sprite="90" type="pokemon" x="19" y="10">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Sheeelllder!</onCollisionSpeech>
    </movingNpc>
</npcs>