<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Bienvenido a Kanto! Soy el ayudante de investigación del Profesor Oak que estudia la diversidad Pokémon en esta región.
                ¿Te gustaría ayudar en nuestra investigación?
            </speech>
            <speech>Mostrándome cada día diferentes especies de Pokémon, ganarás fichas especiales por tu contribución
                ¡a la ciencia!
            </speech>
            <speech>¿Qué te parece si nos ayudas a ampliar nuestros conocimientos sobre Pokémon?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, no veo ningún Pokémon nuevo contigo por el momento. Sabes, Kanto está lleno de fascinantes
                fascinantes.
            </speech>
            <speech>Prueba a buscar en la hierba alta, en cuevas o incluso en lugares de pesca. Hay muchos Pokémon esperando a ser
                descubrir.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Ya he documentado este Pokémon en mis notas de investigación. Me interesan especialmente las especies que
                que aún no he registrado.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estupendo! Será una gran adición a nuestra base de datos de investigación de Pokémon de Kanto. Aquí tienes tus
                ¡bien ganadas fichas!
            </speech>
            <speech>El mundo de Pokémon es inmenso, estoy deseando ver qué nos traes mañana.</speech>
        </speeches>
        <speeches id="5">
            <speech>Veo tu entusiasmo, pero ya he registrado un Pokémon tuyo hoy. Mantengamos nuestra investigación
                metódica.
            </speech>
            <speech>El profesor Oak siempre dice: "La buena investigación lleva su tiempo". ¡Hasta mañana para más descubrimientos!
            </speech>
        </speeches>
        <speeches id="6">
            <speech>¡Excelente trabajo el de hoy! Vuelve en $DURATION para seguir ayudando con nuestro proyecto de investigación de Kanto.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>¡Hola! Esas fichas que has recogido parecen interesantes. ¿Te gustaría ver qué objetos especiales puedes conseguir a cambio?</speech>
        </speeches>
        <speeches id="2">
            <speech>No hay ningún problema. Un buen investigador sabe cuándo tomarse su tiempo. Los artículos estarán aquí cuando esté listo.</speech>
            <speech>Sigue trayendo esos nuevos hallazgos Pokémon, ¡cada contribución nos ayuda a comprender mejor el ecosistema de Kanto!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Buscador de mejoras, tu viaje hacia la creación de la {COLOR=GOLD}Everstone Exp Share{ENDCOLOR} comienza, pero tu camino
                aún no ha sido probado.
            </speech>
            <speech>Se necesitan: {COLOR=CYAN}una Exp. Share{ENDCOLOR}, {COLOR=CYAN}una Everstone{ENDCOLOR}, {COLOR=CYAN}una Binding Band{ENDCOLOR}, y el {COLOR=PURPLE}sacred Blueprint{ENDCOLOR}.</speech>
            <speech>Una vez unidos, estos materiales forjarán una herramienta para {COLOR=RED}frenar la evolución{ENDCOLOR} a la vez que {COLOR=GREEN}compartir experiencias{ENDCOLOR}.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Por fin, todos los componentes han convergido! El {COLOR=PURPLE}Blueprint{ENDCOLOR} y los materiales están listos.</speech>
            <speech>¿Comenzamos la elaboración de la {COLOR=GOLD}Everstone Exp Share{ENDCOLOR}, fusionando estos elementos en una singular
                singular?
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Entendido. El momento de la creación es sagrado y exige preparación. Vuelve cuando te sientas preparado.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>¡Contemplad! La {COLOR=GOLD}Everstone Exp Share{ENDCOLOR} ya está completa, infundida con el poder de {COLOR=GREEN}compartir experiencia{ENDCOLOR} a la vez que
                {COLOR=ROJO}prevenir la evolución{ENDCOLOR}.
            </speech>
            <speech>Utilízala sabiamente en tu formación. Que te sirva en tu viaje.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Buscador de conocimiento, deseas crear el {COLOR=GOLD}Move-Block Exp Share{ENDCOLOR} - una herramienta de entrenamiento concentrado.
            </speech>
            <speech>Se necesitan: {COLOR=CYAN}una Acción de Exp.{ENDCOLOR}, {COLOR=CYAN}una Etiqueta de Hechizo{ENDCOLOR}, {COLOR=CYAN}un Disco de TM Roto{ENDCOLOR}, y el {COLOR=PURPLE}plano guía{ENDCOLOR}.</speech>
            <speech>Estos materiales combinados crearán un elemento para {COLOR=RED}prevenir el aprendizaje de movimientos{ENDCOLOR} a la vez que {COLOR=GREEN}compartir experiencias{ENDCOLOR}.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>¡Los materiales se han alineado! Su {COLOR=PURPLE}Blueprint{ENDCOLOR} y sus componentes esperan su transformación.</speech>
            <speech>¿Empezamos a forjar el {COLOR=GOLD}Move-Block Exp Share{ENDCOLOR}, uniendo estos elementos en algo más grande?
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Muy bien. La creación no puede apresurarse. Vuelve cuando estés seguro.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ya está hecho. El {COLOR=ORO}Move-Block Exp Share{ENDCOLOR} ya existe, listo para {COLOR=ROJO}preservar movesets{ENDCOLOR} mientras {COLOR=VERDE}compartimos
                experiencia{ENDCOLOR}.
            </speech>
            <speech>Utiliza su poder con prudencia. Que ayude a perfeccionar las habilidades de tu equipo.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Buscador de fuerza, deseas el {COLOR=GOLD}Macho Brace Exp Share{ENDCOLOR} - una herramienta de entrenamiento intensivo.</speech>
            <speech>Se requieren: {COLOR=CYAN}una Acción Exp.{ENDCOLOR}, {COLOR=CYAN}una Cola Retrasada{ENDCOLOR}, {COLOR=CYAN}un Brazalete Macho{ENDCOLOR}, y el {COLOR=PURPLE}plano maestro{ENDCOLOR}.</speech>
            <speech>Cuando se combinen, crearán un elemento para {COLOR=ORANGE}doblar los EVs{ENDCOLOR} mientras {COLOR=GREEN}compartimos experiencia{ENDCOLOR}.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Los componentes se han reunido! Tu {COLOR=PURPLE}Blueprint{ENDCOLOR} y los materiales esperan su unión.</speech>
            <speech>¿Forjamos el {COLOR=GOLD}Macho Brace Exp Share{ENDCOLOR}, combinando estos elementos en una herramienta de poder?</speech>
        </speeches>
        <speeches id="3">
            <speech>Como desee. Vuelve cuando estés preparado para emprender esta creación.</speech>
        </speeches>
        <speeches id="4">
            <speech>Contempla el {COLOR=DORADO}Macho Brace Exp Share{ENDCOLOR}, ¡que encarna tanto la fuerza como la sabiduría!</speech>
            <speech>Entrena bien con esta poderosa herramienta. Que aumente el verdadero potencial de tu Pokémon.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Buscador de vínculos, persigues el {COLOR=GOLD}Soothe Share{ENDCOLOR} - una herramienta de compañerismo y crecimiento.</speech>
            <speech>Se necesitan: {COLOR=CYAN}una Exp. Compartir{ENDCOLOR}, {COLOR=CYAN}diez Escamas del Corazón{ENDCOLOR}, {COLOR=CYAN}una Campana Calmante{ENDCOLOR}, y el {COLOR=PURPLE}plano Armonioso{ENDCOLOR}.</speech>
            <speech>Juntos, forjarán un elemento para {COLOR=PINK}fortalecer la amistad{ENDCOLOR} mientras {COLOR=GREEN}comparten experiencias{ENDCOLOR}.</speech>
        </speeches>
        <speeches id="2">
            <speech>Los elementos de la amistad se han reunido. Tu {COLOR=PURPLE}Blueprint{ENDCOLOR} y los materiales resuenan juntos.</speech>
            <speech>¿Creamos el {COLOR=GOLD}Soothe Share{ENDCOLOR}, uniendo estos componentes en una herramienta de unidad?</speech>
        </speeches>
        <speeches id="3">
            <speech>Lo comprendo. Los lazos de amistad no pueden apresurarse. Vuelve cuando creas que es el momento adecuado.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Contempla la {COLOR=ORO}Compartición de Pokémon{ENDCOLOR} completada, ¡un símbolo de los lazos entre entrenador y Pokémon!</speech>
            <speech>Que {COLOR=PINK}fortalezca las conexiones{ENDCOLOR} dentro de su equipo. Que florezcan tus amistades.</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>Como una rosa que florece si se cuida con esmero, el vínculo entre entrenador y Pokémon florece con dedicación y amor.</speech>
            <speech>En mi jardín he cultivado hermosas flores y poderosas alianzas. ¿Pondrás a prueba la fuerza de tu propio cultivo?</speech>
        </speeches>

        <speeches id="2">
            <speech>Su victoria muestra los bellos resultados de la paciencia y el cuidado, como una rosa preciada en plena floración.</speech>
            <speech>Los pétalos de tu éxito se han desplegado con gracia. Tus Pokémon reflejan la tierna atención que les has prestado.</speech>
        </speeches>

        <speeches id="3">
            <speech>¡Magnífico! Tu vínculo con tus Pokémon es tan impresionante como un perfecto jardín de rosas en primavera.</speech>
            <speech>Has demostrado que, con el cuidado y la devoción adecuados, hasta las conexiones más delicadas pueden volverse inquebrantablemente fuertes.</speech>
            <speech>Como las rosas que necesitan tiempo para florecer, vuelve en $DURATION para alimentar aún más nuestra rivalidad.</speech>
        </speeches>

        <speeches id="4">
            <speech>Extraordinaria. Tu fuerza me recuerda a las espinas de una rosa: bellas pero formidables cuando protegen lo que más importa.</speech>
            <speech>La lección de hoy echará raíces y crecerá hasta alcanzar logros aún mayores. Que tu viaje siga floreciendo con tanta gracia.</speech>
        </speeches>

        <speeches id="5">
            <speech>Cada estación trae consigo un nuevo crecimiento; con cada día que pasa, nuestros lazos se hacen más profundos como raíces que buscan alimento.</speech>
            <speech>Vuelve mañana, cuando el rocío de la mañana bese los pétalos, y nos ocuparemos de nuevo de nuestra rivalidad.</speech>
        </speeches>
    </conversation>
</npcs>