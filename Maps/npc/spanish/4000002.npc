<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Así que, $PLAYER_NAME. He oído hablar mucho de ti a tu padre. He oído que aún no tienes tu propio Pokémon de Hoenn.</speech>
            <speech>¡Supongo que tienes sangre de tu padre en las venas después de todo!</speech>
            <speech>Ah, sí. Como agradecimiento por rescatarme, me gustaría que tuvieras el Pokémon que usaste antes.</speech>
            <speech>Mi hija, May, está en la Ruta 103 estudiando Pokémon. No sería mala idea que fueras a ver a May. ¿Qué te parece?</speech>
            <speech>Antes de irte, ten este mapa de Hoenn. Te ayudará a navegar por la región de Hoenn.</speech>
        </speeches>
        <speeches id="2">
            <speech>May debería estar en algún lugar de la Ruta 103. Si tú o tus Pokémon os cansáis, descansad en casa.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>¡Ah, $PLAYER_NAME! He estado esperando ansiosamente tu llegada. Tus logros son notables.</speech>
            <speech>Con más de 500 Pokémon en tu Pokédex, eres el Entrenador ideal para una tarea de investigación especial que tengo.</speech>
            <speech>Mi ayudante en la Ruta 126 ha informado de un extraño avistamiento de Eon Duo ([AZUL]Latios[] y [ROJO]Latias[]).</speech>
            <speech>Es una oportunidad de oro para la investigación.</speech>
            <speech>Necesito su experiencia para reunir más información. ¿Estaría dispuesto a investigar este avistamiento en Lilycove?</speech>
            <speech>Si encuentras alguna pista sobre el dúo en torno a la ruta 126, por favor, infórmame. ¡Buena suerte, y tengan cuidado!</speech>
        </speeches>
        <speeches id="2">
            <speech>Si encuentras alguna pista sobre el dúo en torno a la ruta 126, por favor, infórmame. ¡Buena suerte, y tengan cuidado!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>¡Ah, $PLAYER_NAME! Tu trabajo con el dúo Eon fue extraordinario.</speech>
            <speech>Tu valor y tu habilidad reflejan el legado de tu padre y algo más.</speech>
            <speech>Ha demostrado una notable habilidad para manejar una situación tan delicada.</speech>
            <speech>Curiosamente, mi ayudante encontró esta Flauta de Eón tirada cerca. Es bastante misteriosa.</speech>
            <speech>Tengo la fuerte corazonada de que está relacionado con Latios y Latias. Podría serte muy útil.</speech>
            <speech>Toma, coge esta Flauta de Eon. Con ella, puede que tengas la oportunidad de interactuar con ellos de nuevo.</speech>
        </speeches>
        <speeches id="2">
            <speech>La Flauta de Eon podría ser la clave para encontrar a Latios y Latias. Llévala contigo durante tu viaje.</speech>
            <speech>¿Quién sabe? Quizá puedas invocarlos o incluso volar con ellos por Hoenn.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Bienvenido, $PLAYER_NAME. Para mejorar nuestras capacidades de investigación, necesito 3 Zigzagoon, cada uno de nivel 15 o superior.</speech>
            <speech>Estas criaturas son clave para nuestros estudios sobre el comportamiento y la adaptación al hábitat de los Pokémon.</speech>
            <speech>Si te quedas corto, te espera la búsqueda del conocimiento.</speech>
        </speeches>
        <speeches id="2">
            <speech>Notable, ¡has traído los 3 Zigzagoon! Estos especímenes son inestimables para nuestros esfuerzos de investigación.</speech>
            <speech>Como muestra de nuestro agradecimiento, le proporcionaré 5 cajas de almacenamiento adicionales.</speech>
            <speech>¿Estás listo para proceder? Una vez que finalicemos este intercambio, no hay marcha atrás.</speech>
        </speeches>
        <speeches id="3">
            <speech>Percibo sus dudas. Un esfuerzo científico suele requerir una cuidadosa deliberación.</speech>
            <speech>Tómate tu tiempo para reflexionar. Mi laboratorio y yo estaremos aquí cuando estés listo para contribuir a la ciencia.</speech>
        </speeches>
        <speeches id="4">
            <speech>Procedamos con el intercambio. Su contribución a nuestra investigación es muy apreciada.</speech>
            <speech>Aquí tienes tus 5 cajas de almacenamiento, diseñadas con la última tecnología para la máxima eficiencia en el almacenamiento Pokémon.</speech>
            <speech>Manéjalos con prudencia. Representan un salto significativo en nuestra comprensión y cuidado de los Pokémon.</speech>
            <speech>Gracias por contribuir a nuestra investigación. El camino hacia el descubrimiento es largo, pero con contribuciones como la suya podemos lograr avances notables.</speech>
        </speeches>
        <speeches id="5">
            <speech>Gracias por traerme el Zigzagoon. Su ayuda es una gran ayuda para nuestra investigación en curso.</speech>
        </speeches>
    </conversation>


    <conversation id="6">
        <speeches id="1">
            <speech>No hay problema. Vuelve más tarde si cambias de opinión.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hola joven entrenador.</speech>
            <speech>Veo que has llegado recientemente a Hoenn.</speech>
            <speech>Las restricciones regionales pueden ser todo un reto, sobre todo la imposibilidad de usar Pokémon de otras regiones.</speech>
            <speech>Pero no te preocupes, tengo una solución para ti. Puedo convertir hasta 5 de tus Pokémon para que sean reconocidos como nativos de Hoenn.</speech>
            <speech>Esto significa que puede utilizarlos libremente sin preocuparse por las prohibiciones regionales.</speech>
            <speech>Puedes actualizar cualquier Pokémon que esté por debajo del tope de nivel máximo, que se calcula mediante la fórmula (Insignias totales * 10) + 5.</speech>
            <speech>En tu caso, puedes actualizar Pokémon hasta el nivel $NIVEL.</speech>
            <speech>Actualmente tienes $REGION_CHANGE_POKES_LEFT Pokémon que puedes actualizar.</speech>
            <speech>¿Desea continuar con esta actualización?</speech>
        </speeches>
        <speeches id="3">
            <speech>Hola joven entrenador.</speech>
            <speech>¡Bienvenido a Hoenn!</speech>
            <speech>Entiendo que las restricciones regionales puedan ser frustrantes, especialmente la imposibilidad de usar Pokémon de regiones anteriores como Sinnoh o Jvaloh.</speech>
            <speech>Por suerte, puedo ayudarte. Puedo convertir hasta 5 de tus Pokémon para que sean reconocidos como nativos de Hoenn.</speech>
            <speech>Esto le permitirá utilizarlos libremente, eludiendo las prohibiciones regionales.</speech>
            <speech>Puedes actualizar cualquier Pokémon por debajo del tope de nivel máximo, calculado como (Insignias totales * 10) + 5.</speech>
            <speech>En tu situación, puedes actualizar Pokémon hasta el nivel $LEVEL y un total de $REGION_CHANGE_POKES_LEFT Pokémon.</speech>
            <speech>Lamentablemente, o bien no tienes ningún Pokémon elegible en tu grupo, o bien has alcanzado tu límite máximo.</speech>
            <speech>Lo siento, pero parece que no puedo ayudarle más en este momento.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ya está. Tu compañero es ahora reconocido en todo Hoenn como un local.</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>¡Saludos, viajero! Estoy especializado en la ciencia de las Máquinas Técnicas y los Registros Técnicos.</speech>
            <speech>Si tienes alguna TM o TR de generaciones anteriores, puedo actualizarla para que sea compatible con la tecnología de última generación.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Saludos, viajero! Estoy especializado en la ciencia de las Máquinas Técnicas y los Registros Técnicos.</speech>
            <speech>Si tienes alguna TM o TR de generaciones anteriores, puedo actualizarla para que sea compatible con la tecnología de última generación.</speech>
            <speech>Ah, veo que has traído algunos TMs y TRs para actualizar.</speech>
            <speech>¡Excelente elección! La mejora permitirá a tus Pokémon aprender movimientos que antes no podían con las versiones obsoletas.</speech>
            <speech>¿Está listo para continuar? Una vez que iniciamos el proceso de actualización, no podemos revertirlo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Es comprensible, es una decisión importante. Tómate tu tiempo para pensarlo.</speech>
            <speech>Siempre que lo decida, estaré aquí, dispuesto a ayudarle con sus necesidades tecnológicas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Comencemos la actualización entonces. Apreciamos su fe en las capacidades de nuestro laboratorio.</speech>
            <speech>...Y ya está. Tus TM y TR ya están totalmente actualizados y son compatibles con los sistemas de última generación.</speech>
            <speech>Ahora tus Pokémon pueden aprender nuevos movimientos para mejorar su fuerza en las batallas.</speech>
            <speech>Nuestro laboratorio está siempre aquí para ayudar a entrenadores como tú, ampliando los límites del entrenamiento y la compatibilidad Pokémon.</speech>
            <speech>Si encuentras más TM o TR que necesiten una actualización, ya sabes dónde encontrarme. Buen viaje.</speech>
        </speeches>
        <speeches id="5">
            <speech>Gracias por confiar sus TM y TR a nuestro laboratorio. Sus actualizaciones están completas. Utilícenlas bien en el viaje que tienen por delante.</speech>
        </speeches>
    </conversation>



    <movingNpc direction="DOWN" id="1" name="Assistant Gilroy" shouldSleep="" speed="1" sprite="8" type="npc" x="4" y="13">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">move aside I'm busy</onCollisionSpeech>
        <speech>El profesor Birch estudia el hábitat y la distribución de los Pokémon.</speech>
        <speech>También disfruta de la ayuda de May.</speech>
        <speech>Hay mucho amor allí.</speech>
        <speech>Me parece una monada.</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="2" name="Assistant Tina" randomRotation="false" sprite="7" x="9" y="11">
        <speech>El mundo de Pokémon es vasto e interesante.</speech>
        <speech>Es un privilegio poder formar parte de ella con alguien tan dedicado a sus estudios como el profesor Birch.</speech>
        <speech>Le esperan muchas aventuras y descubrimientos.</speech>
  </npc>
</npcs>