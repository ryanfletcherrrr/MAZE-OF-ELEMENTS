<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Eres un entrenador Pokèmon, y yo también! Nuestros ojos se encontraron, ¡así que debemos luchar!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Demasiado fuerte! ¡Demasiado fuerte!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Demasiado fuerte! ¡Demasiado fuerte!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Demasiado débil! ¡Demasiado débil!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Espío, con mi pequeño ojo...</speech>
            <speech>¡Un entrenador!</speech>
            <speech>¡Una batalla, por favor!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oh Boo! No puedo ganar.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Oh Boo! No puedo ganar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Oh Boo! No puedes ganar.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Tengamos una batalla Pokèmon!</speech>
            <speech>¡Humph! ¡Pero voy a ganar!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Me ganaste?!</speech>
            <speech>¡Tienes talento!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Me ganaste?!</speech>
            <speech>¡Tienes talento!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ya te dije que iba a ganar.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>$PLAYER_NAME, no te he enseñado cómo atrapar un Pokémon, ¿verdad?</speech>
            <speech>Debes esperar a que los PS del Pokémon salvaje bajen atacándolo.</speech>
            <speech>Una vez que esté bajo, debes hacer clic en el botón de la Bolsa.</speech>
            <speech>En la bolsa, encuentra la Poké Ball que quieras usar.</speech>
            <speech>Haz clic en ella, y el Pokémon será capturado.</speech>
            <speech>Es importante reducir los PS del Pokémon lo más posible.</speech>
            <speech>Esto se debe a que un Pokémon saludable es muy difícil de atrapar.</speech>
            <speech>Oh, los Pokémon también son más fáciles de atrapar si los haces dormir o los paralizas usando un movimiento de un Pokémon.</speech>
            <speech>OK, $PLAYER_NAME, para empezar, te daré cinco Poké Balls.</speech>
            <speech>Además, aquí tienes 1,000 Poké Dólares para ayudarte en tu viaje. Úsalos sabiamente para comprar objetos o suministros.</speech>
            <speech>También te doy una Cuerda Huida. Este práctico objeto te permite escapar de cuevas u otros lugares al instante.</speech>
            <speech>Es genial si te encuentras en una situación difícil.</speech>
            <speech>También recibirás cinco Superpociones. Estas restaurarán 50 PS a uno de tus Pokémon, así que tenlas a mano en las batallas.</speech>
            <speech>Por último, toma estos cinco Revivir.</speech>
            <speech>Si uno de tus Pokémon se debilita, puedes usar un Revivir para devolverlo a la conciencia, con la mitad de sus PS máximos restaurados.</speech>
        </speeches>
        <speeches id="2">
            <speech>Si tienes muchos Pokémon contigo, estarás más seguro en viajes largos.</speech>
            <speech>Además, será mucho más divertido tener a tus amigos Pokémon contigo. OK, tengo que irme.</speech>
            <speech>¡Adiós!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" id="1" name="Joseph" sprite="4" x="13" y="19">
        <speech>Algunos Pokémon sólo aparecen por la mañana.</speech>
        <speech>Algunos sólo aparecen por la noche.</speech>
        <speech>Seguiré buscando hasta que los haya atrapado a todos.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Marika" sprite="17" x="11" y="29">
        <speech>Oye, ¿podrías ayudar a encontrar una salida a esta ruta?</speech>
        <speech>...</speech>
        <speech>¿Tú también te has perdido? Genial... parece que me perderé mi programa de televisión favorito.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Kelbee" sprite="41" x="31" y="20">
        <speech>No tengas reparos en hablar con los entrenadores con los que te gustaría batallar.</speech>
        <speech>Los Pokémon se hacen cada vez más fuertes luchando.</speech>
        <speech>Algunos entrenadores pueden incluso apartarte para una batalla.</speech>
        <speech>Querrás estar preparado en todo momento para una batalla.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Bugcatcher Charles" shouldSleep="1" speed="1" sprite="24" x="33" y="5">
        <path>LEFTx2, DOWNx3, RIGHTx2, UPx3</path>
        <onCollisionSpeech gap="4">Please give me space, I'm looking for bugs</onCollisionSpeech>
        <speech>¿Has encontrado algún Pokémon insecto?</speech>
        <speech>...</speech>
        <speech>Llevo una hora buscando pero no he encontrado nada.</speech>
        <speech>Avísame si encuentras alguno. ¡Me está volviendo loco que no he visto ninguna!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="5" name="Lilly" sprite="6" x="23" y="14">
        <speech>¡Mis Pokémon están agotados! Necesito ir a un Centro Pokémon.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="6" name="Trovis" sprite="25" x="20" y="3">
        <speech>Oye, ¿te gustaría cambiar un Pokémon insecto por Bidoof?</speech>
        <speech>...</speech>
        <speech>¡Es broma! ¡Este es mi super épico Bidoof!</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="7" name="Harry" sprite="26" x="9" y="8">
        <speech>Ha sido divertido luchar contra otros entrenadores.</speech>
        <speech>Yo también lucharía contigo, pero primero tengo que ir a un Centro Pokémon...</speech>
        <speech>Mis Pokémon necesitan descansar.</speech>
    </npc>
    <movingNpc direction="LEFT" id="8" name="Hiker Norman" shouldSleep="" speed="1" sprite="10" x="26" y="28">
        <path>LEFTx3, DOWNx2, RIGHTx3, UPx2</path>
        <onCollisionSpeech gap="4">How's your training going?</onCollisionSpeech>
        <speech>Hola $PLAYER_NAME, me gusta explorar las Montañas porque son geniales.</speech>
        <speech>¿Quieres acompañarme?</speech>
        <speech>¿Ahora no, dices?</speech>
        <speech>Ahh, así que quieres ser Maestro Pokémon, pues no hay problema.</speech>
        <speech>¡Buena suerte $PLAYER_NAME!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Starly" shouldSleep="" speed="1" sprite="396" type="pokemon" x="34" y="15">
        <path>LEFTx4, UPx1, RIGHTx4, DOWNx1</path>
        <onCollisionSpeech gap="4">Staaaaaaaar</onCollisionSpeech>
        <speech>Starly... Starly...</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="10" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="7" y="10">
        <path>LEFTx3,DOWNx1,RIGHTx3,UPx1</path>
        <onCollisionSpeech gap="4">*The Zigzagoon barks at you*</onCollisionSpeech>
        <speech>Zigzagoon...</speech>
    </movingNpc>
</npcs>