<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hola a todos. Estoy investigando la gran variedad de Pokémon que hay en Hoenn. ¿Puedes ayudarme?</speech>
            <speech>Enséñame un Pokémon nuevo cada día y te recompensaré con valiosas fichas.</speech>
            <speech>Entonces, ¿qué te gustaría hacer?</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que hoy no tienes ningún Pokémon nuevo que enseñarme. Cada día busco unos diferentes.</speech>
            <speech>Sigue explorando y captura más Pokémon. Vuelve cuando tengas algo nuevo que mostrar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmm, esto no parece ser un nuevo Pokémon. ¡Estoy buscando hallazgos únicos que no haya visto antes!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Excelente! Este es exactamente el tipo de Pokémon que quiero investigar. Aquí están tus fichas, como prometí.</speech>
            <speech>¡Vuelve mañana con otro nuevo Pokémon y gana más recompensas!</speech>
        </speeches>
        <speeches id="5">
            <speech>Parece que hoy ya me has enseñado un Pokémon. Me temo que la norma es uno al día.</speech>
            <speech>Demos también una oportunidad a otros entrenadores. ¡Vuelve mañana para más descubrimientos!</speech>
        </speeches>
        <speeches id="6">
            <speech>¡Lo has hecho bien hoy! Vuelve en $DURATION para tu próxima oportunidad de contribuir y ganar tokens.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <question id="1">
            <speech>¡Saludos! Veo que has estado reuniendo fichas de guardería. ¿Te interesa canjearlas por algunos objetos especiales?</speech>
        </question>
        <no id="2">
            <speech>Está bien, no hay prisa. Estos artículos no van a ninguna parte. Cuando estés listo para intercambiar o simplemente tengas curiosidad, vuelve.</speech>
            <speech>Y recuerda, cada nuevo Pokémon que muestres te hará ganar más fichas. ¡Nos vemos!</speech>
        </no>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>La danza de la vida y la crianza se despliega bajo el abrazo del sol. ¿Sientes el pulso de la creación en la punta de tus dedos?</speech>
            <speech>Aquí, en el corazón del cuidado y el crecimiento, ponemos a prueba los lazos entre entrenador y Pokémon. Estás preparado para demostrar la fuerza de tu conexión?</speech>
        </speeches>

        <speeches id="2">
            <speech>Tu victoria dice mucho del cuidado y el entrenamiento que has dado a tus Pokémon. Nuestro vínculo, aunque puesto a prueba, sigue siendo fuerte y verdadero.</speech>
            <speech>A través de esta batalla, nuestra comprensión se profundiza, revelando el camino hacia la verdadera armonía y fortaleza. Vuestros esfuerzos son encomiables.</speech>
        </speeches>

        <speeches id="3">
            <speech>Asombroso. La profundidad de vuestro vínculo refleja las conexiones más profundas de la naturaleza.</speech>
            <speech>Su dedicación le ha hecho merecedor de mi máximo respeto. Nuestra batalla de hoy ha sembrado semillas de crecimiento y comprensión.</speech>
            <speech>Cada día ofrece una nueva oportunidad de desafío y crecimiento. Vuelve en $DURATION para estrechar aún más tus lazos.</speech>
        </speeches>

        <speeches id="4">
            <speech>Notable. Tu fuerza y el vínculo con tus Pokémon son realmente inspiradores.</speech>
            <speech>Las lecciones aprendidas hoy servirán de base para el crecimiento futuro. Que tu viaje continúe con la misma pasión y dedicación.</speech>
        </speeches>

        <speeches id="5">
            <speech>El ciclo de la vida continúa; con cada nuevo amanecer, nuestras conexiones se profundizan, nuestros lazos se fortalecen.</speech>
            <speech>Vuelva mañana, bajo el cielo radiante, para un nuevo desafío. Juntos exploraremos el vasto potencial de la colaboración y el crecimiento.</speech>
        </speeches>
    </conversation>
</npcs>