<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Ah, el momento perfecto! Tengo un {COLOR=PURPLE}paquete de investigación urgente{ENDCOLOR} que debe llegar al {COLOR=BLUE}Profesor Oak{ENDCOLOR} inmediatamente.</speech>
            <speech>Contiene datos esenciales de nuestros últimos estudios de campo, material urgente que no puede esperar a la entrega periódica.</speech>
            <speech>Pareces un entrenador capaz. ¿Estaría dispuesto a entregar esto al {COLOR=BLUE}Profesor{ENDCOLOR} personalmente?</speech>
            <speech>Debería estar en su laboratorio en {COLOR=CYAN}Pallet Town{ENDCOLOR}. Esto sería una gran ayuda para nuestros esfuerzos de investigación.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Excelente! {COLOR=BLUE}El profesor Oak{ENDCOLOR} estará muy aliviado de recibir estos datos a tiempo.</speech>
            <speech>Su ayuda garantiza que nuestra investigación pueda continuar sin retrasos. Muchas gracias.</speech>
            <speech>Buen viaje a {COLOR=CYAN}Pallet Town{ENDCOLOR} - y por favor, ¡manejen ese paquete con cuidado!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Sophia" speed="1" sprite="104" type="npc" x="14" y="10">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Siempre debes abastecerte de Antídotos antes de adentrarte en el bosque.</speech>
    </movingNpc>
</npcs>