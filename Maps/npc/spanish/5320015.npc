<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Me preocupa lo que he oído en el Rincón del Juego.</speech>
            <speech>El Equipo Galáctico ha transportado algo a Ciudad Pastoria.</speech>
            <speech>No sé qué pretenden, pero me da mala espina...</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmm... Necesitamos una llave para seguir adelante. Por el momento, no podemos dar caza a los que huyen.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, este Reajuste EV No Asignado. $PLAYER_NAME, esto, usted debe mantener.</speech>
            <speech>No servirá dejar este objeto aquí para que lo use el Equipo Galáctico.</speech>
        </speeches>
        <speeches id="4">
            <speech>Así que no aprendimos mucho de este ejercicio... No importa.</speech>
            <speech>Lo que me preocupa es lo que he oído en el Rincón del Juego.</speech>
            <speech>El Equipo Galáctico ha transportado algo a Ciudad Pastoria.</speech>
            <speech>Lo que pretenden, no lo sé, pero me da mala espina.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>La puerta está cerrada.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>La puerta está cerrada.</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>¡Ah, hola! Te he hecho esperar. Usaré esta Llave de Almacenamiento que he obtenido del Equipo Galáctico...</speech>
        </speeches>
        <speeches id="2">
            <speech>**Click Click**</speech>
            <speech>¡Sí! ¡Está abierto!</speech>
        </speeches>
        <speeches id="3">
            <speech>Me adelantaré, amigo mío. ¡No te expongas al peligro!</speech>
            <speech>¿Y las otras puertas? Debe haber una llave en algún lugar dentro para abrirlas.</speech>
            <speech>No puedo recuperarlo para ti porque estoy demasiado débil para luchar contra esos gruñones.</speech>
        </speeches>
    </conversation>
</npcs>