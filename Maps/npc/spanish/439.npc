<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Ah! ¡$PLAYER_NAME! ¡Mira! ¡Allí arriba! ¡Ese es el Monte Chimenea!</speech>
            <speech>Seguro que es grande... No, más bien enorme... ¡Me deja sin aliento!</speech>
            <speech>Me encantaría tomar el teleférico hasta la cima algún día...</speech>
            <speech>¿Eh? Oye, $PLAYER_NAME, ¿no te parecen tus Pokémon un poco andrajosos?</speech>
            <speech>Déjame darles un empujoncito.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Caramba! ¿Qué estoy haciendo aquí parloteando?</speech>
            <speech>¡Se supone que estoy de camino a Fallarbor para visitar al Profesor Cozmo!</speech>
            <speech>Me voy por ahora, $PLAYER_NAME, ¡pero luchemos la próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¿Qué pasó con los otros que fueron a Fallarbor? Llegan tarde...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¿Adónde crees que vas, niño tonto?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Perdone, pero ¿puedo pedirle que use sus instalaciones?</speech>
        </speeches>
        <speeches id="2">
            <speech>No, en serio. ¡Indícame el camino correcto mientras aún estoy a tiempo!</speech>
        </speeches>
        <speeches id="3">
            <speech>No, en serio. ¡Indícame el camino correcto mientras aún estoy a tiempo!</speech>
        </speeches>
        <speeches id="4">
            <speech>En esta parte del mundo, ¿enfrentas con tus Pokémon a alguien que te hace una simple pregunta?</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Ooh la la! ¡Pequeño entrenador! ¡Graciosa flor! ¡Voy a cortarte justo en el tallo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡No! ¡No tan rápido! ¡Quiero que seas la flor más preciada de mi jardín!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Heredé este cuerpo de huesos grandes de mis padres... Soy como una cordillera viviente...</speech>
        </speeches>
        <speeches id="2">
            <speech>No es suficiente... Nunca es suficiente. Mi colesterol malo no es lo suficientemente alto...</speech>
        </speeches>
        <speeches id="3">
            <speech>No es suficiente... Nunca es suficiente. Mi colesterol malo no es lo suficientemente alto...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja, ja! Ahora puedo consumir más calorías...</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡Soy la gran cordillera de tu vida! ¡Vénceme si puedes!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Adelante! ¡Tienes que irte! ¡Vete y déjame!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Adelante! ¡Tienes que irte! ¡Vete y déjame!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Por fin alguien ha escalado la montaña! ¡Esta es mi cima!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Marill" shouldSleep="" speed="1" sprite="183" type="pokemon" x="42" y="74">
        <path>UPx4,RIGHTx3,DOWNx4,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Marill" shouldSleep="" speed="1" sprite="183" type="pokemon" x="52" y="70">
        <path>LEFTx3,UPx3,DOWNx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Sandshrew" shouldSleep="" speed="1" sprite="27" type="pokemon" x="34" y="31">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Sandshrew!</onCollisionSpeech>
        <speech>¡Sandshrew!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Staraptor" speed="1" sprite="398" type="pokemon" x="21" y="62">
        <path>LEFTx12,DOWNx9,RIGHTx12,UPx9</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="13" y="66">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Machop" shouldSleep="" speed="1" sprite="66" type="pokemon" x="13" y="26">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Camerupt" shouldSleep="" speed="1" sprite="323" type="pokemon" x="14" y="15">
        <path>RIGHTx3,DOWNx2,LEFTx3,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Trapinch" shouldSleep="" speed="1" sprite="328" type="pokemon" x="30" y="8">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Skarmory" speed="1" sprite="227" type="pokemon" x="46" y="13">
        <path>DOWNx20,UPx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Sandslash" shouldSleep="" speed="1" sprite="28" type="pokemon" x="14" y="41">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="UP" id="11" name="Skarmory" speed="1" sprite="227" type="pokemon" x="3" y="41">
        <path>UPx20,DOWNx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Spoink" speed="1" sprite="325" type="pokemon" x="31" y="59">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Spoink!</onCollisionSpeech>
        <speech>¡Spoink!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Swellow" speed="1" sprite="277" type="pokemon" x="40" y="39">
        <path>RIGHTx8,DOWNx8,LEFTx8,UPx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Spoink" shouldSleep="" speed="1" sprite="325" type="pokemon" x="32" y="49">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Spoink!</onCollisionSpeech>
        <speech>¡Spoink!</speech>
    </movingNpc>
</npcs>