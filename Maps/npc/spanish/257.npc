<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Criar Pokémon no consiste solo en batallas, pero incluso aquí, ¡mi equipo está listo para demostrar su fuerza!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Bien criado, bien luchado! Tus Pokémon deben confiar mucho en ti.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Bien criado, bien luchado! Tus Pokémon deben confiar mucho en ti.</speech>
        </speeches>
        <speeches id="4">
            <speech>Su equipo tiene potencial, pero el cuidado y la formación adecuados marcan la diferencia.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Equilibrio, precisión y un poco de estilo... ¡a ver si puedes seguirme el ritmo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ups! Parece que se me cayó la pelota en que uno ..</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Ups! Parece que se me cayó la pelota en que uno ..</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Una actuación impecable! ¡Quizás deberías dedicarte a los malabares en vez de a la lucha!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Solo aquellos que inspiran verdadero respeto a sus Pokémon merecen estar aquí.</speech>
        </speeches>
        <speeches id="2">
            <speech>Juzgué mal tu fuerza... Tus Pokémon realmente confían en ti.</speech>
        </speeches>
        <speeches id="3">
            <speech>Juzgué mal tu fuerza... Tus Pokemon realmente confían en ti.</speech>
        </speeches>
        <speeches id="4">
            <speech>Te falta control. Un verdadero domador no solo lucha... ¡manda con autoridad!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{COLOR=RED}Molllll...tresssss...{ENDCOLOR}</speech>
        </speeches>
        <speeches id="2">
            <speech>{¡Mooool-TRES!</speech>
        </speeches>
        <speeches id="3">
            <speech>*Moltres estalla en un espectacular despliegue de {COLOR=ROJO}llamas carmesí{ENDCOLOR} y {COLOR=ANARANJA}fuego dorado{ENDCOLOR}*</speech>
            <speech>*El fénix legendario bate sus {COLOR=YELLOW}brillantes alas{ENDCOLOR} creando una cálida corriente térmica ascendente*</speech>
            <speech>*Con un chillido orgulloso, indica que las {COLOR=ROJO}llamas deben enfriarse{ENDCOLOR} antes de que vuelvas en {COLOR=AMARILLO}$DURACIÓN{ENDCOLOR}*</speech>
        </speeches>
        <speeches id="4">
            <speech>{¡Mol-tres!</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Golbat" speed="1" sprite="42" type="pokemon" x="6" y="16">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Goollbaaat!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Golem" speed="1" sprite="76" type="pokemon" x="22" y="33">
        <path>RIGHTx1,DOWNx1,RIGHTx1,LEFTx1,UPx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Golleeem!</onCollisionSpeech>
        <speech>¡GOLEEEM!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Golbat" speed="1" sprite="42" type="pokemon" x="51" y="28">
        <path>DOWNx7,LEFTx7,RIGHTx7,UPx7</path>
        <onCollisionSpeech gap="4">Golllbaaat!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Xavier" randomRotation="true" sprite="20" x="21" y="17">
        <speech>Supuestamente, si estás en una tripulación, puedes teletransportarte a algún lugar para curarte.</speech>
        <speech>Hah .. Estoy demasiado viejo para ese tipo de negocios de lujo.</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Machoke" speed="1" sprite="67" type="pokemon" x="34" y="4">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Machoooke!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="7" name="Louise" randomRotation="false" sprite="28" x="32" y="32">
        <speech>¿¡Estás de broma!?</speech>
        <speech>Mi Dragonair tiene que alcanzar el nivel 55 antes de poder evolucionar... Me pregunto qué aspecto tendrá.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Hercules" speed="1" sprite="11" type="npc" x="47" y="12">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>¿Cómo voy a demostrar que soy un héroe si nadie me da una oportunidad?</speech>
    </movingNpc>
</npcs>