<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Nuestro jefe está a punto de hacer algo espectacular!</speech>
            <speech>Claro que sí, ¿verdad?</speech>
        </speeches>
        <speeches id="2">
            <speech>No soy capaz de detenerte, te dejaré pasar para que mi hermano pueda pulverizarte.</speech>
        </speeches>
        <speeches id="3">
            <speech>No soy capaz de detenerte, te dejaré pasar para que mi hermano pueda pulverizarte.</speech>
        </speeches>
        <speeches id="4">
            <speech>Nadie puede detener al Equipo Galáctico.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>No te gusta que te paren, ¿verdad?</speech>
        </speeches>
        <speeches id="2">
            <speech>No soy capaz de detenerte, te dejaré pasar para que mi jefe pueda pulverizarte.</speech>
        </speeches>
        <speeches id="3">
            <speech>No soy capaz de detenerte, te dejaré pasar para que mi jefe pueda pulverizarte.</speech>
        </speeches>
        <speeches id="4">
            <speech>Nadie puede detener al Equipo Galáctico.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>¿Adónde crees que vas? No dejaré que molestes a nuestro jefe.</speech>
            <speech>Si no vas a escuchar, tendrás que pasar por mí primero.</speech>
            <speech>¡Después de todo, me has hecho quedar mal más veces de las que puedo recordar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sheesh... Debería haber luchado yo mismo.</speech>
            <speech>¡¿Maestro Cyrus?! ¡¿Dónde ha ido?!</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Cómo ha llegado hasta aquí?</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>...Je. Mis Pokémon son duros, ¿verdad? ¡Puedo volverme aún más duro!</speech>
            <speech>...Pero, ya sabes, eso es todo para nosotros. Nos hemos dado contra la pared... $NOMBRE_PLAYER, ¡te ayudaré con esto!
            </speech>
            <speech>¡Oye, $NOMBRE_DE_JUGADOR! ¡Aquí es! ¡Ahora es tu show!</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>... ...</speech>
            <speech>Todo está listo para la creación de un nuevo mundo.</speech>
            <speech>Ahora, todo terminará. Y todo comenzará. Con esto, la Cadena Roja hecha de los cristales de los
                tres Pokémon del lago.
            </speech>
            <speech>Y esto, la Cadena Roja que repliqué con medios tecnológicos...</speech>
            <speech>Con estas Cadenas Rojas abriré el portal a otra dimensión.</speech>
            <speech>Te ordeno que des rienda suelta a tu poder para mí ..</speech>
        </speeches>
        <speeches id="2">
            <speech>Dialga, el mítico Pokémon, ¡y el maestro del tiempo!</speech>
            <speech>...Y el otro. Palkia, el mítico Pokémon, ¡y el maestro del espacio y las dimensiones!</speech>
        </speeches>
        <speeches id="3">
            <speech>He esperado tanto este momento, Dialga y Palkia.</speech>
            <speech>Dar forma a este mundo es una doble espiral de tiempo y espacio.</speech>
            <speech>Sí, ¡las mismas cosas que tienes la capacidad de controlar!</speech>
            <speech>¡Harás mi voluntad! ¡Tendré tus habilidades como mías!</speech>
            <speech>Con el poder que ejerzo, ¡crearé un mundo completamente nuevo!</speech>
            <speech>El mundo incompleto y feo que tenemos ahora puede desaparecer.</speech>
            <speech>Estoy reseteando todo a cero. Nada puede permanecer. Todo es para hacer el mundo definitivo.
            </speech>
            <speech>Un mundo de completa perfección. Nada tan vago e incompleto como el espíritu puede permanecer.</speech>
        </speeches>
        <speeches id="4">
            <speech>...debería haberlo esperado.</speech>
            <speech>Uxie, "El ser del conocimiento".</speech>
            <speech>Azelf, "El ser de la fuerza de voluntad".</speech>
            <speech>Y Mesprit, "El ser de la emoción"...</speech>
            <speech>¿Los Pokémon han venido a proteger Sinnoh? Patético y sin valor.</speech>
            <speech>Se necesitan los tres, los tres Pokémon del lago que simbolizan el espíritu, para equilibrar los
                Pokémon del tiempo o del espacio.
            </speech>
            <speech>Pero no pueden mantener el equilibrio contra los dos. No cuando Dialga y Palkia están aquí.</speech>
            <speech>Su venida aquí es en vano. Tanto drama sin sentido. Ahora, $PLAYER_NAME.</speech>
            <speech>Has interferido constantemente en mis planes, pero serás perdonado.</speech>
            <speech>Después de todo, no quedará espíritu para siempre cuando termine. Todo espíritu desaparecerá.
            </speech>
            <speech>Será arrancado... ¡De ti! ¡De tus Pokémon!</speech>
            <speech>De esos preciosos para ti...</speech>
            <speech>¡Ha llegado la hora! ¡Mi sueño será mi realidad!</speech>
            <speech>¿Qué es esta presión que siento...? ¿Algo... se enfurece?</speech>
        </speeches>
        <speeches id="5">
            <speech>Interesante. Así que hay un Pokémon que sólo puede aparecer como sombra.</speech>
            <speech>En cualquier caso, el esfuerzo es imprudente e insensato. He aprovechado los poderes de Dialga y Palkia...
            </speech>
            <speech>¡Yo, Cyrus, no tendré más interferererererere...!</speech>
        </speeches>
    </conversation>

    <conversation id="10">
        <speeches id="1">
            <speech>No... Siento haber tardado tanto. Creo que finalmente encontré la respuesta estudiando los mitos.</speech>
            <speech>Cuando se hizo este mundo, aparecieron Dialga y Palkia.</speech>
            <speech>Al parecer, había un Pokémon más que apareció al mismo tiempo.</speech>
            <speech>Un Pokémon con tanto poder como Dialga y Palkia...</speech>
            <speech>Pero también una cuyo nombre nunca se pronunciaría... ¡Giratina!</speech>
            <speech>Se dice que acecha en otro mundo... Un mundo en el lado opuesto al nuestro...</speech>
            <speech>Eso es lo que era la sombra. Debe haber sido Giratina.</speech>
            <speech>Los pilares se están distorsionando... Es debido a ese portal.</speech>
            <speech>Nos ha unido al otro mundo.</speech>
            <speech>Si no se cierra, la distorsión se extenderá a Sinnoh y más allá...</speech>
            <speech>Nuestro mundo será destruido...</speech>
        </speeches>
    </conversation>

    <conversation id="11">
        <speeches id="1">
            <speech>¿Están listos? ¡Tenemos que perseguir a Cyrus!</speech>
        </speeches>
    </conversation>

    <conversation id="12">
        <speeches id="1">
            <speech>Tus Pokémon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
    </conversation>

    <conversation id="13" canSkip="false">
        <speeches id="1">
            <!-- Antes de la Batalla -->
            <speech>*Giratina emerge, ojos penetrantes. Siente tus encuentros con Pokémon.*</speech>
            <speech>*El aire se vuelve más frío. Giratina reconoce tu hito de 250 Pokémon.*</speech>
            <speech>*Con un aullido inquietante, te desafía. '¿Listo para esta prueba?'*</speech>
        </speeches>
        <speeches id="2">
            <!-- Discurso de Victoria -->
            <speech>*Giratina ruge triunfalmente, reconociendo la victoria.*</speech>
            <speech>*Demuestra respeto por tus habilidades como Entrenador.*</speech>
            <speech>*Desapareciendo, promete futuros encuentros.*</speech>
        </speeches>
        <speeches id="3">
            <!-- Discurso de No Batalla -->
            <speech>*Giratina se desvanece, sintiendo tu decisión de no luchar.*</speech>
            <speech>*Las sombras susurran sobre crecimiento, prometiendo un encuentro más profundo.*</speech>
            <speech>*'¿Nos encontramos de nuevo después de $DURATION?' sugiere, dando tiempo de preparación.*</speech>
        </speeches>
        <speeches id="4">
            <!-- Discurso de Derrota -->
            <speech>*Giratina se retira, haciendo eco de tu derrota.*</speech>
            <speech>*Respeta tu esfuerzo a pesar de la pérdida.*</speech>
            <speech>*El frío persiste, insinuando una revancha futura.*</speech>
        </speeches>
        <speeches id="5">
            <!-- Antes del Discurso de Criterio -->
            <speech>*Giratina se detiene, sintiendo que algo falta.*</speech>
            <speech>*[GOLD]'¿Capturaste 250 Pokémon?'[] parece preguntar.*</speech>
        </speeches>
    </conversation>

</npcs>