<npcs>
    <npc direction="DOWN" id="1000" name="Sailor John" sprite="11" x="26" y="13">
        <speech>No hay que subestimar la importancia de Lansoil.</speech>
        <speech>Tiene una gran importancia económica, ya que sirve de puerto comercial para las mercancías que entran y salen de
            Glassmoor.
        </speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Sailor George" sprite="11" x="21" y="48">
        <speech>Hay algo muy peculiar en cierta zona del mar.</speech>
        <speech>Ha habido informes de barcos que han desaparecido del radar.</speech>
        <speech>Muchas embarcaciones y personas en ellas han desaparecido...</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Sailor Ringo" sprite="11" x="9" y="36">
        <speech>¿Lo peor de ser marinero?</speech>
        <speech>¡Me mareo y soy alérgico al pescado!</speech>
    </npc>
    <npc direction="DOWN" id="1003" name="Sailor Paul" sprite="11" x="31" y="12">
        <speech>Puede que anoche tomara demasiada leche Moomoo...</speech>
        <speech>Creo que me voy a poner malo. ¡¡¡FUERA DEL CAMINO!!!</speech>
    </npc>
    <npc direction="UP" id="1004" name="Worker Grath" randomRotation="true" sprite="101" x="21" y="18">
        <speech>Oye chico, ¿has visto a JD?</speech>
        <speech>Estoy haciendo todo el trabajo por mí mismo otra vez. ¡Inútil ese hombre, te lo digo!</speech>
    </npc>
    <npc direction="DOWN" id="1005" name="Worker JD" sprite="100" x="40" y="38">
        <speech>¡No le digas a Grath que estoy aquí!</speech>
        <speech>Se volverá loco si se entera de que estoy holgazaneando otra vez.</speech>
    </npc>
    <conversation id="2">
        <speeches id="2">
            <speech>¡Hola! Este es el S.S. Seafarer. Si desea viajar en él, entonces hable con mi
                colega Sonny en la taquilla de los muelles.
            </speech>
        </speeches>
        <speeches id="1">
            <speech>Veo que tienes un pase de marinero. ¿Te gustaría viajar a Sunshire Town?</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="2">
            <speech>¡Hola! Este es el S.S. Seafarer. Si desea viajar en él, entonces hable con mi
                colega Sonny en la taquilla de los muelles.
            </speech>
        </speeches>
        <speeches id="1">
            <speech>Veo que tienes un Pase Seafarer. Te gustaría viajar a Moonshire Shores?</speech>
        </speeches>
    </conversation>
</npcs>