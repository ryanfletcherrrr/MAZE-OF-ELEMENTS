<npcs>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Oye! ¡Si no es $PLAYER_NAME! Fuera de entrenamiento de inmediato, ¿verdad?</speech>
            <speech>Así que, ya que estás entrenando de todos modos, ¿puedes hacerme un favor? Me gustaría que patrullaras Stark Mountain
                por mí.
            </speech>
            <speech>Más allá de aquí, hay un volcán. Es la Montaña Stark. Muy adentro está esta roca especial llamada
                Piedra de Magma.
            </speech>
            <speech>No puedo explicarlo bien, pero es muy importante. Mantiene dormido a un Pokémon.</speech>
            <speech>Pero últimamente he oído rumores sobre vándalos en Stark Mountain. Dicen que matones en trajes espaciales
                están causando problemas allí.
            </speech>
            <speech>¿Qué? ¿Qué, yo? Iba de camino al Centro Pokémon porque mi Pokémon tiene pocos PS.</speech>
            <speech>Así que, si pudieras subir a Stark Mountain ahora, sería genial. Gracias.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡VALE! ¡Estás al mando! ¡Patrullen Stark Mountain por mí! No te preocupes por mí. Ni siquiera un poco,
                ¿DE ACUERDO?
            </speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>¡Aquí es! ¡La Montaña Stark!</speech>
            <speech>Ahora necesito profundizar en mi interior.</speech>
            <speech>Me pregunto si ese viejo realmente puede hacerse cargo...</speech>
            <speech>¿Puede reemplazar al Maestro Cyrus?</speech>
            <speech>Quizá sea un buen momento para terminar con esto del Equipo Galáctico...</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>¿Has mirado bien dentro de la Montaña Stark?</speech>
            <speech>Hay algo que huele mal.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Eso! ¡¡Eso es una Piedra de Magma!! ¿Cómo te las arreglaste para conseguirla?</speech>
            <speech>¡Oh!</speech>
            <speech>Siempre supe que el viejo no entraba en la montaña para broncearse.</speech>
            <speech>Dame la piedra, voy a poner restaurarlo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Estás de broma, ¿verdad?</speech>
        </speeches>
        <speeches id="4">
            <speech>Gracias por la ayuda chico.</speech>
            <speech>Además, ya que has encontrado a Heatran, ¿por qué no vas a visitar al profesor Rowan?</speech>
            <speech>Le encantaría aprender más sobre Heatran.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>


    <movingNpc direction="DOWN" id="1" name="Fearow" shouldSleep="false" speed="1" sprite="22" type="pokemon" x="33" y="20">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">....</onCollisionSpeech>
        <speech>*Fearow parece enfadado*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Golem" speed="1" sprite="76" type="pokemon" x="12" y="27">
        <path>UPx2, LEFTx2, UPx1, LEFTx2, RIGHTx3, DOWNx1, RIGHTx1, DOWNx2</path>
        <onCollisionSpeech gap="4">.....</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="3" name="Scientist Stacy" randomRotation="false" sprite="7" x="28" y="7">
        <speech>Estoy aquí para estudiar los Pokémon de la Montaña Stark. He oído que se pueden ver algunos muy buenos.
        </speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Hiker Glen" randomRotation="true" sprite="10" x="11" y="32">
        <speech>Shhh calla...</speech>
        <speech>¡El Equipo Galáctico está por aquí!</speech>
    </npc>
    <movingNpc direction="LEFT" id="5" name="Numel" speed="1" sprite="322" type="pokemon" x="26" y="11">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="UP" hidden="false" id="6" name="Rey" randomRotation="false" sprite="34" x="14" y="22">
        <speech>Vine aquí para entrenar a mi Marowak, Pero no va bien con el Equipo Galáctico sobre.</speech>
    </npc>

</npcs>