<npcs>
    <conversation id="1">
        <!-- First Battle (Classic Blaine Style) -->
        <speeches id="1">
            <speech>{¡Hah! ¡Bienvenido, retador!</speech>
            <speech>Parece que puedes soportar el calor, pero ¿podrás resistir mis llamas?</speech>
            <speech>Soy {COLOR=ORANGE}Blaine{ENDCOLOR}, la maestra de tipo Fuego del gimnasio Cinnabar.</speech>
            <speech>Mis Pokémon arden con una intensidad inigualable y mi estrategia de combate es tan explosiva como un volcán en erupción.</speech>
            <speech>Si crees que puedes apagar mis llamas, ¡da un paso al frente! ¡Aumentemos la temperatura!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ja! ¡Quemaste mis defensas!</speech>
            <speech>Toma esto, la {COLOR=ORO}Insignia del Volcán{ENDCOLOR}, ¡prueba de que dominaste el infierno!</speech>
            <speech>Y esto también-{COLOR=RED}TM50 Sobrecalentamiento{ENDCOLOR}.</speech>
            <speech>Un movimiento devastador que enciende con una potencia inigualable, pero cuidado: demasiado fuego puede quemar hasta las llamas más fuertes.</speech>
            <speech>Utilízalo con prudencia y recuerda: cuanto más fuerte sea el fuego, más arderá.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Ja! ¡Parece que no pudiste soportar el calor!</speech>
            <speech>Ve a entrenar, enciende el fuego y vuelve cuando estés listo para enfrentarte de nuevo al infierno.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Cómo? ¿Tienes dudas? ¿Tienes miedo de quemarte?</speech>
            <speech>Está bien, pero cuando estés listo para sentir el calor, ya sabes dónde encontrarme.</speech>
        </speeches>
        <!-- Repeated Battle (More Intense & Thematic) -->
        <speeches id="5">
            <speech>¿Vuelves a por más? Te debe encantar jugar con fuego.</speech>
            <speech>{COLOR=RED}Las llamas nunca permanecen quietas: crecen, se propagan y consumen.</speech>
            <speech>¡A ver si puedes con un reto aún más caliente!</speech>
        </speeches>
        <speeches id="6">
            <speech>¡Impresionante! ¡Has desafiado las llamas una vez más!</speech>
            <speech>{COLOR=GOLD}$TOTAL_VICTORY{ENDCOLOR} victorias contra mí... ¿y {COLOR=CYAN}$CONSECUTIVE{ENDCOLOR} seguidas?</speech>
            <speech>Tu fuego arde con fuerza, pero ¿seguirá ardiendo para siempre?</speech>
        </speeches>
        <speeches id="7">
            <speech>¡Ja! ¿Pensabas que me tenías calado?</speech>
            <speech>El fuego es impredecible, salvaje, indomable: ¡nunca se puede controlar del todo!</speech>
            <speech>¡Vuelve cuando tus llamas ardan más!</speech>
        </speeches>
        <speeches id="8">
            <speech>¿Ahora te echas atrás? Ya veo...</speech>
            <speech>Bueno, ¡el fuego no espera a nadie! Cuando estés listo para probar tus límites, ¡aquí estaré!</speech>
        </speeches>
        <speeches id="9">
            <speech>¡Vaya! ¡Incluso las llamas más ardientes necesitan tiempo para reavivarse!</speech>
            <speech>Vuelve en {COLOR=YELLOW}$DURATION{ENDCOLOR}, ¡y veré si puedes aguantar el calor una vez más!</speech>
        </speeches>
        <!-- Special Condition: Battle Requirement Not Met -->
        <speeches id="10">
            <speech>¡Alto! ¡Quieres desafiarme, pero tu equipo no iguala el fuego interior!</speech>
            <speech>Para volver a luchar contra mí, debes tener {COLOR=ROJO}al menos 3 Pokémon de tipo Fuego{ENDCOLOR} en tu equipo.</speech>
            <speech>¡Vuelve cuando tus llamas ardan lo bastante fuerte como para enfrentarte a mí!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>El fuego es feroz y salvaje... ¡igual que mi estilo de lucha! ¿Puedes soportar el calor?</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que mis llamas se apagaron... ¡Tengo que avivar el fuego más fuerte la próxima vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que mis llamas se apagaron... ¡Tengo que avivar el fuego más fuerte la próxima vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Ya te has quemado? Tienes que aprender a abrazar las llamas, no a temerlas.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Estás a punto de enfrentarte a toda la fuerza de la combustión, ¡el calor bruto de una reacción química!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Subestimé las variables! El fuego es caótico... y tu estrategia también. Tendré que ajustar mis ecuaciones.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Subestimé las variables! El fuego es caótico... y tu estrategia también. Tendré que ajustar mis ecuaciones.</speech>
        </speeches>
        <speeches id="4">
            <speech>Excelente. Cuando la estrategia se une a la combustión controlada, la victoria es inevitable. La ciencia prevalece.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Bienvenido al Gimnasio Cinnabar! He estudiado cada tipo Fuego en la Pokedex. Mi equipo está optimizado para la máxima producción de calor. ¡Pongamos a prueba tu estrategia!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Fallo crítico! Mis cálculos estaban mal. Ajustaré las estadísticas de mi equipo y volveré a retarte.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Fallo crítico! Mis cálculos estaban mal. Ajustaré las estadísticas de mi equipo y volveré a retarte.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Victoria confirmada! Mis tipos de fuego han ardido hoy. Quédate por aquí. Tengo curiosidades sobre el volcán Cinnabar que no encontrarás en ningún libro.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Crío Tipos Fuego con cuidado, pero son fieros luchadores. ¿Listo para sentir el calor?</speech>
        </speeches>
        <speeches id="2">
            <speech>Mi equipo no estaba preparado esta vez. Descansaremos y volveremos más fuertes.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mi equipo no estaba preparado esta vez. Descansaremos y volveremos más fuertes.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Buen trabajo, equipo! Tenéis fuego, ¡pero entrenaremos más duro para la próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>He diseccionado la volatilidad del tipo Fuego durante años. Mis datos de batalla son impecables. ¿Crees que puedes burlar mis ecuaciones abrasadoras?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Imposible! Has desordenado mis fórmulas. Recalibraré mis gafas y antorcharé tu estrategia la próxima vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Imposible! Has desordenado mis fórmulas. Recalibraré mis gafas y antorcharé tu estrategia la próxima vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hipótesis confirmada. Mi ardiente brillantez prevalece. Estudia más, entrenador. ¡Mis notas de laboratorio aún te superan!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Blaine me lo enseñó todo! Su fuego es legendario, y mis Pokémon escupen llamas igual de ardientes. ¡Estás frito!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ay! Apagaste mi chispa. Blaine sigue siendo el verdadero rey del fuego. ¡Entrenaré más duro!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Ay! Apagaste mi chispa. Blaine sigue siendo el verdadero rey del fuego. ¡Entrenaré más duro!</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Sientes ese calor? El genio de Blaine corre por mis venas. ¡Necesitarás más para enfrentarte al maestro!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Oye, ¿crees que puedes soportar el calor? Mis Pokémon de fuego son superguays. ¿Listo para quemarte?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Vaya, has subido la temperatura! Me calmaré y lo intentaré de nuevo.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Vaya, has subido la temperatura! Me calmaré y lo intentaré de nuevo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? ¡Mis Pokémon molan! Replantea tu plan antes de enfrentarte a Blaine. ¡El fuego acaba de empezar!</speech>
        </speeches>
    </conversation>
</npcs>