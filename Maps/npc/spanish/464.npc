<npcs>
    <conversation id="2">
        <speeches id="1">
            <speech>Ah, ya veo. ¿Te gustaría que te hicieran pedazos? ¿O prefieres el papel de saco de boxeo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="4">
            <speech>No te decidiste con suficiente rapidez, así que recibiste un poco de la columna A y un poco de la columna B.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Muy bien! ¡Allá voy! ¡Te mostraré mi poder!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Guau! ¡Eres increíble! ¡Estoy asombrado y sorprendido!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Guau! ¡Eres increíble! ¡Estoy asombrado y sorprendido!</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Estás asombrado? ¿Sorprendido? ¡¿Por el poder de mis Pokémon?!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Lancémonos a la batalla! ¡Mis Pokémon de agua son imbatibles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás sobrepasado! Tal vez deberías quedarte en la piscina para niños.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Aunque la gente te llame As de la formación, no es que te den nada especial por ello.</speech>
        </speeches>
        <speeches id="2">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="3">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sólo soy bueno batallando. Ni siquiera tengo trabajo. Sólo soy otro desempleado.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Hola! ¡Concéntrate!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Mis poderes hipnóticos no funcionan contigo?! ¡Qué fortaleza mental debes poseer!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Mis poderes hipnóticos no funcionan contigo?! ¡Qué fortaleza mental debes poseer!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eeeeek!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Prepárate para empaparte! ¡Mis Pokémon de agua te van a empapar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que se ha secado... Has evaporado mis esperanzas de ganar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que se ha secado... Has evaporado mis esperanzas de ganar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás empapado! Será mejor que te seques y vuelvas a intentarlo.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¡Lancémonos a la batalla! ¡Mis Pokémon de agua son imbatibles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás sobrepasado! Tal vez deberías quedarte en la piscina para niños.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡Esta batalla te superará! ¡Mis Pokémon son campeones de las profundidades!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está hundido... en la derrota. Has ganado limpiamente.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está hundido... en la derrota. Has ganado limpiamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Estás en aguas poco profundas. Es hora de aprender a nadar.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>¡Estarás nadando con el Magikarp cuando acabe contigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="3">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eres comida para peces! ¡Mis Pokémon son los depredadores del mar!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>¡Hagamos olas! ¡Mis Pokémon están listos para surfear sobre ti!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, no.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, no.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eres sólo una onda en mi océano de victoria!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="2" name="Relicanth" shouldSleep="" speed="1" sprite="369" type="pokemon" x="1" y="42">
        <path>RIGHTx13,LEFTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="1" name="Relicanth" shouldSleep="" speed="1" sprite="369" type="pokemon" x="7" y="24">
        <path>DOWNx5,RIGHTx4,LEFTx4,UPx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="24" y="38">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Tentacool!</onCollisionSpeech>
        <speech>¡Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="39" y="43">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Wingull" speed="1" sprite="278" type="pokemon" x="14" y="46">
        <path>RIGHTx11,LEFTx11</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Wingull" speed="1" sprite="278" type="pokemon" x="3" y="33">
        <path>RIGHTx7,DOWNx8,LEFTx7,UPx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Tentacruel" randomRotation="true" sprite="403" x="52" y="41">
        <speech>¡¡¡¡¡Tentaaaaa!!!!!</speech>
    </npc>
    <movingNpc direction="DOWN" id="8" name="Wingull" speed="1" sprite="278" type="pokemon" x="42" y="0">
        <path>LEFTx15,RIGHTx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="9" name="Wingull" randomRotation="true" sprite="441" x="62" y="9"/>
    <npc direction="DOWN" hidden="false" id="10" name="Wingull" randomRotation="true" sprite="441" x="19" y="2"/>
    <npc direction="DOWN" hidden="false" id="11" name="Wingull" randomRotation="true" sprite="441" x="11" y="23"/>
    <movingNpc direction="DOWN" id="12" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="21" y="19">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4">Tentacool!</onCollisionSpeech>
        <speech>¡Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Tentacruel" shouldSleep="" speed="1" sprite="73" type="pokemon" x="60" y="27">
        <path>LEFTx7,UPx3,DOWNx3,RIGHTx7</path>
        <onCollisionSpeech gap="4">Tentacruel!</onCollisionSpeech>
        <speech>¡Tentacruel!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Wailmer" speed="1" sprite="320" type="pokemon" x="37" y="9">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Wailmer!</onCollisionSpeech>
        <speech>¡Wailmer!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="44" y="27">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="16" name="Bill" randomRotation="true" sprite="21" x="13" y="9">
        <speech>Estos Wingull son enormes.</speech>
        <speech>¿Qué comen?</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="17" name="Claire" randomRotation="false" sprite="22" x="52" y="33">
        <speech>¡Vaya! ¡Un Tentacruel brillante!</speech>
        <speech>Parece demasiado grande para ser capturado.</speech>
    </npc>
</npcs>