<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Verá... Profesor Cozmo... Fue secuestrado por unos tipos raros que se hacen llamar Equipo Algo u Otro...</speech>
            <speech>$PLAYER_NAME, por favor... ¡Tienes que ayudarme a salvarlo! No pueden estar planeando hacer nada bueno con la investigación del Profesor Cozmo.</speech>
            <speech>¡Tenemos que hacer algo! ¡Yo... voy a ir tras ellos ahora mismo! ¡Reunámonos en Meteor Falls! Cuento contigo, $Nombre_del_jugador.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>El profesor es demasiado crédulo.</speech>
            <speech>Si muestra el más mínimo interés por su investigación, irá encantado a cualquier parte sin hacer preguntas.</speech>
        </speeches>

        <speeches id="2">
            <speech>El profesor es demasiado crédulo.</speech>
            <speech>Si muestra el más mínimo interés por su investigación, irá encantado a cualquier parte sin hacer preguntas.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Hah...haha... Gracias a estos niños, de alguna manera he vuelto.</speech>
            <speech>Pero también tengo que darte las gracias. Realmente me salvaste del desastre.</speech>
            <speech>Espero que aceptes este TM como una pequeña forma de recompensa.</speech>
        </speeches>

        <speeches id="2">
            <speech>Esos ladrones que se llevaron mi Meteorito... ¿Qué harán después en el Monte Chimney?</speech>
            <speech>¡Necesito averiguarlo! Tengo que irme. Te veré más tarde $PLAYER_NAME</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Me alegro de que haya vuelto el profesor.</speech>
            <speech>Espero que este incidente le haya hecho entrar en razón.</speech>
        </speeches>
        <speeches id="2">
            <speech>Me alegro de que haya vuelto el profesor.</speech>
            <speech>Espero que este incidente le haya hecho entrar en razón.</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>¡Oh, $PLAYER_NAME! Es un placer volver a verte después de nuestro notable logro con Mega Sceptile.</speech>
            <speech>Sus acciones no sólo han ayudado a apaciguar una crisis, sino que también han revitalizado mi pasión por este campo.</speech>
            <speech>Observar su valentía e ingenio me ha inspirado para aventurarme más allá de mis actividades académicas habituales.</speech>
            <speech>De hecho, ha vuelto a encender una llama dentro de mí, un deseo de comprometerme directamente con los misterios del mundo... a través de la batalla.</speech>
            <speech>Hacía años que no ponía a prueba mis propias hipótesis de forma tan práctica.</speech>
            <speech>¿Qué nivel de desafío buscas, $PLAYER_NAME? Te aseguro que me esforzaré por igualarlo.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Qué concurso tan emocionante! Tu perspicacia estratégica es realmente encomiable, $PLAYER_NAME.</speech>
            <speech>Este duelo me ha proporcionado muchos datos y, lo que es más importante, un renovado sentido del propósito.</speech>
            <speech>Este encuentro no es más que un preludio del ilimitado potencial de nuestra exploración en colaboración.</speech>
            <speech>Ten por seguro que nuestra próxima cita será aún más difícil. Me aseguraré de que mis Pokémon y yo estemos preparados.</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que mis preparativos teóricos fueron insuficientes para la realidad de tus proezas.</speech>
            <speech>Debemos recalibrar nuestra estrategia.</speech>
            <speech>Por favor, permítanos $DURACIÓN para refinar nuestro enfoque. Estoy ansioso por tener la oportunidad de probar nuestras hipótesis una vez más.</speech>
            <speech>Su paciencia es muy apreciada, $PLAYER_NAME.</speech>
        </speeches>
        <speeches id="4">
            <speech>Su victoria de hoy subraya la vasta extensión de conocimientos aún por explorar.</speech>
            <speech>Tus habilidades son realmente notables, $PLAYER_NAME.</speech>
            <speech>Sin embargo, que esta no sea la conclusión de nuestra investigación.</speech>
            <speech>Estaré aquí, avanzando en mi investigación y formación, esperando con impaciencia nuestro próximo compromiso.</speech>
        </speeches>
        <speeches id="5">
            <speech>Antes de continuar, un momento de verificación si me lo permiten.</speech>
            <speech>¿Estás totalmente preparado para lo que te espera? Mis Pokémon y yo nos hemos preparado rigurosamente para este momento, ansiosos por enfrentarnos a un rival de tu calibre.</speech>
            <speech>Asegúrese de que su equipo está preparado para un reto importante.</speech>
            <speech>No todos los días podemos aplicar nuestras teorías contra un entrenador de su renombre.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Desde que apareciste, mi querido Cozmo ha estado un poco... feliz en la batalla, digamos.</speech>
            <speech>Ahora reta a todos los que tiene a la vista a batallas, ¡incluso a mí! ¿Te lo puedes creer?</speech>
            <speech>Yo, cuyo golpe crítico más efectivo implica una broma perfectamente sincronizada, no una Poké Ball.</speech>
            <speech>Solíamos discutir sobre su interminable desorden en el laboratorio o sobre quién se quedaba con el último trozo de tarta, no sobre batallas.</speech>
            <speech>Pero supongo que, en aras de la diversión, tengo algo para un campeón como tú. No una batalla, claro, sino un regalo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Así que has superado a Cozmo, ¿eh? Eso es todo un logro. Parece que lo has convertido en un verdadero luchador.</speech>
            <speech>Como muestra de mi diversión -y para despejar un poco de espacio por aquí-, toma esta rodaja de aleta caudal.</speech>
            <speech>Lleva demasiado tiempo bajo los pies, y parece que podrías sacarle partido.</speech>
            <speech>Considéralo un pequeño recordatorio de tu victoria. Y quién sabe, ¡puede que sea la clave de tu próxima aventura!</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Rechazando mi generosa oferta? ¡Oh, sí que tienes sentido del humor, $PLAYER_NAME!</speech>
            <speech>Bueno, la oferta sigue en pie si cambias de opinión. Este peculiar artículo no va a ninguna parte.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Brillante! Sabía que tenías madera de verdadero aventurero. Esta rebanada de aleta de cola será mucho más útil contigo que acumulando polvo aquí.</speech>
            <speech>Que sea un capítulo interesante de tu viaje. Y dile a Cozmo que me rete a un concurso de repostería la próxima vez; ¡me atrevo a decir que ganaré!</speech>
        </speeches>
        <speeches id="5">
            <speech>¿Tienes curiosidad por saber qué es la rebanada de aleta caudal? Se rumorea que forma parte de un Pokémon legendario, o eso me dice Cozmo entre sus desafíos de batalla.</speech>
            <speech>Personalmente, creo que es una roca de aspecto bastante singular.</speech>
            <speech>Pero para alguien de su calibre, ¿quién sabe qué misterios podría desvelar?</speech>
        </speeches>
    </conversation>
</npcs>