<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="Arnold" randomRotation="true" sprite="5" x="12" y="10">
        <speech>Creer no es una cuestión de elección, sino de convicción.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Sunkern" shouldSleep="" speed="1" sprite="191" type="pokemon" x="9" y="2">
        <path>DOWNx1,UPx1</path>
        <onCollisionSpeech gap="4">Sunsun^^</onCollisionSpeech>
        <speech>Sunkern está tomando el sol.</speech>
    </movingNpc>

    <conversation id="7">
        <speeches id="1">
            <speech>Hola a todos. Soy Tina y adoro la alegría que los Pokémon traen a nuestras vidas. Su presencia es tan reconfortante, ¿verdad?</speech>
            <speech>Decidir qué Pokémon voy a aprender a continuación es siempre un rompecabezas para mí. Cada uno es especial a su manera.</speech>
            <speech>¿Te importaría dedicarme un poco de tiempo? Me encantaría idear un delicioso desafío Pokémon para compartir.</speech>
            <speech>Por favor, vuelve en $DURATION. Estoy seguro de que entonces tendré preparada una tarea sentida y alegre para nosotros.</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="2">
            <speech>¡Hola! Pareces un alma bondadosa. Me llamo Tina y adoro a todos los Pokémon, especialmente a los acuáticos.</speech>
            <speech>Ahora mismo, estoy totalmente fascinado por Tentacool. Su gracia en el agua es simplemente hipnotizante, ¿no crees?</speech>
            <speech>Si no es mucha molestia, ¿podrías enseñarme un Tentacool de nivel 15? Te estaría muy agradecido.</speech>
            <speech>A cambio, estaré encantada de compartir contigo algo muy especial. Es una promesa de corazón.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, está perfectamente bien. Lo comprendo. Tentacool puede ser tímido, después de todo.</speech>
            <speech>Si encuentras un Tentacool de nivel 15 y te apetece compartirlo, ¡aquí estaré con los brazos abiertos!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Maravilloso! Estoy tan emocionada de conocer a un Tentacool a través de tus ojos. Va a ser un verdadero placer.</speech>
            <speech>Y no te preocupes, te he preparado un precioso agradecimiento. ¡Estoy deseando que lo recibas!</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>¿Te has topado ya con un Tentacool de nivel 15? He soñado despierto con su elegante natación.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Un Tentacool de nivel 15? ¡Ay, caramba! ¿Me dejas echar un vistazo? Su danza submarina es tan cautivadora.</speech>
            <speech>Ver uno de cerca será sin duda uno de los mejores momentos de mi día. Vuestros esfuerzos aportan mucha alegría y asombro a mi vida.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sigo buscando, por lo que veo. Tentacool tiene un don para esconderse en el vasto océano.</speech>
            <speech>Recuerde, si consigue encontrar uno y quiere compartir su belleza conmigo, mi gratitud no tendría límites.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Has encontrado uno! Esto es más que maravilloso. Estoy encantado de ser testigo de la gracia de un Tentacool gracias a ti.</speech>
            <speech>Permítanme que me tome un momento para decidir qué hermosa criatura podemos descubrir a continuación. Mientras tanto, gracias de corazón por tu amabilidad.</speech>
            <speech>Tu contribución a mi felicidad es inmensa. Estoy impaciente por ver qué otras maravillas exploraremos juntos.</speech>
        </speeches>
    </conversation>

    <conversation id="10">
        <speeches id="2">
            <speech>¡Hola de nuevo! No tengo palabras para agradecerte todos los Pokémon tan chulos que me has enseñado. ¿Listo para otra aventura?</speech>
            <speech>Esta vez, me fascina Whismur. Son tan monos con sus grandes orejas, ¿no crees?</speech>
            <speech>¿Podrías traerme un Whismur de nivel 15? He oído que tienen los sonidos más interesantes.</speech>
            <speech>Como siempre, tengo una recompensa súper chula esperándote. Te va a encantar, ¡lo prometo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¿No te apetece? No se preocupe, ¡todo el mundo necesita un descanso de vez en cuando!</speech>
            <speech>Si alguna vez te encuentras con un Whismur de nivel 15 y quieres presumir de él, avísame. Aquí estaré.</speech>
        </speeches>
        <speeches id="4">
            <speech>Impresionante, ¡sabía que lo conseguirías! Un Whismur de nivel 15 va a ser muy interesante.</speech>
            <speech>No puedo esperar a la exposición. Tu recompensa está lista y esperando. Es algo especial, como la última vez.</speech>
        </speeches>
    </conversation>

    <conversation id="11">
        <speeches id="1">
            <speech>¿Has tenido ya la oportunidad de hacerte amigo de un Whismur de nivel 15? Siento mucha curiosidad por sus sonidos únicos.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Tienes un Whismur de nivel 15? ¡Qué emocionante! ¿Puedo verlo más de cerca? Estoy deseando que me lo cuentes.</speech>
            <speech>Enseñarme un Whismur será sin duda un momento culminante. Tus descubrimientos siempre son motivo de alegría y asombro.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Todavía a la caza de Whismur? Son bastante susurradores. Tómate tu tiempo, entiendo el desafío.</speech>
            <speech>Pero recuerda que si encuentras una, me encantaría verla. Tus esfuerzos son siempre bienvenidos.</speech>
        </speeches>
        <speeches id="4">
            <speech>Lo ha conseguido. Ver un Whismur de cerca será una delicia. Gracias por compartir este momento conmigo.</speech>
            <speech>Permítanme reflexionar sobre lo que podría captar nuestro interés a continuación. Mientras tanto, aquí tienes una muestra de mi agradecimiento por tu dedicación.</speech>
            <speech>Tus aventuras añaden mucho a mis días. Te estoy muy agradecida por tu ayuda y estoy deseando que llegue nuestro próximo descubrimiento.</speech>
        </speeches>
    </conversation>

    <conversation id="12">
        <speeches id="2">
            <speech>Hola, ¡soy yo otra vez! Cada nuevo Pokémon que me presentas añade una chispa a mi viaje. Ahora, tengo una nueva fascinación.</speech>
            <speech>¿Habías visto antes un Lickitung? No cualquier Lickitung, ¡sino uno de nivel 15! ¡He leído que tienen unas lenguas increíbles!</speech>
            <speech>¿Podrías traerme un Lickitung de nivel 15 para que lo vea? Te prometo que la recompensa será algo que te gustará de verdad.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿No te apetece? No pasa nada. Entiendo que encontrar un Lickitung puede no ser del gusto de todos.</speech>
            <speech>Si alguna vez te encuentras con un Lickitung de nivel 15 y piensas en mí, ¡me encantaría verlo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Vaya, ¿estás a bordo? Es fantástico. Estoy deseando ver a un Lickitung de nivel 15 en acción.</speech>
            <speech>Tráelo y vamos a verlo juntos. ¿Su recompensa? Merecerá la pena.</speech>
        </speeches>
    </conversation>

    <conversation id="13">
        <speeches id="1">
            <speech>¿Has encontrado ya un Lickitung de nivel 15? ¡He estado esperando ansiosamente tu regreso!</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Un Lickitung de nivel 15? Fantástico. ¿Puedo verlo? ¡Sus habilidades únicas son tan fascinantes!</speech>
            <speech>Ver un Lickitung de primera mano va a ser una experiencia memorable. Estoy entusiasmado.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿No ha habido suerte con Lickitung? No pasa nada; son muy raros de encontrar.</speech>
            <speech>Si encuentras alguno, me encantaría verlo. Tus descubrimientos siempre me alegran el día.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Lo has vuelto a conseguir! Ser testigo de un Lickitung de nivel 15 es una auténtica delicia.</speech>
            <speech>Empezaré a reflexionar sobre el próximo Pokémon que nos fascinará.</speech>
            <speech>Mientras tanto, acepte esta recompensa por su fantástico esfuerzo.</speech>
            <speech>Vuestras contribuciones están convirtiendo mis sueños Pokémon en una vibrante realidad. Gracias a todos.</speech>
        </speeches>
        <speeches id="5">
            <speech>Estoy abrumado de gratitud por todos los Pokémon extraordinarios que me habéis enseñado. Ha sido un viaje increíble.</speech>
            <speech>Con tu ayuda, estoy más motivado que nunca para perseguir mi sueño de convertirme en maestro Pokémon.</speech>
            <speech>Gracias por la inspiración.</speech>
        </speeches>
    </conversation>
</npcs>