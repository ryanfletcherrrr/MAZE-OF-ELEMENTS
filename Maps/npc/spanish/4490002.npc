<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Alabo tu valentía al desafiarme. ¡Porque yo soy el que tiene la patada más fuerte!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. Los Pokémon lucharon. Mi fuerte patada no ayudó ni un poco.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Como un fragmento de un sueño olvidado, un misterioso Pokémon te llama...</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Mi Hada dice que eres un loco peligroso!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Mi Hada dice que eres un loco peligroso!</speech>
        </speeches>
        <speeches id="4">
            <speech>Ser derrotado por ti hace que este mundo despierto parezca aún menos creíble que mis sueños...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Mi hermano mayor, que nunca sale de su habitación, me dijo que viniera a ver este sitio por él.</speech>
        </speeches>
        <speeches id="2">
            <speech>Le haré saber a mi hermano mayor que este es un lugar que da miedo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Le haré saber a mi hermano mayor que este lugar da miedo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Le diré a mi hermano mayor que este es un lugar divertido.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Susurros de poder ancestral resuenan en la noche. Te atreves a escuchar su llamada?</speech>
            <speech>Bajo la atenta mirada de la luna, nuestro pacto se reúne. El desafío de los siglos espera vuestro valor.</speech>
        </speeches>

        <speeches id="2">
            <speech>Aunque triunféis, la oscuridad eterna teje su paciencia. Nuestra determinación permanece inquebrantable, imperturbable.</speech>
            <speech>Las sombras se separan, revelando un camino hacia nuestro enigmático líder. Una recompensa para los valientes, los fuertes, los victoriosos.</speech>
        </speeches>

        <speeches id="3">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
            <speech>Nuestros rituales, ligados a la danza celestial, no encuentran favor a esta hora. El momento adecuado aún se nos escapa.</speech>
            <speech>Regresa cuando la luna reine suprema sobre la noche, en $DURACIÓN. Sólo entonces se levantará el velo.</speech>
        </speeches>

        <speeches id="4">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
        </speeches>

        <speeches id="5">
            <speech>Los cuerpos celestes aún no se han alineado; nuestro poder permanece latente, a la espera del momento ordenado.</speech>
            <speech>Vuelve el viernes, cuando el resplandor de la luna atraviese el velo de la realidad y nuestro poder esté en su cenit.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¿Me estás buscando? Soy Xueying. ¿Tienes algo de mi padre?</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Conociste a mi padre? ¿Y envió algo para mí? ¿Qué cosa? ¿Me lo das, por favor?</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, ¿no lo vas a dar? Eso es... decepcionante. Pensé que podría ser algo de casa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Esta... ¡es mi muñeca! No puedo creer que la mantuviera a salvo para mí. Gracias por traerla hasta aquí.</speech>
            <speech>Toma esto como muestra de mi gratitud. Iré a verlo pronto. Le he echado mucho de menos.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Duskull" speed="1" sprite="355" type="pokemon" x="2" y="17">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>¡Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Shuppet" speed="1" sprite="353" type="pokemon" x="23" y="18">
        <path>LEFTx7,UPx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>¡Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Chimecho" speed="1" sprite="358" type="pokemon" x="25" y="4">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Chimecho!</onCollisionSpeech>
        <speech>¡Chimecho!</speech>
    </movingNpc>
</npcs>