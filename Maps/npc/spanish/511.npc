<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>¿Qué? ¡Oh, eres tú, $PLAYER_NAME! ¿Finalmente llegaste?</speech>
            <speech>Eres lento como siempre. Eres tan lento, que el Líder del Gimnasio ya se fue. Dijo que tenía que irse...
            </speech>
            <speech>Uh...</speech>
            <speech>Ah, sí, ¡a la mina de Oreburgh! Ya tengo mi Insignia, así que no es gran cosa para mí, pero...</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>¡¡Thud!! ¡Ups!</speech>
            <speech>¡$PLAYER_NAME! Tienes la Insignia del Gimnasio, ¿eh?</speech>
            <speech>Ciudad Eterna es el siguiente lugar con un Gimnasio que regala Insignias, ¿verdad?</speech>
            <speech>Así que, sí, fui a la Ruta 207, pero no podía correr sin mi Bicicleta.</speech>
            <speech>Hice que mi equipo luchara y se endureciera, así que no fue un desperdicio.</speech>
            <speech>Así que vuelvo a Ciudad Jubilife. Próxima parada, ¡la Insignia del Gimnasio Eterna!</speech>
            <speech>¡Diez segundos antes de irme!</speech>
            <speech>Nueve...</speech>
            <speech>¡Bah! ¡¿Quién tiene tiempo para contar?!</speech>
        </speeches>
        <speeches id="2">
            <speech/>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>¡Eh, tú! Eres entrenador, ¿verdad? Por favor, ayúdame.</speech>
            <speech>Hay un Onix atascado entre las rocas y está causando estragos en las minas.</speech>
            <speech>El Onix está loco y es peligroso, ¿puedes derrotarlo y salvar la cueva de la destrucción?
            </speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>¡Wow, realmente derrotaste a ese Onix!</speech>
            <speech>¡Estuviste increíble ahí dentro! ¡La forma en que tú y tu pokémon luchasteis contra ese Onix fue increíble!</speech>
            <speech>Toma, coge esta Piedra Lunar que encontré en las minas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Sigue fortaleciéndote, ¡seguiremos tu viaje!.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Alan" shouldSleep="" speed="1" sprite="10" type="npc" x="54" y="27">
        <path>UPx2,LEFTx2,DOWNx3,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>Más adelante hay una enorme montaña que se eleva por encima de todo.</speech>
        <speech>Divide Sinnoh en dos mitades distintas.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="2" name="Kelly" shouldSleep="" speed="1" sprite="27" type="npc" x="37" y="25">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4">I wasted my TMs!</onCollisionSpeech>
        <speech>Las TM son de un solo uso, pero las HM pueden utilizarse una y otra vez.</speech>
        <speech>Es complicado decidir qué Pokémon debe aprender qué movimientos.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Fred" shouldSleep="" speed="1" sprite="32" type="npc" x="39" y="21">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Stop looking at me!</onCollisionSpeech>
        <speech>Cuando corro con mis zapatillas de running, ¡soy el centro de todas las miradas!</speech>
        <speech>...Al menos eso es lo que parece. Siempre hay alguien mirándome.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Mary" shouldSleep="" speed="1" sprite="17" type="npc" x="34" y="17">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>El líder del gimnasio es joven, pero es el supervisor de seguridad de la mina.</speech>
        <speech>Es experto en más de un campo.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Xavier" sprite="101" x="19" y="26">
        <speech>Estos respiraderos intercambian el aire caliente de abajo con el aire fresco del exterior.</speech>
        <speech>¡Mirarlos me da ganas de empezar a gritarles! ¡Hola!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Jerry" shouldSleep="" speed="1" sprite="49" type="npc" x="25" y="14">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>¿Has visto los respiraderos? Liberan vapor desde abajo.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="7" name="Machoke" shouldSleep="" speed="1" sprite="67" type="pokemon" x="42" y="56">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">*The Machoke is carrying a boulder*</onCollisionSpeech>
        <speech>¡Machoke!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Machop" shouldSleep="" speed="1" sprite="66" type="pokemon" x="66" y="43">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">*Machop seems to be moving stones onto the conveyor belt*</onCollisionSpeech>
        <speech>¡Chop Chop!</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="9" name="Foreman Tony" sprite="35" x="58" y="58">
        <speech>Mi Machoke y Machamp están ayudando con la construcción mientras me tomo un descanso...</speech>
        <speech>En la región de Hoenn, los Machoke son conocidos por ser "Pokemon Movers".</speech>
        <speech>Ayudan a los nuevos residentes a instalarse en sus nuevos hogares.</speech>
        <speech>¡Los Pokémon no son sólo para las batallas!</speech>
    </npc>

    <conversation id="7">
        <speeches id="2">
            <speech>Hola! Soy un payaso de la campaña Tutorial PBO. ¡Vamos a lanzar mi pregunta!</speech>
            <speech>¿Puedes crear tu propia tripulación una vez que tienes 3 insignias?</speech>
        </speeches>
        <speeches id="3">
            <speech>Esa no es la respuesta correcta. Intentémoslo de nuevo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ding-ding!</speech>
            <speech>Tienes toda la razón.</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Aquí tienen! ¡Por favor acepta estas Pociones!</speech>
            <speech>Restaura los PS de un Pokemon en 20 puntos.</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>Dios mío, tienes fichas de combate clasificadas, ¿verdad? ¡¡Por favor, cámbiamelas!! Te daré grandes
                golosinas a cambio.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Pero, ¿por qué?</speech>
        </speeches>
    </conversation>

    <conversation id="10">
        <speeches id="1">
            <speech>¿Qué? ¡Oh, eres tú, $PLAYER_NAME! ¿Finalmente llegaste?</speech>
            <speech>Eres lento como siempre. Eres tan lento, que el Líder del Gimnasio ya se fue. Dijo que tenía que irse...
            </speech>
            <speech>Uh...</speech>
            <speech>Ah, sí, ¡a la mina de Oreburgh! Ya tengo mi Insignia, así que no es gran cosa para mí, pero...</speech>
        </speeches>
    </conversation>
</npcs>