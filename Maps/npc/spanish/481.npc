<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>Tus Pokémon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
    </conversation>
    <!-- Option Display Dialogue -->
    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>¡Bienvenido, $PLAYER_NAME, a la salvaje extensión de la Zona Safari!</speech>
            <speech>Muestra tus descubrimientos presentando hasta $MAX_SUBMISSIONS Pokémon Ultra Raros capturados por ti mismo en nuestras tierras.</speech>
            <speech>Menos es aceptable, pero cada uno debe ser un testimonio de su habilidad como formador.</speech>
            <speech>¡Lucha por el título de Campeón del Safari y la Corona Legendaria del Safari!</speech>
            <speech>Este reto concluye en $CONCLUDES_IN_DURATION. ¡Haz que cada momento cuente!</speech>
            <speech>¿Qué aventura le llama hoy a estas tierras indómitas?</speech>
        </speeches>
        <!-- Concluded Dialogue -->
        <speeches id="2">
            <speech>El desafío de la Zona Safari se calma ahora que el sol se oculta bajo el horizonte, marcando el final de la competición de este año.</speech>
            <speech>Se nombran campeones, se forjan historias en los anales de la Zona Safari. Nos despedimos por ahora, $PLAYER_NAME, hasta la llamada de la próxima temporada.</speech>
        </speeches>
        <!-- No Eligible Submission Dialogue -->
        <speeches id="3">
            <speech>Ah, $PLAYER_NAME, parece que a tu colección le falta la chispa de los Ultra Rare.</speech>
            <speech>La Zona Safari es inmensa y está llena de rincones ocultos donde acechan los Pokémon más raros.</speech>
            <speech>Búsquelas y vuelva cuando haya captado la esencia de la rareza.</speech>
        </speeches>
        <!-- Max Submissions Dialogue -->
        <speeches id="4">
            <speech>¡Impresionante, $PLAYER_NAME! Has alcanzado la cima de los envíos con tu colección actual.</speech>
            <speech>Recuerda que puedes enviar menos de $MAX_SUBMISSIONS si crees que los Pokémon que has elegido reflejan mejor tus habilidades.</speech>
            <speech>Si desea ajustar sus entradas, tiene la opción de reajustarlas.</speech>
        </speeches>
        <!-- Invalid Submission Dialogue -->
        <speeches id="5">
            <speech>¡Espera, $PLAYER_NAME! Tu envío parece desviarse del camino de los Ultra Raros.</speech>
            <speech>Asegúrate de que cada Pokémon que presentes sea una joya del Safari, capturando la verdadera esencia de lo que significa ser raro en estas tierras salvajes.</speech>
        </speeches>
        <!-- Successful Submission Dialogue -->
        <speeches id="6">
            <speech>¡Bien hecho, $PLAYER_NAME! Tus ofrendas resuenan con el espíritu de la Zona Safari.</speech>
            <speech>Se encuentra entre la élite de aspirantes al título de Campeón de Safari.</speech>
            <speech>¡Que tu nombre suba bien alto en la tabla de clasificación de las leyendas!</speech>
        </speeches>
        <!-- Successful Reset Dialogue -->
        <speeches id="7">
            <speech>Tu colección ha sido dispersada a los vientos, $PLAYER_NAME, una nueva pizarra te ha sido concedida.</speech>
            <speech>El Safari aguarda su renovado empeño. Embárcate de nuevo con los ojos bien abiertos a las maravillas que encierra.</speech>
        </speeches>
        <speeches id="8">
            <speech>Estás listo para reiniciar tu viaje, $PLAYER_NAME.</speech>
            <speech>Esta elección borrará su libro de descubrimientos actual, permitiéndole buscar nuevas rarezas dentro de nuestros límites.</speech>
            <speech>Un paso así es irreversible. Proceda sólo si está decidido a crear una nueva colección que capte mejor la esencia del Safari.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Bienvenido a nuestro exclusivo intercambio de disfraces de Ranger. ¿Quieres comprar algo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Vale, ¡hasta luego!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Wynaut" shouldSleep="" speed="1" sprite="360" type="pokemon" x="12" y="32">
        <path>LEFTx1,UPx1,RIGHTx1,DOWNx1</path>
        <onCollisionSpeech gap="4">Wynaut?</onCollisionSpeech>
        <speech>¿Wynaut?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Kecleon" shouldSleep="" speed="1" sprite="352" type="pokemon" x="42" y="17">
        <path>UPx2,LEFTx2,RIGHTx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Kecleon!</onCollisionSpeech>
        <speech>¡Kecleon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Tauros" speed="1" sprite="128" type="pokemon" x="41" y="26">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4">Tauros!</onCollisionSpeech>
        <speech>¡Tauros!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Toedscool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="13" y="7">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Girafarig" shouldSleep="" speed="1" sprite="203" type="pokemon" x="18" y="19">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Girafarig!</onCollisionSpeech>
        <speech>¡Girafarig!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="30" y="32">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Zigzagoon!</onCollisionSpeech>
        <speech>¡Zigzagoon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Pidove" speed="1" sprite="519" type="pokemon" x="46" y="36">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Zigzagoon" shouldSleep="" speed="1" sprite="263" type="pokemon" x="31" y="13">
        <path>DOWNx2,LEFTx2,RIGHTx2,UPx2</path>
        <onCollisionSpeech gap="4">Zigzagoon!</onCollisionSpeech>
        <speech>¡Zigzagoon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Kecleon" shouldSleep="" speed="1" sprite="352" type="pokemon" x="17" y="27">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Kecleon!</onCollisionSpeech>
        <speech>¡Kecleon!</speech>
    </movingNpc>
</npcs>