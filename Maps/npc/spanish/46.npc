<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Eh chico, ¿qué crees que haces entrando aquí sin protección para los ojos?
            </speech>
            <speech>La tormenta de arena aquí es desagradable, e incluso los viajeros experimentados como yo no podemos estar aquí sin
                cubrirnos los ojos.
            </speech>
            <speech>Será mejor que te hagas con unas 'Go Goggles' antes de intentar cruzar el desierto. Apuesto a que uno de estos Ruin Maniacs
                tendría un par extra para ti. Tal vez quieras preguntarles al respecto.
            </speech>
            <speech>Créeme, ¿atravesar el desierto sin cuidado ocular? ¡MALA, MALA IDEA!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡¡Mawaaaandi!! Mandiiiii..</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Mawaaaandi!</speech>
        </speeches>
        <speeches id="3">
            <speech>*Mandibuzz parece hacerte un gesto para que te vayas por ahora, pero vuelvas más tarde*.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Mandi!</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="11">
        <speeches id="1">
            <speech>¿No eres tú quien se ha entrometido en nuestros planes?</speech>
            <speech>¿Qué es lo que quieres? ¿Qué? ¿Qué Flashlight Stash?</speech>
            <speech>Lucharé contra ti y te cerraré para siempre.</speech>
        </speeches>
        <speeches id="2">
            <speech>Jajaja, no te voy a decir dónde escondí el alijo.</speech>
            <speech>¿De verdad esperabas que regalara el alijo tan fácilmente?</speech>
            <speech>Sabía que alguien iba a venir a por mí, así que lo dejé en casa de uno de mis amigos en la autopista Route 6 sin que lo supieran.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eres una vergüenza. Deja de seguirme y de molestarme.</speech>
        </speeches>
        <speeches id="4">
            <speech>Eres una vergüenza. Ahora pudrete en el PokeCentro.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Mi mediana edad me ha dado tanta seriedad como las montañas por las que camino.</speech>
        </speeches>
        <speeches id="2">
            <speech>Al menos no puedo perder en lo que respecta al IMC.</speech>
        </speeches>
        <speeches id="3">
            <speech>Al menos no puedo perder en lo que respecta al IMC.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Jajaja! Tú también ganarás si aumentas un poco tu consumo de calorías.</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>Heredé este cuerpo de huesos grandes de mis padres... Soy como una cordillera viviente...</speech>
        </speeches>
        <speeches id="2">
            <speech>No es suficiente... Nunca es suficiente. Mi colesterol malo no es lo suficientemente alto...</speech>
        </speeches>
        <speeches id="3">
            <speech>No es suficiente... Nunca es suficiente. Mi colesterol malo no es lo suficientemente alto...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja, ja! Ahora puedo consumir más calorías...</speech>
        </speeches>
    </conversation>
    <conversation id="14">
        <speeches id="1">
            <speech>¡Hora de un haiku de batalla! Este es realmente bueno. Mi oponente es un niño. Ganaré seguro.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Hora de un haiku de batalla! No puedo creerlo. Todavía puedo continuar. Todavía puedo luchar.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Hora de un haiku de batalla! No puedo creerlo. Todavía puedo continuar. Todavía puedo luchar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Hora de un haiku de batalla! Sabía que ganaría. Sí, mis Pokémon y yo somos así de fuertes.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Hiker Ivan" randomRotation="true" sprite="10" x="33" y="13">
        <speech>Soy excursionista pero tengo la espalda muy débil.</speech>
        <speech>¿Ves esa Pokeball de ahí? No puedo cogerla debido a mi espalda.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Sailor Raul" shouldSleep="" speed="1" sprite="11" type="npc" x="32" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">I need water!</onCollisionSpeech>
        <speech>Buscaba el mar, pero acabé en el desierto.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Fearow" shouldSleep="" speed="1" sprite="22" type="pokemon" x="35" y="40">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Fea!! FEAAA!!</onCollisionSpeech>
        <speech>**El miedo parece estar buscando comida.**</speech>
    </movingNpc>
</npcs>