<npcs>
    <movingNpc direction="LEFT" id="1" name="Clefairy" speed="1" sprite="35" type="pokemon" x="8" y="7">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Cleffaiirryy!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Genie" randomRotation="true" sprite="122" x="15" y="9">
        <speech>¡Diez mil años te darán un retortijón en el cuello!</speech>
    </npc>

    <conversation id="1">
        <speeches id="1">
            <speech>¡Guau! ¡Eres tú otra vez!</speech>
            <speech>¡No puedo creer que nos hayamos encontrado aquí en Mt. Moon!</speech>
            <speech>Pareces más fuerte que antes. Yo también he estado entrenando duro: ¡echa un vistazo a mi nuevo equipo!</speech>
            <speech>Mi Pidgey evolucionó a Pidgeotto, ¡y atrapé a este impresionante Charmander!</speech>
            <speech>¿Listo para la segunda ronda? Veamos cuánto hemos crecido los dos.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Increíble! ¡Te has vuelto mucho más fuerte desde nuestra última batalla!</speech>
            <speech>¡Eso ha sido increíble! Tus Pokémon y tú tenéis un vínculo increíble.</speech>
            <speech>Hola, esta vez tengo algo muy especial para ti: ¡uno de los Pokémon {COLOR=ORO}de inicio!</speech>
            <speech>El profesor Oak me dio uno extra para ayudar a otros entrenadores en su viaje.</speech>
            <speech>Creo que este pequeñín será perfecto para su equipo.</speech>
            <speech>Sigue fortaleciéndote, ¡estoy impaciente por ver hasta dónde llegarás!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hola, compañero entrenador.</speech>
            <speech>¿Sigue explorando el Monte Moon? ¡Este lugar está lleno de sorpresas!</speech>
            <speech>¿Qué tal te va con ese Pokémon inicial?</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sí! ¡Pikachu y yo somos más fuertes cada día!</speech>
            <speech>¡Pero vaya, realmente nos llevaste al límite! Ha sido una batalla increíble.</speech>
            <speech>Toma, coge este {COLOR=ORO}Pokémon inicial{ENDCOLOR} de todos modos, ¡te lo has ganado!</speech>
            <speech>El profesor Oak siempre decía que los grandes entrenadores merecen grandes Pokémon.</speech>
            <speech>¡Sigamos luchando y haciéndonos más fuertes juntos!</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Oh, no! Parece que tu fiesta está llena y tus cajas de PC también.</speech>
            <speech>Tendrás que hacer algo de espacio antes de que pueda darte este Pokémon inicial.</speech>
            <speech>Vuelve cuando tengas sitio: ¡este pequeñín está deseando conocerte!</speech>
        </speeches>
    </conversation>
</npcs>