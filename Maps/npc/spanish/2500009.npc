<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=AMARILLO}Por favor, seleccione una planta.{ENDCOLOR}</speech>
            <speech>Los botones esperan a que los introduzcas, listos para llevarte donde necesites.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=VERDE}La consola del ascensor se cierra sola con un suave clic.{ENDCOLOR}</speech>
            <speech>Tendrás que activarlo de nuevo si deseas utilizarlo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>¿Crees que puedes entrar aquí y jugar al héroe? ¡Ahora somos los dueños de este lugar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tuviste suerte. Espera a que el jefe se entere de esto.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tuviste suerte. Espera a que el jefe se entere de esto.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! No eres tan duro como pensabas. Deberías haberte vuelto cuando tuviste la oportunidad.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Usted no entiende .. Yo no elegí para ayudarlos. Era esto o algo peor.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tal vez esto sea una señal... tal vez pueda contraatacar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tal vez esto sea una señal... tal vez pueda contraatacar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Lo siento, pero no puedo permitirme perder. No cuando mi vida está en juego.</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>¡Silph Co. tiene tantas cosas buenas! Puede que me embale unas cuantas PokeBalls raras ya que estoy.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Uf! Se suponía que esa era mi victoria. Ahora no voy a conseguir un bono ...</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Uf! Se suponía que esa era mi victoria. Ahora no voy a conseguir un bono ...</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo ves? Me merezco los mejores Pokémon raros, objetos raros y victorias raras.</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>Otro sujeto de prueba entra en mi laboratorio... ¡Perfecto!</speech>
            <speech>He estado experimentando con {COLOR=PURPLE}Tera Energy{ENDCOLOR} y {COLOR=GREEN}compuestos tóxicos{ENDCOLOR} - ¡los resultados son {COLOR=ROJO}letales{ENDCOLOR}!</speech>
            <speech>¡Mis {COLOR=VERDE}especialistas en veneno{ENDCOLOR} drenarán lentamente la vida de tu equipo!</speech>
            <speech>¡Veamos cuánto duras contra mi guerra química!</speech>
        </speeches>
        <speeches id="2">
            <speech>Mis fórmulas tóxicas no eran lo suficientemente potentes...</speech>
            <speech>Las modificaciones {COLOR=PURPLE}Tera{ENDCOLOR} de mi {COLOR=GREEN}Weezing{ENDCOLOR} ¡necesitan más refinamiento!</speech>
            <speech>Puede que hayas sobrevivido a mi ataque químico, pero otros no tendrán tanta suerte.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mi equipo de laboratorio está arruinado... ¡Años de investigación sobre venenos por el desagüe!</speech>
            <speech>¡Pero los experimentos con energía tera continuarán en otro lugar de este edificio!</speech>
            <speech>{COLOR=RED}¡La división química del equipo Rocket no olvidará este revés!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Excelente! ¡Mi estrategia tóxica funcionó a la perfección!</speech>
            <speech>{COLOR=PURPÚLEO}Exprimir{ENDCOLOR} y {COLOR=CIAN}Toxapex{ENDCOLOR} ¡son una combinación {COLOR=ROJO}mortal{ENDCOLOR}!</speech>
            <speech>¡Ahora me servirás de datos para mi próximo experimento químico!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Tourist Kent" shouldSleep="" speed="1" sprite="4" type="npc" x="25" y="6">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Pensé que esto eran los Grandes Almacenes Celadon... ¡¿Cuántos pisos tiene este lugar?!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Researcher Noelle" shouldSleep="" speed="1" sprite="7" type="npc" x="35" y="16">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Intentamos poner una Piedra Lunar en la cafetera.</speech>
        <speech>Los resultados fueron... extrañamente agresivos.</speech>
    </movingNpc>
</npcs>