<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hey $PLAYER_NAME, ¿vas a aceptar el reto del gimnasio?</speech>
            <speech>Vaya, cada vez eres más duro, ¿verdad?</speech>
            <speech>¿Yo? Bueno, fui de compras a los grandes almacenes, y...</speech>
            <speech>Quiero decir, bueno, por supuesto que he estado trabajando en mi Pokédex, pero...</speech>
        </speeches>
        <speeches id="2">
            <speech>...</speech>
            <speech>Así que, $NOMBRE_PLAYER. Buena suerte en tu reto del gimnasio.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>El anillo es mi mar agitado.</speech>
            <speech>Las imponentes olas me daban forma.</speech>
            <speech>¡Choca! ¡Crash! Crasher ¡Despierta!</speech>
            <speech>¡Choca! ¡Crash! Crasher ¡Despierta!</speech>
            <speech>¡Soy el maremoto de poder que te arrastrará!</speech>
            <speech>¡Apaga el fuego, Crasher Wake!</speech>
            <speech>¡Huye de la electricidad, Crasher Wake!</speech>
            <speech>¡Ah, ah, aaaah!</speech>
            <speech>El anillo es mi mar.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Hola, amigo y jovencita! Estás desafiando al Líder del Gimnasio, ¿verdad?</speech>
            <speech>Déjame decirte ahora, ella es joven, pero es un genio nato. Traté de entrenar con ella, y yo estaba
                ¡sorprendido por lo dura que era!
            </speech>
            <speech>¡Vaya! ¡Será mejor que te diga quién soy!</speech>
            <speech>Soy el líder de gimnasio triple en Pokémon, lucha libre y canto.</speech>
            <speech>¡Soy Crasher Wake del Gimnasio Pastoria! ¡Nos encontraremos de nuevo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Hola, $PLAYER_NAME! Por favor, ¿puedes ayudarme?</speech>
            <speech>Unos matones del Equipo Galáctico me quitaron la Pokédex.</speech>
            <speech>Necesito tu ayuda para recuperarlo. Estaré esperando frente a los almacenes.</speech>
            <speech>¡Venga, por favor!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Hola, $PLAYER_NAME! Por favor, ¿puedes ayudarme?</speech>
            <speech>¿Te acuerdas del Equipo Galáctico? ¿Esa gente horrible? Trataron de robar la investigación del Prof. Rowan
                en Jubilife, ¿recuerdas?
            </speech>
            <speech>Me topé con ellos y me quitaron mi Pokédex.</speech>
            <speech>Por favor, necesito tu ayuda. Lucha y derrota a estos tipos por mí.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Qué es lo que pasa? ¿Por qué el Equipo Galáctico está en las calles como si fueran los dueños del lugar? $PLAYER_NAME,
                gracias, sinceramente.
            </speech>
            <speech>Estaría perdido sin mi Pokédex. Es indispensable para ayudar al profesor Rowan con sus
                estudios.
            </speech>
            <speech>Bueno, $PLAYER_NAME, ¿qué vas a hacer ahora? Estoy pensando en ir a la Mansión Pokémon en la
                Ruta 212.
            </speech>
            <speech>He oído que allí muestran Pokémon raros a los visitantes.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh ... Es ese hombre divertido de Jubilife ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Lo siento mucho. El Equipo Galáctico se llevó mi Pokédex, así que estaba muy irritado...</speech>
            <speech>Acabo de soltarlo... ...debería irme ya. Ten cuidado con el Equipo Galáctico.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Hey chico, vete. Estamos ocupados planeando nuestro próximo gran atraco.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eso apesta. ¡Nuestros Pokémon son tontos!</speech>
            <speech>Deberíamos conseguir nuevos de la central.</speech>
            <speech>¡Uf! De todas formas, ¿a quién le importa una Pokédex?</speech>
            <speech>El Equipo Galáctico va a acabar con todos los Pokémon del mundo...</speech>
            <speech>No, en el universo...</speech>
            <speech>Aquí tienes tu Pokédex.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Ese aparato que tienes, ¿cómo se llama?</speech>
            <speech>¿Una Pokédex? Hmm..</speech>
        </speeches>
        <speeches id="2">
            <speech>Esas cosas que teníamos en el almacén ya han sido trasladadas a Ciudad Pastoria de todos modos...</speech>
            <speech>Así que diremos "¡Tendrás lo tuyo!" y correremos como gruñones que somos.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Chico! Alto ahí.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>No temas, he venido corriendo. He oído hablar de niños peleándose con el Equipo Galáctico.</speech>
            <speech>Resulta, por supuesto, que eres tú.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Me insultas a la cara? Qué grosero eres.</speech>
        </speeches>
        <speeches id="3">
            <speech>No tiene importancia. Más interesante es el comportamiento criminal del Equipo Galáctico.</speech>
            <speech>¿Intentan robar las pertenencias de un niño? La escala de su criminalidad, parece bastante minúscula.</speech>
            <speech>La trivialidad de su acción los hace más siniestros, tal vez.</speech>
            <speech>Su almacén necesita una investigación. ¡Ven conmigo y echaremos un vistazo!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡Allí! Mira esas antenas.</speech>
            <speech>No sé lo que hacen, pero son enormes antenas.</speech>
            <speech>¡Eh! ¡Eres tú! ¡Apuesto a que no te acuerdas de mí, pero yo sí me acuerdo de ti!</speech>
            <speech>Por tu culpa, me quitaron mi CLEFAIRY...</speech>
            <speech>Mi compañero lo dejó y volvió a su país...</speech>
            <speech>¡Waah! ¡No sé nada! ¡No sé nada sobre ninguna Llave de Almacenamiento!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>¡Ah-hah! ¡Déjame esto a mí!</speech>
            <speech>La Llave de Almacenamiento para entrar al escondite del Equipo Galáctico, la tengo aquí.</speech>
            <speech>Un asalto frontal, no es posible.</speech>
            <speech>Pero podemos entrar en su escondite. ¿Y bien? ¿Entrarás al escondite? Tienes tus razones, ¿no?</speech>
            <speech>Muy bien. Dentro del almacén del Equipo Galáctico. Nos reuniremos allí. Prepárate lo mejor que puedas.</speech>
            <speech>Me reuniré con usted en breve.</speech>
        </speeches>
    </conversation>
    <npc direction="RIGHT" hidden="false" id="1" name="Lass Sally" sprite="12" x="36" y="57">
        <speech>Quería ir al Rincón del Juego de Veilstone, pero parece que está cerrado.</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="2" name="Youngster Rylease" sprite="26" x="43" y="50">
        <speech>¿Existe una fecha exacta de llegada del Veilstone Gamer Corner?</speech>
        <speech>Dicen que llegará "pronto".</speech>
        <speech>Me dijeron que podía ser beta-tester del casino. ¿Cuándo es la beta? ¡¿Cuándo?!</speech>
        <speech>No creo que llegue en absoluto.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Spencer" sprite="26" x="16" y="49">
        <speech>Solía haber un tipo aquí que cantaba macho, macho man.</speech>
        <speech>¡La oficial Jenny lo sacó por perturbar la paz!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Youngster Tony" sprite="26" x="53" y="36">
        <speech>Fui a luchar contra la cuarta líder de gimnasio, Maylene.</speech>
        <speech>Mi Torterra no fue capaz de vencer a su equipo, necesito más pokemon en mi equipo.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Jackie" sprite="34" x="42" y="36">
        <speech>Tu foco necesita más foco</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="6" name="Beauty Annie" sprite="6" x="38" y="29">
        <speech>La gente no para de preguntarme "¿Annie estás bien? ¿Estás bien Annie?"</speech>
        <speech>Estoy bien. Yo estoy bien. ¡Ja! Espero que todos estos fans míos vengan a apoyarme cuando desafíe a Maylene, la líder del gimnasio.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="7" name="Lass Charlotte" sprite="12" x="32" y="31">
        <speech>¡¡¡Estoy deseando ir de compras con mi Cleffa!!!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="8" name="Cleffa" shouldSleep="" speed="1" sprite="173" type="pokemon" x="31" y="31">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Cleffa! Cleffa!</onCollisionSpeech>
        <speech>¡Cleffa! ¡Cleffa!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Machamp" shouldSleep="" speed="1" sprite="68" type="pokemon" x="41" y="36">
        <path>DOWNx1,LEFTx1,UPx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Machamp!</onCollisionSpeech>
        <speech>¡Machamp!</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="10" name="Elder Kerry" shouldSleep="" speed="1" sprite="39" type="npc" x="36" y="39">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Carry on wayward Trainer.</onCollisionSpeech>
        <speech>Continúa, entrenador rebelde. Habrá paz cuando termines.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="11" name="Scientist Kenny" sprite="8" x="66" y="53">
        <speech>¿Por qué llevan gafas los desarrolladores Java?</speech>
        <speech>Porque no saben c#.</speech>
        <speech>Estoy aquí para averiguar si hay fósiles en estas rocas...</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="12" name="Beauty Belle" sprite="6" x="31" y="43">
        <speech>Me gustaría ir al Gran Pantano de Ciudad Pastoria, pero no quiero ensuciarme la ropa.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="13" name="Skater Chad" sprite="80" x="25" y="37">
        <speech>Parece que hay un objeto en ese otro saliente, si tan sólo pudiéramos patinar sobre esos salientes.
        </speech>
    </npc>
    <movingNpc direction="DOWN" id="14" name="Toxicroak" shouldSleep="" speed="1" sprite="454" type="pokemon" x="18" y="52">
        <path>LEFTx3,RIGHTx7,LEFTx4</path>
        <onCollisionSpeech gap="4">Croak! Croak!</onCollisionSpeech>
        <speech>¡Toxicroak!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="15" name="Nerd Timothy" sprite="8" x="32" y="10">
        <speech>Me escondo de ellos los gruñidos del Equipo Galáctico</speech>
        <speech>¡¿Qué?! ¿Se han ido?</speech>
    </npc>
</npcs>