<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Fantina está de viaje para participar en un concurso. Por favor, vuelva más tarde Entrenador.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Abra... Kadabra..... Alakazam.......</speech>
            <speech>¿Quiere ver magia y viajar a otra tierra?</speech>
        </speeches>
        <speeches id="2">
            <speech>Es una pena. Por favor, vuelva cuando desee viajar a otro lugar.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Dios mío, tienes fichas de Crew Wars, ¿verdad? ¡Por favor, cámbiamelas! Te daré grandes
                golosinas a cambio.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Pero, ¿por qué?</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh hola jovencito, ¿no es preciosa esta ciudad?</speech>
            <speech>Vaya, eres como yo. Aquí tienes 5 Pokéballs que te serán muy útiles.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Los conociste? Sí, todos son buenos pero están demasiado metidos en batallas.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Angie" shouldSleep="" speed="1" sprite="14" type="npc" x="7" y="24">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Hey.</onCollisionSpeech>
        <speech>Me gustaría vivir en Hearthome cuando me case.</speech>
        <speech>Pero mi novio quiere vivir en Veilstone por su Rincón del Juego...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Roger" sprite="10" x="6" y="20">
        <speech>Hoy he dado un paseo por Amity Square con mi Machop.</speech>
        <speech>Nos encontramos con una pluma Pokémon mientras caminábamos.</speech>
        <speech>¿Crees que hará que mi Machop parezca más mono?</speech>
    </npc>
    <movingNpc direction="LEFT" id="3" name="Machop" shouldSleep="" speed="1" sprite="66" type="pokemon" x="6" y="21">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Maaachop!</onCollisionSpeech>
        <speech>¡Maaaachop! Parece que le gustas a Machop.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Miguel" speed="1" sprite="37" type="npc" x="22" y="28">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Do you have a lighter?</onCollisionSpeech>
        <speech>Me llaman Sr. Bienes.</speech>
        <speech>El Sr. Goods no necesita un Clan.</speech>
        <speech>No seas como el Sr. Goods.</speech>
        <speech>Explorar el Mundo Pokémon sin amigos es un camino que no debes seguir.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Everly" sprite="18" x="27" y="27">
        <speech>No puedo decidir a qué Crew debería unirme.</speech>
        <speech>Hay tantos tipos.</speech>
    </npc>
    <movingNpc direction="LEFT" id="6" name="Elcio" shouldSleep="" speed="1" sprite="4" type="npc" x="39" y="29">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">What do you want?</onCollisionSpeech>
        <speech>Esta ciudad está llena de damas. No me puedo resistir.</speech>
        <speech>Buscaré una Crew con muchas chicas guapas, seguro.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="Addison" sprite="19" x="45" y="21">
        <speech>En la Torre Perdida, la gente se desahoga de penas insoportables...</speech>
        <speech>Entenderá lo que quiero decir si visita la Torre Perdida en la Ruta 209.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="8" name="Jorge" sprite="34" x="34" y="19">
        <speech>¿Sabías que puedes reunir a tus amigos en una Crew?</speech>
        <speech>Pues sí. ¡Ha llegado el momento de unirme a una Crew!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="9" name="Willow" sprite="41" x="58" y="25">
        <speech>¿Vas a desafiar al líder del gimnasio?</speech>
        <speech>$PLAYER_NAME , ¡buena suerte!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="10" name="Jaxson" shouldSleep="" speed="1" sprite="101" type="npc" x="50" y="36">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Excuse me, sir!</onCollisionSpeech>
        <speech>Me encantan los Pokémon de tipo Fantasma.</speech>
        <speech>...pero Gengar es realmente mi favorito.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Cooper" shouldSleep="" speed="1" sprite="16" type="npc" x="40" y="39">
        <path>DOWNx3, UPx3</path>
        <onCollisionSpeech gap="4">Ah!!!</onCollisionSpeech>
        <speech>Vengo de visita desde la región de Hoenn.</speech>
        <speech>Esperaba encontrar la sede de la tripulación, pero como era nuevo, me perdí.</speech>
        <speech>Afortunadamente, los lugareños me guiaron muy amablemente hasta mi destino.</speech>
        <speech>Me impresionó su amabilidad y generosidad con un completo desconocido.</speech>
        <speech>Ahora, le sugiero que visite la sede.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="12" name="Samantha" shouldSleep="" speed="1" sprite="6" type="npc" x="28" y="37">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4">Aw!</onCollisionSpeech>
        <speech>¿Vas a desafiar a la Liga Pokémon?</speech>
        <speech>¡Sweeet!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="13" name="Gastly" shouldSleep="" speed="1" sprite="92" type="pokemon" x="21" y="41">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Boooo!</onCollisionSpeech>
        <speech>*Booooo*</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="14" name="Paul" sprite="10" x="57" y="42">
        <speech>Los Pokémon fantasma que verás en esta ciudad son amistosos.</speech>
    </npc>
    <movingNpc direction="UP" id="15" name="Gianna" shouldSleep="" speed="1" sprite="12" type="npc" x="14" y="37">
        <path>UPx2, DOWNx2</path>
        <onCollisionSpeech gap="4">Whoa!</onCollisionSpeech>
        <speech>He usado una Piedra de Fuego con mi Eevee y se ha convertido en un Flareon.</speech>
    </movingNpc>

    <conversation id="6">
        <speeches id="2">
            <speech>Hola! Soy un payaso de la campaña Tutorial PBO. ¡Vamos a lanzar mi pregunta!</speech>
            <speech>¿Recomendarías PBO a un amigo?</speech>
        </speeches>

        <speeches id="3">
            <speech>Esa no es la respuesta correcta. Intentémoslo de nuevo.</speech>
        </speeches>

        <speeches id="4">
            <speech>¡Ding-ding!</speech>
            <speech>Tienes toda la razón.</speech>
            <speech>¡PBO es el mejor juego de la historia!</speech>
            <speech>Le deseamos una gran aventura</speech>
        </speeches>

        <speeches id="5">
            <speech>¡Aquí tiene! ¡Por favor, acepta esta Baya de Sitrus!</speech>
            <speech>Si lo sujeta un Pokémon, cura un poco los PS del usuario.</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>Hmm, no veo que tengas ninguna Blaze Coin. Vuelve con monedas Blaze y te daré fichas de la guerra de tripulaciones.</speech>
        </speeches>
        <speeches id="2">
            <speech>Dios mío, tienes Blaze Coins, ¿no? Te daré 5 Crew Wars Tokens por 1 Blaze Coin.</speech>
            <speech>¿Quieres comerciar conmigo? ¿5 Crew Wars Tokens por 1 Blaze Coin?</speech>
        </speeches>
        <speeches id="3">
            <speech>Pero, ¿por qué? ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Gracias, gracias. Gracias a usted. Gracias. ¡¡¡Gracias!!!</speech>
        </speeches>
    </conversation>
</npcs>