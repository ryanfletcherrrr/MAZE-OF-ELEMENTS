<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Bueno, bueno, mira quién está aquí. $PLAYER_NAME, ¿verdad? Echemos un vistazo a tus Pokémon.</speech>
            <speech>... Hmm ... Ya veo ... Este Pokémon parece ser bastante feliz ..</speech>
            <speech>¡Hm! Parece que confiarte a tu compañero no fue un error.</speech>
            <speech>Cuando os vi por primera vez a punto de adentraros en la hierba alta sin Pokémon, me quedé de piedra.</speech>
            <speech>Estaba asombrado por estos niños temerarios. Pero ahora, me has asombrado de una manera totalmente diferente.</speech>
            <speech>Ya está creciendo un vínculo entre tú y ese Pokémon. Me siento privilegiado por haberte conocido.</speech>
            <speech>Seguro que tu pareja siente lo mismo por ti.</speech>
            <speech>Por eso te pediré que cuides a ese Pokémon tuyo.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ejem!</speech>
            <speech>Pasemos al tema principal.</speech>
            <speech>Hay algo que quiero que hagas por mí.</speech>
            <speech>Permítanme primero presentarme adecuadamente.</speech>
            <speech>Mi nombre, como sabes, es Rowan. Estudio Pokémon.</speech>
            <speech>En primer lugar, quiero saber exactamente qué tipos de Pokémon viven en la región de Sinnoh.</speech>
            <speech>Para ello, es necesario recopilar datos mediante la Pokédex.</speech>
            <speech>Esto es lo que deseo pedirte. Quiero confiarte esta Pokédex.</speech>
            <speech>¿Lo usarás para registrar los datos de todos los Pokémon de Sinnoh para mí?</speech>
            <speech>¡Hm! Buena respuesta.</speech>
            <speech>La Pokédex es un dispositivo de alta tecnología. Registrará automáticamente los datos de cada tipo de Pokémon que encuentres.</speech>
            <speech>$PLAYER_NAME, ¡te pido que vayas a todas partes y conozcas a todos los tipos de Pokémon de esta región!".</speech>
        </speeches>
        <speeches id="3">
            <speech>Cuando subiste por la Ruta 201 con tu Pokémon, ¿qué sentiste?</speech>
            <speech>He vivido 60 largos años. Incluso ahora, me emociono cuando estoy con un Pokémon.</speech>
            <speech>Ahora bien, debes saber que hay innumerables Pokémon en este mundo.</speech>
            <speech>Eso significa que hay muchas emociones esperándole ahí fuera.</speech>
            <speech>¡Ahora vete! $PLAYER_NAME, ¡tu gran aventura comienza ahora mismo!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Adelante! $PLAYER_NAME, ¡tu gran aventura te espera!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>Me alegro mucho de que seas amable con los Pokémon.</speech>
            <speech>Si no lo fueras, tendría que...</speech>
            <speech>Oh, no puedo decirlo...</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Yo también tengo uno!</speech>
        </speeches>
        <speeches id="3">
            <!--turtwig-->
            <speech>¡El Pokémon que conocí por primera vez era un Turtwig!</speech>
            <speech>Si hubieras elegido un Turtwig en la Ruta 201, ¡ahora tendríamos el mismo Pokémon!</speech>
            <speech>No es que importe, pero... De todos modos, soy Dawn.</speech>
            <speech>También ayudo al profesor a añadir páginas a la Pokédex.</speech>
            <speech>Así que, en cierto sentido, soy como tú. Te llevo un poco de ventaja, eso es todo.</speech>
            <speech>Estaré encantado de enseñarte cosas. Encantado de conocerte, $PLAYER_NAME</speech>
        </speeches>
        <speeches id="4">
            <!--chimchar-->
            <speech>El Pokémon que conocí por primera vez era un Chimchar.</speech>
            <speech>Si hubieras elegido un Chimchar en la Ruta 201, ¡ahora tendríamos el mismo Pokémon!</speech>
            <speech>No es que importe, pero... De todos modos, soy Dawn.</speech>
            <speech>También ayudo al profesor a añadir páginas a la Pokédex.</speech>
            <speech>Así que, en cierto sentido, soy como tú. Te llevo un poco de ventaja, eso es todo.</speech>
            <speech>Estaré encantado de enseñarte cosas. Encantado de conocerte, $PLAYER_NAME</speech>
        </speeches>
        <speeches id="5">
            <!--piplup-->
            <speech>¡El Pokémon que conocí por primera vez era un Piplup!</speech>
            <speech>Si hubieras elegido un Piplup en la Ruta 201, ¡ahora tendríamos el mismo Pokémon!</speech>
            <speech>No es que importe, pero... De todos modos, soy Dawn.</speech>
            <speech>También ayudo al profesor a añadir páginas a la Pokédex.</speech>
            <speech>Así que, en cierto sentido, soy como tú. Te llevo un poco de ventaja, eso es todo.</speech>
            <speech>Estaré encantado de enseñarte cosas. Encantado de conocerte, $PLAYER_NAME</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>¿Ves esta máquina de aquí? Se puede utilizar para extraer Pociones IV de Pokemons.</speech>
            <speech>Sin embargo, hay una pega: el Pokémon tiene que ser ultra raro.</speech>
            <speech>Vuelve a mí si quieres Pociones IV y estás dispuesto a intercambiar tus Ultra Raras.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Ves esta máquina de aquí? Se puede utilizar para extraer Pociones IV de Pokemons.</speech>
            <speech>Sin embargo, hay una pega: el Pokémon tiene que ser ultra raro.</speech>
            <speech>¿Quieres que te haga Pociones IV a cambio de Pokemon Ultra Raros?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ya veo... Te gusta coleccionar Ultra Raras.</speech>
        </speeches>
        <speeches id="4">
            <speech>**La máquina está haciendo ruidos espantosos**</speech>
            <speech>Ya está. Disfruta la poción intravenosa.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¿Ves esta máquina de aquí? Se puede utilizar para extraer Pociones IV de Pokemons.</speech>
            <speech>Pero hay una pega: el Pokémon tiene que ser shiny.</speech>
            <speech>Vuelve a mí si quieres Pociones IV y estás dispuesto a intercambiar tus Pokemons shiny.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Ves esta máquina de aquí? Se puede utilizar para extraer Pociones IV de Pokemons.</speech>
            <speech>Pero hay una pega: el Pokémon tiene que ser brillante.</speech>
            <speech>¿Quieres que te haga Pociones IV a cambio de Pokemon shiny?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ya veo... Te gusta coleccionar brillantes.</speech>
        </speeches>
        <speeches id="4">
            <speech>**La máquina está haciendo ruidos espantosos**</speech>
            <speech>Ya está. Disfruta la poción intravenosa.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¿Ves esta máquina de aquí? Se puede utilizar para extraer Pociones IV de Pokemons.</speech>
            <speech>Pero hay una pega: el Pokémon tiene que ser legendario.</speech>
            <speech>Vuelve a mí si quieres Pociones IV y estás dispuesto a intercambiar tu Legendario.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Ves esta máquina de aquí? Se puede utilizar para extraer Pociones IV de Pokemons.</speech>
            <speech>Pero hay una pega: el Pokémon tiene que ser legendario.</speech>
            <speech>¿Quieres que te haga 3 Pociones IV a cambio de Pokemon Legendarios?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ya veo... Te gusta coleccionar Legendarios.</speech>
        </speeches>
        <speeches id="4">
            <speech>**La máquina está haciendo ruidos espantosos**</speech>
            <speech>Ya está. Disfruta de las pociones intravenosas.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Saludos, viajero! Me especializo en la ciencia de las Máquinas Técnicas y los Registros Técnicos.</speech>
            <speech>Si tienes MTs o RTs de generaciones anteriores, puedo actualizarlos para que sean compatibles con la tecnología de la última generación.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Saludos, viajero! Me especializo en la ciencia de las Máquinas Técnicas y los Registros Técnicos.</speech>
            <speech>Si tienes MTs o RTs de generaciones anteriores, puedo actualizarlos para que sean compatibles con la tecnología de la última generación.</speech>
            <speech>Ah, veo que has traído algunos MTs y RTs para actualizar.</speech>
            <speech>¡Excelente elección! Actualizar permitirá que tus Pokémon aprendan movimientos que no podían antes con las versiones obsoletas.</speech>
            <speech>¿Estás listo para proceder? Una vez que iniciemos el proceso de actualización, no podremos revertirlo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Entendible, es una decisión significativa. Tómate tu tiempo para pensarlo.</speech>
            <speech>Cuando decidas, estaré aquí, listo para asistirte con tus necesidades tecnológicas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Comencemos la actualización entonces. Se agradece tu fe en las capacidades de nuestro laboratorio.</speech>
            <speech>...Y ahí estamos. Tus MTs y RTs ahora están completamente actualizados y son compatibles con los sistemas de la última generación.</speech>
            <speech>Tus Pokémon ahora pueden aprender nuevos movimientos para mejorar su fuerza en las batallas.</speech>
            <speech>Nuestro laboratorio siempre está aquí para apoyar a entrenadores como tú, empujando los límites del entrenamiento y compatibilidad de Pokémon.</speech>
            <speech>Si encuentras más MTs o RTs que necesiten una actualización, ya sabes dónde encontrarme. ¡Buen viaje!</speech>
        </speeches>
        <speeches id="5">
            <speech>Gracias por confiar tus MTs y RTs a nuestro laboratorio. Tus actualizaciones están completas. Úsalos bien en tu viaje adelante.</speech>
        </speeches>
    </conversation>

    <npc direction="RIGHT" id="1" name="Dawn's Father" sprite="8" x="4" y="14">
        <speech>Soy el padre de Dawn.</speech>
        <speech>Estaré encantado de ayudarle en su búsqueda del profesor.</speech>
        <speech>No olvides que algunos Pokemon evolucionan mediante piedras especiales.</speech>
        <speech>Se encuentran por toda la región.</speech>
        <speech>Estoy seguro de que podemos contar contigo.</speech>
    </npc>
    <npc direction="LEFT" id="2" name="Lab Assistant Roseanne" sprite="7" x="15" y="13">
        <speech>El Profesor Rowan inventó una nueva Pokedex mientras trabajaba junto a un profesor de la región de Kanto.</speech>
        <speech>Me llamo Roseanne.</speech>
        <speech>Es un honor ser ayudante de nuestro profesor.</speech>
        <speech>Se asegura de que siempre tengamos algo que hacer..</speech>
        <speech>Pero es estupendo saber que el trabajo que hacemos marca la diferencia.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="3" name="Rowan's Wife" sprite="55" x="23" y="7">
        <speech>Me gustaría que mi marido no trabajara siempre tanto.</speech>
        <speech>Pero le encanta investigar...</speech>
    </npc>
</npcs>