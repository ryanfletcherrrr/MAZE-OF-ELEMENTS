<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>La tormenta de arena es feroz. Es imposible seguir adelante.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Baxcalibur, espera!</speech>
            <speech>[ORO]Una vez más, Baxcalibur sale corriendo justo cuando te acercas...[]</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>*Tyrantrum lanza un rugido atronador, sus ojos brillan con una furia salvaje e indómita.*</speech>
        </speeches>
        <speeches id="2">
            <speech>*Tyrantrum brama derrotado, su rugido resuena en el desierto mientras reconoce a regañadientes tu fuerza.*</speech>
        </speeches>
        <speeches id="3">
            <speech>*El pícaro Tyrantrum gruñe desafiante, desinteresado en enfrentarse a quien considera indigno de la batalla.*</speech>
        </speeches>
        <speeches id="4">
            <speech>*En un raro momento de calma, Tyrantrum asiente en señal de respeto hacia ti, su feroz comportamiento suavizado por tu victoria.*</speech>
        </speeches>
        <speeches id="5">
            <speech>*Tyrantrum te examina, su mirada es intensa. Parece estar evaluando si eres un oponente digno.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Hola, soy el Maníaco Fósil, ¡absolutamente obsesionado con los Pokémon antiguos!</speech>
            <speech>Especialmente Lileep y Anorith, las joyas de la vida prehistórica.</speech>
            <speech>Si alguna vez tropiezas con un Lileep o un Anorith, ¿podrías traerlo aquí?</speech>
            <speech>Me encantaría ver un trozo vivo de historia.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hola, soy el Maníaco Fósil, ¡absolutamente obsesionado con los Pokémon antiguos!</speech>
            <speech>Especialmente Lileep y Anorith, las joyas de la vida prehistórica.</speech>
            <speech>¡Ah! ¡Mi corazón se acelera al ver que tienes un Lileep o un Anorith!</speech>
            <speech>Observar a estas criaturas es contemplar el antiguo pasado de la Tierra.</speech>
            <speech>¿Consideraría la posibilidad de deshacerse de uno?</speech>
            <speech>A cambio, te daré algo raro: un Segmento de Garra Fosilizado, una reliquia del poder depredador.</speech>
            <speech>¿Así que un Lileep o un Anorith por un Segmento de Talón Fosilizado? Esta acción no se puede deshacer.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, lo entiendo. Son tesoros raros, después de todo.</speech>
            <speech>Pero si alguna vez cambias de opinión, mi oferta sigue en pie. ¡Gracias, $PLAYER_NAME!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Maravilloso! ¡Será un día para recordar!</speech>
            <speech>Aquí, como prometí, el Segmento de Talón Fosilizado por tu generosidad. ¡Gracias, $PLAYER_NAME!</speech>
        </speeches>
        <speeches id="5">
            <speech>Los rumores hablan del potencial oculto del Segmento del Talón Fosilizado...</speech>
            <speech>¿Podría ser realmente la clave para descifrar el [ORO]Aerodactylite[]? Un descubrimiento así sería monumental.</speech>
            <speech>Sólo de pensarlo siento escalofríos. ¡Qué estimulante!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Cacturne" shouldSleep="" speed="1" sprite="332" type="pokemon" x="47" y="51">
        <path>LEFTx7,RIGHTx7</path>
        <onCollisionSpeech gap="4">Cacturne!</onCollisionSpeech>
        <speech>¡Cacturne!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Cacturne" shouldSleep="" speed="1" sprite="332" type="pokemon" x="32" y="65">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4">Cacturne!</onCollisionSpeech>
        <speech>¡Cacturne!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Cacturne" shouldSleep="" speed="1" sprite="332" type="pokemon" x="47" y="70">
        <path>LEFTx3,DOWNx3,LEFTx3,RIGHTx3,UPx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Cacturne!</onCollisionSpeech>
        <speech>¡Cacturne!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Cacnea" shouldSleep="" speed="1" sprite="331" type="pokemon" x="22" y="66">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Cacnea!</onCollisionSpeech>
        <speech>¡Cacnea!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Cacnea" shouldSleep="" speed="1" sprite="331" type="pokemon" x="24" y="55">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Cacnea!</onCollisionSpeech>
        <speech>¡Cacnea!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Vibrava" speed="1" sprite="329" type="pokemon" x="23" y="17">
        <path>UPx2,LEFTx4,DOWNx2,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Trapinch" shouldSleep="" speed="1" sprite="328" type="pokemon" x="9" y="22">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Vibrava" speed="1" sprite="329" type="pokemon" x="18" y="34">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Mandibuzz" speed="1" sprite="630" type="pokemon" x="15" y="2">
        <path>RIGHTx18,LEFTx18</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Vullaby" shouldSleep="" speed="1" sprite="629" type="pokemon" x="51" y="20">
        <path>DOWNx8,UPx8</path>
        <onCollisionSpeech gap="4">Vullaby!</onCollisionSpeech>
        <speech>¡Vullaby!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Sandslash" shouldSleep="" speed="1" sprite="28" type="pokemon" x="36" y="30">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Sandslash!</onCollisionSpeech>
        <speech>¡Sandslash!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Mandibuzz" speed="1" sprite="630" type="pokemon" x="28" y="77">
        <path>LEFTx7,DOWNx13,RIGHTx7,UPx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Mandibuzz" speed="1" sprite="630" type="pokemon" x="58" y="100">
        <path>UPx8,LEFTx8,DOWNx8,RIGHTx8</path>
        <onCollisionSpeech gap="4">Mandibuzz!</onCollisionSpeech>
        <speech>¡Mandibuzz!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Yamask" shouldSleep="" speed="1" sprite="562" type="pokemon" x="32" y="73">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Yamask!</onCollisionSpeech>
        <speech>¡Yamask!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Cofagrigus" shouldSleep="" speed="1" sprite="563" type="pokemon" x="39" y="76">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Mandibuzz" speed="1" sprite="630" type="pokemon" x="34" y="102">
        <path>LEFTx12,RIGHTx12</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Cacnea" shouldSleep="" speed="1" sprite="331" type="pokemon" x="43" y="98">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Cacnea!</onCollisionSpeech>
        <speech>¡Cacnea!</speech>
    </movingNpc>
    <conversation id="6">
        <speeches id="1">
            <speech>¿Podrán tus Pokémon igualar el poder de criaturas de hace eones?</speech>
        </speeches>
        <speeches id="2">
            <speech>Has evolucionado más allá de los antiguos poderes. ¡Realmente superior!</speech>
        </speeches>
        <speeches id="3">
            <speech>Has evolucionado más allá de los antiguos poderes. ¡Realmente superior!</speech>
        </speeches>
        <speeches id="4">
            <speech>Extinto por una razón... Eres la evolución de la victoria.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Cada viaje tiene sus retos. Veamos si estás preparado para este.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Tu viaje a través de nuestra batalla ha terminado en triunfo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Tu viaje a través de nuestra batalla ha terminado en triunfo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Perdí mi mapa... Has trazado el camino hacia la victoria.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¡Hola! Eres una montaña que se interpone en mi camino, ¿verdad?</speech>
        </speeches>
        <speeches id="2">
            <speech>Grrr... Mi victoria ha desaparecido en alguna grieta oscura...</speech>
        </speeches>
        <speeches id="3">
            <speech>Grrr... Mi victoria ha desaparecido en alguna grieta oscura...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Yahoo! ¡Yahooooo! ¡Escucha mi grito de triunfo!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Mi última batalla... Así es como me gustaría que viéramos este combate...</speech>
        </speeches>
        <speeches id="2">
            <speech>Ha sido divertido... Vamos a tener otra última batalla de nuevo algún día ...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ha sido divertido... Tengamos otra última batalla algún día...</speech>
        </speeches>
        <speeches id="4">
            <speech>Nos volveremos a ver algún día... Je. Si eso fuera verdad...</speech>
        </speeches>
    </conversation>
    <conversation id="14">
        <speeches id="1">
            <speech>Con los fósiles, ¡el pasado cobra vida! ¿Podrán tus Pokémon resistir el paso del tiempo?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Has hecho historia con tu victoria!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Has hecho historia con tu victoria!</speech>
        </speeches>
        <speeches id="4">
            <speech>El pasado es pasado... Tu momento es ahora.</speech>
        </speeches>
    </conversation>
    <conversation id="15">
        <speeches id="1">
            <speech>Aunque la gente te llame As de la formación, no es que te den nada especial por ello.</speech>
        </speeches>
        <speeches id="2">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="3">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sólo soy bueno batallando. Ni siquiera tengo trabajo. Sólo soy otro desempleado.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>No creo en cosas como los amuletos de la buena suerte, pero en momentos así me dan ganas de rezar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Quizá pierdo porque presto más atención a rezar que a luchar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Quizá pierdo porque presto más atención a rezar que a luchar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Mi opinión es que la respuesta a tus oraciones depende de tu talento.</speech>
        </speeches>
    </conversation>
    <conversation id="21">
        <speeches id="1">
            <speech>Ir fácil en mí no está en mi vocabulario.</speech>
        </speeches>
        <speeches id="2">
            <speech>Aunque lo dé todo, no tiene sentido si pierdo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Aunque lo dé todo, no tiene sentido si pierdo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Para mí, la etiqueta es derrotar sin piedad a mis oponentes en la batalla, incluso a los débiles.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="18" name="Dusty" randomRotation="true" sprite="20" x="36" y="89">
        <speech>Me encanta este trabajo, es una auténtica reminiscencia del pasado.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="19" name="Backpacker Rich" randomRotation="true" sprite="108" x="42" y="56">
        <speech>¡Uf! Este desierto es duro para nosotros, ¡pero también para nuestros Pokémon! Estás preparado, ¿verdad?</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="20" name="Ruin Maniac Bryan" randomRotation="true" sprite="20" x="28" y="40">
        <speech>Excavar en las ruinas es mi pasión. ¡Quién sabe qué Pokémon antiguos descubriremos ahora!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="21" name="Youngster Jonathan" randomRotation="true" sprite="2" x="41" y="30">
        <speech>¡Cuidado con las tormentas de arena! Son duras para ti y para tus Pokémon.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="22" name="Hiker Hayden" randomRotation="true" sprite="10" x="13" y="9">
        <speech>Ah, las montañas son geniales, ¡pero cuidado con los desprendimientos de rocas! Lleva siempre unas cuantas cuerdas de escape, ¡por si acaso!</speech>
    </npc>
</npcs>