<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Trabajo muy duro, pero eso no significa que sea fuerte.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡¿Qué?! ¡¿Incluso yo puedo perder?! ¡Pero soy un genio de la lucha!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Hola! ¡Gracias de nuevo por salvar a mi hermano!</speech>
            <speech>Ahora que el bosque es seguro, ¡jugamos aquí al escondite todos los días!</speech>
            <speech>Tengo siete amigos, ¡pero hoy he elegido a tres de ellos para esconderme!</speech>
            <speech>¿Quieres unirte a nosotros? Encuentra a mis tres amigos escondidos y enfréntate a ellos.</speech>
            <speech>¡Será muy divertido!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Viva! Esto va a ser muy divertido.</speech>
            <speech>Mis tres amigos son muy buenos escondiéndose, ¡así que busca por todas partes!</speech>
            <speech>Pueden estar detrás de los árboles, cerca de las rocas o en la hierba alta.</speech>
            <speech>Cuando los encuentres, ¡querrán enfrentarse a ti primero antes de salir!</speech>
            <speech>¡Buena suerte encontrando y derrotando a los tres!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Está bien! ¡Está bien!</speech>
            <speech>Vuelve si cambias de opinión: ¡jugamos todos los días!</speech>
            <speech>Es muy divertido, ¡lo prometo!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Hoy ya hemos jugado! Mis tres amigos están cansados de tanto esconderse y luchar.</speech>
            <speech>Vuelve mañana y podremos jugar de nuevo.</speech>
            <speech>¡La próxima vez elegiré a tres amigos diferentes para esconderme!</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Oh, todavía no has ayudado a encontrar a mi hermano!</speech>
            <speech>¡No podemos jugar hasta que todo el mundo esté a salvo!</speech>
            <speech>¡Por favor, ayúdame a encontrarlo primero!</speech>
        </speeches>
        <speeches id="6">
            <speech>¡Aún no has encontrado a todos mis amigos!</speech>
            <speech>Sigue buscando por el bosque, ¡son muy buenos escondiéndose!</speech>
            <speech>¡Tienes que encontrar y derrotar a los tres antes de que podamos terminar el juego!</speech>
        </speeches>
        <speeches id="7">
            <speech>¡Oh no! ¡La Abeja Reina ha vuelto a la jungla!</speech>
            <speech>Ya no podemos jugar al escondite, ¡es demasiado peligroso!</speech>
            <speech>¡Ha estado aterrorizando a todos los Pokémon en las partes más profundas del bosque!</speech>
            <speech>Por favor, ¿puedes derrotar a la Abeja Reina y hacer que la jungla vuelva a ser segura?</speech>
            <speech>Tenemos muchas ganas de jugar, ¡pero no hasta que se vaya!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡No es seguro ir más lejos ahora mismo!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="2" name="Rattata" shouldSleep="" speed="1" sprite="19" type="pokemon" x="33" y="37">
        <path>RIGHTx2,UPx3,LEFTx2,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Papa Sid" randomRotation="false" sprite="5" x="15" y="27">
        <speech>Acabo de ver a dos Metapods usar a Harden una y otra vez durante casi una hora..</speech>
        <speech>El mejor partido que he visto esta semana.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="weed" shouldSleep="" speed="1" sprite="13" type="pokemon" x="35" y="20">
        <path>LEFTx3,DOWNx3,RIGHTx2,UPx2,RIGHTx1,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="nido" shouldSleep="" speed="1" sprite="29" type="pokemon" x="34" y="29">
        <path>DOWNx2,LEFTx1,RIGHTx3,UPx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="odd" shouldSleep="" speed="1" sprite="43" type="pokemon" x="19" y="21">
        <path>DOWNx2,RIGHTx3,UPx2,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="pid" shouldSleep="" speed="1" sprite="16" type="pokemon" x="10" y="19">
        <path>DOWNx3,UPx3,RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="RIGHT" id="1" name="Doug" speed="1" sprite="4" type="npc" x="9" y="36">
        <path>RIGHTx4,LEFTx4,RIGHTx1,LEFTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>¿Alguna vez te ha robado un Rattata? A mí sí.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Old Man Elton" speed="1" sprite="39" type="npc" x="30" y="18">
        <path>RIGHTx3,DOWNx2,RIGHTx2,LEFTx5,UPx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>En mis tiempos, una poción costaba 300 y ahora cuestan 50..</speech>
    </movingNpc>
</npcs>