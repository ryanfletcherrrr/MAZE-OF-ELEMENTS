<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¿Qué? Bueno, ¡pero si es $PLAYER_NAME! ¿Así que ya terminaron de mudarse?</speech>
            <speech>Me sorprende que hayas conseguido llegar hasta aquí tú solo. Ah, ya veo. Estás con tus Pokémon.</speech>
            <speech>Hmm... Entonces supongo que te convertirás en Entrenador como yo, $NOMBRE_JUGADOR. ¡Qué buena noticia! Lo espero con impaciencia.</speech>
            <speech>Sí, me enteré de tus hazañas en Jvaloh y me sentí muy orgulloso.</speech>
            <speech>Ya que estás aquí, tengo una tarea para ti. Le di una Pokeball y un Pokemon a Wally.</speech>
            <speech>Salió solo hacia la ruta 102.</speech>
            <speech>Ve a buscar a Wally y asegúrate de que atrapa un Pokémon sano y salvo.</speech>
            <speech>Vuelve y reúnete conmigo una vez que le ayudes.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Entonces, ¿funcionó?</speech>
            <speech>Ahora... $PLAYER_NAME, si quieres convertirte en un Entrenador fuerte, este es mi consejo.</speech>
            <speech>Dirígete a Rustboro City más allá de esta ciudad. Allí, debes desafiar a la Líder del Gimnasio, Roxanne.</speech>
            <speech>Después de ella, ve a otros Gimnasios Pokémon y derrota a sus Líderes. Recoge sus insignias, ¿entendido?</speech>
            <speech>Por supuesto, yo también soy un Líder de Gimnasio. Vamos a luchar un día. Pero eso es sólo después de que te vuelvas más fuerte, $PLAYER_NAME.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>$GENDER_SON_DAUGHT, solo lucharé contigo cuando hayas derrotado a todos los entrenadores del dojo.</speech>
            <speech>Buena suerte.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Hm... Así que conseguiste cuatro Insignias de Gimnasio.</speech>
            <speech>Entonces, como prometí, tendremos una batalla Pokémon.</speech>
            <speech>$PLAYER_NAME... Me hace más feliz de lo que realmente puedo describir.</speech>
            <speech>Ser capaz de tener una batalla real con mi propio $GENDER_SON_DAUGHT así.</speech>
            <speech>Pero una batalla es una batalla. Haré todo lo que esté en mi mano como líder de gimnasio para ganar.</speech>
            <speech>Será mejor que tú también des lo mejor de ti, $PLAYER_NAME.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡...! Imposible...</speech>
            <speech>No me lo puedo creer. ¿Perdí contra $PLAYER_NAME?</speech>
            <speech>Has llegado hasta aquí...</speech>
            <speech>¡Así es como es, entonces! Te daré esto..</speech>
            <speech>Con esta insignia, los Pokémon que conozcan el movimiento HM Surf podrán viajar por el agua en Hoenn.</speech>
            <speech>Y este es mi regalo para ti, $PLAYER_NAME. Estoy seguro de que sabrás utilizarlo bien.</speech>
            <speech>Represalia te permitirá vengarte de un miembro del equipo caído.</speech>
            <speech>Su poder se duplicará si haces que un Pokémon lo use en el siguiente movimiento justo después de que un aliado se desmaye.</speech>
            <speech>Espero que tú y tus Pokémon seáis lo suficientemente diligentes como para usarlo sabiamente.</speech>
        </speeches>
        <speeches id="3">
            <speech> Suspiro.</speech>
            <speech>Como líder del gimnasio, no puedo expresar lo frustrado que estoy.</speech>
            <speech>Pero, como padre, me hace feliz y a la vez me entristece un poco. Es extraño.</speech>
            <speech>Vamos, $PLAYER_NAME.</speech>
            <speech>Te veré en el camino. Vámonos de aquí.</speech>
        </speeches>
        <speeches id="4">
            <speech>Esta batalla fue demasiado fácil para mí. No obstante, me alegra darte otra oportunidad.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>El protagonista de esta historia... ¡Ya te diré quién es!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tienes que ser fuerte por dentro cuando no hay mucha gente que sea más fuerte que tú por fuera...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tienes que ser fuerte por dentro cuando no hay mucha gente que sea más fuerte que tú por fuera...</speech>
        </speeches>
        <speeches id="4">
            <speech>Por supuesto, ¡tú eres el protagonista!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Tus Pokémon... Enséñamelos...</speech>
        </speeches>
        <speeches id="2">
            <speech>Sí... Tienes buenos Pokémon... Los Pokémon deben estar contentos de ser criados por ti...</speech>
        </speeches>
        <speeches id="3">
            <speech>Sí... Tienes buenos Pokémon... Los Pokémon deben estar contentos de ser criados por ti...</speech>
        </speeches>
        <speeches id="4">
            <speech>Todo dentro de mis expectativas... Nada de lo que sorprenderse...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Pareces muy confiado. Te hundiré enseguida.</speech>
        </speeches>
        <speeches id="2">
            <speech>Sí... Tienes buenos Pokémon... Los Pokémon deben estar felices de ser criados por ti...</speech>
        </speeches>
        <speeches id="3">
            <speech>Sí... Tienes buenos Pokémon... Los Pokémon deben estar felices de ser criados por ti...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡AAAH! ¡Tengo tanto miedo! Nunca lo volveré a hacer... Lo siento.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Una persona que quiere luchar, luchar y luchar para siempre. Así es el As.</speech>
        </speeches>
        <speeches id="2">
            <speech>No puedes convertirte en un Ace Trainer luchando así.</speech>
        </speeches>
        <speeches id="3">
            <speech>No puedes convertirte en un Ace Trainer luchando así.</speech>
        </speeches>
        <speeches id="4">
            <speech>Tu estilo de lucha te sienta muy bien. Podrías ser un Entrenador As.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡Te voy a dar una experiencia tan dulce que te van a dar vueltas los ojos!</speech>
        </speeches>
        <speeches id="2">
            <speech>No es que pierdas realmente nada cuando pierdes. Mientras lo disfrutes, es suficiente.</speech>
        </speeches>
        <speeches id="3">
            <speech>No es que pierdas realmente nada cuando pierdes. Mientras lo disfrutes, es suficiente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Uf... ¡Estás que echas humo! Esto parece una sofocante noche de verano.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Una persona que quiere luchar, luchar y luchar para siempre. Así es el As.</speech>
        </speeches>
        <speeches id="2">
            <speech>No puedes convertirte en un Ace Trainer luchando así.</speech>
        </speeches>
        <speeches id="3">
            <speech>No puedes convertirte en un Ace Trainer luchando así.</speech>
        </speeches>
        <speeches id="4">
            <speech>Tu estilo de lucha te sienta muy bien. Podrías ser un Entrenador As.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Para desafiarme debes ser una persona temeraria, que no sabe cuál es su lugar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hmmph... ¡Desafiarme debe significar que incluso la ignorancia tiene su límite!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Gym Guide" randomRotation="false" sprite="5" x="26" y="81">
        <speech>Hola, campeón en ciernes. El Gimnasio Petalburg es el lugar ideal, y Norman tiene un equipo de tipos normales listos para poner a prueba tu temple.</speech>
        <speech>Pero no te preocupes. Los Pokémon de lucha, roca o acero son tus mejores aliados para este desafío. Mantén la concentración y la determinación, ¡y demostrarás a Norman de qué estás hecho!</speech>
    </npc>
</npcs>