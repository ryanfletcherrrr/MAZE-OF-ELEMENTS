<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Sigamos por la ruta 110 y dirijámonos al monte Chimney.</speech>
            <speech>Descansaremos en la ciudad de Mauville, ya que la ruta 110 está bastante lejos.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Eh, $NOMBRE_JUGADOR!</speech>
            <speech>¡Cuánto tiempo! Qué oportuno. Estaba buscando Pokémon, ¿sabes?</speech>
            <speech>Mi padre siempre está hablando de cómo la naturaleza solía ser aún más diversa, hace mucho tiempo.</speech>
            <speech>Dice que antes había muchos más tipos de Pokémon que ahora.</speech>
            <speech>Por eso hacemos trabajo de campo él y yo. Queremos averiguar qué les pasó a esos Pokémon en el pasado.</speech>
            <speech>En mi viaje hasta ahora, he conocido a muchos Pokémon diferentes, y creo que también he llegado a entender a muchos de ellos.</speech>
            <speech>Mis Pokémon y yo hemos crecido mucho. Así que... ¿Qué tal una pequeña batalla?</speech>
        </speeches>
        <speeches id="2">
            <speech>$PLAYER_NAME, tú también has estado ocupado entrenando, ¿verdad?</speech>
            <speech>¡Hasta luego, $PLAYER_NAME! ¡Volvamos a vernos!</speech>
            <speech>Espero que ambos podamos conocer aún más Pokémon en nuestros viajes.</speech>
        </speeches>
        <speeches id="3">
            <speech>$PLAYER_NAME, tú también has estado ocupado entrenando, ¿verdad?</speech>
            <speech>¡Hasta luego, $PLAYER_NAME! ¡Volvamos a vernos!</speech>
            <speech>Espero que ambos podamos conocer aún más Pokémon en nuestros viajes.</speech>
        </speeches>
        <speeches id="4">
            <speech>Un poco más de entrenamiento y quizá puedas acercarte a mí ;)</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Atrás!</speech>
            <speech>La ruta está bloqueada.</speech>
            <speech>El Equipo Magma está llevando a cabo una investigación.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>No creo que mi bici funcione en el carril bici de Hoenn.</speech>
            <speech>Necesito una actualización...</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Necesito ir en bici para cruzar este puente.</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Celestia" randomRotation="false" sprite="6" x="18" y="94">
        <speech>Este puente es la vía más segura y rápida entre Slateport y Mauville.</speech>
        <speech>Disfruto recorriendo el suelo de cristal para contemplar los pokemon acuáticos que hay debajo sin tener que preocuparme de los pokemon salvajes.</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Taillow" speed="1" sprite="276" type="pokemon" x="17" y="35">
        <path>RIGHTx20,LEFTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Wingull" speed="1" sprite="278" type="pokemon" x="55" y="81">
        <path>LEFTx8,RIGHTx8,UPx8,DOWNx8,</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Carvannah" speed="1" sprite="318" type="pokemon" x="60" y="101">
        <path>UPx8,LEFTx7,RIGHTx7,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="12" name="Alfred" randomRotation="false" sprite="23" x="16" y="5">
        <speech>Últimos pasos antes de Mauville.</speech>
        <speech>Si hubiera sabido con cuántos pokémon salvajes tendría que encontrarme antes de llegar a este punto, habría tomado el camino del puente...</speech>
        <speech>Al menos la brisa es refrescante.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="14" name="Joey" randomRotation="false" sprite="2" x="51" y="24">
        <speech>¿Qué es este espeluznante edificio?</speech>
    </npc>
    <movingNpc direction="DOWN" id="18" name="Carvannah" speed="1" sprite="318" type="pokemon" x="57" y="38">
        <path>DOWNx15,UPx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Carvannah" speed="1" sprite="318" type="pokemon" x="64" y="38">
        <path>DOWNx15,UPx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Wingull" speed="1" sprite="278" type="pokemon" x="36" y="55">
        <path>DOWNx7,RIGHTx5,UPx7,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <!--<movingNpc direction="DOWN" id="21" name="Usain" speed="2" sprite="80" type="npc" x="29" y="14">
        <path>DOWNx17,RIGHTx30,DOWNx53,LEFTx27,DOWNx10,UPx10,RIGHTx27,UPx53,LEFTx30,UPx17</path>
        <onCollisionSpeech gap="4">HEY!</onCollisionSpeech>
        <speech>OH! you actually got me?</speech>
        <speech>Not bad at all.</speech>
        <speech>I never thought someone would ever catch me.</speech>
        <speech>I am SPEED!</speech>
    </movingNpc>-->
    <conversation id="10">
        <speeches id="1">
            <speech>¿Quieres pelear conmigo? Sabes que vengo de una larga línea de punks, ¿verdad? Al menos tienes agallas.</speech>
        </speeches>
        <speeches id="2">
            <speech>He venido aquí para aplastar a Trainers insolentes.</speech>
        </speeches>
        <speeches id="3">
            <speech>He venido aquí para aplastar a Trainers insolentes.</speech>
        </speeches>
        <speeches id="4">
            <speech>Je... No me arrepiento de nada... Fue una pelea digna del honor de mi familia...</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Si pierdes, puedes ser mi sirviente.</speech>
        </speeches>
        <speeches id="2">
            <speech>Algún día te haré mi sirviente.</speech>
        </speeches>
        <speeches id="3">
            <speech>Algún día te haré mi sirviente.</speech>
        </speeches>
        <speeches id="4">
            <speech>A partir de ahora, soy tu empleador.</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Tomémonos las cosas con calma con Pokémon y con la vida.</speech>
        </speeches>
        <speeches id="2">
            <speech>No hay problema. No hay problema. Tendré otra oportunidad.</speech>
        </speeches>
        <speeches id="3">
            <speech>No hay problema. No hay problema. Tendré otra oportunidad.</speech>
        </speeches>
        <speeches id="4">
            <speech>No pasa nada por dejarse la piel. Pero también necesitas un respiro.</speech>
        </speeches>
    </conversation>
    <conversation id="13">
        <speeches id="1">
            <speech>En mi país, decimos que las chicas guapas pueden ocultar todo tipo de pecados. ¿No es genial?</speech>
        </speeches>
        <speeches id="2">
            <speech>No me importa si gano o pierdo, mientras pueda escapar de este tedio.</speech>
        </speeches>
        <speeches id="3">
            <speech>No me importa si gano o pierdo, mientras pueda escapar de este tedio.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Oh, olvídalo! ¡He terminado con la ropa elegante! ¡Me desharé de este atuendo e iré a broncearme!</speech>
        </speeches>
    </conversation>
    <conversation id="14">
        <speeches id="1">
            <speech>Nos gustaría celebrar una batalla Pokémon contra el enemigo más fuerte.</speech>
        </speeches>
        <speeches id="2">
            <speech>Me pregunto si podríamos haber sido amigos si nos hubiéramos conocido en un mundo sin batallas...</speech>
        </speeches>
        <speeches id="3">
            <speech>Me pregunto si podríamos haber sido amigos si nos hubiéramos conocido en un mundo sin batallas...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ho ho ho! ¡Ha sido de nuestro agrado! Estamos muy satisfechos.</speech>
        </speeches>
    </conversation>
    <conversation id="15">
        <speeches id="1">
            <speech>Decir que soy un espíritu libre suena bien, pero en realidad sólo soy un vagabundo en paro.</speech>
        </speeches>
        <speeches id="2">
            <speech>Soñar con ser libre es lo mejor...</speech>
        </speeches>
        <speeches id="3">
            <speech>Soñar con ser libre es lo mejor...</speech>
        </speeches>
        <speeches id="4">
            <speech>Si puedo vivir aquí y jugar todo el día, nunca necesitaré luchar.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>Muy bien, ¡lanza tu Poké Ball! ¡La atraparé enseguida!</speech>
        </speeches>
        <speeches id="2">
            <speech>Si hubiera sido capaz de atrapar esa Poké Ball aquella vez...</speech>
        </speeches>
        <speeches id="3">
            <speech>Si hubiera sido capaz de atrapar esa Poké Ball aquella vez...</speech>
        </speeches>
        <speeches id="4">
            <speech>Atrapar Poké Balls antes de que se abran es una forma segura de ganar que he ideado.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>Tus Pokémon... Enséñamelos...</speech>
        </speeches>
        <speeches id="2">
            <speech>Sí... Tienes buenos Pokémon... Los Pokémon deben estar felices de ser criados por ti...</speech>
        </speeches>
        <speeches id="3">
            <speech>Sí... Tienes buenos Pokémon... Los Pokémon deben estar contentos de ser criados por ti...</speech>
        </speeches>
        <speeches id="4">
            <speech>Todo dentro de mis expectativas... Nada de lo que sorprenderse...</speech>
        </speeches>
    </conversation>
    <conversation id="18">
        <speeches id="1">
            <speech>(Este chico parece un auténtico pringado. ¡Muy bien!) ¡Ohhhh, pobre de mí! Nadie entiende mi arte...</speech>
        </speeches>
        <speeches id="2">
            <speech>Tu rostro triunfante me complace. Despierta mis impulsos creativos...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tu rostro triunfante me complace. Despierta mis impulsos creativos...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ven a la galería a ver mis obras! (¡Pareces tan tonto como para comprar algo!)</speech>
        </speeches>
    </conversation>
    <conversation id="19">
        <speeches id="1">
            <speech>Je je je. Si pierdes, te convertiré en un Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>Estoy decepcionado, pero no se puede evitar... Mis profecías son absolutas...</speech>
        </speeches>
        <speeches id="3">
            <speech>Estoy decepcionado, pero no se puede evitar... Mis profecías son absolutas...</speech>
        </speeches>
        <speeches id="4">
            <speech>La próxima vez que te vea, te convertiré en Pokémon con mi poder.</speech>
        </speeches>
    </conversation>
    <conversation id="20">
        <speeches id="1">
            <speech>No es un uniforme, es lo que me gusta llevar. Lo hice yo mismo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa, eso estuvo cerca. Casi me ensucio la ropa.</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa, eso estuvo cerca. Casi me ensucio la ropa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ojalá pudiera vivir en los mundos que veo en los juegos, el anime y los cómics.</speech>
        </speeches>
    </conversation>
    <conversation id="22">
        <speeches id="1">
            <speech>Tanto mi madre como mi padre son entrenadores As. Probablemente yo también sea un As.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Waaah! Debería tener genes superiores y ser capaz de cabalgar sobre los faldones de mis padres...</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Waaah! Debería tener genes superiores y ser capaz de cabalgar sobre los faldones de mis padres...</speech>
        </speeches>
        <speeches id="4">
            <speech>Quiero ser un verdadero As como mi madre y mi padre.</speech>
        </speeches>
    </conversation>
    <conversation id="23">
        <speeches id="1">
            <speech>¡Ah, joven entrenador! He estado esperando a alguien con tu espíritu.</speech>
            <speech>Soy el tercer Líder de Gimnasio de esta región.</speech>
            <speech>Por desgracia, un gamberro se ha fugado con mi colección de insignias del gimnasio.</speech>
            <speech>A mi edad, perseguir rufianes es una tarea demasiado agotadora para mí, sobre todo con mis viejos huesos.</speech>
            <speech>Conocía las motos que se consiguen en Sinnoh, pero parece que no son muy adecuadas para el terreno de Hoenn.</speech>
            <speech>Aquí es donde entras tú. Necesito un par de piernas rápidas y hábiles para esta persecución.</speech>
            <speech>¿Podrías visitar la tienda de Rydel para una mejora? Con las modificaciones adecuadas, tu moto podría recorrer Hoenn a la perfección.</speech>
            <speech>Mientras tanto, volveré al gimnasio para mejorar nuestras medidas de seguridad. No podemos permitirnos otro incidente así.</speech>
            <speech>Una vez que hayas alcanzado a ese canalla, ven a buscarme al gimnasio. Estaré esperando saber de tu persecución.</speech>
            <speech>Su viaje le ofrece algo más que una simple persecución: es una oportunidad para demostrar su valentía y determinación.</speech>
        </speeches>
    </conversation>
    <conversation id="24">
        <speeches id="1">
            <speech>¿Así que me rastreaste? El pequeño entrenador de recados de Wattson, ¿eh?</speech>
            <speech>¿Creías que podías recuperar el Maletín de Insignias sin luchar? ¡Pues no!</speech>
            <speech>Veamos si tienes la chispa para enfrentarte a mí. ¿Listo para un shock?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Qué?! No puede ser... ¡¿Cómo me ganaste?!</speech>
            <speech>Esto no ha terminado. Puede que hayas ganado esta vez, pero no lo olvidaré.</speech>
            <speech>Llévate tu preciado Maletín de Insignias. Wattson no es nada sin entrenadores como tú.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Cambiaste de opinión sobre luchar conmigo? No puedo culparte.</speech>
            <speech>Vuelve si alguna vez te sientes lo suficientemente valiente. Hasta entonces, mantendré caliente este Maletín de Insignias.</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que no eres tan electrizante como pensabas. Será mejor que vuelvas a Wattson sin las placas.</speech>
            <speech>Quizá deberías entrenar un poco más antes de volver a desafiarme. ¡Hasta luego, perdedor!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="4" name="Oddish" shouldSleep="" speed="1" sprite="43" type="pokemon" x="8" y="77">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Odd?</onCollisionSpeech>
        <speech>Oddish está recogiendo la luz del sol.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Minun" shouldSleep="" speed="1" sprite="312" type="pokemon" x="8" y="114">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Minun!</onCollisionSpeech>
        <speech>¡Minun!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Plusle" shouldSleep="" speed="1" sprite="311" type="pokemon" x="18" y="104">
        <path>DOWNx4,RIGHTx3,LEFTx3,UPx4</path>
        <onCollisionSpeech gap="4">Plusle!</onCollisionSpeech>
        <speech>¡Plusle!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Wingull" speed="1" sprite="278" type="pokemon" x="38" y="63">
        <path>LEFTx19,DOWNx8,RIGHTx19,UPx8</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>¡Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Manectric" shouldSleep="" speed="1" sprite="310" type="pokemon" x="42" y="75">
        <path>LEFTx2,DOWNx2,LEFTx1,DOWNx1,UPx1,RIGHTx1,UPx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Bark!</onCollisionSpeech>
        <speech>¡Aúlla!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Electrike" shouldSleep="" speed="1" sprite="309" type="pokemon" x="42" y="50">
        <path>UPx5,RIGHTx4,LEFTx4,DOWNx5</path>
        <onCollisionSpeech gap="4">Bark!</onCollisionSpeech>
        <speech>¡Aúlla!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="25" name="Ken" randomRotation="true" sprite="26" x="31" y="45">
        <speech>He invitado a mi novia a una cena romántica en la orilla de la ruta 110, cerca del puente de cristal.... ¿dónde está?</speech>
    </npc>
    <movingNpc direction="RIGHT" id="15" name="Barbara" shouldSleep="" speed="1" sprite="31" type="npc" x="53" y="31">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Can't you see I'm busy?</onCollisionSpeech>
        <speech>Se suponía que debía encontrarme con mi novio por la ruta 110 costa cerca del puente de cristal....</speech>
        <speech>Pero no se le encuentra por ninguna parte.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="26" name="Wingull" speed="1" sprite="278" type="pokemon" x="26" y="16">
        <path>LEFTx8,DOWNx6,RIGHTx8,UPx6</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>¡Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="27" name="Volbeat" shouldSleep="" speed="1" sprite="313" type="pokemon" x="43" y="104">
        <path>LEFTx3,DOWNx4,UPx4,RIGHTx3</path>
        <onCollisionSpeech gap="4">Volbeat!</onCollisionSpeech>
        <speech>¡Volbeat!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="28" name="Illumise" shouldSleep="" speed="1" sprite="314" type="pokemon" x="13" y="81">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4">Illumise!</onCollisionSpeech>
        <speech>¡Ilumina!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="31" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="52" y="100">
        <path>DOWNx15,UPx15</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="32" name="Carvanha" speed="1" sprite="318" type="pokemon" x="29" y="96">
        <path>LEFTx3,UPx5,DOWNx5,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="33" name="Roselia" shouldSleep="" speed="1" sprite="315" type="pokemon" x="12" y="36">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Roselia!</onCollisionSpeech>
        <speech>¡Roselia!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="34" name="Gloom" shouldSleep="" speed="1" sprite="44" type="pokemon" x="9" y="8">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Glooooooo!</onCollisionSpeech>
        <speech>¡Gloom!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="35" name="Pelipper" speed="1" sprite="279" type="pokemon" x="9" y="65">
        <path>UPx11,LEFTx5,UPx7,DOWNx7,RIGHTx5,DOWNx11</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="36" name="Tentacool" speed="1" sprite="72" type="pokemon" x="1" y="45">
        <path>UPx8,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="37" name="Tentacool" speed="1" sprite="72" type="pokemon" x="5" y="35">
        <path>UPx8,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>