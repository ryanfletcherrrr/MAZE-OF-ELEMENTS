<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>No creo en cosas como los amuletos de la buena suerte, pero en momentos así me dan ganas de rezar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Quizá pierdo porque presto más atención a rezar que a luchar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Quizá pierdo porque presto más atención a rezar que a luchar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Mi opinión es que la respuesta a tus oraciones depende de tu talento.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Te perderás en el mar cuando libere a mis Pokémon de agua!</speech>
        </speeches>
        <speeches id="2">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="3">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás varado en mi isla de la victoria!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Lancémonos a la batalla! ¡Mis Pokémon de agua son imbatibles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás sobrepasado! Tal vez deberías quedarte en la piscina para niños.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Una persona que quiere luchar, luchar y luchar para siempre. Así es el As.</speech>
        </speeches>
        <speeches id="2">
            <speech>No puedes convertirte en un Ace Trainer luchando así.</speech>
        </speeches>
        <speeches id="3">
            <speech>No puedes convertirte en un Ace Trainer luchando así.</speech>
        </speeches>
        <speeches id="4">
            <speech>Tu estilo de lucha te sienta muy bien. Podrías ser un Entrenador As.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Esta batalla te superará! ¡Mis Pokémon son campeones de las profundidades!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está hundido... en la derrota. Has ganado limpiamente.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está hundido... en la derrota. Has ganado limpiamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>Estás en aguas poco profundas. Es hora de aprender a nadar.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Prepárate! ¡La ira del mar caerá sobre vosotros en esta batalla!</speech>
        </speeches>
        <speeches id="2">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="3">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="4">
            <speech>Jaja, ¡te atrapó mi marea! Será mejor que nades más rápido la próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Hagamos olas! ¡Mis Pokémon están listos para surfear sobre ti!</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, no.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, no.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eres sólo una onda en mi océano de victoria!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¡Lancémonos a la batalla! ¡Mis Pokémon de agua son imbatibles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás sobrepasado! Tal vez deberías quedarte en la piscina para niños.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Así que, has pasado a mi compañero gruñón, $PLAYER_NAME. Impresionante, pero en última instancia inútil.</speech>
            <speech>Peeko está conmigo, y la nave que buscas está más allá de tu alcance.</speech>
            <speech>Nosotros, el Equipo Aqua, tenemos grandes planes para los mares, y cada pieza desempeña un papel</speech>
            <speech>incluyendo lo que hemos tomado. Pero vamos a ver si realmente tienes lo que se necesita para detenernos.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Vale, vale! Admito la derrota, $PLAYER_NAME. Has demostrado una fuerza y resolución increíbles. Liberaré la nave, como prometí.</speech>
            <speech>Y mira, Peeko, tu lealtad es encomiable. Vuela de regreso con el Sr. Briney, pequeño. Ha estado muy preocupado por ti.</speech>
            <speech>Recuerda, $PLAYER_NAME, la misión del Equipo Aqua es vasta y profunda. Este contratiempo no nos detendrá. Los mares nos llaman, y debemos responder.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Te sorprende que me mantenga firme? El océano nos enseña a resistir, $PLAYER_NAME. Y como el océano, la determinación del equipo Aqua no tiene fin.</speech>
            <speech>Nos volveremos a ver, en aguas turbulentas o en mares tranquilos.</speech>
            <speech>Nuestro viaje dista mucho de haber terminado, y las profundidades aún guardan muchos secretos que debemos desvelar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vuelves, como la marea. Pero que sepas esto, $PLAYER_NAME: la generosidad del océano es ilimitada, y también lo son las ambiciones del Equipo Aqua.</speech>
            <speech>Hoy nos ha superado. Pero el mar siempre cambia, y su llamada es irresistible.</speech>
            <speech>Volveremos a cruzarnos, con las corrientes a nuestro favor.</speech>
        </speeches>
    </conversation>


    <movingNpc direction="DOWN" id="1" name="Gyarados" speed="1" sprite="130" type="pokemon" x="30" y="9">
        <path>LEFTx10,DOWNx2,RIGHTx10,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Gyarados" speed="1" sprite="130" type="pokemon" x="30" y="9">
        <path>DOWNx1,LEFTx10,UPx1,RIGHTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wingull" speed="1" sprite="278" type="pokemon" x="23" y="15">
        <path>DOWNx12,LEFTx7,UPx12,RIGHTx7</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>¡Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Wingull" speed="1" sprite="278" type="pokemon" x="41" y="23">
        <path>UPx9,RIGHTx16,DOWNx9,LEFTx16</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>¡Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Gyarados" speed="1" sprite="130" type="pokemon" x="59" y="3">
        <path>DOWNx7,RIGHTx6,UPx7,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Gyarados" speed="1" sprite="130" type="pokemon" x="63" y="10">
        <path>LEFTx9,UPx4,RIGHTx9,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Gyarados" speed="1" sprite="130" type="pokemon" x="63" y="3">
        <path>DOWNx7,LEFTx7,UPx7,RIGHTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Pelipper" speed="1" sprite="279" type="pokemon" x="77" y="17">
        <path>LEFTx5,DOWNx5,UPx0,RIGHTx5,UPx5</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>¡Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="86" y="25">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4">Tenta!</onCollisionSpeech>
        <speech>¡Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="106" y="28">
        <path>LEFTx8,RIGHTx8</path>
        <onCollisionSpeech gap="4">Tentacool!</onCollisionSpeech>
        <speech>¡Tentacool!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wingull" speed="1" sprite="278" type="pokemon" x="100" y="11">
        <path>LEFTx5,DOWNx14,RIGHTx5,UPx14</path>
        <onCollisionSpeech gap="4">Wingull!</onCollisionSpeech>
        <speech>¡Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="24" y="35">
        <path>RIGHTx20,LEFTx20</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Wingull" speed="1" sprite="278" type="pokemon" x="53" y="32">
        <path>LEFTx13,RIGHTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>