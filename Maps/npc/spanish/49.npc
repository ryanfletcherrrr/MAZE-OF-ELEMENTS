<npcs>
    <npc direction="DOWN" id="1000" name="Expert Boon" sprite="39" x="12" y="19">
        <speech>Los tiempos seguramente han cambiado ..</speech>
        <speech>Aún no sé de qué son capaces estos pokémon de tipo Acero y Oscuro.</speech>
        <speech>¿Pokemon hada? ¡Sigue hablando así y te romperé una!</speech>
    </npc>
    <npc direction="UP" id="1001" name="Fisherman Filli" sprite="16" x="28" y="33">
        <speech>Oh chico, oh chico, oh chico. ¡Este va a ser ENORME!</speech>
        <speech>¿Qué? ¿Qué es lo que quieres? *SNAP*</speech>
        <speech>¡¡¡TU!!! ¡¡Mi hilo de pescar se rompió por tu culpa!! ¡Eso iba a ser un Clamperl seguro!</speech>
    </npc>
    <npc direction="UP" id="1002" name="Lass Tina " randomRotation="true" sprite="96" x="12" y="5">
        <speech>Terry y yo somos los mejores amigos del mundo.</speech>
        <speech>Como en todo el mundo, como en todo el universo.</speech>
    </npc>
    <npc direction="UP" id="1003" name="Lass Terry" randomRotation="true" sprite="96" x="12" y="6">
        <speech>Tina es como, la chica más guay de todo el planeta.</speech>
        <speech>En todo el continente.</speech>
        <speech>Espera, ¿cuál es más grande? Estoy muy confundido.</speech>
        <speech>Da igual, de todas formas somos demasiado guays para ti.</speech>
    </npc>
    <npc direction="LEFT" id="1004" name="Ninja Boy Lazlo" randomRotation="true" sprite="58" x="6" y="12">
        <speech>¡Whaha, te apuñalaré con mi espada!</speech>
        <speech>¿Qué vas a hacer al respecto?</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Saludos! Bienvenido a Skynet Travel Technologies.</speech>
            <speech>¿Le gustaría viajar a algún sitio?</speech>
        </speeches>
        <speeches id="2">
            <speech>Es una pena. Por favor, vuelva cuando desee viajar a otro lugar.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Bienvenido! Bienvenido al sistema de cajeros automáticos del Banco de Jvaloh.</speech>
            <speech>¿Desea retirar o ingresar dinero?</speech>
        </speeches>
        <speeches id="2">
            <speech>Vuelva siempre que desee realizar una transacción.</speech>
        </speeches>
        <speeches id="3">
            <speech>Esta función sólo está disponible para las personas con una "afiliación bancaria".</speech>
            <speech>Los no socios pueden utilizar la sucursal principal de nuestro banco en la ciudad de Bijli.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="2">
            <speech>¡Hola! Este es el S.S. Seafarer. Si desea viajar en él, hable con mi colega Sonny en la taquilla del muelle.</speech>
        </speeches>
        <speeches id="1">
            <speech>¿Te gustaría volver a Lansoil Docks?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>El agua es un elemento clave de nuestra existencia, y su esencia la capta mejor que nadie la "roca húmeda".</speech>
            <speech>Si me traes 5 setas grandes, te daré una de mis rocas a cambio.</speech>
        </speeches>
        <speeches id="2">
            <speech>Veo que te has traído las Grandes Setas. ¿Estás interesado en un intercambio? Te daré una Roca Húmeda a cambio de 5 de esas Grandes Setas.</speech>
        </speeches>
        <speeches id="3">
            <speech>Es una pena, porque parece que no respetas el agua.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aquí tienes. Encantado de hacer negocios con un compañero creyente en el elemento agua.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>El sol es un elemento clave de nuestra existencia, y su esencia se capta mejor en la "Roca de Calor".</speech>
            <speech>Si me traes 5 setas grandes, te daré una de mis rocas a cambio.</speech>
        </speeches>
        <speeches id="2">
            <speech>Veo que te has traído las Grandes Setas. ¿Estás interesado en un intercambio? Te daré una Roca Caliente a cambio de 5 de esas Grandes Setas.</speech>
        </speeches>
        <speeches id="3">
            <speech>Es una pena, porque parece que no respetas el sol y su calor.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aquí tienes. Encantado de hacer negocios con un compañero creyente en el elemento del fuego.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Los glaciares helados contribuyen decisivamente a nuestra existencia, y su esencia se capta mejor en la "Roca Helada".</speech>
            <speech>Si me traes 5 setas grandes, te daré una de mis rocas a cambio.</speech>
        </speeches>
        <speeches id="2">
            <speech>Veo que te has traído las Grandes Setas. ¿Estás interesado en un intercambio? Te daré una Roca Helada a cambio de 5 de esos Hongos Grandes.</speech>
        </speeches>
        <speeches id="3">
            <speech>Es una pena, porque parece que no respetas el hielo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Aquí tienes. Encantado de hacer negocios con un compañero creyente en el elemento hielo.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>La tierra es un elemento clave de nuestra existencia, y su esencia se capta mejor en la "roca lisa".</speech>
            <speech>Si me traes 5 setas grandes, te daré una de mis rocas a cambio.</speech>
        </speeches>
        <speeches id="2">
            <speech>Veo que te has traído las Grandes Setas. ¿Estás interesado en un intercambio? Te daré una Roca Suave a cambio de 5 de esos Hongos Grandes.</speech>
        </speeches>
        <speeches id="3">
            <speech>Es una pena, porque parece que no respetas la tierra.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Aquí tienes! ¡Encantado de hacer negocios con un compañero creyente en la tierra!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="10">
        <speeches id="1">
            <speech>Probablemente debería buscar a Sailor Barney antes de seguir adelante.</speech>
        </speeches>
    </conversation>
</npcs>