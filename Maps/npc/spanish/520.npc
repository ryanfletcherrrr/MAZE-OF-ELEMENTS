<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>No confundas los medios con el objetivo. Eso es lo que me enseñó una vez mi maestro.</speech>
        </speeches>
        <speeches id="2">
            <speech>La batalla es sólo el medio. La victoria es siempre el objetivo.</speech>
        </speeches>
        <speeches id="3">
            <speech>La batalla es sólo el medio. La victoria es siempre el objetivo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hnnph... No eres más que un mocoso... ¡¿Qué crees que soy?!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Normalmente sólo escucho música clásica, pero si pierdo, creo que probaré un poco de new age.</speech>
        </speeches>
        <speeches id="2">
            <speech>Me hago más fuerte con cada lágrima que lloro.</speech>
        </speeches>
        <speeches id="3">
            <speech>Me hago más fuerte con cada lágrima que lloro.</speech>
        </speeches>
        <speeches id="4">
            <speech>La new age se refiere simplemente a los compositores clásicos del siglo XX, ¿no?</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Mi trabajo depende del resultado de esta batalla.</speech>
        </speeches>
        <speeches id="2">
            <speech>Estuvo cerca... Apenas perdí... Gracias al servicio que presté, puedo conservar mi trabajo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Estuvo cerca... Apenas perdí... Gracias al servicio que presté, puedo conservar mi trabajo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Lo he vuelto a hacer. Gané... Me van a despedir por no dar un servicio lo suficientemente bueno...</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Goldeen" shouldSleep="" speed="1" sprite="118" type="pokemon" x="13" y="13">
        <path>RIGHTx3, LEFTx3</path>
        <onCollisionSpeech gap="4">Goldeen Goldeen Goldeen.</onCollisionSpeech>
        <speech>Goldeen... Goldeen...</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Aspiring Challenger Max" shouldSleep="" speed="1" sprite="32" type="npc" x="27" y="4">
        <path>RIGHTx3, DOWNx3, LEFTx3, UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>¡La rutina nunca se detiene! Tengo que ganar mi segunda insignia de gimnasio. ¡Quiero ser Maestro Pokémon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="SEAKING" shouldSleep="" speed="1" sprite="119" type="pokemon" x="35" y="15">
        <path>DOWNx2, LEFTx3, DOWNx1, RIGHTx3, UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>¡Mar... rey!</speech>
    </movingNpc>
</npcs>