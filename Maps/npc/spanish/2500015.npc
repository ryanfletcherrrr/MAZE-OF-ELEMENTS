<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=AMARILLO}Por favor, seleccione una planta.{ENDCOLOR}</speech>
            <speech>Los botones esperan a que los introduzcas, listos para llevarte donde necesites.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=VERDE}La consola del ascensor se cierra sola con un suave clic.{ENDCOLOR}</speech>
            <speech>Tendrás que activarlo de nuevo si deseas utilizarlo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¿Te estás metiendo con el Equipo Rocket? Mal movimiento, chico. ¡Estoy a punto de limpiar el suelo contigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Qué?! ¡No puede ser! ¡Esto tiene que ser algún tipo de error!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Qué?! ¡No puede ser! ¡Esto tiene que ser algún tipo de error!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te lo dije! Deberías haber entregado a tu Pokémon e irte.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Usted no entiende... La ciencia requiere financiación, y el Equipo Rocket la proporciona. ¡No tengo más remedio que luchar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tal vez... Tal vez hay otra manera de continuar mi investigación.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tal vez... Tal vez hay otra manera de continuar mi investigación.</speech>
        </speeches>
        <speeches id="4">
            <speech>No lo consigues. El progreso tiene un precio y, a veces, hay que hacer sacrificios.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>¡Vaya, vaya, vaya! ¡Si es algún imbécil patético tratando de arruinar nuestro glorioso regreso!</speech>
            <speech>Soy la {COLOR=PURPLE}magnífica Jessie{ENDCOLOR} del {COLOR=RED}Equipo Rocket{ENDCOLOR} - y me veo {COLOR=PINK}absolutamente impresionante{ENDCOLOR}¡mientras hago villanías!</speech>
            <speech>Este {COLOR=DORADO}Proyecto T.E.R.A.{ENDCOLOR} me convertirá en el {COLOR=PURPUR}más bello{ENDCOLOR} y {COLOR=ROJO}poderoso{ENDCOLOR} ¡Rocket de todos los tiempos!</speech>
            <speech>¡Prepárate para los problemas, porque estoy a punto de {COLOR=RED}demoler{ENDCOLOR} con {COLOR=PINK}estilo y gracia{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Esto es {COLOR=ROJO}imposible{ENDCOLOR}! ¡Mi {COLOR=PINK}estrategia perfecta{ENDCOLOR} fue {COLOR=PURPLE}impecable{ENDCOLOR}!</speech>
            <speech>¿Cómo te atreves a hacerme quedar mal delante del equipo de {COLOR=RED}Tera Energy{ENDCOLOR}?</speech>
            <speech>¡Esto es sólo un {COLOR=CYAN}retiro táctico{ENDCOLOR}! Volveré con un plan aún más {COLOR=PURPLE}fabuloso{ENDCOLOR}.</speech>
            <speech>Acuérdate de lo que te digo: {COLOR=RED}El Equipo Cohete{ENDCOLOR} resurgirá y yo estaré {COLOR=PINK}más guapa{ENDCOLOR} que nunca.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Uf! Mi {COLOR=PINK}hermoso cabello{ENDCOLOR} está hecho un desastre por esa batalla...</speech>
            <speech>Puede que hayáis ganado esta vez, ¡pero el {COLOR=RED}Equipo Rocket{ENDCOLOR} nunca se rinde ante nuestros {COLOR=GOLD}sueños de grandeza{ENDCOLOR}!</speech>
            <speech>La próxima vez traeré {COLOR=PURPLE}pokemon{ENDCOLOR}aún más espectaculares. ¡Pokemon a la altura de mi {COLOR=PINK}deslumbrante belleza{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Claro que he ganado! Mi {COLOR=PINK}radiante belleza{ENDCOLOR} y mis {COLOR=PURPLE}superiores tácticas{ENDCOLOR} ¡son imbatibles!</speech>
            <speech>Esta {COLOR=ORO}Energía Tera{ENDCOLOR} hace que mi Pokemon sea tan {COLOR=ROJO}magnífico{ENDCOLOR} como yo.</speech>
            <speech>¡Ahora lárgate antes de que decida convertirte en mi muñeco de entrenamiento personal!</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Discúlpenme! ¡No pierdo mi valioso tiempo con aficionados!</speech>
            <speech>¡Acaba primero con esos {COLOR=PURPUL}gruñones inferiores{ENDCOLOR} y vuelve cuando seas {COLOR=ORO}digno{ENDCOLOR} de mi atención!</speech>
            <speech>Tengo tratamientos de belleza que atender mientras tú haces el trabajo sucio.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Agent Reigns" shouldSleep="" speed="1" sprite="321" type="npc" x="7" y="10">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>No eres en secreto un gruñón Rocket disfrazado, ¿verdad?</speech>
        <speech>...Espera, no contestes. No quiero actualizar el papeleo de nuevo.</speech>
        <speech>Ah, y sí... Usar una peluca para estar encubierto, ¡cállate!</speech>
    </movingNpc>
</npcs>