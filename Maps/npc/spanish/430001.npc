<npcs>
    <npc direction="DOWN" hidden="false" id="1000" name="Guard" sprite="126" triggerX="15" triggerY="7" type="speech" x="15" y="5">
        <speech>Ten cuidado si decides cruzar el desierto. Es arriesgado.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Hey, si no es $PLAYER_NAME? ¿Cómo te ha ido? Además, ¿te las arreglaste para vencer a Gimnasio 4 todavía?</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>¡Oh, hola! ¡He estado genial, sí!</speech>
            <speech>Vencí al Gimnasio 4, sí. Pero hay algo más importante que me preocupa, en este momento</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>No sé si te has dado cuenta, pero hay un montón de gente sospechosa correteando por Jvaloh.</speech>
            <speech>Los he visto más de una vez. Se hacen llamar "Team Chaos", pero no es el nombre que me interesa...</speech>
            <speech>Por lo que he visto, estos tipos no traman nada bueno. Aunque no sé qué es lo que traman, estoy bastante seguro de que es algo gordo...</speech>
            <speech>Al menos, eso es lo que entendí de mi encuentro con su jefe... *$PLAYER_NAME narra toda la historia*</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>"Equipo Caos", ¿eh? Es un nombre patético.</speech>
            <speech>Pero, ahora que lo pienso, eso es muy parecido a como se llamaban a sí mismos esos perdedores a los que vencimos antes, ¿no, Ayaan?</speech>
            <speech>Sí, creo que era eso. Idiotas molestos, sólo hacen perder el tiempo a todos.</speech>
            <speech>Aunque tengo que admitir que tu descripción de esa caverna oculta y la central eléctrica me interesa. Tal vez deberíamos comprobarlo también, ¿no?</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Bueno, si esos tipos van por ahí causando problemas a todo el mundo, creo que es justo hacer una visita a la caverna abandonada.</speech>
            <speech>De hecho, te acompaño. Tal vez encontremos algo que valga la pena allí.</speech>
            <speech>Deberías cuidarte, $PLAYER_NAME. Además, nos reuniremos contigo en Lansoil Town, si averiguas algo más sobre esos tipos.</speech>
            <speech>De todos modos, ¡paz!</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
          <speech/>
        </speeches>
        <speeches id="2">
            <speech>Ya lo has oído, ¡es hora de irse!</speech>
            <speech>Te avisaremos si encontramos algo en esa vieja caverna, así que puedes seguir adelante. Ya tenemos la 5ª insignia, así que podemos dejar que te pongas al día.</speech>
            <speech>¡Hasta luego!</speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
    </conversation>
</npcs>