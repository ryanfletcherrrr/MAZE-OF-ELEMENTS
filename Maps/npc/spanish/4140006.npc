<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Soy Brawly! ¡Líder del Gimnasio de Dewford!</speech>
            <speech>Me he agitado en las agitadas olas de estas partes...</speech>
            <speech>Y me he hecho fuerte utilizando la cueva de las afueras de esta ciudad como campo de entrenamiento, además de usar el equipamiento de este Gimnasio.</speech>
            <speech>¿Así que quieres desafiarme? Déjame ver de qué estás hecho.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vale, me has pillado. ¡Toma esta Insignia de Gimnasio!</speech>
            <speech>Hmm... ¿Sabes qué? Creo que usted puede hacer pleno uso de esto, también.</speech>
            <speech>Seguro que esto ayudará a tus Pokémon a aumentar su masa muscular.</speech>
            <speech>Aumentar masa aumenta temporalmente la fuerza muscular del Pokémon.</speech>
            <speech>Este movimiento aumenta las estadísticas de ataque y defensa del Pokémon.</speech>
            <speech>¡Puedo ver tu talento convirtiéndose en una ola gigante que causa una tormenta de asombro con los Entrenadores un día!</speech>
            <speech>¡Espero con impaciencia el día en que pueda surfear tu ola gigante!</speech>
            <speech>Por cierto, ¿has estado en Granite Cave?</speech>
            <speech>Se encuentra al norte de esta ciudad. Está lleno de cosas fascinantes, como piedras raras y pinturas murales de miles de años de antigüedad.</speech>
            <speech>Mi amigo Steven corrió a la cueva cuando se lo conté.</speech>
        </speeches>
        <speeches id="3">
            <speech>Por cierto, ¿has estado en Granite Cave?</speech>
            <speech>Se encuentra al norte de esta ciudad. Está lleno de cosas fascinantes, como piedras raras y pinturas murales de miles de años de antigüedad.</speech>
            <speech>Mi amigo Steven corrió a la cueva cuando se lo conté.</speech>
        </speeches>
        <speeches id="4">
            <speech>Esta batalla fue demasiado fácil para mí. No obstante, me alegra darte otra oportunidad.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Tengamos una batalla divertida! Sin rencores, ¡no importa si ganamos o perdemos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Je...</speech>
        </speeches>
        <speeches id="3">
            <speech>Je...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡No te desanimes!  Acabo de tener suerte.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Alabo tu valentía al desafiarme. ¡Porque yo soy el que tiene la patada más fuerte!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. Los Pokémon lucharon. Mi fuerte patada no ayudó ni un poco.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Ir fácil en mí no está en mi vocabulario.</speech>
        </speeches>
        <speeches id="2">
            <speech>Aunque lo dé todo, no tiene sentido si pierdo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Aunque lo dé todo, no tiene sentido si pierdo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Para mí, la etiqueta es derrotar sin piedad a mis oponentes en la batalla, incluso a los débiles.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>El sudor que gotea antes de una batalla... ¿No te encanta lo fresco que es?</speech>
        </speeches>
        <speeches id="2">
            <speech>Al final de una batalla, sin aliento... ¿No es genial? ¡Completamente!</speech>
        </speeches>
        <speeches id="3">
            <speech>Al final de una batalla, sin aliento... ¿No es genial? ¡Completamente!</speech>
        </speeches>
        <speeches id="4">
            <speech>Estar cansado de la batalla con la ropa desaliñada... ¡Es genial! ¿No es realmente lo más guay?</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Gym Guide" randomRotation="false" sprite="5" x="10" y="39">
        <speech>¡Eh, eh, eh! Campeón en ciernes, ¿eh? El gimnasio Dewford es el lugar para estar si estás buscando una buena pelea.</speech>
        <speech>Brawly es muy potente con sus tipos de lucha, ¡pero no te preocupes! Los Pokémon voladores, psíquicos o hadas son tu boleto a la victoria.</speech>
        <speech>Mantén la cabeza alta, sé ágil y demuéstrales de qué estás hecho.</speech>
    </npc>
</npcs>