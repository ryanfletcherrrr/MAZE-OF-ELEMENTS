<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Nadar, montar en bici, correr, patinar... La lucha es una carrera más, ¡y nunca pierdo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Superado? De ninguna manera... ¡Necesito entrenar más duro!</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Superado? De ninguna manera... ¡Necesito entrenar más duro!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡La resistencia gana la carrera y la batalla!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>No estoy flotando por ahí... ¡estoy haciendo olas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que tengo que remar más fuerte...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que tengo que remar más fuerte...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Haha! ¡Te dejaste llevar por mis tácticas de marea!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Llueva o haga sol, mis Pokémon siempre están en su mejor momento.</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que mi racha acaba de ser... lavada.</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que mi racha acaba de ser... lavada.</speech>
        </speeches>
        <speeches id="4">
            <speech>Deberías haber traído un paraguas. ¡Mi Pokémon te atravesó!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡El océano es mi gimnasio! ¡A ver si puedes seguirme el ritmo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que me desvié del camino...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que me desvié del camino...</speech>
        </speeches>
        <speeches id="4">
            <speech>Te lo dije... ¡la marea siempre está a mi favor!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>La corriente está fuerte hoy... ¡espero que puedas mantenerte a flote!</speech>
        </speeches>
        <speeches id="2">
            <speech>De ninguna manera... ¡Me barrieron!</speech>
        </speeches>
        <speeches id="3">
            <speech>De ninguna manera... ¡Me barrieron!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Jajaja! ¡Te estás ahogando en mi estrategia!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>La belleza del océano esconde su fuerza... ¡a ver si puedes con ambas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que era todo chapoteo, sin onda...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que era todo chapoteo, sin onda...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te lo dije! La fuerza del mar es... ¡No es sólo para aparentar!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Espero que puedas cabalgar las olas, ¡porque vengo con fuerza!</speech>
        </speeches>
        <speeches id="2">
            <speech>No puedo creer que me hundiera así...</speech>
        </speeches>
        <speeches id="3">
            <speech>No puedo creer que me hundiera así...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Atrapado en la resaca! ¡Más suerte la próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Espero que sepas nadar porque estás a punto de meterte en aguas profundas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que fui todo chapoteo y nada de olas...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que fui todo chapoteo y nada de olas...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te hundiste como una roca! Será mejor que cojas un salvavidas la próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Soy la campeona de los días de playa. ¡No puedes ganar contra mis vibraciones soleadas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Aw hombre... ahora mi flotador está todo desinflado..</speech>
        </speeches>
        <speeches id="3">
            <speech>Aw hombre... ahora mi flotador está todo desinflado..</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te lo dije! Las vibraciones de la playa siempre ganan.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Gastrodon" speed="1" sprite="423" type="pokemon" x="10" y="44">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">BLUURP!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Willow" speed="1" sprite="28" type="npc" x="17" y="2">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>¡Vaya, este océano es absolutamente precioso!</speech>
        <speech>Definitivamente voy a pintar un cuadro con Staryu y Swanna de fondo.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Staryu" speed="1" sprite="120" type="pokemon" x="24" y="23">
        <path>DOWNx3,RIGHTx1,UPx3,LEFTx1</path>
        <onCollisionSpeech gap="4">Staryuuuuu!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Swanna" speed="1" sprite="581" type="pokemon" x="0" y="25">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Swannna!</onCollisionSpeech>
    </movingNpc>
</npcs>