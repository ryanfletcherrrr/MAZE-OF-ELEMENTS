<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=AMARILLO}Por favor, seleccione una planta.{ENDCOLOR}</speech>
            <speech>Los botones esperan a que los introduzcas, listos para llevarte donde necesites.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=VERDE}La consola del ascensor se cierra sola con un suave clic.{ENDCOLOR}</speech>
            <speech>Tendrás que activarlo de nuevo si deseas utilizarlo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{¡Ah, así que nos encontramos de nuevo!</speech>
            <speech>El Presidente y yo estamos discutiendo una propuesta de negocios vital. No te metas en asuntos de adultos...</speech>
            <speech>O, ¡experimenta un mundo de dolor!</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=RED}¡Arrgh! ¿Perdí otra vez?</speech>
            <speech>¡Vuélalo todo! ¡Arruinaste nuestros planes para Silph!</speech>
            <speech>¡Pero el Equipo Rocket nunca caerá! {COLOR=YELLOW}¡Nunca olvides que todos los Pokémon existen para el Equipo Rocket!{ENDCOLOR}</speech>
            <speech>Dejaré Silph Co. por ahora... ¡Pero volveré!</speech>
        </speeches>
        <speeches id="3">
            <speech>{COLOR=RED}Hmph. Así que has vuelto... Pero ahora no tengo nada que hacer contigo.</speech>
            <speech>Disfruta de tu pequeña victoria mientras puedas.</speech>
        </speeches>
        <speeches id="4">
            <speech>{¡Hah! Justo como esperaba.</speech>
            <speech>Patético. ¿Te atreves a desafiar al líder del Equipo Rocket con ese nivel de habilidad?</speech>
            <speech>No eres más que un obstáculo en mi camino. ¡Ahora, vete!</speech>
            <speech>Silph Co. ya nos pertenece.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{¡Querido muchacho! ¡Nos salvaste!</speech>
            <speech>El Equipo Rocket iba tras nuestra investigación y tecnología... ¡Me estremezco al pensar lo que podrían haber hecho!</speech>
            <speech>Como Presidente de Silph Co., debo agradecerle sus actos heroicos.</speech>
            <speech>Como muestra de nuestra gratitud, te regalo nuestra Poké Ball más avanzada.</speech>
            <speech>{COLOR=ORO}¡Recibiste la Bola Maestra!{ENDCOLOR}</speech>
            <speech>Es la Poké Ball definitiva, capaz de atrapar a cualquier Pokémon sin fallar.</speech>
            <speech>Úsalo sabiamente... Es la única que tenemos.</speech>
        </speeches>
        <speeches id="2">
            <speech>{Gracias de nuevo por salvar a Silph Co.</speech>
            <speech>Trabajaremos duro para garantizar que esto no vuelva a ocurrir.</speech>
            <speech>La ciudad está a salvo gracias a vosotros. Le deseo lo mejor en su viaje.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¿Has llegado hasta aquí? Impresionante. Pero aquí termina tu viaje, ¡por orden del mismísimo Giovanni!</speech>
        </speeches>
        <speeches id="2">
            <speech>No... ¡Se suponía que debía detenerte! El jefe no perdonará esto...</speech>
        </speeches>
        <speeches id="3">
            <speech>No... ¡Se suponía que debía detenerte! El jefe no perdonará esto...</speech>
        </speeches>
        <speeches id="4">
            <speech>Eres fuerte, pero no lo suficiente. ¡El Equipo Rocket siempre gana al final!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Ah... {COLOR=CYAN}nos volvemos a encontrar{ENDCOLOR}. El entrenador que {COLOR=RED}destruyó{ENDCOLOR}mi {COLOR=GOLD}Gimnasio Viridian{ENDCOLOR} y desmanteló {COLOR=PURPLE}el anterior {COLOR=PURPLE}Equipo Rocket{ENDCOLOR}.</speech>
            <speech>Deberías haberte quedado {COLOR=CYAN}retirado{ENDCOLOR}, entrenador. Tu {COLOR=RED}interferencia{ENDCOLOR} se ha convertido en un {COLOR=PURPLE}problema persistente{ENDCOLOR}.</speech>
            <speech>Pero {COLOR=DORADO}Proyecto T.E.R.A.{ENDCOLOR} representa {COLOR=ROJO}la{ENDCOLOR}evolución{ENDCOLOR} de Team Rocket. {COLOR=PURPLE}evolución{ENDCOLOR} - poder más allá de lo que se enfrentó antes.</speech>
            <speech>Esta vez, no habrá escapatoria. No habrá {COLOR=CYAN}victoria afortunada{ENDCOLOR}. Sólo {COLOR=PURPLE}la derrota absoluta{ENDCOLOR}.</speech>
            <speech>¡Acabemos con esta rivalidad de una vez por todas!</speech>
        </speeches>

        <speeches id="2">
            <speech>Otra vez... {¡Otra vez te interpones en mi camino!</speech>
            <speech>¿Cuántas veces debes {COLOR=PURPLE}humillar{ENDCOLOR} {COLOR=ORO}Equipo Rocket{ENDCOLOR} antes de estar satisfecho?</speech>
            <speech>Este {COLOR=CYAN}vendetta{ENDCOLOR} entre nosotros ha durado {COLOR=RED}suficientemente{ENDCOLOR}... pero está lejos de terminar.</speech>
            <speech>{COLOR=DORADO}Proyecto T.E.R.A.{ENDCOLOR} estaba destinado a ser mi {COLOR=PURPUL}final triunfo{ENDCOLOR} sobre ti... pero has demostrado {COLOR=CIAN}resiliente{ENDCOLOR} una vez más.</speech>
            <speech>Disfruta de esta victoria, entrenador... puede ser tu {COLOR=RED}última{ENDCOLOR}.</speech>
        </speeches>

        <speeches id="3">
            <speech>Sigues siendo una {COLOR=RED}espina{ENDCOLOR} en el bando{COLOR=GOLD}Team Rocket...</speech>
            <speech>Cada vez que reconstruimos, cada vez que {COLOR=PURPUR}evolucionamos{ENDCOLOR}... apareces tú para {COLOR=CYAN}destruirlo{ENDCOLOR}.</speech>
            <speech>Pero este {COLOR=ROJO}ciclo{ENDCOLOR} no continuará para siempre. {COLOR=DORADO}El equipo Rocket{ENDCOLOR} aprende de cada {COLOR=MORADO}derrota{ENDCOLOR}.</speech>
            <speech>Nuestro próximo encuentro será diferente... Te lo garantizo.</speech>
        </speeches>

        <speeches id="4">
            <speech>¡Por fin! ¡La {COLOR=PURPÚLE}persistente plaga{ENDCOLOR} que destruyó mi {COLOR=ORO}imperio{ENDCOLOR} ha sido {COLOR=ROJO}eliminada{ENDCOLOR}!</speech>
            <speech>{COLOR=DORADO}¡El Proyecto T.E.R.A.{ENDCOLOR} me ha dado el {COLOR=PURPUL}poder{ENDCOLOR} para superar nuestros {COLOR=CIAN}encuentros anteriores{ENDCOLOR}!</speech>
            <speech>Esta {COLOR=ROJO}victoria{ENDCOLOR}sabe más dulce que cualquier {COLOR=ORO}insignia de gimnasio{ENDCOLOR} o {COLOR=PÚRPURA}conquista{ENDCOLOR} anterior.</speech>
            <speech>¡La {COLOR=CYAN}edad de Giovanni{ENDCOLOR} comienza {COLOR=RED}ahora{ENDCOLOR}!</speech>
        </speeches>

        <speeches id="5">
            <speech>¿Crees que puedes {COLOR=ROJO}correr{ENDCOLOR}para enfrentarte a mí como en nuestros {COLOR=PURPÚLEO}encuentros anteriores{ENDCOLOR}?</speech>
            <speech>Esta vez estoy {COLOR=ORO}preparado{ENDCOLOR}. Despejaré mis {COLOR=CYAN}fuerzas{ENDCOLOR} sistemáticamente, como debe hacer un {COLOR=RED}verdadero retador{ENDCOLOR}.</speech>
            <speech>Nuestra {COLOR=PURPLE}batalla final{ENDCOLOR}ocurrirá cuando {COLOR=GOLD}I{ENDCOLOR}decida que es el momento.</speech>
        </speeches>
    </conversation>
    <npc direction="RIGHT" hidden="false" id="1" name="Ms. Vellum" randomRotation="false" sprite="38" x="1" y="8">
        <speech>Ve a darle a ese matón trajeado un pedazo de tu mente, querida.</speech>
    </npc>
</npcs>