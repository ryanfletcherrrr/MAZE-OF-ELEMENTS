<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Trabajo muy duro, pero eso no significa que sea fuerte.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡¿Qué?! ¡¿Incluso yo puedo perder?! ¡Pero soy un genio de la lucha!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Elegí el camino de la chica punk. Aunque no ser popular me está afectando...</speech>
        </speeches>
        <speeches id="2">
            <speech>Bien... Tal vez cambie mi tono de chica punk a chica surfista. Ahora, ¡cuidado!</speech>
        </speeches>
        <speeches id="3">
            <speech>Bien... Tal vez cambie mi tono de chica punk a chica surfista. Ahora, ¡cuidado!</speech>
        </speeches>
        <speeches id="4">
            <speech>Tal vez es malo que nunca le doy una oportunidad a tipos medio fuertes...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>He pasado 20 años intentando encontrarme a mí mismo... ¿Pero dónde estoy?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Espera un segundo! ¡Eh! ¿No sabes quién soy?</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Espera un segundo! ¡Eh! ¿No sabes quién soy?</speech>
        </speeches>
        <speeches id="4">
            <speech>Antes de empezar a buscar mi verdadero yo... ¿En qué parte del mundo estamos?</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Para! Voy a tener que pedirte que no te muevas. ¡Sólo siéntate y mira lo que hago con mis tijeras!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Sabía que odiaba a los humanos! ¡Todo lo que necesito son tijeras!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Sabía que odiaba a los humanos! ¡Todo lo que necesito son tijeras!</speech>
        </speeches>
        <speeches id="4">
            <speech>Has demostrado una gran destreza cortando... Afilaré mis tijeras para enfrentarte de nuevo.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Mis Pokémon triunfarán sobre los tuyos! ¡Puedes apostar a que pierdes!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ahh... Estoy sin blanca... Eso es todo. No me queda nada...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahh... Estoy sin blanca... Eso es todo. No me queda nada...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Muy bien! ¡La victoria es mía! ¡La fortuna me sonríe!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Alabo tu valentía al desafiarme. ¡Porque yo soy el que tiene la patada más fuerte!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. Los Pokémon lucharon. Mi fuerte patada no ayudó ni un poco.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Es simplemente una batalla Pokémon, ¿verdad? ¿Por qué tan serio?</speech>
        </speeches>
        <speeches id="2">
            <speech>No es que pierdas realmente nada cuando pierdes. Mientras lo disfrutes, es suficiente.</speech>
        </speeches>
        <speeches id="3">
            <speech>No es que pierdas realmente nada cuando pierdes. Mientras lo disfrutes, es suficiente.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Y qué si pierdes? Ganar no da dinero.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¡Les presentaré movimientos elegantes dignos del título de Niño Rico!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Pensar que cualquiera podría ser más fuerte que yo! ...¡Tú no eres cualquiera!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Pensar que cualquiera podría ser más fuerte que yo! ...¡Tú no eres cualquiera!</speech>
        </speeches>
        <speeches id="4">
            <speech>Se dice que la fuerza de un Pokémon depende de su entrenamiento. No es culpa tuya. No se puede evitar.</speech>
        </speeches>
    </conversation>
</npcs>