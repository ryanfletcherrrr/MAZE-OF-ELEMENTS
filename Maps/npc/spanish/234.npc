<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>La melancolía puede parecer decaída, pero no dejes que eso te engañe, ¡es más dura de lo que parece!</speech>
        </speeches>
        <speeches id="2">
            <speech>Aww ahora yo soy el triste</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww ahora yo soy el triste</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? Glooms no sólo es mono, ¡es un auténtico portento!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>El terreno abrupto de la Ruta 9 hace que los entrenadores sean duros. Veamos si puedes con ello.</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que me resbalé con una piedra suelta, pero volveré a subir con más fuerza.</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que me resbalé con una piedra suelta, pero volveré a subir con más fuerza.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! Como una montaña robusta, me mantengo fuerte sin importar el desafío.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Puede que mis bichos sean pequeños, ¡pero no los subestimes! Son rápidos, resistentes y siempre están listos para atacar a sus enemigos.</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que mi estrategia fue aplastada. Es hora de entrenar aún más a mi equipo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que mi estrategia fue aplastada. Es hora de entrenar aún más a mi equipo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo ves? Los bichos no son sólo bichos espeluznantes. ¡Son campeones en ciernes!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Puede que sea joven, ¡pero mis Pokémon pegan fuerte! ¡Prepárate para un auténtico desafío!</speech>
        </speeches>
        <speeches id="2">
            <speech>Quizá debería haber dedicado menos tiempo a presumir y más a entrenar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Quizá debería haber dedicado menos tiempo a presumir y más a entrenar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Haha! Te lo dije. Ser joven sólo significa que tengo más tiempo para mejorar.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡No hay nada mejor que una buena caminata y una gran batalla! ¡A ver si tienes aguante para seguir el ritmo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Whoa-ho! ¡Tienes mucha fuerza! Tendré que intensificar mi entrenamiento.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Whoa-ho! ¡Tienes mucha fuerza! Tendré que intensificar mi entrenamiento.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! Al igual que escalar una montaña, las batallas requieren paciencia y resistencia.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Los bichos son los mejores! Rápidos, difíciles y cada vez más fuertes, ¡como yo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que mi equipo aún necesita tiempo para evolucionar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que mi equipo aún necesita tiempo para evolucionar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? Los bichos no son débiles. Sólo tienes que creer en ellos.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Estos senderos rocosos fortalecen las piernas y fortalecen a los Pokémon. ¡Veamos si puedes con la subida!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph ... incluso la roca más poderosa puede agrietarse. Te has ganado esta.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph ... incluso la roca más poderosa puede agrietarse. Te has ganado esta.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sólido como una roca! ¡Te falta mucho para igualar mi fuerza!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>La lucha es como la moda: la gracia, la confianza y un toque de estilo marcan la diferencia.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh cielos... Supongo que incluso la belleza necesita un plan de respaldo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh cielos... Supongo que incluso la belleza necesita un plan de respaldo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Impecable! Una verdadera victoria siempre debe ser tan deslumbrante como el entrenador que la respalda.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡Me encantan los Pokémon bonitos! ¡Pero no creas que no pueden luchar también!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oh, no! A lo mejor tengo que entrenar con mis Pokémon en vez de cepillarles el pelo.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Oh, no! A lo mejor tengo que entrenar con mis Pokémon en vez de cepillarles el pelo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? La fuerza y la belleza van de la mano.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>¡Vaya! ¡No puede ser! ¡Tú también llegaste hasta aquí!</speech>
            <speech>Esto es increíble, ¡los dos hemos llegado tan lejos desde que nos conocimos en el Bosque Viridiano!</speech>
            <speech>Míranos ahora, ¡ambos nos hacemos más fuertes a cada paso! ¡Mi sueño de convertirme en Maestro Pokemon está muy cerca!</speech>
            <speech>¡Mi equipo se ha vuelto increíble! Charmeleon se ha hecho más fuerte, y Pikachu... bueno, ¡ya lo verás!</speech>
            <speech>Puede que esta sea nuestra batalla más épica. ¿Preparados para ver lo lejos que hemos llegado?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Eso fue absolutamente legendario!</speech>
            <speech>Te has convertido en un entrenador increíble. ¡Cada batalla contigo me empuja a ser mejor!</speech>
            <speech>Hola, esta vez tengo algo muy especial para ti: ¡esta {COLOR=ORO}Bola de Luz{ENDCOLOR} que he encontrado!</speech>
            <speech>Se supone que potencia los ataques de tipo eléctrico. ¡Perfecto para cualquier Pikachu que puedas atrapar!</speech>
            <speech>Y toma, llévate también este premio en metálico: ¡sin duda te lo has ganado después de esa increíble batalla!</speech>
            <speech>¡Sigue haciéndote más fuerte! ¡Sé que ambos llegaremos a la Liga Pokemon!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hola, compañero entrenador.</speech>
            <speech>¡La Ruta 9 puede ser bastante dura con todos estos entrenadores! ¿Cómo va esa bola de luz?</speech>
            <speech>Estoy impaciente por ver lo fuertes que nos hacemos los dos.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Guau! Esa batalla fue increíble, ¡aunque Pikachu y yo salimos victoriosos!</speech>
            <speech>Usted sí que sabe sacar lo mejor de su equipo, ¡estuvo muy cerca!</speech>
            <speech>Toma, coge esta {COLOR=ORO}Bola de Luz{ENDCOLOR} y el dinero del premio como sea - ¡te lo has ganado!</speech>
            <speech>Cada batalla contigo me hace mejor entrenador. Gracias.</speech>
            <speech>Sigamos entrenando duro: ¡la Liga Pokemon nos espera!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Bouffalant" speed="1" sprite="626" type="pokemon" x="17" y="13">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4">BRRAAWWF!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="2" name="Spearow" speed="1" sprite="21" type="pokemon" x="38" y="32">
        <path>UPx3,RIGHTx3,LEFTx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Speaarrowwww!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Emolga" speed="1" sprite="587" type="pokemon" x="41" y="17">
        <path>DOWNx3,LEFTx3,UPx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Emooool!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="4" name="Voltorb" speed="1" sprite="100" type="pokemon" x="53" y="35">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Vooolt!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Spearow" speed="1" sprite="21" type="pokemon" x="33" y="0">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Sppeaaar!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="6" name="Chinchou" speed="1" sprite="170" type="pokemon" x="91" y="6">
        <path>RIGHTx2,DOWNx2,UPx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Chiiinchooou!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="8" name="Chloe" randomRotation="true" sprite="60" x="72" y="24">
        <speech>Me encanta llenar mi Pokédex.</speech>
        <speech>A veces, incluso consigo acceso a nuevas zonas solo por demostrar cuántos Pokémon he registrado.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="10" name="Luke" speed="1" sprite="102" type="npc" x="26" y="23">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Encontrarás muchos Pokémon de tipo Eléctrico en estas rutas.</speech>
        <speech>Menos mal que estoy en un descanso, ¡me han hecho zapping más veces de las que me meten el almuerzo en el microondas!</speech>
    </movingNpc>
    <movingNpc direction="UP" id="11" name="Hunter" speed="1" sprite="49" type="npc" x="96" y="16">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>¡Amigo!</speech>
        <speech>Mi Magneton se convirtió en Magnezone cuando le tiré accidentalmente una Piedra del Trueno.</speech>
    </movingNpc>
</npcs>