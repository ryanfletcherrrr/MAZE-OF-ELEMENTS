<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>La escuela es aburrida. No tengo nada que hacer. Bostezo. Sólo estoy batallando para matar el tiempo.</speech>
        </speeches>
        <speeches id="2">
            <speech>En realidad me estoy cansando de batallar... Tiene que haber algo nuevo que hacer...</speech>
        </speeches>
        <speeches id="3">
            <speech>En realidad me estoy cansando de batallar... Tiene que haber algo nuevo que hacer...</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Se supone que debo alegrarme cuando gane? Es demasiado tarde para emocionarse ahora.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Ya tengo la mayoría de los Pokémon y más dinero del que sé qué hacer con él.</speech>
        </speeches>
        <speeches id="2">
            <speech>Estoy tan bien que la vida se ha vuelto tediosa. Incluso experiencias como ésta me divierten.</speech>
        </speeches>
        <speeches id="3">
            <speech>Estoy tan bien que la vida se ha vuelto tediosa. Incluso experiencias como ésta me divierten.</speech>
        </speeches>
        <speeches id="4">
            <speech>Yo también acabo de ganar todas mis batallas Pokémon. Siento que mi vida ya ha terminado.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Levamos anclas cuando quieras! Dime, amigo mío, ¿a dónde nos dirigimos?</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Estás seguro? Bueno, Peeko te debe la vida.</speech>
            <speech>Dímelo cuando quieras zarpar. Me enfrentaré a cualquier marea por ti.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>$PLAYER_NAME, menos mal que estás aquí. Parece que el Equipo Aqua ha llevado mi nave y a Peeko más al sur de la Ruta 104.</speech>
            <speech>Estoy al límite sin Peeko y mi nave. Debemos alcanzarlos antes de que sea demasiado tarde. ¿Me ayudarás a rastrearlos?</speech>
            <speech>Estoy realmente agradecido por su valentía y ayuda. Dirijámonos al sur inmediatamente. Cada segundo cuenta en nuestra persecución.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Has descubierto alguna pista sobre Peeko y mi nave, $PLAYER_NAME? No debemos dejar que el Equipo Aqua se nos escape de las manos.</speech>
            <speech>Están por ahí en algún lugar al sur de la ruta 104. Cada momento que nos retrasamos les da más ventaja. ¡Sigamos con la persecución!</speech>
        </speeches>
    </conversation>



    <movingNpc direction="DOWN" id="3" name="Surskit" speed="1" sprite="283" type="pokemon" x="9" y="23">
        <path>DOWNx8,LEFTx5,UPx8,RIGHTx5</path>
        <onCollisionSpeech gap="4">Surskit! Surskit!</onCollisionSpeech>
        <speech>Surskit camina sobre el agua, ¡es tan irreal!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Mrs. Turner" randomRotation="true" sprite="60" x="14" y="4">
        <speech>Quizá no estoy hecho para cultivar bayas.</speech>
        <speech>Todo lo que toco muere.</speech>
        <speech>*sobs*</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Patrick" randomRotation="false" sprite="71" x="16" y="27">
        <speech>Mira cómo van estos dos.</speech>
        <speech>¿No son increíbles?</speech>
        <speech>Bob es mi mejor amigo.</speech>
    </npc>
    <movingNpc direction="DOWN" id="1" name="Bob" speed="1" sprite="4" type="npc" x="16" y="30">
        <path>RIGHTx1,LEFTx1,RIGHTx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Gary! Return! please....</onCollisionSpeech>
        <speech>¡Vamos Gary! ¡Vuelve a la pelota!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Shellos (Gary)" speed="1" sprite="422" type="pokemon" x="15" y="30">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">mewmeow!</onCollisionSpeech>
        <speech>¡Miau!</speech>
    </movingNpc>
</npcs>