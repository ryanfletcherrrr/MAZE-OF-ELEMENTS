<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Saludos, buscador de los tesoros de la tierra. Has venido en busca de planos de picos, supongo.</speech>
            <speech>Sin embargo, estos diseños exigen una mano experimentada. Un minero de nivel 20 o superior posee la sabiduría necesaria.</speech>
            <speech>Vuelve cuando hayas perfeccionado tu arte hasta este nivel. Los secretos de la tierra aguardan a quienes estén preparados para entenderlos.</speech>
        </speeches>

        <speeches id="2">
            <speech>Bienvenido, buscador. Estás ante un conservador de las mejores herramientas de la minería.</speech>
            <speech>Los planos que ofrezco no son meros dibujos; son llaves para abrir la generosidad de la tierra.</speech>
            <speech>Cada uno de ellos es un testimonio del viaje del minero, que exige respeto y un cierto nivel de maestría.</speech>
            <speech>Examine mi colección con esta idea en mente. La elección es suya.</speech>
        </speeches>
    </conversation>

   <conversation id="2">
       <speeches id="1">
           <speech>Buscador de las profundidades, comienza tu viaje hacia la fabricación del pico de oro, aunque el camino sigue sin estar claro.</speech>
           <speech>Se necesita: un plano de pico de oro, diez escamas de corazón, una pepita y una perla,</speech>
           <speech>un caparazón fosilizado, un coral petalizado y un fragmento de placa de concha.</speech>
           <speech>Estos materiales, una vez unidos, forjarán una herramienta de leyenda.</speech>
       </speeches>

       <speeches id="2">
           <speech>¡Por fin, los elementos han convergido! El Plano, las Escamas del Corazón y otros tesoros están listos.</speech>
           <speech>¿Comenzamos la forja de la Piqueta de Oro, fusionando estos elementos en una obra maestra singular?</speech>
       </speeches>

       <speeches id="3">
           <speech>Entendido. El momento de la creación es sagrado y exige disposición. Si lo reconsideras, espero tu decisión.</speech>
       </speeches>

       <speeches id="5">
           <speech>El arte de los antiguos está ahora a tu alcance, encapsulado en este pico de oro.</speech>
           <speech>Úsalo con la sabiduría de un minero experimentado. Que descubra riquezas y secretos enterrados durante mucho tiempo.</speech>
           <speech>Puede que nuestros caminos vuelvan a cruzarse, si los tesoros ocultos de la Tierra nos llaman para que los descubramos. Hasta entonces, profundiza con sabiduría.</speech>
       </speeches>
   </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Saludos, buscador de profundidades incomparables. Tu ambición te lleva al umbral del pico de platino.</speech>
            <speech>Esenciales son: el Platinum Pickaxe Blueprint, veinticinco Heart Scales, cinco Big Pearls, un Fossilized Crest,</speech>
            <speech>Un fragmento de ala antigua, una esquirla de cresta glaciar y un pez fosilizado.</speech>
            <speech>Juntos, darán a luz una herramienta incomparable en poder y esplendor.</speech>
        </speeches>

        <speeches id="2">
            <speech>¡He aquí la convergencia de los elementos más raros! El Plano, las Escamas del Corazón, las Grandes Perlas y las reliquias de los antiguos se alinean.</speech>
            <speech>¿Deseas fusionar estas maravillas, forjando la excelsa Piqueta de Platino?</speech>
        </speeches>

        <speeches id="3">
            <speech>El oficio espera tu disposición. La creación de una herramienta así no debe apresurarse. Vuelve cuando estés decidido.</speech>
        </speeches>

        <speeches id="4">
            <speech>Con mano firme y un rito ancestral, los elementos que tenemos ante nosotros se entrelazarán, manifestando la Piqueta de Platino.</speech>
            <speech>Este instrumento de leyendas te servirá de faro en la oscuridad, revelándote los secretos más guardados del mundo.</speech>
            <speech>Gracias a tu determinación y a estos materiales sagrados, se ha creado el pico de platino, una maravilla de la artesanía.</speech>
            <speech>Que su resplandor guíe tu camino hacia fortunas indecibles. Aventúrate con el poder de los siglos a tu lado.</speech>
            <speech>Que te vaya bien, minero de leyendas. Que las profundidades revelen su generosidad en tus dignas manos.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>En lo alto de este pico solitario, donde las estrellas besan la tierra, me paro.</speech>
            <speech>Buscador de lo último, vienes a por el pico de diamante.</speech>
            <speech>Tu búsqueda exige: un Plano de Diamante, cuarenta Escamas de Corazón, un Fragmento de Cometa, un Hilo de Perla,</speech>
            <speech>un residuo fósil oceánico, un fragmento de concha espiral, un colmillo reptiliano y una mandíbula rampante.</speech>
            <speech>Reúne estas joyas de la tierra y el cosmos y, juntos, desvelaremos una creación más allá de la mera comprensión mortal.</speech>
        </speeches>

        <speeches id="2">
            <speech>Los cielos se alinean, la tierra susurra. Tu tesoro cósmico y terrestre espera su destino.</speech>
            <speech>¿Está tu espíritu preparado para presenciar el nacimiento de la Piqueta de Diamante, una maravilla que une cielo y tierra?</speech>
        </speeches>

        <speeches id="3">
            <speech>Paciencia, buscador. El cosmos no se precipita, y nosotros tampoco deberíamos hacerlo. Reflexiona sobre esta monumental tarea.</speech>
            <speech>Cuando tu determinación sea tan firme como el propio diamante, regresa. Las estrellas esperarán a su campeón.</speech>
        </speeches>

        <speeches id="4">
            <speech>Que el cosmos converja, mientras el fuego de las estrellas y la esencia de la tierra se funden. Cada elemento, un verso en esta epopeya de la creación.</speech>
            <speech>Surge la Piqueta de Diamantes, una obra maestra de artesanía celestial, tu testamento para los cielos y la tierra.</speech>
            <speech>Esta ceremonia concluye. La Piqueta de Diamante, una fusión del poder cósmico y la resistencia de la tierra, ya es tuya.</speech>
            <speech>Úsala para desvelar secretos ocultos desde los albores del mundo. Viaja, portador del poder del cosmos, y desvela los misterios de la creación.</speech>
        </speeches>
    </conversation>
</npcs>