<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="Harry" randomRotation="false" sprite="11" x="35" y="23">
        <speech>¿Qué quieres TÚ?</speech>
        <speech>¿Qué estoy haciendo? Nada...</speech>
        <speech>Aquí no pasa nada turbio... ¡prometido!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Howard" randomRotation="false" sprite="108" x="60" y="22">
        <speech>Vengo de un pueblo remoto de la región de Jvaloh.</speech>
        <speech>Siempre quise ver el mar, así que me mudé a Hoenn.</speech>
        <speech>Sin remordimientos.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="3" name="Stevie" speed="1" sprite="21" type="npc" x="49" y="16">
        <path>RIGHTx16,LEFTx16</path>
        <onCollisionSpeech gap="4">You are in the way.</onCollisionSpeech>
        <speech>Estoy entrenando con mi sharpedo para vencer a Winoa en una carrera de natación.</speech>
        <speech>Espera, esta vez ganaremos.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="49" y="15">
        <path>RIGHTx16,LEFTx16</path>
        <onCollisionSpeech gap="4">Sharp! Sharpedo!</onCollisionSpeech>
        <speech>¡¡SH-SHAR!!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="5" name="Winoa" speed="1" sprite="22" type="npc" x="70" y="13">
        <path>RIGHTx7,DOWNx5,LEFTx7,UPx5</path>
        <onCollisionSpeech gap="4">How can you be in my way in the ocean?</onCollisionSpeech>
        <speech>¡Stevie, no tiene ninguna oportunidad!</speech>
        <speech>Se lo enseñaré. Quiero decir .. míralo ..</speech>
        <speech>Nadar es mucho más que hacer largos como él.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="74" y="24">
        <path>UPx1,DOWNx1</path>
        <onCollisionSpeech gap="4">Karp!KARP!</onCollisionSpeech>
        <speech>Este Magikarp fue arrastrado hasta la orilla.</speech>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Te hundirás como una piedra cuando te enfrentes a mis Pokémon de agua!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que ha salido a la superficie... Has flotado hacia la victoria.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que ha salido a la superficie... Has flotado hacia la victoria.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ahora estás en el fondo del océano!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Vas a fracasar en esta batalla! ¡Mis Pokémon son como tiburones!</speech>
        </speeches>
        <speeches id="2">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="3">
            <speech>No me lo puedo creer.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eres sólo un pez pequeño en mi gran océano!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡No podrás escapar de mi resaca! ¡Mis Pokémon te hundirán!</speech>
        </speeches>
        <speeches id="2">
            <speech>Soy yo quien flota sin rumbo... Has escapado de mi resaca.</speech>
        </speeches>
        <speeches id="3">
            <speech>Soy yo quien flota sin rumbo... Has escapado de mi resaca.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Fuiste arrastrado por mis poderosas corrientes!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Hagamos de esto un torbellino de batalla! ¡Mis Pokémon te absorberán hasta la derrota!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está drenado... Has escapado de mi remolino.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está drenado... Has escapado de mi remolino.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Fuiste absorbido por mi remolino! Mejor suerte la próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Hagamos de esto un torbellino de batalla! ¡Mis Pokémon te absorberán hasta la derrota!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está drenado... Has escapado de mi remolino.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está drenado... Has escapado de mi remolino.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Fuiste absorbido por mi remolino! Mejor suerte la próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Vas a estar hecho polvo cuando acabe esta batalla!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está reseco... Has agotado mis posibilidades de ganar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está reseco... Has agotado mis posibilidades de ganar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás anegado y te hundes rápido!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Te vas a quedar hecho polvo cuando acabe esta batalla!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está reseco... Has agotado mis posibilidades de ganar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está reseco... Has agotado mis posibilidades de ganar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás anegado y te hundes rápido!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="7" name="Pelipper" speed="1" sprite="279" type="pokemon" x="19" y="6">
        <path>DOWNx6,UPx6</path>
        <onCollisionSpeech gap="4">Pelipp! Pelipp!</onCollisionSpeech>
        <speech>¡Pepe!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Wingull" speed="1" sprite="278" type="pokemon" x="36" y="12">
        <path>RIGHTx30,DOWNx3,LEFTx30,UPx3</path>
        <onCollisionSpeech gap="4">Wingull! Wingull!</onCollisionSpeech>
        <speech>¡Wingull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Wingull" speed="1" sprite="278" type="pokemon" x="54" y="25">
        <path>UPx2,LEFTx13,DOWNx2,RIGHTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>