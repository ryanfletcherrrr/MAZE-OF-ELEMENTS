<npcs>
    <npc direction="DOWN" id="1000" name="Fisherman Chu" sprite="16" x="53" y="46">
        <speech>No tengo ni idea de lo que estoy pescando, pero tengo grandes esperanzas de encontrar algún día algo que ningún otro pescador haya conseguido todavía.</speech>
    </npc>
    <npc direction="UP" id="1001" name="Swimmer Sam" randomRotation="true" sprite="21" x="30" y="10">
        <speech>¿Debo saltar al agua o no?</speech>
        <speech>Decisiones...</speech>
    </npc>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>Deja de seguirme. ¿Quieres?</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>¿Qué demonios? Solo vete amigo. Deja de acosarme o llamaré a Jenny.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Estoy aquí para cazar bichos. ¿Cuál es tu motivación?</speech>
        </speeches>
        <speeches id="2">
            <speech>Cruel humano, deberías haberme dicho que tu motivación es destruir los cazadores de bichos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Cruel humano, deberías haberme dicho que tu motivación es destruir los cazadores de bichos.</speech>
        </speeches>
        <speeches id="4">
            <speech>La gente sin motivación no debería existir. ¡Adiós!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¿Qué te gusta más? ¿Abejas o mariposas?</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que no tienes interés en ninguno de ellos.</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que no tienes interés en ninguno de ellos.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Qué te gusta más ahora? ¿Perder una batalla o perder dinero?</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¿Así que pensabas que las damas del aroma sólo pueden curar? Bueno, yo estoy aquí para darte dolor.</speech>
        </speeches>
        <speeches id="2">
            <speech>Creo que debería cambiar de carrera.</speech>
        </speeches>
        <speeches id="3">
            <speech>Creo que debería cambiar mi carrera de nuevo a la curación.</speech>
        </speeches>
        <speeches id="4">
            <speech>La próxima vez que veas una dama de aroma, ten miedo.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Vine aquí para atrapar Dratini pero todo lo que he encontrado aquí es Poliwrath. Lucha contra mí porque quiero probar estos.</speech>
        </speeches>
        <speeches id="2">
            <speech>Voy a liberarlos a todos y a jubilarme de la pesca.</speech>
        </speeches>
        <speeches id="3">
            <speech>Voy a liberarlos a todos y a jubilarme de la pesca.</speech>
        </speeches>
        <speeches id="4">
            <speech>No está mal. No está nada mal. Quién quiere un Dratini cuando puedes tener a Poliwrath.</speech>
        </speeches>
    </conversation>
</npcs>