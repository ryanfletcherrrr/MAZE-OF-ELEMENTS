<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¿Te sorprendió verme $PLAYER_NAME?</speech>
            <speech>Me aburría, así que vine a Hearthome de vacaciones.</speech>
            <speech>¡Estoy igual de sorprendido de verte aquí, querida!</speech>
        </speeches>
        <speeches id="2">
            <speech>Pon este poco de glamour.</speech>
            <speech>Estoy segura de que te quedará bien. Después de todo, yo lo elegí.</speech>
            <speech>Adiós por ahora.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¿Sí? ¿Cómo dice?</speech>
            <speech>Ah, oui, ¿concursos por los que estás aquí? Actualmente no hay concursos debido a Covid.</speech>
            <speech>Por cierto, Fantina, la jefa de gimnasio de Hearthome, también fue concursante.</speech>
            <speech>¡Ella es, cómo se dice, très fantastique! Fantina soy yo, por supuesto.</speech>
            <speech>Mmm, déjame ver... Usted también parece ser très fuerte. Enfin, así será. ¡Te espero en el gimnasio!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <!-- Option Display Dialogue -->
            <speech>¡Saludos, $PLAYER_NAME! La arena te espera, pero antes, una prueba de tus habilidades de caza.</speech>
            <speech>Tráeme 10 Pokémon capturados por ti mismo de esta lista: Dreepy, Chansey, Gligar, Horsea, Clefairy,</speech>
            <speech>Sneasel, Riolu, Mawile, Wingull o Ralts, y evaluaré su valor.</speech>
            <speech>¡Escucha mis palabras! El cazador con la colección más impresionante ganará el codiciado Escudo del Campeón.</speech>
            <speech>¿Qué te trae aquí antes del gran torneo?</speech>
        </speeches>
        <!-- Concluded Dialogue -->
        <speeches id="2">
            <speech>El calentamiento ha terminado, $PLAYER_NAME, y ahora comienza la verdadera batalla.</speech>
            <speech>Los jueces han contabilizado los resultados, y el Escudo del Campeón espera a su legítimo dueño.</speech>
            <speech>¡Adiós, $PLAYER_NAME! Que la victoria te favorezca en el próximo torneo.</speech>
        </speeches>
        <!-- No Eligible Submission Dialogue -->
        <speeches id="3">
            <speech>¡Ay, $PLAYER_NAME!</speech>
            <speech>Tu colección carece de los Pokémon necesarios de la lista de caza.</speech>
            <speech>Sal y captura una de las especies elegidas para demostrar tu habilidad.</speech>
        </speeches>
        <!-- Max Submissions Dialogue -->
        <speeches id="4">
            <speech>¡Por las reglas del torneo, $PLAYER_NAME!</speech>
            <speech>Has alcanzado el número máximo de envíos para este evento de calentamiento.</speech>
            <speech>Si deseas cambiar tus entradas, puedes reiniciar tu lista.</speech>
        </speeches>
        <!-- Invalid Submission Dialogue -->
        <speeches id="5">
            <speech>¡Algo está mal, $PLAYER_NAME!</speech>
            <speech>Tu Pokémon no pertenece a la lista permitida de caza.</speech>
            <speech>Asegúrate de que tu selección sea de los siguientes: Dreepy, Chansey, Gligar,</speech>
            <speech>Horsea, Clefairy, Sneasel, Riolu, Mawile, Wingull o Ralts.</speech>
        </speeches>
        <!-- Successful Submission Dialogue -->
        <speeches id="6">
            <speech>¡Bien hecho, cazador!</speech>
            <speech>Tu envío ha sido aceptado por los jueces.</speech>
            <speech>Ahora compites por el honor del Escudo del Campeón.</speech>
        </speeches>
        <!-- Successful Reset Dialogue -->
        <speeches id="7">
            <speech>Por las tradiciones de esta tierra, tus envíos han sido reiniciados, $PLAYER_NAME.</speech>
            <speech>Ahora el camino está despejado para nuevas cacerías y mayores victorias.</speech>
            <speech>¡Elige tus próximas capturas sabiamente!</speech>
        </speeches>
        <!-- Reset Confirmation Dialogue -->
        <speeches id="8">
            <speech>¿Deseas deshacer tus envíos, $PLAYER_NAME?</speech>
            <speech>Este poderoso reinicio borrará todos tus envíos actuales, permitiéndote cazar nuevamente.</speech>
            <speech>Pero recuerda, una vez reiniciado, esta acción no puede deshacerse. ¿Estás seguro de que quieres continuar?</speech>
        </speeches>
    </conversation>

</npcs>