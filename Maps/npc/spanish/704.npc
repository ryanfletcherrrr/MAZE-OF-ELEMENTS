<npcs>
    <npc direction="UP" id="1000" name="Kid Nelson" randomRotation="true" sprite="95" x="84" y="7">
        <speech>¡Nunca entraría en esa cueva!</speech>
        <speech>Adivina por qué...</speech>
        <speech>¡Ni siquiera soy un entrenador Pokemon! Pero ahora que te miro, eres $NOMBRE_PLAYER, ¿verdad?</speech>
        <speech>¡Justo como sospechaba!</speech>
        <speech>Debes ser muy fuerte, pero por favor, ¡cuídate!</speech>
    </npc>
    <npc direction="DOWN" id="1001" name="Lady Hana" randomRotation="true" sprite="6" x="104" y="13">
        <speech>?! ...</speech>
        <speech>¿Quién es usted?</speech>
        <speech>¡Nunca te había visto antes!</speech>
        <speech>¡Oh, debes ser tú, el tipo de la tele!</speech>
        <speech>Después de vencer a Elite 4, ¡llévame a una cita!</speech>
        <speech>*$PLAYER_NAME se sonroja y sale corriendo*</speech>
    </npc>
    <npc direction="LEFT" id="1002" name="Adventurer Bryce" randomRotation="true" sprite="108" x="79" y="11">
        <speech>¡Hola $PLAYER_NAME!</speech>
        <speech>Estoy bastante impresionado por lo fuertes que son los Pokemon de esta cueva.</speech>
        <speech>¡Supongo que tengo que volver al bosque de Nuzbar para seguir entrenando!</speech>
    </npc>
    <npc direction="DOWN" id="1003" name="Lady Mariah" randomRotation="true" sprite="60" x="26" y="23">
        <speech>¡Por aquí!</speech>
        <speech>Sigue adelante, ¡vencelos a todos!</speech>
        <speech>No olvides descansar también en este Centro Pokemon.</speech>
    </npc>
    <npc direction="RIGHT" id="1004" name="Farmer Carlos" randomRotation="true" sprite="35" x="46" y="42">
        <speech>¡El pueblo de Matti es mucho más cálido que aquí!</speech>
        <speech>¡Deberías venir un día a ver los Mudbray que hay por allí!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Saludos! Bienvenido a Skynet Travel Technologies.</speech>
            <speech>¿Le gustaría viajar a algún sitio?</speech>
        </speeches>
        <speeches id="2">
            <speech>Es una pena. Por favor, vuelva cuando desee viajar a otro lugar.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Bienvenido! Bienvenido al sistema de cajeros automáticos del Banco de Jvaloh.</speech>
            <speech>¿Desea retirar o ingresar dinero?</speech>
        </speeches>
        <speeches id="2">
            <speech>Vuelva siempre que desee realizar una transacción.</speech>
        </speeches>
        <speeches id="3">
            <speech>Esta función sólo está disponible para las personas con una "afiliación bancaria".</speech>
            <speech>Los no socios pueden utilizar la sucursal principal de nuestro banco en la ciudad de Bijli.</speech>
        </speeches>
    </conversation>
</npcs>