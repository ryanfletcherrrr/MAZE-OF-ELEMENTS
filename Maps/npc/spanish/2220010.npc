<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Esta mansión esconde secretos más allá de la imaginación... ¡y tengo la intención de descubrirlos todos! Pero primero, ¡pongamos a prueba tu intelecto en la batalla!</speech>
        </speeches>
        <speeches id="2">
            <speech>Fascinante... tu estrategia superó mis cálculos. Voy a tener que reevaluar mi enfoque.</speech>
        </speeches>
        <speeches id="3">
            <speech>Fascinante... tu estrategia superó mis cálculos. Voy a tener que reevaluar mi enfoque.</speech>
        </speeches>
        <speeches id="4">
            <speech>Como era de esperar. El conocimiento y la preparación son las piedras angulares del éxito. Deberías tomar notas.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Incluso entre ruinas, un verdadero guerrero nunca vacila. Entreno mis puños y mi mente en lugares con historia y fuerza. ¡Muéstrame lo que tienes!</speech>
        </speeches>
        <speeches id="2">
            <speech>Impresionante... Tu técnica es fuerte. Debo perfeccionar la mía.</speech>
        </speeches>
        <speeches id="3">
            <speech>Impresionante... Tu técnica es fuerte. Debo perfeccionar la mía.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Tus golpes carecen de disciplina! ¡Entrena más duro, y quizás nos encontremos de nuevo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Este lugar tiene un ambiente endiablado. Los ecos, la historia... es como una canción esperando a ser tocada. Veamos si puedes seguir mi ritmo.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Vaya, me has despistado! Tengo que afinar mis habilidades.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Vaya, me has despistado! Tengo que afinar mis habilidades.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eso fue como un solo asesino impecable y electrizante!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="2" name="lampert" speed="1" sprite="608" type="pokemon" x="45" y="6">
        <path>DOWNx3,LEFTx2,RIGHTx2,UPx3</path>
        <onCollisionSpeech gap="4">Laaamp!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Alfred" randomRotation="true" sprite="112" x="36" y="9">
        <speech>No me importa si Lampent cocina demasiado mi comida.</speech>
        <speech>Está hecho con amor y, para mí, ése es el mejor ingrediente de todos.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Numel" speed="1" sprite="322" type="pokemon" x="33" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Nuuu?</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Nicholas" randomRotation="true" sprite="75" x="2" y="20">
        <speech>Vino hasta aquí para ofrecer una fuerte suma para comprar la mansión y descubrir sus secretos.</speech>
        <speech>Pero aparentemente, es una propiedad protegida.</speech>
        <speech>Tsk... Supongo que hay cosas que no se pueden comprar.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="6" name="Maxwell" speed="1" sprite="29" type="npc" x="41" y="23">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Apenas puedo pintar sin caerme por el suelo..</speech>
        <speech>Y sin embargo, es tan hermoso aquí.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="7" name="" randomRotation="false" sprite="162" x="16" y="21">
        <speech>- fragmento de un cuaderno de campo chamuscado, bordes chamuscados -</speech>
        <speech>...es extraño que siempre empiece en blanco. Una habitación, una elección, un camino intacto. La luz del laboratorio, estéril, inmóvil.</speech>
        <speech>Luego viene el azul. Dos seres. Dos rivales. La escisión.</speech>
        <speech>El blanco encierra potencial. Azul, consecuencia.</speech>
        <speech>Tal vez todo Kanto se desarrolla a partir de esa primera -</speech>
        <speech>(falta el resto de la página)</speech>
    </npc>
</npcs>