<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>... ¿Quién es usted?</speech>
            <speech>Sí. Por el momento... aléjate de mí.</speech>
            <speech>El Pokémon detrás de mí... Su Mega Piedra... Ni más ni menos.</speech>
            <speech>Eso es lo que... Eso es lo que buscamos los del Equipo Magma.</speech>
            <speech>¿Qué te parece? ¿Te alejarás de mí... o no?</speech>
            <speech>¡¿Qué intentas hacer?! ...Al mundo. ...A nosotros.</speech>
            <speech>...Al Equipo Magma. ¡Esto nunca, nunca puede ser perdonado!</speech>
            <speech>... Bueno, entonces ..</speech>
            <speech>Borrar...</speech>
        </speeches>
        <speeches id="2">
            <speech>... Slurp.</speech>
            <speech>Como estaba previsto. Imprevisto. Tú. Objetivo fijado... completado. Comenzando... experimento. Tú. Para siempre. Aha...</speech>
            <speech>Volviendo a casa.</speech>
        </speeches>
        <speeches id="3">
            <speech>... Slurp.</speech>
            <speech>Como estaba previsto. Imprevisto. Tú. Objetivo fijado... completado. Comenzando... experimento. Tú. Para siempre. Aha...</speech>
            <speech>Volviendo a casa.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ahora vete!</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Latios...</speech>
            <speech>...Es hermoso...</speech>
            <speech>Si tuviera que describir tanta belleza en términos de una piedra, sería una Piedra Solar...</speech>
            <speech>No... Va más allá de eso... ¿No es así?</speech>
            <speech>¿Qué? Equipo Magma</speech>
            <speech>Así que Latios se dio cuenta de su llegada, y por eso nos llamó.</speech>
            <speech>Protejamos a Latios de estas Bestias.</speech>
            <speech>¡No podemos permitir que Latios o incluso una Mega Stone caigan en manos de semejantes villanos!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>Así que Latios se dio cuenta de su llegada, y por eso nos llamó.</speech>
            <speech>Protejamos a Latios de estas Bestias.</speech>
            <speech>¡No podemos permitir que Latios o incluso una Mega Stone caigan en manos de semejantes villanos!</speech>
        </speeches>

        <speeches id="2">
            <speech>Hah...</speech>
            <speech>Buen trabajo, $PLAYER_NAME.</speech>
            <speech>Tu actuación fue espectacular. Gracias a ti hemos podido proteger tanto a este maravilloso Pokémon como a su Megapiedra.</speech>
            <speech>Y parece que Latios también te ha reconocido.</speech>
            <speech>Mira. Te mira continuamente. Parece que te has ganado su respeto, quizás algún día vuelva a por ti.</speech>
            <speech>De todos modos, deberías aceptar esto de mí.</speech>
            <speech>Por favor, acepte este Mega Brazalete.</speech>
        </speeches>

        <speeches id="3">
            <speech>Si no aceptas el Megapulsera, te quedarás muy atrás de los demás...</speech>
            <speech>Pero ese es tu deseo, yo estoy aquí sólo si decides cambiar de opinión.</speech>
        </speeches>

        <speeches id="4">
            <speech>Con la Mega Pulsera que te acabo de dar y las Mega Piedras que puede tener un Pokémon,</speech>
            <speech>tu Pokémon podrá conseguir un poderoso impulso, muy diferente a cualquier forma habitual de Evolución.</speech>
            <speech>pero sólo si te une un gran afecto. Serás capaz de lograr la Mega Evolución.</speech>
            <speech>La megaevolución es un fenómeno que durante mucho tiempo ha estado rodeado de misterio.</speech>
            <speech>¿Qué es una Mega Stone? ¿Qué es una Llave Piedra? El proceso por el cual los vínculos entre Pokémon y personas se manifiestan en un poder tangible.</speech>
            <speech>¿Cómo lo explicamos?</speech>
            <speech>Espero que la Megapulsera que acabo de regalarle nos acerque un poco más a la respuesta a estas preguntas.</speech>
            <speech>Si eso lo resuelve.</speech>
            <speech>¿Deberíamos regresar? Encuéntrame en la entrada y te llevaré de vuelta.</speech>
        </speeches>

        <speeches id="5">
            <speech>Con la Mega Pulsera que te acabo de dar y las Mega Piedras que puede tener un Pokémon,</speech>
            <speech>tu Pokémon podrá conseguir un poderoso impulso, muy diferente a cualquier forma habitual de Evolución.</speech>
            <speech>pero sólo si te une un gran afecto. Serás capaz de lograr la Mega Evolución.</speech>
            <speech>La megaevolución es un fenómeno que durante mucho tiempo ha estado rodeado de misterio.</speech>
            <speech>¿Qué es una Mega Stone? ¿Qué es una Llave Piedra? El proceso por el cual los vínculos entre Pokémon y personas se manifiestan en un poder tangible.</speech>
            <speech>¿Cómo lo explicamos?</speech>
            <speech>Espero que la Megapulsera que acabo de regalarle nos acerque un poco más a la respuesta a estas preguntas.</speech>
            <speech>Si eso lo resuelve.</speech>
            <speech>¿Deberíamos regresar? Encuéntrame en la entrada y te llevaré de vuelta.</speech>
        </speeches>
    </conversation>
</npcs>