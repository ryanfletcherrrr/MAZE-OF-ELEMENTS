<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=AMARILLO}Por favor, seleccione una planta.{ENDCOLOR}</speech>
            <speech>Los botones esperan a que los introduzcas, listos para llevarte donde necesites.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=VERDE}La consola del ascensor se cierra sola con un suave clic.{ENDCOLOR}</speech>
            <speech>Tendrás que activarlo de nuevo si deseas utilizarlo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Realmente no quiero hacer esto, pero órdenes son órdenes... Vamos a terminar con esto.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tal vez perder no sea tan malo... Tal vez debería dejar el Equipo Rocket...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tal vez perder no sea tan malo... Tal vez debería dejar el Equipo Rocket...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ugh... Esto sólo significa que tengo que quedarme más tiempo, ¿no?</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>No lo entiendes, ¿verdad? La ciencia no es sobre el bien o el mal. ¡Se trata de progreso! ¡Y aplastaré a cualquiera que se interponga en mi camino!</speech>
        </speeches>
        <speeches id="2">
            <speech>No... Mi investigación... ¡¿Cómo pudo pasar esto?!</speech>
        </speeches>
        <speeches id="3">
            <speech>No... Mi investigación... ¡¿Cómo pudo pasar esto?!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! La inteligencia siempre gana a la fuerza bruta.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¿Crees que puedes entrar aquí como si fueras el dueño? ¡Ja! ¡Este es nuestro territorio ahora!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tch... Tal vez este no es nuestro territorio después de todo...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tch... Tal vez este no es nuestro territorio después de todo...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te lo dije! ¡Deberías haber vuelto cuando tuviste la oportunidad!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Así que tú eres el entrenador que causa todos estos problemas... {COLOR=BLUE}Impresionante{ENDCOLOR}, pero tu suerte termina aquí.</speech>
            <speech>Soy un {COLOR=PURPLE}Elite Grunt{ENDCOLOR} - ¡no un aficionado como esos tontos de abajo!</speech>
            <speech>¡Mi equipo {COLOR=CYAN}de lluvia{ENDCOLOR} se especializa en {COLOR=BLUE}dominio acuático{ENDCOLOR} y {COLOR=GRAY}pivote defensivo{ENDCOLOR}!</speech>
            <speech>La {COLOR=PURPLE}Energía Tera{ENDCOLOR} ha hecho imparables a mis {COLOR=BLUE}tipos de agua{ENDCOLOR}. ¡Prepárate para una paliza torrencial!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Qué?! Mi {COLOR=BLUE}estrategia de lluvia{ENDCOLOR} nunca ha fallado antes...</speech>
            <speech>Incluso con {COLOR=PURPLE}mejoras de Energía Tera{ENDCOLOR}, ¡no pude atravesar tus defensas!</speech>
            <speech>Eres más fuerte de lo que la inteligencia informó... ¡Pero el jefe de arriba no se dejará sorprender!</speech>
            <speech>Este revés me costará mi estatus de {COLOR=PURPLE}Élite{ENDCOLOR}... ¡Maldito seas!</speech>
        </speeches>
        <speeches id="3">
            <speech>Mi máquina de lluvia está completamente destruida... Los sistemas meteorológicos están fuera de línea.</speech>
            <speech>Has desmantelado nuestra {COLOR=CYAN}división de investigación acuática{ENDCOLOR}, ¡pero el {COLOR=GOLD}Proyecto T.E.R.A.{ENDCOLOR} es más profundo de lo que crees!</speech>
            <speech>La {COLOR=RED}fase final{ENDCOLOR} ya está en marcha en los pisos superiores... ¡Llegas demasiado tarde!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Excelente! ¡Mi campo de batalla barrido por la lluvia se cobró otra víctima!</speech>
            <speech>El {COLOR=PURPLE}poder de Tera{ENDCOLOR} de mi {COLOR=CYAN}arsenal acuático{ENDCOLOR}es realmente magnífico.</speech>
            <speech>¡Ahora se convertirán en datos de prueba para nuestros protocolos de modificación del tipo de agua{COLOR=GOLD}{ENDCOLOR}!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Try Hard Anastasio" shouldSleep="" speed="1" sprite="4" type="npc" x="3" y="8">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Sé que estás en Kanto, ¡pero no olvides hacer progresar tu Vs. Seeker!</speech>
        <speech>Con el tiempo puede ayudarte a obtener algún beneficio...</speech>
    </movingNpc>
</npcs>