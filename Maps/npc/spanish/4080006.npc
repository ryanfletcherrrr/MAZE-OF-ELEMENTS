<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hola. Debes ser un nuevo aspirante.</speech>
            <speech>Soy Roxanne, la Líder del Gimnasio Pokémon de Ciudad Rustboro.</speech>
            <speech>Me hice Líder de Gimnasio para poder aplicar en la batalla todo lo que he aprendido en la Escuela de Entrenadores Pokémon.
                de Entrenadores Pokémon.
            </speech>
            <speech>Si me derrotas en una batalla Pokémon, te daré una Insignia de Gimnasio como prueba de tu fuerza como
                entrenador.
            </speech>
            <speech>Pongamos a prueba nuestra fuerza.</speech>
        </speeches>
        <speeches id="2">
            <speech>Así que...</speech>
            <speech>Perdí...</speech>
            <speech>Parece que aún me queda mucho por aprender...</speech>
            <speech>Entiendo. Las reglas de la Liga Pokémon dicen que el Entrenador recibe esto si derrota a un Líder de Gimnasio.
                Líder.
            </speech>
            <speech>Por favor, acepta la Insignia de Piedra oficial de la Liga Pokémon.</speech>
            <speech>La Insignia de Piedra permite a los Pokémon utilizar el movimiento HM Corte fuera de combate.</speech>
            <speech>Y... Por favor, llévate esto contigo también.</speech>
            <speech>El movimiento Tumba de rocas no sólo inflige daño dejando caer rocas, sino que también reduce la Velocidad del objetivo.</speech>
            <speech>Si usas una MT, enseña instantáneamente el movimiento a un Pokémon.</speech>
            <speech>Sólo puedes utilizar una TM una vez, así que úsala con cuidado.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ya que eres tan fuerte, deberías desafiar también a otros Líderes de Gimnasio. Al enfrentarte a muchos Entrenadores, es probable que aprendas muchas cosas.</speech>
            <speech>Debo advertirte: ¡son mucho más duros que yo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Esta batalla fue demasiado fácil para mí. No obstante, me alegra darte otra oportunidad.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>He criado a mis Pokémon con mucho cuidado. ¡No puedes hacerles daño!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Tus Pokémon son más increíbles! ¡Cambia conmigo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Tus Pokémon son más increíbles! ¡Cambia conmigo!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Viva! ¡Hurra! ¡He ganado! Mis Pokémon y yo somos increíbles, ¿eh?</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>No bajes la guardia, o puede que te pongas a llorar cuando un niño te pegue.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Caramba! ¡No puedes ver que sólo soy un niño! ¡No fue justo que te pusieras así!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Caramba! ¡No puedes ver que sólo soy un niño! ¡No fue justo que te pusieras así!</speech>
        </speeches>
        <speeches id="4">
            <speech>Puede que sea joven, pero eso no significa que pierda incluso ante un adulto.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¿Qué? ¿Quieres luchar conmigo? Supongo que podríamos arreglar algo...</speech>
        </speeches>
        <speeches id="2">
            <speech>Esta batalla ha sido una experiencia valiosa. ¡Todavía tengo que ganar más experiencia!</speech>
        </speeches>
        <speeches id="3">
            <speech>Esta batalla fue una experiencia valiosa. ¡Todavía tengo que ganar más experiencia!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, wh-whoa. No eres rival para mí. Tus Pokémon son inútiles.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Professor Amber" shouldSleep="" speed="1" sprite="8" type="npc" x="6" y="34">
        <path>DOWNx4,RIGHTx2,UPx2,DOWNx2,LEFTx2,UPx4</path>
        <onCollisionSpeech gap="4">Please, don't touch the showcase.</onCollisionSpeech>
        <speech>¡Saludos, entrenador! Soy la profesora Amber, la experta en fósiles.</speech>
        <speech>Gestionar fósiles como Anorith y Lileep es como manejar tesoros raros.</speech>
        <speech>Garantizar que se mantengan prístinos requiere un toque cuidadoso. Disfrute de su viaje fosilífero por el museo.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Professor Terra" randomRotation="true" sprite="7" x="8" y="32">
        <speech>¿Puedo ayudarle?</speech>
    </npc>
    <movingNpc direction="DOWN" id="3" name="Lileep" shouldSleep="" speed="1" sprite="345" type="pokemon" x="23" y="35">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Lileep?</onCollisionSpeech>
        <speech>¡Increíble! ¡Está vivo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Anorith" shouldSleep="" speed="1" sprite="347" type="pokemon" x="25" y="29">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Anorith!</onCollisionSpeech>
        <speech>¡Increíble! ¡Está vivo!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Gym Guide" randomRotation="false" sprite="5" x="14" y="39">
        <speech>Hola, campeón en ciernes. ¿Listo para arrasar en este desafío de gimnasio?</speech>
        <speech>A Roxanne le esperan unas galletas duras, pero con un equipo bien formado, tendrás ventaja.</speech>
        <speech>Lleva contigo Pokémon de agua, hierba o lucha para darle un poco de emoción al asunto. Mantente fuerte y concentrado, ¡y romperás esas rocas en un abrir y cerrar de ojos!</speech>
    </npc>
</npcs>