<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡El último tramo hasta Cinnabar! He entrenado en estas olas. ¿Listo para zambullirte?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Hundido por ti! Nadaré y volveré más fuerte.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Hundido por ti! Nadaré y volveré más fuerte.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Cabalga la marea hacia la victoria! El fuego de Cinnabar espera. Espero que salgas a flote.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡La Ruta 21 es mi territorio! Mis Pokémon se deslizan como la marea. ¿Listo para hundirte?</speech>
        </speeches>
        <speeches id="2">
            <speech>Empapado por ti. Volveré flotando con un plan mejor.</speech>
        </speeches>
        <speeches id="3">
            <speech>Empapado por ti. Volveré flotando con un plan mejor.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? ¡Yo domino las olas! Cinnabar es el siguiente. ¡Espero que no te quemes!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Un entrenador! Mis tipos de agua están enganchados a ganar. ¡Veamos tu cebo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Línea rota! Eres más duro de lo que pensaba. Pescaré la revancha.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Línea rota! Eres más duro de lo que pensaba. Pescaré la revancha.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te atrapé bien! Mi red está llena hoy. El calor de Cinnabar es el siguiente. ¡No flop!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Llueva o haga sol, ¡siempre estoy preparado! Veamos si puedes capear esta batalla.</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que ahora me siento un poco indispuesto...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que ahora me siento un poco indispuesto...</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo ves? Con la cubierta adecuada, ¡nunca te pillará la tormenta!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Una vez pesqué una extraña escama brillante cerca de Cinnabar. Mis tipos de agua también son raros. ¡Atrápame si puedes!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Escurridizo! Me superaste. Esa escala sigue siendo mi mejor botín.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Escurridizo! Me superaste. Esa escala sigue siendo mi mejor botín.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te enganché bien! Mi caña es imbatible. Cinnabar tiene secretos. ¡Cuidado con ellos!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Mis puños son como el fuego, mi postura como la piedra! ¡Prepárate para ser aplastado!</speech>
        </speeches>
        <speeches id="2">
            <speech>Urgh... Necesito meditar sobre esta derrota...</speech>
        </speeches>
        <speeches id="3">
            <speech>Urgh... Necesito meditar sobre esta derrota...</speech>
        </speeches>
        <speeches id="4">
            <speech>Disciplina, fuerza y concentración... ¡eso es lo que me mantiene en la cima!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Mis amigos emplumados han luchado contra tormentas y vientos. ¿Crees que puedes erizar sus plumas?</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que mi rebaño tiene que volver a entrenar...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que mi rebaño tiene que volver a entrenar...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! Mis pájaros se elevan por encima del resto... ¡más suerte la próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>El mar está en calma hoy... ¡las condiciones perfectas para una batalla! ¡Hagamos olas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Uf... me arrastraron como madera a la deriva...</speech>
        </speeches>
        <speeches id="3">
            <speech>Uf... me arrastraron como madera a la deriva...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Buen intento! Pero aquí, es hundirse o nadar, ¡y siempre estoy listo para flotar hacia la victoria!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡No hay nada mejor que nadar por la mañana desde Pueblo Paleta hasta Cinnabar! ¿Crees que podrás seguirme el ritmo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que debería haber pasado menos tiempo flotando y más entrenando...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que debería haber pasado menos tiempo flotando y más entrenando...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! ¡Ese es el poder de un nadador que entrena cada marea y corriente!</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Nado estas olas a diario. Mis tipos de agua son duros. ¿Crees que puedes pasar por encima de mí?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Atrapado en tu corriente! La próxima vez remaré más fuerte.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Atrapado en tu corriente! La próxima vez remaré más fuerte.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! Soy el rey de esta ruta. Sigue nadando. ¡El fuego de Cinnabar no será fácil!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Horsea" speed="1" sprite="116" type="pokemon" x="23" y="21">
        <path>DOWNx2,LEFTx1,RIGHTx1,UPx2</path>
        <onCollisionSpeech gap="4">Brrreeeep!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Tentacruel" speed="1" sprite="73" type="pokemon" x="5" y="51">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Tenta-cruel..</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Samantha" speed="1" sprite="22" type="npc" x="12" y="31">
        <path>DOWNx3,LEFTx4,RIGHTx4,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Las mareas están bien hoy..</speech>
        <speech>Estoy seguro de que veré un Horsea por aquí si sigo buscando.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Tyler" randomRotation="true" sprite="16" x="9" y="68">
        <speech>Bueno... ahí va mi línea.</speech>
        <speech>Ah, bueno, supongo que me iré al norte, a Ciudad Paleta.</speech>
        <speech>Le vendría bien más cebo y un descanso de todos modos.</speech>
    </npc>
    <movingNpc direction="LEFT" id="5" name="Mantine" speed="1" sprite="226" type="pokemon" x="21" y="49">
        <path>LEFTx4,RIGHTx4,UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Tiiiiiiinnnee!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Corsola" speed="1" sprite="222" type="pokemon" x="20" y="69">
        <path>DOWNx2,LEFTx2,UPx2,DOWNx2,RIGHTx2,UPx2</path>
        <onCollisionSpeech gap="4">Corrrr-lah!</onCollisionSpeech>
    </movingNpc>
</npcs>