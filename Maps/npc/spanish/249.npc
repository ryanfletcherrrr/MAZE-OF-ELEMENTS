<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Vaya, amigo! El gimnasio Vermilion está cerrado por ahora.</speech>
            <speech>¿Teniente Surge? Sí, no está aquí. Está en el S.S. Anne, manejando algunos controles de seguridad militar de alto secreto.</speech>
            <speech>Si quieres luchar contra él, será mejor que vayas al puerto y subas a ese barco.</speech>
            <speech>Cuando vuelva, te dejaré pasar. Hasta entonces, no vas a entrar.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Captain Lars" randomRotation="false" sprite="11" x="13" y="24">
        <speech>El mar nunca te abandona ni el olor. Lo siento.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Mimi" shouldSleep="" speed="1" sprite="12" type="npc" x="51" y="18">
        <path>RIGHTx4,DOWNx2,UPx2,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Mi tío habla mucho de Rapidash. Creo que ahora escribe fanfiction.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Zack" randomRotation="false" sprite="49" x="18" y="9">
        <speech>Algún día me convertiré en una leyenda del rock. Por ahora solo me sé el tema de la Poké Flauta.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="4" name="Granny Lala" randomRotation="false" sprite="38" x="20" y="22">
        <speech>¿Teniente Surge? Hmph. Se hace llamar el "Relámpago Americano", ¡pero ni siquiera puede arreglar un simple apagón!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="5" name="Gil" randomRotation="false" sprite="16" x="46" y="35">
        <speech>Shhh... si tarareas el jingle de Poké Mart, los Magikarp vienen directamente a ti.</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="49" y="38">
        <path>DOWNx3,RIGHTx6,UPx3,LEFTx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Shellder" shouldSleep="" speed="1" sprite="90" type="pokemon" x="20" y="41">
        <path>DOWNx4,UPx2,LEFTx5,RIGHTx5,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Pikachu" shouldSleep="" speed="1" sprite="25" type="pokemon" x="38" y="13">
        <path>RIGHTx4,DOWNx1,LEFTx4,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Aloha! Soy Kala, una geóloga de la región de {COLOR=CYAN}Alola{ENDCOLOR} que estudia las formaciones volcánicas.</speech>
            <speech>En Alola, nuestros Geodude son únicos: ¡son de tipo {COLOR=BLUE}Rock/Eléctrico{ENDCOLOR} debido a los campos magnéticos de nuestros volcanes!</speech>
            <speech>La constante actividad volcánica y los campos magnéticos hicieron que desarrollaran propiedades eléctricas a lo largo de generaciones.</speech>
            <speech>Sus cuerpos magnéticos les ayudan a navegar por los complejos sistemas de cuevas cercanos a volcanes activos.</speech>
            <speech>Si tienes un {COLOR=GREEN}Kanto Geodude{ENDCOLOR} que hayas capturado tú mismo, ¡me encantaría intercambiarte un {COLOR=CYAN}Alolan Geodude{ENDCOLOR} para enseñarte esta increíble adaptación!</speech>
            <speech>Sería un intercambio único para mi investigación: necesito estudiar las diferencias entre las variantes regionales.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Perfecto! ¡Tienes un {COLOR=GREEN}Kanto Geodude{ENDCOLOR} que atrapaste tú mismo!</speech>
            <speech>¿Quieres cambiar tu {COLOR=VERDE}Kanto Geodude{ENDCOLOR} por mi {COLOR=CIAN}Alolan Geodude{ENDCOLOR}?</speech>
            <speech>Recuerde, este es un {COLOR=YELLOW}sólo una vez{ENDCOLOR} comercio para mi investigación geológica.</speech>
        </speeches>
        <speeches id="3">
            <speech>Lo comprendo: es una gran decisión intercambiar un Pokémon que has capturado tú mismo.</speech>
            <speech>Tómate tu tiempo para pensarlo, pero recuerda que es una oportunidad única.</speech>
        </speeches>
        <speeches id="4">
            <speech>{¡Excelente! Esto ayudará mucho a mi investigación.</speech>
            <speech>Déjame coger tu {COLOR=VERDE}Kanto Geodude{ENDCOLOR} y darte este {COLOR=CIAN}Alolan Geodude{ENDCOLOR} especial a cambio.</speech>
            <speech>Este Alolan Geodude ha desarrollado {COLOR=BLUE}propiedades eléctricas{ENDCOLOR} debido a que vive cerca de campos volcánicos magnéticos.</speech>
            <speech>Notarás que es mucho más enérgico y que puede generar pequeñas corrientes eléctricas.</speech>
        </speeches>
        <speeches id="5">
            <speech>Muchas gracias por contribuir a mi investigación.</speech>
            <speech>Este {COLOR=VERDE}Kanto Geodude{ENDCOLOR} me ayudará a entender las diferencias geológicas entre nuestras regiones.</speech>
            <speech>Cuida bien de tu nuevo {COLOR=CYAN}Alolan Geodude{ENDCOLOR} - ¡es realmente un espécimen único!</speech>
            <speech>Mi investigación aquí en Vermilion City se ha completado gracias a ti.</speech>
        </speeches>
    </conversation>
</npcs>