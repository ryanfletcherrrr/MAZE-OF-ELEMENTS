<npcs>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>¡Ups! ¡Hehehe! ¡No voy a chocar contigo cada vez que nos veamos!</speech>
            <speech>¿Cómo te va, $PLAYER_NAME?</speech>
            <speech>Mejorando tus Pokémon, ¿eh?</speech>
            <speech>Os pondré a prueba a ti y a tus Pokémon para ver lo fuertes que sois.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Qué acaba de pasar?! ¡¿Me estás diciendo que he perdido?!</speech>
            <speech>Sí, quizá te has vuelto un poco más duro desde la última vez.</speech>
            <speech>Eso incluso me sorprendió un poco, así que sí, me golpearon porque fui descuidado.</speech>
            <speech>¡Sí, me uní al Sr. Wake como aprendiz! ¡Quiero mi propio tema musical!</speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>No pierdas las esperanzas. No eras tan malo. Soy demasiado bueno.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Oh, hey! Tienes la Insignia del Gimnasio aquí, ¿eh? ¿Qué te dije? El Sr. Wake - quiero decir, el maestro - es bastante impresionante, ¿eh?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oh, Maestro!</speech>
        </speeches>
        <speeches id="3">
            <speech>No importa. ¡Te hice mi amo!</speech>
            <speech>¡Yo decidí! ¡Pero olvídalo! ¡Se avecinan problemas!</speech>
            <speech>Hay un matón del Equipo Galáctico frente a la Puerta del Observatorio. ¡Dijo algo sobre una bomba!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eh! ¡Maestro! ¡Esperad!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¿Qué es este alboroto entonces? Oh, sois vosotros dos.</speech>
        </speeches>
        <speeches id="2">
            <speech>...Escucha niño. Conozco a tu padre. No lo negaré.</speech>
            <speech>Pero no recuerdo haberte tomado nunca como aprendiz. En absoluto.</speech>
            <speech>Además, ustedes dos no me necesitan.</speech>
            <speech>Puedes hacerte fuerte por ti mismo sin ser mi aprendiz.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿QUÉ?</speech>
            <speech>¡Nadie se mete con Pastoria! ¡No en mi guardia!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Entonces, ¿dónde está ese Galac...</speech>
        </speeches>
        <speeches id="2">
            <speech>¡TÚ! ¡¿Qué has hecho?!</speech>
        </speeches>
        <speeches id="3">
            <speech>El Gran Pantano tiene un valor incalculable...</speech>
            <speech>¡Ustedes dos! ¡No me sigáis! ¡Tampoco dejéis entrar a nadie más!</speech>
            <speech>¡Habría un gran problema si queda algo de esa bomba!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Fweh! Eso fue duro.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Qué he hecho, te preguntarás?</speech>
            <speech>Bueno, técnicamente hablando, no fui yo.</speech>
            <speech>El paquete que llega, ves, era una bomba, se llama la Bomba Galáctica.</speech>
            <speech>A mí me dijeron que pulsara el botón.</speech>
            <speech>Así que lo hice. Como, ¡"Poink"!</speech>
            <speech>¡Ah, sí! ¡No lo olvides!</speech>
            <speech>Hay que informar de los resultados de las pruebas.</speech>
            <speech>¡Hasta luego! ¡Idiota, tu máscara es absurda!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Oye! ¿Qué soy, hígado picado? ¡No olvides que yo también estoy aquí!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oye! ¡$PLAYER_NAME! ¡Ve tras ese matón galáctico!</speech>
            <speech>¡Me quedo aquí como dijo el Maestro! ¡Tengo que evitar que otros entren!</speech>
            <speech>¡No dejes escapar a ese galáctico!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Qué pasa?! ¡¿Por qué no te has ido ya?! ¡Ve tras ese matón galáctico!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Safia" shouldSleep="" speed="1" sprite="17" type="npc" x="40" y="28">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Algunos Entrenadores impiden deliberadamente que sus Pokémon evolucionen.</speech>
        <speech>Esperan a que el Pokemon suba de nivel y aprenda ciertos movimientos.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Leanna" shouldSleep="" speed="1" sprite="60" type="npc" x="47" y="26">
        <path>LEFTx2,DOWNx1,RIGHTx2,UPx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Alguien me regaló una baya, así que la planté y crecieron algunas más.</speech>
        <speech>Luego, tomé las Bayas y las cociné en Poffins.</speech>
        <speech>Todo el trabajo merece la pena cuando veo lo felices que hacen a mis Pokemon.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Kaidan" shouldSleep="" speed="1" sprite="34" type="npc" x="33" y="43">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>He oído que el Líder del Gimnasio Pastoria participa en combates de lucha libre profesional para ganar dinero.</speech>
        <speech>Ese dinero se destina a ayudar a personas y Pokemon con problemas.</speech>
        <speech>Me pregunto quién ganaría entre Crasher Wake y el Masked Royal en Alola.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Gene" sprite="37" x="35" y="40">
        <speech>Aquí estoy, en el centro de la ciudad.</speech>
        <speech>Ok, el centro de la ciudad es en realidad ese árbol detrás de mí, pero lo suficientemente cerca.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="5" name="Kynan" sprite="11" x="42" y="52">
        <speech>No puedo usar el movimiento Surf fuera de batalla hasta que venza al Líder de Gimnasio local.</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Cohan" shouldSleep="" speed="1" sprite="26" type="npc" x="21" y="57">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>El Gran Pantano mantiene el clima fresco en verano.</speech>
        <speech>Esta es una buena ciudad para Pokemon de tipo Agua.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Clefairy" shouldSleep="" speed="1" sprite="35" type="pokemon" x="24" y="57">
        <path>DOWNx1,UPx1</path>
        <onCollisionSpeech gap="4">Fiiih?!</onCollisionSpeech>
        <speech>*Clefairy waves it's finger at you*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Bronwen" shouldSleep="" speed="1" sprite="8" type="npc" x="19" y="62">
        <path>RIGHTx1,UPx2,DOWNx2,LEFTx1</path>
        <onCollisionSpeech gap="4">Need to find rare Pokemon!</onCollisionSpeech>
        <speech>Estudio Pokemon raros que solo aparecen en el Gran Pantano.</speech>
        <speech>Si me encuentras algunos puedo ofrecer algunas recompensas.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Benny" shouldSleep="" speed="1" sprite="32" type="npc" x="40" y="59">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>¿Has estado en la Mansión Pokemon? Está en la ruta 212.</speech>
        <speech>Al dueño, el Sr. Backlot, le gusta presumir de su manada de Pokemon raros.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Mabel" shouldSleep="" speed="1" sprite="31" type="npc" x="60" y="21">
        <path>DOWNx2,LEFTx1,RIGHTx1,UPx2</path>
        <onCollisionSpeech gap="4"/>
        <speech>Estoy de visita aquí para ver el Gran Pantano.</speech>
        <speech>Me alojo en el hotel del lago.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="11" name="Psyduck" speed="1" sprite="54" type="pokemon" x="27" y="65">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Psyyyyyyy</onCollisionSpeech>
        <speech>¡Psyyyyyyyyyy!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="12" name="Tentacruel" speed="1" sprite="73" type="pokemon" x="60" y="66">
        <path>RIGHTx5, UPx5, DOWNx5, LEFTx5</path>
        <onCollisionSpeech gap="4">...</onCollisionSpeech>
        <speech>...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Phelps" sprite="21" x="53" y="61">
        <speech>Ten cuidado con esos Tentacruels $PLAYER_NAME.</speech>
        <speech>¡Siempre están enfadados!</speech>
    </npc>
    <movingNpc direction="RIGHT" id="14" name="Micas" speed="1" sprite="22" type="npc" x="49" y="53">
        <path>RIGHTx3, DOWNx2, RIGHTx2, LEFTx2, UPx2, LEFTx3</path>
        <onCollisionSpeech gap="4">1, 2, 3,4... 1,2,3,4...</onCollisionSpeech>
        <speech>Un día, nadaré más rápido que Phelps. ¡He estado entrenando duro últimamente!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Pelipper" speed="1" sprite="279" type="pokemon" x="36" y="19">
        <path>DOWNx1, RIGHTx3, UPx1, LEFTx3</path>
        <onCollisionSpeech gap="4">Ahhhhh!</onCollisionSpeech>
        <speech>* Parece que le gustas a Pelipper *</speech>
    </movingNpc>
</npcs>