<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Me alegro de que lo consiguieras! No será un trabajo fácil a partir de ahora.</speech>
        </speeches>
        <speeches id="2">
            <speech>Antes me he dejado llevar un poco, pero ¿de qué trabajo estaba hablando?</speech>
        </speeches>
        <speeches id="3">
            <speech>Antes me he dejado llevar un poco, pero ¿de qué trabajo estaba hablando?</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Jajaja! ¿Qué te dije? Todavía no estás listo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>La victoria nunca llegará a aquellos que no están preparados para afrontar la derrota.</speech>
        </speeches>
        <speeches id="2">
            <speech>Sigue ganando también por mí. Conviértete en el entrenador número uno.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sigue ganando también por mí. Conviértete en el entrenador número uno.</speech>
        </speeches>
        <speeches id="4">
            <speech>No estoy preparado para perder, pero gané fácilmente de todos modos.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Bienvenidos! Este es el Gimnasio Pokémon de Oreburgh. Soy Roark, el líder del gimnasio.</speech>
            <speech>No soy más que un Entrenador que decidió pasearse orgulloso con Pokémon de tipo Roca.</speech>
            <speech>Como líder del gimnasio, necesito ver tu potencial como entrenador.</speech>
            <speech>Además, ¡necesitaré ver la dureza de los Pokémon que combatan contigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Qué? ¡No puede ser! ¡Mi Pokémon mejorado!</speech>
            <speech>Esto es vergonzoso... Fui y perdí contra un Entrenador que no tenía ni una Insignia de Gimnasio...</speech>
            <speech>Pero eso es duro. Tú eras fuerte y yo débil. Eso es todo lo que hay.</speech>
            <speech>Según las reglas de la Liga Pokémon, tengo que darte nuestra Insignia de Gimnasio, ya que me has vencido a mí, el Líder.</speech>
            <speech>Aquí tienes tu Insignia de Carbón oficial de la Liga Pokémon.</speech>
            <speech>Con la Insignia Carbón, tu Pokémon puede usar el movimiento oculto Golpe Roca fuera de combate.</speech>
            <speech>También deberías tomar esto.</speech>
            <speech>Ese TM81 contiene el movimiento Bulldoze.</speech>
            <speech>Por cierto, una MT enseñará su movimiento a un Pokémon al instante.</speech>
            <speech>Pero una MT se romperá cuando la uses, así que asegúrate de que quieres que un Pokémon aprenda ese movimiento.</speech>
        </speeches>
        <speeches id="3">
            <speech>En esta región de Sinnoh, hay otros siete Líderes de Gimnasio.</speech>
            <speech>Debo advertirte: ¡son mucho más duros que yo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Esta batalla fue demasiado fácil para mí. No obstante, me alegra darte otra oportunidad.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Gym Advisor Tom" sprite="37" x="12" y="25">
        <speech>¡Hola Campeón en ciernes!</speech>
        <speech>Me llamo Tom, me encontrarás en varios gimnasios como una especie de consejero...</speech>
        <speech>Roark es el primer líder de gimnasio de la región de Sinnoh y usa el tipo Roca.</speech>
        <speech>Algunos counters útiles para el tipo Roca son Agua, Hierba y Lucha.</speech>
        <speech>Personalmente te recomendaría un Psyduck o un Machop si aún no tienes uno.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="" sprite="162" x="6" y="25">
        <speech>Gimnasio Oreburgh - ¡Hogar de Roark la Roca!</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="" sprite="162" x="11" y="25">
        <speech>Gimnasio Oreburgh - ¡Hogar de Roark la Roca!</speech>
    </npc>
</npcs>