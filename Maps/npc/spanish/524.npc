<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Hola, $PLAYER_NAME! ¿Cómo va tu Pokédex?</speech>
            <speech>¿Yo? Estoy entre fantástico y... desesperanzado...</speech>
            <speech>¡Pero esto no se trata de mí! Tengo algo bonito para ti.</speech>
        </speeches>
        <speeches id="2">
            <speech>Este es un Buscador Vs. con el que puedes encontrar Entrenadores que quieran una revancha contigo.</speech>
            <speech>Sigamos trabajando en nuestras Pokédex. El profesor Rowan cuenta con nosotros.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Necesitas 2 insignias para seguir adelante.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Vamos, mis preciosos Pokémon! ¡A la batalla! ¡A por el enemigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>No lloraré... No lloraré. Algún día, ganaré.</speech>
        </speeches>
        <speeches id="3">
            <speech>No lloraré... No lloraré. Algún día, ganaré.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Mis Pokémon son los más poderosos! ¡Grabaré mi nombre en la historia!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡El preescolar va a batallar contigo! ¡Oh, sí! Encantado de conocerte.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡El preescolar perdió! ¡Tank you anyway!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡El preescolar perdió! ¡Tank you anyway!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡El pequeño bebé es un winna! ¡Tank you! ¡Tank you!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>No soy un simple excursionista. Llámame alpinista.</speech>
        </speeches>
        <speeches id="2">
            <speech>Un especialista en asuntos montañosos. Es un alpinista.</speech>
        </speeches>
        <speeches id="3">
            <speech>Un especialista en asuntos montañosos. Es un alpinista.</speech>
        </speeches>
        <speeches id="4">
            <speech>A un maníaco de la montaña como yo se le llama alpinista.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>No hace falta perder el tiempo saludando. Hazlo cuando quieras.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡No perderé la próxima vez! ¡Volvamos a luchar alguna vez!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡No perderé la próxima vez! ¡Volvamos a luchar alguna vez!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Vaya partido! Estoy bastante satisfecho con el resultado.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Si quieres llegar a la cima como Entrenador, ¡tendrás que pasar por encima de mí!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Adelante! ¡Tienes que irte! ¡Vete y déjame!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Adelante! ¡Tienes que irte! ¡Vete y déjame!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Incluso si te topas conmigo desastrosamente, no hay ningún equipo de rescate en camino!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¡La adrenalina está bombeando en mi equipo! ¡Yo también! ¡Haré de esta una batalla increíble!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hice lo que vine a hacer, y así es como resultó. No hay nada más que decir.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hice lo que vine a hacer, y así es como resultó. No hay nada más que decir.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Qué te parece? Somos increíbles, ¿verdad? Fuiste capaz de explotar, ¿verdad?</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Cameron" sprite="32" x="25" y="17">
        <speech>¿Ves este alud de barro? Puedes usar una bicicleta para subirlo.</speech>
        <speech>Se puede bajar andando, pero no se puede subir sin bicicleta. No lo olvides.</speech>
    </npc>
    <movingNpc direction="UP" id="2" name="Donald" shouldSleep="" speed="1" sprite="34" type="npc" x="16" y="13">
        <path>UPx3, DOWNx3</path>
        <onCollisionSpeech gap="4">Please don't get in my way!</onCollisionSpeech>
        <speech>¡Estoy a la caza de un Machop inflexible!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Machop" shouldSleep="" speed="1" sprite="66" type="pokemon" x="4" y="9">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Machop!</onCollisionSpeech>
        <speech>¡Chop!</speech>
    </movingNpc>
    <conversation id="13">
        <speeches id="2">
            <speech>Hola! Soy un payaso de la campaña Tutorial PBO. ¡Vamos a lanzar mi pregunta!</speech>
            <speech>¿Puedes encontrar Aroma Ladies en algunos mapas para curar a tus Pokemon?</speech>
        </speeches>
        <speeches id="3">
            <speech>Esa no es la respuesta correcta. Intentémoslo de nuevo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ding-ding!</speech>
            <speech>Tienes toda la razón.</speech>
            <speech>¡Hay algunos mapas con señoras muy amables que curarán a tus Pokemon!</speech>
            <speech>No olvides darles las gracias.</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Aquí tiene! ¡Por favor, acepta esta Super Poción!</speech>
            <speech>Restaura los PS de un Pokémon en 50 puntos.</speech>
        </speeches>
    </conversation>
</npcs>