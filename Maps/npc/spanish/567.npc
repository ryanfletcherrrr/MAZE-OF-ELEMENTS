<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Les presentaré movimientos elegantes dignos del título de Niño Rico!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Pensar que cualquiera podría ser más fuerte que yo! ...¡Tú no eres cualquiera!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Pensar que cualquiera podría ser más fuerte que yo! ...¡Tú no eres cualquiera!</speech>
        </speeches>
        <speeches id="4">
            <speech>Se dice que la fuerza de un Pokémon depende de su entrenamiento. No es culpa tuya. No se puede
                evitar.
            </speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Siempre he querido ser una Belleza, así que he empezado de cero, centrándome en mi aspecto.</speech>
        </speeches>
        <speeches id="2">
            <speech>Seis meses de inversión en los últimos tratamientos... ¡Mírame ahora! Brillo como nunca.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Seis meses de inversión en los últimos tratamientos... ¡Mírame ahora! Brillo como nunca.
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Sea cual sea tu sueño, si quieres hacerlo realidad, tienes que hacer lo que haga falta.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Mi padre, un gran hombre, siempre decía: "El fin justifica los medios, siempre que ganes".</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Por qué?! ¿Podrían las palabras de mi padre haber estado equivocadas?</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Por qué?! ¿Podrían las palabras de mi padre haber estado equivocadas?</speech>
        </speeches>
        <speeches id="4">
            <speech>Es como decía mi padre... La historia la escriben los vencedores.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Vine aquí por mi hermano mayor que siempre se esconde en su habitación.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ojalá mi hermano mayor saliera de su habitación y jugara conmigo...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ojalá mi hermano mayor saliera de su habitación y jugara conmigo...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Mi hermano mayor, mira afuera por una vez! ¡Gané por ti! ¡Así que sal a jugar!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Aunque mi educación y mi comportamiento son pobres, he criado bien a mis Pokémon.</speech>
        </speeches>
        <speeches id="2">
            <speech>A diferencia de mi diabólico yo, estos son unos buenos Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>A diferencia de mi diabólico yo, estos son unos buenos Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Verdad? Muy buen Pokémon, ¿eh? Soy apto para criar cosas.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>A pesar de mi apariencia, hasta hace poco yo era un entrenador As.</speech>
        </speeches>
        <speeches id="2">
            <speech>A partir de cierta edad, todos los entrenadores han cambiado de profesión.</speech>
        </speeches>
        <speeches id="3">
            <speech>A partir de cierta edad, todos los entrenadores han cambiado de profesión.</speech>
        </speeches>
        <speeches id="4">
            <speech>A partir de cierta edad, es hora de dejar de ser un As del Entrenamiento y seguir adelante.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Hace un tiempo horrible para trabajar! Sólo me divierto aquí.</speech>
        </speeches>
        <speeches id="2">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Guau! ¡¡Estoy de un humor tipo Sunny Day!!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Gracias a mis Pokémon, me paso el día totalmente adicto a mi trabajo a tiempo parcial.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vivir la vida por Pokémon... ¿Estoy bien con esto...</speech>
        </speeches>
        <speeches id="3">
            <speech>Vivir la vida por Pokémon... ¿Estoy bien con esto...</speech>
        </speeches>
        <speeches id="4">
            <speech>Tengo un Pokémon glotón que está destrozando mi presupuesto. ¡No es broma!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>No me importa quién seas ni de dónde vengas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tengo que replantearme mi relación con mis Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tengo que replantearme mi relación con mis Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>Una etiqueta no es importante, ¿verdad? Al fin y al cabo, tú eres tú mismo, ¿no?</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>¡Sup! ¡Daré todo lo que tengo! ¡¡Hagámoslo lo mejor posible!!</speech>
        </speeches>
        <speeches id="2">
            <speech>Al final de una batalla, sin aliento... ¿No es genial? ¡Completamente!</speech>
        </speeches>
        <speeches id="3">
            <speech>Al final de una batalla, sin aliento... ¿No es genial? ¡Completamente!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sup! Buen trabajo. Intenté todo lo que pude, ¡pero sigo bastante decepcionado!</speech>
        </speeches>
    </conversation>
</npcs>