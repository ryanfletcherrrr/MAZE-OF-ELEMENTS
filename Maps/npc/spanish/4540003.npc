<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ah... Sí... Supongo que debo darle la bienvenida a mi casa. Por favor, disculpe la decoración más bien escasa...</speech>
            <speech>Ahora, por dónde empezar... Tomémonos un momento para comprender lo que le está ocurriendo a nuestro mundo en estos momentos.</speech>
            <speech>El estruendo que sacudió la tierra en este momento...</speech>
            <speech>La explosión que nos rompió el tímpano...</speech>
            <speech>Son la prueba de que una foca, que estuvo oculta durante mucho tiempo en las profundidades marinas, se ha deshecho por fin.</speech>
            <speech>El Pokémon superantiguo que ha estado sellado en las profundidades de la Ruta 128 desde tiempos remotos...</speech>
            <speech>Dormía hasta ahora en la Caverna del Fondo Marino.</speech>
            <speech>La entrada a esa caverna estaba sellada por el poder de cierto Pokémon,</speech>
            <speech>todo en un esfuerzo por evitar que cualquier humano o Pokémon la traspase.</speech>
            <speech>Pero ahora parece que los tejemanejes de ese terrible equipo han deshecho el sello.</speech>
            <speech>No cabe duda de que pretenden revivir a los superantiguos Pokémon.</speech>
            <speech>Y una vez que lo hagan, parece que esperan hacer suyo su poder.</speech>
            <speech>$PLAYER_NAME... Si ese equipo obtiene el poder del Pokémon superantiguo, alterará el equilibrio de la naturaleza en este mundo.</speech>
            <speech>Una crisis sin precedentes se abatirá sobre todos los seres vivos del planeta.</speech>
            <speech>Pienso hacer todo lo que esté en mi mano para sofocar esta situación.</speech>
            <speech>Ese es mi deber. Pero hay un límite a lo que puedo hacer sólo con mi poder...</speech>
            <speech>Por eso te pido ayuda. Confío mucho en su capacidad.</speech>
            <speech>Préstame tu fuerza para poner fin a las locas ambiciones de estos equipos.</speech>
            <speech>Si tú, yo y nuestros Pokémon trabajamos juntos, superaremos este desastroso giro de los acontecimientos.</speech>
            <speech>No creo que sea imposible.</speech>
            <speech>Te confiaré esto.</speech>
        </speeches>
        <speeches id="2">
            <speech>Si usas Buceo, podrás sumergirte en el fondo del océano con tus Pokémon.</speech>
            <speech>Y toma esto, para que puedas permanecer con tus Pokémon incluso en las profundidades del océano...</speech>
            <speech>Si usara Buceo en el tramo correcto a lo largo de la ruta 128...</speech>
            <speech>Creo que deberías poder llegar a la entrada de la Caverna del Fondo Marino.</speech>
            <speech>Me uniré a ustedes cuando termine mis deberes. Por favor, haced lo que podáis para detener al Equipo Aqua y al Equipo Magma hasta entonces.</speech>
            <speech>Confío en ti para que lo hagas por mí.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>¡Bienvenido de nuevo, $PLAYER_NAME! Veo que has añadido un Beldum a tu equipo. ¡Excelente progreso desde nuestra batalla de Elite Four!</speech>
            <speech>Como sabes, Metagross tiene una poderosa Mega Evolución, pero hay un desafío. La Metagrosita se ha hecho añicos.</speech>
            <speech>Reensamblarlo es crucial para desatar el mega poder evolutivo de Metagross.</speech>
            <speech>Empieza por visitar al Maníaco de los Fósiles en Fallarbor para obtener pistas sobre los fragmentos. Este es un paso clave en nuestro viaje.</speech>
        </speeches>
        <speeches id="2">
            <speech>El viaje para recomponer la Metagrosita comienza con el Maníaco de los Fósiles en Fallarbor. Él podría saber dónde están los fragmentos.</speech>
            <speech>Reagrupémonos cuando hayas recogido todos los fragmentos de Metagrosita. ¡Estamos a punto de liberar todo el potencial de Metagross!</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1"/>
        <speeches id="2">
            <speech>¡Notable logro, $PLAYER_NAME! Has recogido con éxito todos los fragmentos de la Metagrosita.</speech>
            <speech>¿Puedo llevármelas? Estoy ansioso por empezar el intrincado proceso de volver a montar esta magnífica piedra.</speech>
        </speeches>
        <speeches id="3">
            <speech>Estos fragmentos contienen un poder latente que sólo Metagross puede despertar completamente. Tendré que repararlos meticulosamente.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Maravilloso! Comenzaré la cuidadosa restauración de la Metagrosita inmediatamente.</speech>
            <speech>Una vez que hayas perfeccionado la fuerza de tu Metagross hasta el nivel 100, vuelve aquí conmigo.</speech>
            <speech>De este modo accederemos a la verdadera esencia de su Megaevolución, un momento por el que merece la pena esforzarse.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Veo que aún no estás preparado. Ya sea llegar al nivel 100 o no tener Metagross, no hay prisa.</speech>
            <speech>Desarrollar la fuerza para utilizar la Metagrosita requiere tiempo y dedicación.</speech>
            <speech>Vuelve cuando tú y tu Metagross estéis preparados.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, $PLAYER_NAME, ¡has vuelto! La Metagrosita ha sido meticulosamente reparada y ahora rebosa potencial.</speech>
            <speech>Déjame ver tu Metagross. Si ha alcanzado el nivel 100, está listo para aprovechar el poder de esta Mega Piedra.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Todavía no? Lo comprendo. Alcanzar tal nivel de fuerza requiere tiempo y dedicación. ¿Tu Metagross aún no es lo suficientemente fuerte?</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Lo has conseguido! Tu Metagross es sin duda un compañero formidable. Es un honor confiarte la Metagrosita.</speech>
            <speech>Usa este poder con sabiduría. La Megaevolución no es solo una demostración de fuerza, sino un vínculo entre Entrenador y Pokémon.</speech>
            <speech>Con la Metagrosita, posees un poder formidable. Recuerda usarlo con responsabilidad y con espíritu de competencia leal.</speech>
            <speech>Buena suerte en tu viaje, $PLAYER_NAME. Disfruta de la nueva fuerza de tu Metagross, pero ten cuidado: es un poder sin igual.</speech>
        </speeches>
        <speeches id="5">
            <speech>Ahora que tienes la Metagrosita, las posibilidades son infinitas. ¡Que tus batallas sean épicas y tu vínculo con Metagross más fuerte que nunca!</speech>
        </speeches>
    </conversation>
</npcs>