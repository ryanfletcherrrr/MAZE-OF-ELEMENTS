<npcs>
    <npc direction="DOWN" id="1000" name="Lass Julia" sprite="12" x="27" y="15">
        <speech>¿Sabía que otoño es otra palabra para otoño?</speech>
        <speech>Es la estación en la que las hojas caen de los árboles, ¿no es precioso?</speech>
    </npc>
    <npc direction="LEFT" id="1001" name="Pokefan Zusa" sprite="63" x="54" y="45">
        <speech>Por favor, cuida bien de tu pokemon.</speech>
        <speech>Cuando encuentres pokémon salvajes que quieras capturar, intenta atraparlos de inmediato en lugar de herirlos.
            herirlos.
        </speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Monk Gilbert" sprite="167" x="45" y="33">
        <speech>El ciclo de las estaciones, el ciclo de la vida, todo es lo mismo.</speech>
        <speech>¿Lo has pensado alguna vez?</speech>
        <speech>Supongo que no...</speech>
    </npc>
    <npc direction="LEFT" id="1003" name="Youngster Isak" sprite="4" x="36" y="8">
        <speech>¡Peces! Sólo peces.</speech>
        <speech>¿Cuál es tu pececito favorito? El mío es Finneon.</speech>
    </npc>
    <npc direction="UP" id="1004" name="Tourist Ludz" randomRotation="true" sprite="108" x="44" y="14">
        <speech>Me encanta nadar y no he visto ningún río tan limpio como éste.</speech>
        <speech>También se dice que bañarse en este río sagrado lava todos los pecados.</speech>
    </npc>
    <npc direction="DOWN" id="1005" name="Preschooler Burt" sprite="71" x="17" y="13">
        <speech>Mi hermana pequeña llora mucho.</speech>
        <speech>Siempre le digo que puede apoyarse en mí, ¡siempre estoy ahí para ella!</speech>
    </npc>
    <npc direction="DOWN" id="1006" name="Preschooler Sheena" randomRotation="true" sprite="82" x="18" y="13">
        <speech>No podría imaginar mi vida sin mi hermano Burt.</speech>
        <speech>Es el mejor hermano de todo el mundo, ¡significa mucho para mí!</speech>
    </npc>
    <npc direction="UP" id="1007" name="Backpacker Dill" sprite="108" x="25" y="34">
        <speech>Siempre estoy preparado para ir a cualquier parte. Llevo todo lo que necesito en la mochila.</speech>
        <speech>Tengo una bolsa especial para todas mis bayas. Me pueden salvar la vida en las batallas.</speech>
    </npc>
    <npc direction="LEFT" id="1008" name="Monk Jom" sprite="167" x="4" y="25">
        <speech>Hace mucho tiempo, un pájaro mítico quemó este lugar hasta los cimientos.</speech>
        <speech>Hoy nos referimos a esa ocasión como "El Gran Incendio".</speech>
        <speech>Ese pájaro mítico es Ho-Oh, puede que hayas visto su estatua más abajo.</speech>
    </npc>
    <npc direction="LEFT" id="1009" name="Monk Phill" sprite="167" x="4" y="28">
        <speech>Después del Gran Incendio había toda una zona de nada.</speech>
        <speech>Hasta que el Fuego Sagrado de Ho-Oh devolvió la vida a esta ciudad.</speech>
        <speech>Los árboles, los Pokemon, la gente... Todo ha vuelto gracias al Fuego Sagrado.</speech>
    </npc>
    <npc direction="DOWN" id="1010" name="Fishing Expert Zolander" sprite="16" x="38" y="20">
        <speech>Cualquiera que sea el pez que pesco, siempre lo suelto enseguida.</speech>
        <speech>Es un error derivar estos peces de su libertad.</speech>
        <speech>También a ellos se les debe permitir disfrutar de la belleza de la naturaleza en un Estado libre en el que merecen vivir.
        </speech>
    </npc>
    <npc direction="LEFT" id="1011" name="Lady Promilia" randomRotation="true" sprite="55" x="8" y="20">
        <speech>El propósito de los consejos de los mayores es garantizar que los jóvenes no repitan los errores del pasado,</speech>
        <speech>y ahí reside el valor de las palabras de los ancianos.</speech>
    </npc>
    <npc direction="UP" id="1012" name="Gentleman Olan" sprite="5" x="9" y="20">
        <speech>La edad no es mucho mejor instructora que la juventud, pues no ha aprovechado tanto como ha perdido.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Saludos! Bienvenido a Skynet Travel Technologies.</speech>
            <speech>¿Le gustaría viajar a algún sitio?</speech>
        </speeches>
        <speeches id="2">
            <speech>Es una pena. Por favor, vuelva cuando desee viajar a otro lugar.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech/>
        </speeches>
        <speeches id="2">
            <speech>Es una estatua en honor a Ho-Oh. Parece que hay algún texto grabado en ella:</speech>
            <speech>"He aquí la gloria de la llama;"</speech>
            <speech>" de muerte y renacimiento; de pureza y limpieza~"</speech>
            <speech>"He aquí la gloria del fuego sagrado;"</speech>
            <speech>"...que conoce la verdad en su corazón..."</speech>
            <speech>"He aquí la gloria del fénix;"</speech>
            <speech>"mientras vigila esta tierra~"</speech>
            <speech>"He aquí la gloria de Ho-Oh;"</speech>
            <speech>"el precursor de la alegría y el portador de la llama~"</speech>
            <speech>El resto del texto parece demasiado borroso para leerlo, pero junto a las palabras hay tallados unos extraños dibujos.</speech>
            <speech>Parecen plumas, de algún tipo.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hola joven entrenador.</speech>
            <speech>¿Has ganado tu sexta insignia?</speech>
            <speech>Oh, entonces no debes haber conocido a Blitz todavía.</speech>
            <speech>Es el 6º Líder de Gimnasio y el protector de los Volcanes Sagrados.</speech>
            <speech>No ha vuelto desde hace unos días, así que lo estoy buscando.</speech>
            <speech>No, no te preocupes. Lo encontraré. Debe estar meditando en alguna parte.</speech>
            <speech>Hasta luego.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ha pasado más de una semana desde la última vez que vimos a Blitz.</speech>
            <speech>Para serte sincero, he empezado a preocuparme...</speech>
            <speech>¿Tienes 5 insignias? ¿Tú también lo buscas?</speech>
            <speech>Ve a buscar en los Volcanes. Puedes acceder a ellos desde la salida este de esta ciudad.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>¡¡¡Gracias por la ayuda chico!!!</speech>
            <speech>Gracias por debilitar el Ho-Oh para mí.</speech>
            <speech>Ahora terminaré de hacer lo que vine a hacer aquí.</speech>
        </speeches>
        <speeches id="2">
            <speech>***Osiris captura a Ho-Oh***</speech>
            <speech>¡Ya casi es la hora! Pronto estaremos juntos, cariño.</speech>
            <speech>¡Acaba con él, Horus!</speech>
        </speeches>
    </conversation>

    <conversation id="7">
        <speeches id="1">
            <speech>**¡Ho-Oh ruge!!**</speech>
        </speeches>
        <speeches id="2">
            <speech>**¡¡¡Ho-Oh ruge de dolor!!!</speech>
        </speeches>
    </conversation>

    <conversation id="8">
        <speeches id="1">
            <speech>Ese amuleto que se te cayó antes... ¿Quién te lo dio?</speech>
            <speech>**Explicas que tu madre te dio eso.**</speech>
            <speech>¡Oh, así que eso es lo que sospechaba! No pareces tan listo, te lo explicaré.</speech>
            <speech>Tengo el mismo amuleto, es lo único que llevaba encima cuando me secuestró mi amo.</speech>
            <speech>Este amuleto me lo dio mi madre, exactamente el mismo amuleto construido con exactamente los mismos productos en bruto.</speech>
            <speech>Déjame quitarme la máscara para que veas lo parecidos que somos...</speech>
        </speeches>
        <speeches id="2">
            <speech>El Maestro Osiris me ha criado, y estoy dedicado a él y a su causa.</speech>
            <speech>No sé cómo decirlo, pero me alegro de haberte encontrado aunque sigo pensando que eres molesto.</speech>
            <speech>Por favor, deja de intentar arruinar nuestra causa porque no eres lo suficientemente fuerte.</speech>
            <speech>No quiero hacerte daño.</speech>
            <speech>Espero que lo entiendas y te mantengas alejado de la misión.</speech>
            <speech>Esta vez te dejo, pero la próxima vez puede que tenga que intervenir y acabar con esto de una vez por todas.</speech>
            <speech>Lo siento pequeña...</speech>
            <speech>Ah, y dile también a tu amiguita que se mantenga alejada. Está escondida en el PokeCentro.</speech>
        </speeches>
    </conversation>

    <conversation id="9">
        <speeches id="1">
            <speech>Atrapa el Ho-Oh, ayúdame a revivir a mi Esposa mis queridos niños.</speech>
        </speeches>
    </conversation>
</npcs>