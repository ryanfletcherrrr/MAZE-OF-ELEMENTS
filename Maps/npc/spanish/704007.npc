<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¿Has venido a desafiar a Elite 4?</speech>
            <speech>Antes de eso, veamos si mereces su tiempo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, está bien. No estás tan mal, sabes.</speech>
        </speeches>
        <speeches id="3">
            <speech>Son mucho más fuertes que yo, eso seguro.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vuelve, sólo les harás perder el tiempo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Guiado por esta motivación, no pasarás.</speech>
            <speech>¡Te lo advierto!</speech>
        </speeches>
        <speeches id="2">
            <speech>Puede pasar.</speech>
        </speeches>
        <speeches id="3">
            <speech>No llegarás muy lejos.</speech>
        </speeches>
        <speeches id="4">
            <speech>No pasarás.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Sólo estoy probando mis habilidades.</speech>
            <speech>¡Eres mi presa!</speech>
        </speeches>
        <speeches id="2">
            <speech>Soy muy malo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Siento hacerle perder el tiempo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Siento hacerle perder el tiempo.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¿Qué debo hacer ahora?</speech>
            <speech>¡Ahhhhhhhh!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ahhhhh!</speech>
        </speeches>
        <speeches id="3">
            <speech>Estoy muy perdido.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡¡Ya me siento mejor!!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Esta presión. No puedo superarla.</speech>
            <speech>¡Déjame probar algo!</speech>
        </speeches>
        <speeches id="2">
            <speech>No funcionó.</speech>
        </speeches>
        <speeches id="3">
            <speech>No funcionó.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vete.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Yo soy el último.</speech>
            <speech>¡Brrrrrrrrrrrrraw!</speech>
        </speeches>
        <speeches id="2">
            <speech>Buena suerte, la necesitarás.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Brrrrrrrrrrraw!</speech>
        </speeches>
        <speeches id="4">
            <speech>Tendrás que volver más fuerte la próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Tus Pokemon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh, sólo puedo curar a tu pokemon si tienes membresía PBO. Usted puede comprar uno de la tienda de donante.</speech>
        </speeches>
    </conversation>
</npcs>