<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¿Te has enfrentado alguna vez al poder del fuego de Magma? ¡Pongamos a prueba tu resistencia!</speech>
        </speeches>
        <speeches id="2">
            <speech>Nuestro fuego se ha apagado por ahora, pero la brasa de la venganza sigue ardiendo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Así, la marea se volvió contra nosotros. Pero el fuego de Magma nunca se extingue del todo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡BURNN!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Dicen que cada Grunt tiene su día. ¡Hoy, demuestro que es cierto!</speech>
        </speeches>
        <speeches id="2">
            <speech>La derrota es solo un peldaño en mi camino hacia la grandeza. Mira cómo me elevo.</speech>
        </speeches>
        <speeches id="3">
            <speech>No es mi día, ¿eh? No importa. Cada Grunt tiene su regreso. Estaré esperando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Subestimaste a un Grunt, ¿verdad? Nosotros también tenemos nuestros momentos de gloria.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>¿Un gruñón con gusto por la ópera? Ese soy yo. ¡Veamos si puedes seguir mi ritmo!</speech>
        </speeches>
        <speeches id="2">
            <speech>La derrota es sólo la obertura de mi historia. El final está aún por llegar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Otra pérdida, pero toda ópera tiene sus giros dramáticos. Volveré al escenario.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ah, esta vez la victoria es mía! Sin embargo, como en la ópera, la historia no termina hasta el acto final. ¡Prepárate para nuestro próximo encuentro!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Susurros de poder ancestral resuenan en la noche. Te atreves a escuchar su llamada?</speech>
            <speech>Bajo la atenta mirada de la luna, nuestro pacto se reúne. El desafío de los siglos espera vuestro valor.</speech>
        </speeches>

        <speeches id="2">
            <speech>Aunque triunféis, la oscuridad eterna teje su paciencia. Nuestra determinación permanece inquebrantable, imperturbable.</speech>
            <speech>Las sombras se separan, revelando un camino hacia nuestro enigmático líder. Una recompensa para los valientes, los fuertes, los victoriosos.</speech>
        </speeches>

        <speeches id="3">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
            <speech>Nuestros rituales, ligados a la danza celestial, no encuentran favor a esta hora. El momento adecuado aún se nos escapa.</speech>
            <speech>Regresa cuando la luna reine suprema sobre la noche, en $DURACIÓN. Sólo entonces se levantará el velo.</speech>
        </speeches>

        <speeches id="4">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
        </speeches>

        <speeches id="5">
            <speech>Los cuerpos celestes aún no se han alineado; nuestro poder permanece latente, a la espera del momento ordenado.</speech>
            <speech>Vuelve el viernes, cuando el resplandor de la luna atraviese el velo de la realidad y nuestro poder esté en su cenit.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Por favor, vuelva más tarde ya que actualmente no tengo nada que vender.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh hola, es 19 del mes, y usted está aquí con mi Gastly favorito.</speech>
            <speech>Aquí está mi bóveda de artículos especiales, dime qué quieres comprar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh hola, es 19 del mes, soy Storyteller, y estoy aquí para vender artículos exclusivos.</speech>
            <speech>Sin embargo, me gustaría que me enseñaras a mi Pokémon favorito, Gastly, antes de enseñarte mi bóveda de objetos.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Meditite" shouldSleep="" speed="1" sprite="307" type="pokemon" x="22" y="14">
        <path>RIGHTx3,UPx3,DOWNx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Meditite!</onCollisionSpeech>
        <speech>¡Meditite!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Duskull" shouldSleep="" speed="1" sprite="355" type="pokemon" x="3" y="2">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>¡Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Vulpix" shouldSleep="" speed="1" sprite="37" type="pokemon" x="19" y="3">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Vulpix!</onCollisionSpeech>
        <speech>¡Vulpix!</speech>
    </movingNpc>
</npcs>