<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡La adrenalina está bombeando en mi equipo! ¡Yo también! ¡Haré de esta una batalla increíble!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hice lo que vine a hacer, y así es como resultó. No hay nada más que decir.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hice lo que vine a hacer, y así es como resultó. No hay nada más que decir.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Qué te parece? Somos increíbles, ¿verdad? Fuiste capaz de explotar, ¿verdad?</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡La experiencia engendra poder! ¡¿No es eso lo que dicen?! De todos modos, ¿no vas a luchar conmigo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Esta batalla ha sido una experiencia valiosa. ¡Todavía tengo que ganar más experiencia!</speech>
        </speeches>
        <speeches id="3">
            <speech>Esta batalla fue una experiencia valiosa. ¡Todavía tengo que ganar más experiencia!</speech>
        </speeches>
        <speeches id="4">
            <speech>Incluso un aficionado como yo puede ganar. Dicen que la experiencia es la mejor maestra.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Hora de un haiku de batalla! Este es realmente bueno. Mi oponente es un niño. Ganaré seguro.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Hora de un haiku de batalla! No puedo creerlo. Todavía puedo continuar. Todavía puedo luchar.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Hora de un haiku de batalla! No puedo creerlo. Todavía puedo continuar. Todavía puedo luchar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Hora de un haiku de batalla! Sabía que ganaría. Sí, mis Pokémon y yo somos así de fuertes.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Mi última batalla... Así es como me gustaría que viéramos este combate...</speech>
        </speeches>
        <speeches id="2">
            <speech>Ha sido divertido... Vamos a tener otra última batalla de nuevo algún día ...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ha sido divertido... Vamos a tener otra última batalla de nuevo algún día ...</speech>
        </speeches>
        <speeches id="4">
            <speech>Nos volveremos a ver algún día... Je. Si eso fuera verdad...</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Jeje, te he engañado, ¿verdad?</speech>
        </speeches>
        <speeches id="2">
            <speech>Bueno, debería volver a esconderme.</speech>
        </speeches>
        <speeches id="3">
            <speech>Bueno, debería volver a esconderme.</speech>
        </speeches>
        <speeches id="4">
            <speech>Como formador, debes tomar todas las medidas con precaución.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Las batallas continúan para siempre! ¡Bienvenido al mundo sin fin!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ajá! ¡Ahí está! ¡Así es! ¡Ya estás como en casa en este mundo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Ajá! ¡Ahí está! ¡Así es! ¡Ya estás como en casa en este mundo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Si ya estás perdiendo, quizá sea mejor dar marcha atrás ahora.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¿Talento? ¡Ja! Es sólo una excusa conveniente que los entrenadores perezosos utilizan para explicar sus pérdidas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Vale, vale... pierdo. Tal vez voy a seguir trabajando un poco duro.</speech>
        </speeches>
        <speeches id="3">
            <speech>Vale, vale... pierdo. Tal vez voy a seguir trabajando un poco duro.</speech>
        </speeches>
        <speeches id="4">
            <speech>El llamado talento no es más que una ilusión... Los esfuerzos propios son lo único real.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Mi vieja me ha dejado... Creo que todo es culpa mía...</speech>
        </speeches>
        <speeches id="2">
            <speech>Me enganché demasiado a las batallas Pokémon, así que nunca hacía nada en casa.</speech>
        </speeches>
        <speeches id="3">
            <speech>Me enganché demasiado a las batallas Pokémon, así que nunca hacía nada en casa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ahora no hay nadie que me moleste, ¡así que puedo luchar todo lo que quiera!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¿Nos conocemos o no? La verdad es que no me acuerdo. Bueno, supongo que es un placer conocerte de todos modos.</speech>
        </speeches>
        <speeches id="2">
            <speech>De ninguna manera... ¡DE NINGUNA MANERA! Cómo iba a perder otra vez...</speech>
        </speeches>
        <speeches id="3">
            <speech>De ninguna manera... ¡DE NINGUNA MANERA! Cómo iba a perder otra vez...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Yahoo! ¡Yahoo! ¡Lo logré! He vuelto a ganar.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Estoy aquí para broncearme. El calor de la batalla podría acelerar el proceso ;)
</speech>
        </speeches>
        <speeches id="2">
            <speech>Deberías haberte quedado en casa y usar un spray.</speech>
        </speeches>
        <speeches id="3">
            <speech>Deberías haberte quedado en casa y usar un spray.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿No estoy guapa?</speech>
        </speeches>
    </conversation>
</npcs>