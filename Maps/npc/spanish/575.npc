<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Somos el Equipo Galáctico! ¡Nos llevaremos todos los Pokemon que queramos!</speech>
            <speech>¡Estamos secuestrando a todos los Pokemon de esta oxidada Isla de Hierro!</speech>
        </speeches>
        <speeches id="2">
            <speech>Los Pokemon aquí son terribles.</speech>
            <speech>¡Ni siquiera sé cuál es el gran plan del Equipo Galáctico!</speech>
        </speeches>
        <speeches id="4">
            <speech>No vuelvas a intentar interferir en los asuntos del Equipo Galáctico.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>No soy un simple excursionista. Llámame alpinista.</speech>
        </speeches>
        <speeches id="2">
            <speech>Un especialista en asuntos montañosos. Es un alpinista.</speech>
        </speeches>
        <speeches id="3">
            <speech>Un especialista en asuntos montañosos. Es un alpinista.</speech>
        </speeches>
        <speeches id="4">
            <speech>A un maníaco de la montaña como yo se le llama alpinista.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Harrumph! ¡Harooo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Hora de un haiku de batalla! No puedo creerlo. Todavía puedo continuar. Todavía puedo luchar.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Hora de un haiku de batalla! No puedo creerlo. Todavía puedo continuar. Todavía puedo luchar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡¡Harrumph!!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Alabo tu valentía al desafiarme. ¡Porque yo soy el que tiene la patada más fuerte!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmmm... Si iba a perder de todos modos, esperaba quedar totalmente mal en el proceso.</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh. Los Pokémon lucharon. Mi fuerte patada no ayudó ni un poco.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ir fácil en mí no está en mi vocabulario.</speech>
        </speeches>
        <speeches id="2">
            <speech>Aunque lo dé todo, no tiene sentido si pierdo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Aunque lo dé todo, no tiene sentido si pierdo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Para mí, la etiqueta es derrotar sin piedad a mis oponentes en la batalla, incluso a los débiles.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Te demostraré que podemos doblegarte. ¡Hemos estado entrenando en el campo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Qué extraño... Cómo puede ser esto... No debería haber sido superado.</speech>
        </speeches>
        <speeches id="3">
            <speech>Qué extraño... Cómo puede ser esto... No debería haber sido superado.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Cómo eran mis Pokémon? Poderosos, ¿verdad?</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Nuestras vidas tienen muchos días ordinarios... ¡así que tengo que tener Pokémon!</speech>
        </speeches>
        <speeches id="2">
            <speech>No coger una rabieta cuando pierdes forma parte de ser un Entrenador, ¿verdad?</speech>
        </speeches>
        <speeches id="3">
            <speech>No coger una rabieta cuando pierdes forma parte de ser un Entrenador, ¿verdad?</speech>
        </speeches>
        <speeches id="4">
            <speech>Cuando miro a una persona especial como tú, me derrito.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Para desafiarme debes ser una persona temeraria, que no sabe cuál es su lugar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hmmph... ¡Desafiarme debe significar que incluso la ignorancia tiene su límite!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Aunque la gente te llame As de la formación, no es que te den nada especial por ello.</speech>
        </speeches>
        <speeches id="2">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="3">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sólo soy bueno batallando. Ni siquiera tengo trabajo. Sólo soy otro desempleado.</speech>
        </speeches>
    </conversation>
</npcs>