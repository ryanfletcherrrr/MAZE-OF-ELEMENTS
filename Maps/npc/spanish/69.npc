<npcs>
    <npc direction="RIGHT" id="1001" name="Father George" sprite="62" x="6" y="14">
        <speech>¡Mi hijo Raúl acaba de atrapar su primer Pokemon!</speech>
        <speech>Lo traigo aquí montones de veces para enseñarle los fuertes lazos que existen entre los Pokemon y los seres humanos.</speech>
        <speech>Esperemos que aprenda.</speech>
    </npc>
    <npc direction="RIGHT" id="1002" name="Uncle Simon" sprite="63" x="6" y="13">
        <speech>George es un gran padre.</speech>
        <speech>¡Claro que sí, con un hermano así!</speech>
    </npc>
    <npc direction="LEFT" id="1003" name="Mother Sasha" randomRotation="true" sprite="60" x="30" y="3">
        <speech>Estoy buscando un Pokemon muy especial para regalar a mi hijo...</speech>
        <speech>¡Raúl se convertirá en un gran entrenador Pokemon!</speech>
    </npc>
    <npc direction="RIGHT" id="1004" name="Rich Boy Steve " randomRotation="true" sprite="75" x="35" y="14">
        <speech>Vete.</speech>
        <speech>Soy demasiado rico para hablar con gente al azar.</speech>
    </npc>
    <npc direction="RIGHT" id="1005" name="Expert Swimmer Michael" sprite="21" x="17" y="72">
        <speech>Esta cascada no es gran cosa para mí.</speech>
        <speech>Entreno mi fuerza aquí. Sólo unos pocos alrededor de $REGION_NAME hacen este tipo de entrenamiento.</speech>
    </npc>
    <npc direction="LEFT" id="1006" name="Gangster Bob" sprite="74" x="36" y="63">
        <speech>Hola, joven entrenador.</speech>
        <speech>¿Te sorprende ver a un tipo como yo siendo tan educado?</speech>
        <speech>Estoy retirado de la vida de gángster. Estoy disfrutando de lo que la madre naturaleza nos da.</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Hola! Veo que sales de Glassmoor, ¿eres rico? Me gustan los chicos ricos, pero eso no importa ahora.... ¡Más importante!</speech>
            <speech>¡Esta es una oportunidad perfecta! De hecho, estoy volviendo a casa de mis vacaciones en el volcán, y mientras estaba allí conseguí algunos pokemon nuevos, ¡pongámoslos a prueba!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Uhhh! Supongo que es demasiado pronto para aprender a usarlos y tener un buen trabajo en equipo con ellos, ¡necesito entrenar más con ellos! ¡Gracias!</speech>
        </speeches>
        <speeches id="3">
            <speech>Debería cambiarme de ropa antes de llegar a casa... ¡Voy a coger un resfriado llevando esto!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Jaja! ¡Sabía que eran fuertes desde el momento en que nos vimos! Deberías entrenar más, ¡me gustan los chicos ricos pero también los fuertes!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Hola, ¿tú también has venido a acampar? ¿No? Bueno, el aire aquí es fresco y los Pokemon de este bosque son amistosos.</speech>
            <speech>A menudo vengo aquí a acampar con mis Pokemon, pero eso no es todo lo divertido, ¡venga, luchemos y divirtámonos aún más!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ah, ha sido divertido! Gracias por acompañarme a mí y a mis pokémon en esta increíble batalla, ¡nos vemos!</speech>
        </speeches>
        <speeches id="3">
            <speech>Recuerda, ¡acampar en la naturaleza es muy divertido! ¡Y además puedes acercarte a tus Pokemon!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Jajajajaja! ¡Acampar y sentir el aire fresco aquí fuera realmente te ayuda a crecer fuerte!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Es muy importante amar y cuidar la naturaleza, igual que a un ser querido.</speech>
            <speech>Y lo que es mejor, ¡tengo la oportunidad de hacerlo junto a mi querida esposa!</speech>
            <speech>Nuestros Pokemon también tienen una gran sinergia. ¡Déjanos demostrártelo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Eres fuerte, espero que ames y aprecies a la Naturaleza tanto como yo, ¡ahora ve e intenta vencer a mi mujer!</speech>
        </speeches>
        <speeches id="3">
            <speech>Me alegro de verte de nuevo viajero, ¡veo que sigues tan fuerte como siempre!</speech>
        </speeches>
        <speeches id="4">
            <speech>Creo que es mejor que vayas a entrenar un poco más, no tienes fuerzas para continuar tu viaje.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Veo que ya has vencido a mi Esposo, ¡pero no será tan fácil como él! ¡Prepárate!</speech>
        </speeches>
        <speeches id="2">
            <speech>A mí también me has ganado, eres fuerte de verdad, pues adelante, disfruta de tu viaje, y recuerda, ¡respeta y ama la Naturaleza!</speech>
        </speeches>
        <speeches id="3">
            <speech>Mi Esposo y yo necesitamos entrenarnos más, de lo contrario no podremos proteger el bosque y todo lo que hay en él.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! Te dije que no sería tan fácil como con mi Marido, ¡vete a entrenar un poco más y yo estaré aquí para darte una oportunidad una vez más!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¿Vas también a las Montañas Heladas? Yo también voy, me han dicho que son un buen sitio para hacer senderismo, pero también que aparecen Pokemon salvajes muy fuertes.</speech>
            <speech>No estoy seguro de ser lo suficientemente fuerte, necesito formación, ¿me ayudas?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Uh! Definitivamente puedes cuidar de ti mismo allí arriba, eres realmente fuerte, ¡buena suerte!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Uh! Definitivamente puedes cuidar de ti mismo allí arriba, eres realmente fuerte, ¡buena suerte!</speech>
        </speeches>
        <speeches id="4">
            <speech>Sí, ahora estoy segura de que puedo acompañarle en las excursiones sin retenerle cuando nos encontremos con Pokémon salvajes.</speech>
            <speech>Oh... ¿todavía estás aquí? *Sonroja* ¡¡Por favor finge que no has oído esto!!</speech>
        </speeches>
    </conversation>
</npcs>