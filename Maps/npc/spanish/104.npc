<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>¿A qué esperas? Utiliza la incubadora de arriba para seleccionar a tu compañero.</speech>
            <speech>Recuerda que una vez que has tomado una decisión, no puedes deshacerla.</speech>
        </speeches>
        <speeches id="2">
            <speech>Mira sus ojos. Cuida de esta pequeña criatura.</speech>
            <speech>Si ves a $JVALOH_RIVAL por ahí, salúdala. Es mi sobrina. También me está ayudando a completar la Pokédex.</speech>
            <speech>Un último favor - Cuídala, a veces puede ser muy valiente, lo que no siempre es bueno.</speech>
            <speech>No olvides visitar a Mai. Puede que tenga algo para ti ;)</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Eso fue salvaje. Sí, lo que ha pasado en el transcurso de pocas semanas ha sido bastante salvaje.</speech>
            <speech>No tenía ni idea de que pasaban tantas cosas delante de mis narices.</speech>
            <speech>Estos sacerdotes, tu hermano, esposa muerta, Rayquaza, Ho-Oh y los 3 perros.</speech>
            <speech>Es mucha información incluso para mí, no sé cómo te las has arreglado para manejar todo eso tú sola.</speech>
            <speech>Eres un chico especial, ahora entiendo por qué Rowan hablaba tan bien de ti.</speech>
            <speech>De todos modos, la razón por la que te he hecho venir es que tengo información que podría interesarte.</speech>
            <speech>Al parecer, hay 3 sacerdotes muy antiguos que son capaces de invocar a los perros legendarios a su voluntad.</speech>
            <speech>He oído que pueden canalizar su energía y hablar con los perros legendarios a través de la telepatía.</speech>
            <speech>No, no sé dónde están. Eso es algo que tienes que encontrar tú mismo.</speech>
            <speech>Mi recomendación es que vayas a hablar con ellos.</speech>
            <speech>Estoy seguro de que se alegrarán de verte y quién sabe lo que podrían ofrecerte.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Quieres que lo repita?</speech>
            <speech>Al parecer, hay 3 sacerdotes muy antiguos que son capaces de invocar a los perros legendarios a su voluntad.</speech>
            <speech>He oído que pueden canalizar su energía y hablar con los perros legendarios a través de la telepatía.</speech>
            <speech>No, no sé dónde están. Eso es algo que tienes que encontrar tú mismo.</speech>
            <speech>Mi recomendación es que vayas a hablar con ellos.</speech>
            <speech>Estoy seguro de que se alegrarán de verte y quién sabe lo que podrían ofrecerte.</speech>
            <speech>¡Buena suerte!</speech>
        </speeches>
    </conversation>
</npcs>