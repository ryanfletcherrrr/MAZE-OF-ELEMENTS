<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Sólo los mejores entrenadores superan sus límites. ¡Veamos si tienes lo que hay que tener para estar en lo más alto!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... Eres más fuerte de lo que esperaba.  Recordaré esto.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... Eres más fuerte de lo que esperaba.  Recordaré esto.</speech>
        </speeches>
        <speeches id="4">
            <speech>Como era de esperar. Fuerza, estrategia y control... sin los tres, la victoria está fuera de alcance.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Velocidad, resistencia y adaptabilidad... tres claves para triunfar en una carrera... ¡y en la batalla! Veamos si puedes mantener el ritmo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que se me acabó el aguante... pero la próxima vez, ¡estaré preparado para llegar hasta el final!</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que se me acabó el aguante... pero la próxima vez, ¡estaré preparado para llegar hasta el final!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eso fue sólo un calentamiento! ¡En una carrera de verdad, te dejaría en el polvo!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Puede que esta vieja mansión se esté cayendo a pedazos, ¡pero mis llamas son más fuertes que nunca! ¡Subamos la temperatura!</speech>
        </speeches>
        <speeches id="2">
            <speech>Whoa ... Supongo que mi fuego no era lo suficientemente caliente como para manejarte.</speech>
        </speeches>
        <speeches id="3">
            <speech>Whoa ... Supongo que mi fuego no era lo suficientemente caliente como para manejarte.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Quemado hasta las cenizas! ¡Deberías haber sabido que no debías desafiar a un maestro del fuego!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="" randomRotation="false" sprite="162" x="40" y="9">
        <speech>Leíste una nota que decía:</speech>
        <speech>"El crepúsculo reemplazado por la luz de la mañana..."</speech>
    </npc>
    <movingNpc direction="LEFT" id="2" name="Ariados" speed="1" sprite="168" type="pokemon" x="30" y="6">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Skrrrrreeeeek!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wynaut" speed="1" sprite="360" type="pokemon" x="1" y="47">
        <path>DOWNx1,RIGHTx3,LEFTx3,UPx1</path>
        <onCollisionSpeech gap="4">Wyyyynaut!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="4" name="Justin" randomRotation="false" sprite="95" x="31" y="49">
        <speech>Hay tantos Pokémon raros aquí.</speech>
        <speech>¡Nunca me iré! ¿Wynaut?</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Haunter" speed="1" sprite="93" type="pokemon" x="5" y="6">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Haaaunt</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="6" name="Emily" randomRotation="true" sprite="94" x="8" y="6">
        <speech>¿Por qué está todo el mundo tan asustado?</speech>
        <speech>¡No hay nada malo en que un Haunter sirva bebidas! A mí personalmente me encanta el Ariados Float. ¡Extra espeluznante, extra dulce!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="7" name="Cinderella" randomRotation="true" sprite="43" x="37" y="35">
        <speech>No pueden ordenarme que deje de soñar.</speech>
    </npc>
</npcs>