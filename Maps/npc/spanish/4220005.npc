<npcs>
    <conversation id="1">
        <speeches id="2">
            <speech>¡¿Qu-qué fue eso?! ¡¿Quiénes sois?!</speech>
            <speech>Joven $GENDER_MAN_LADY... Ah, $PLAYER_NAME, ¿verdad? ¡Esa fue una situación bastante tensa!</speech>
            <speech>Gracias por ayudarme.</speech>
            <speech>¡Oh, sí, casi se me olvida que trajiste las piezas de Devon! ¿Puedo quedármelas?</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Por qué?</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Aquí es! ¡No puedo quedarme aquí parado!</speech>
            <speech>Por fin ha llegado el momento de emprender nuestra expedición a los fondos marinos.</speech>
            <speech>Gracias por esto, ¡y disculpen!</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Aquí es! ¡No puedo quedarme aquí parado!</speech>
            <speech>Por fin ha llegado el momento de emprender nuestra expedición a los fondos marinos.</speech>
            <speech>Gracias por esto, ¡y disculpen!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Ja, ja, ja!</speech>
            <speech>¡Un momento y nos llevaremos esas piezas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Esto es bastante desastroso.</speech>
            <speech>A este paso, voy a convertirme en el blanco de la furia del jefe.</speech>
        </speeches>
        <speeches id="3">
            <speech>Esto es bastante desastroso.</speech>
            <speech>A este paso, voy a convertirme en el blanco de la furia del jefe.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja, ja, ja!</speech>
            <speech>¡Ahora danos esas partes!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Ja, ja, ja!</speech>
            <speech>¡Esas partes son nuestras!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph.</speech>
            <speech>Nunca hubiera pensado que un simple niño fuera a ser un obstáculo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph.</speech>
            <speech>Nunca habría imaginado que un simple niño fuera a suponer un obstáculo semejante.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja, ja, ja!</speech>
            <speech>¡Ahora danos esas partes!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Y yo que me preguntaba cómo podían detenerte por el simple hecho de incautar un maletín.</speech>
            <speech>¿Debo entender que está siendo obstaculizado por este niño?"</speech>
            <speech>Hmm. Aunque no eres más que un niño, tus ojos me hablan de tu feroz determinación.</speech>
            <speech>El corazón me late con fuerza en el pecho...</speech>
            <speech>Sí, creo que puedo ver por qué mis humildes Grunts no pudieron resistir ni un minuto contra ti. Me llamo
                Maxie.
            </speech>
            <speech>Me presento como jefe del Equipo Magma, una noble organización cuyo objetivo es impulsar a la humanidad hacia
                mayores cotas de progreso y evolución.
            </speech>
            <speech>Ya lo creo. Y tú eres uno de los jóvenes que pueden forjar el futuro de nuestra sociedad.</speech>
            <speech>Teniendo en cuenta ese hecho, creo que voy a educarte en los caminos del mundo.</speech>
            <speech>La tierra... Es el escenario en el que se encuentra la humanidad.</speech>
            <speech>La tierra existe para que los humanos sigamos avanzando hacia el futuro...</speech>
            <speech>Para seguir creciendo y evolucionando, los seres humanos necesitamos un gran escenario en el que situarnos.</speech>
            <speech>Una tierra en la que podemos avanzar... Una tierra que podemos explorar... desarrollar... explotar...</speech>
            <speech>Esta es la base del crecimiento de todo esfuerzo humano.</speech>
            <speech>Por eso nosotros, el Equipo Magma, ¡debemos aumentar la masa terrestre del mundo!</speech>
            <speech>Cree que esto conducirá a un futuro de felicidad eterna para la humanidad...</speech>
            <speech>Y, en consecuencia, ¡por toda la vida!</speech>
            <speech>Humph. Supongo que el concepto aún puede ser demasiado difícil de comprender para un niño.</speech>
            <speech>¿Es así? Al menos he intentado abrir tu mente. Me despido por ahora.</speech>
            <speech>Te sugiero que te cuides de no volver a enfrentarte al Equipo Magma.</speech>
            <speech>No seré tan indulgente la próxima vez. Te imploro que lo recuerdes.</speech>
            <speech>Hemos terminado aquí.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Corey " randomRotation="true" sprite="11" x="15" y="9">
        <speech>El Museo Oceánico no es sólo un edificio; es un santuario para los entusiastas marinos como yo.</speech>
        <speech>Los objetos expuestos aquí cuentan la historia de nuestra profunda conexión con el mar, y el capitán Stern es el guardián de ese legado.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Tito" shouldSleep="" speed="1" sprite="8" type="npc" x="4" y="17">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>El capitán Stern es un faro de conocimiento en lo que respecta a la historia marítima.</speech>
        <speech>Su dedicación a preservar nuestro patrimonio oceánico es realmente inspiradora.</speech>
        <speech>Es una pena que el Equipo Magma haya decidido perturbar la tranquilidad de este lugar.</speech>
    </movingNpc>
</npcs>