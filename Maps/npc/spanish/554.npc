<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡No te saldrás con la tuya, Equipo Galáctico!</speech>
        </speeches>
        <speeches id="2">
            <speech>... ... ¡Sí, es cierto! ¡No pude hacer nada contra el Equipo Galáctico!</speech>
            <speech>Ese Pokémon llamado Uxie... Estaba sufriendo...</speech>
            <speech>Voy a ser más duro... No se trata de ganar o perder... Eso no es suficiente...</speech>
            <speech>Tengo que ser más fuerte... No basta con querer ser el Entrenador más poderoso...</speech>
            <speech>Requiere un esfuerzo honesto... Y un corazón decidido.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>¿Oh? ¿Ya has terminado? Tus Pokémon no son malos, pero eres ridículamente débil.</speech>
            <speech>¿De verdad creías que podrías salvar a los Pokémon del lago? ¿Y convertirte en el Campeón Pokémon?</speech>
            <speech>Sigue soñando, pequeño. Pero, eww, hace tanto frío aquí.</speech>
            <speech>Volvamos al cuartel general de Veilstone.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Oh? ¿No te conozco? Nos conocimos en Ciudad Eterna.</speech>
            <speech>Escuchen. El Equipo Galáctico va a hacer algo enorme por el bien de todos.</speech>
            <speech>Por eso debes mantenerte alejado del Equipo Galáctico.</speech>
            <speech>No vengas quejándote de los pobres Pokémon y otras chorradas triviales por el estilo.</speech>
            <speech>No pierdas el tiempo viniendo a nuestro cuartel general en Veilstone. Ahora, si me disculpan.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>J'enchante ma vie, ¡te deseo bonjour! ¿Me cambias tu Clamperl por mi [Pokemon Comerciante]? Gota, gota, gota.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Qu'est-ce-que c'est que ces manieres! Ahora me voy. Gota, gota, gota. Me llevaré la lluvia conmigo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Merci pour mon Clamperl, je l'adore. Gota, gota, gota. Le deseo lo mejor con su Corpish.</speech>
        </speeches>
        <speeches id="4">
            <speech>Goteo, goteo, gota. Noelle es la mujer de la lluvia. La lluvia siempre está conmigo, ¿y qué clase de persona eres tú?</speech>
            <speech>Goteo, goteo, goteo. Mi Corpish sería una gran adición a su equipo, pero hoy no es lo suficientemente lluvioso para el comercio.</speech>
            <speech>¡Vuelve el próximo día 28 del mes con un Clamperl, Lv.40 o superior, para intercambiarlo por mi Corpish!</speech>
            <speech>Sólo aceptaré un Clamperl, y no adquirido a través de un intercambio. Así que asegúrate de que el Clamperl es capturado por ti.</speech>
        </speeches>
        <speeches id="5">
            <speech>Goteo, goteo, gota. Noelle es la mujer de la lluvia. La lluvia siempre está conmigo, ¿y qué clase de persona eres tú?</speech>
            <speech>Goteo, goteo, goteo. Mi Corpish sería un gran fichaje para tu equipo.</speech>
            <speech>Hoy es el 28º día del mes, bastante lluvioso para comerciar, pero hay otra cuestión.</speech>
            <speech>Vuelve el próximo 7º día del mes con un Clamperl, Lv.40 o superior, para cambiarlo por mi Corpish.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Lass Lass.. FROOSS</speech>
            <speech>*Froslass parece estar señalando hacia el Tentacruel frente a la cueva.*</speech>
            <speech>*Parece que intenta ir a la cueva con su amigo Mismagius pero tiene miedo del Tentacruel.*</speech>
        </speeches>

        <speeches id="2">
            <speech>Lasss :* :*</speech>
            <speech>*Froslass nos invita a la cueva.*</speech>
            <speech>*¿Quieres aceptar la invitación?*</speech>
        </speeches>

        <speeches id="3">
            <speech>...</speech>
            <speech>*Froslass está triste porque rechazaste la invitación.*</speech>
        </speeches>

        <speeches id="4">
            <speech>¡¡¡Froslass!!! :) :)</speech>
            <speech>*Froslass parece estar contento y se fue a la cueva.*</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>¡TENTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA!</speech>
        </speeches>
        <speeches id="2">
            <speech>TENTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</speech>
        </speeches>
        <speeches id="3">
            <speech>TENTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</speech>
        </speeches>
        <speeches id="4">
            <speech>TENTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</speech>
        </speeches>
        <speeches id="5">
            <speech>TENTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Tus Pokemon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
    </conversation>

    <conversation id="7" canSkip="false">
        <speeches id="1">
            <!-- Antes de la Batalla -->
            <speech>¿Oh, eres tú de nuevo? He oído hablar de tu pequeña racha. ¿Una racha de 120 victorias en la Torre Batalla, verdad?</speech>
            <speech>Impresionante para un niño, pero veamos cómo te enfrentas a un verdadero desafío. ¡No me contendré!</speech>
            <speech>Elige tu nivel de batalla. Recuerda, en Team Galactic, no hacemos las cosas a medias.</speech>
        </speeches>
        <speeches id="2">
            <!-- Discurso de Victoria -->
            <speech>¿Derrotada por ti? ¡Esto debe ser una broma! ¡Los comandantes de Team Galactic no pierden ante niños!</speech>
            <speech>Esto no volverá a pasar. La próxima vez, presenciarás el verdadero poder de Team Galactic. ¡Espéralo!</speech>
        </speeches>
        <speeches id="3">
            <!-- Discurso de No Batalla -->
            <speech>¿Intentando desafiarme ahora? Debes estar bromeando. Aún no estoy lista para ti.</speech>
            <speech>Vuelve después de $DURATION. Usa este tiempo para pensar en lo que significa oponerse a Team Galactic.</speech>
        </speeches>
        <speeches id="4">
            <!-- Discurso de Derrota -->
            <speech>Así que, conseguiste superarme esta vez. No pienses que esto te hace superior.</speech>
            <speech>Tienes un largo camino por delante antes de poder desafiar realmente a Team Galactic. La próxima vez no será tan fácil.</speech>
        </speeches>
        <speeches id="5">
            <!-- Discurso Antes del Criterio -->
            <speech>¿Una [GOLD]racha de 120 victorias en la Torre Batalla[]? ¿Aún no has logrado eso? Patético.</speech>
            <speech>Vuelve cuando seas algo más que una molestia. Team Galactic no tiene tiempo para débiles.</speech>
        </speeches>
    </conversation>

</npcs>
