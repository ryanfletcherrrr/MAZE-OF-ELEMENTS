<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Has llamado la atención del equipo Magma, ¿eh? Pongamos a prueba tu temple contra nuestra ardiente pasión.</speech>
        </speeches>
        <speeches id="2">
            <speech>Así que me has superado... ¡La determinación del Equipo Magma sólo se fortalece con tales desafíos!</speech>
            <speech>Nos retiraremos por ahora, pero esto no es lo último que habréis visto de nosotros. ¡Las llamas del Equipo Magma no pueden extinguirse tan fácilmente!</speech>
        </speeches>
        <speeches id="3">
            <speech>Vuestra fuerza es encomiable, pero no penséis que esto se ha acabado. ¡El Equipo Magma resurgirá de estas cenizas más fuerte que antes!</speech>
            <speech>Nos reagruparemos y perfeccionaremos nuestras estrategias. La próxima vez que nos reunamos, el resultado será diferente.</speech>
        </speeches>
        <speeches id="4">
            <speech>La victoria es nuestra. No vuelvas a aparecer por aquí.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Vaya, casi muestro mi lado novato. ¡A luchar!</speech>
        </speeches>
        <speeches id="2">
            <speech>Así que la suerte del novato se acaba. ¡Vuelvo al entrenamiento!</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que hay que volver a lo básico. El viaje de un novato nunca termina.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Parece que te sobreestimé!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Normalmente sólo escucho música clásica, pero si pierdo, creo que probaré un poco de new age.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ahora puedo ser aún más fuerte. Crezco con cada rencor.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahora puedo ser aún más fuerte. Crezco con cada rencor.</speech>
        </speeches>
        <speeches id="4">
            <speech>Supongo que me quedaré con mis clásicos. ¡Aún no estás listo para mi nueva era!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>...Ja.</speech>
            <speech>... ... Analizando.</speech>
            <speech>...Hah.</speech>
        </speeches>
        <speeches id="2">
            <speech>...Gracioso.</speech>
            <speech>...¿Otra vez? Eso es imprevisto. ...Lo sabía. ¡Tú... eres interesante! ...Jaja.</speech>
            <speech>Estoy deseando... Cuando... podamos encontrarnos de nuevo.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Humph. Así que fuiste tú... Siento haber tenido que posponer mi derrota contra ti en el Monte Chimenea.</speech>
            <speech>Y ahora, lamento tener que posponerlo una vez más.</speech>
            <speech>No puedo permitirme perder ni un solo segundo ahora. Por el Orbe Rojo que ha sido consagrado aquí en el Monte Pyre...</speech>
            <speech>¡Ahora me pertenece a mí, el gran Maxie!</speech>
        </speeches>
        <speeches id="2">
            <speech>Courtney. Debes encargarte de que nuestro querido visitante no sea descuidado debido a mi incapacidad para batallar ahora...</speech>
            <speech>Ten la amabilidad de combatirlo con todas tus fuerzas...</speech>
            <speech>¡y aplastar a este chico para que nunca más ni por un solo momento sueñe con desafiar a nuestro equipo!</speech>
            <speech>Fufufu... Con este Orbe Rojo en mi poder, ¡no necesito el poder del Meteorito para despertar a la bestia de las profundidades!</speech>
            <speech>Todo lo que necesito ahora es una forma de llegar al lugar donde duerme...</speech>
            <speech>La única tarea pendiente es conseguir el submarino que se está construyendo en Slateport.</speech>
            <speech>¡Nos movemos de inmediato, equipo! Nuestro próximo destino... ¡Ciudad Slateport!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Sí, yo, qué desastre...</speech>
            <speech>El Orbe Rojo... Robado de nuestra custodia...</speech>
            <speech>El Orbe Rojo y el Orbe Azul no deben separarse nunca.</speech>
            <speech>Son el uno para el otro...</speech>
            <speech>Mmm...</speech>
            <speech>Te confiaré el Orbe Azul restante.</speech>
        </speeches>
        <speeches id="2">
            <speech>Y te ruego... ¡Persigue a esos ladrones y recupera su orbe!</speech>
            <speech>El miserable líder de ellos...</speech>
            <speech>Estoy seguro de que dijo que se dirigían a Slateport City a continuación...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Saludos, viajero! Soy conocido en todo Hoenn como el Experto en Flauta de Eon, un maestro de la invocación de los legendarios Latios y Latias.</speech>
            <speech>Sin embargo, debo informarte de que un servicio tan raro y místico tiene un coste. Mis honorarios son de 50.000F, y parece que no tienes suficientes en este momento.</speech>
            <speech>Invocar a estas majestuosas criaturas no sólo requiere habilidad, sino también una profunda conexión con su energía ancestral.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Bienvenido! Veo que posees una Flauta de Eón.</speech>
            <speech>Es un instrumento extraordinario, pero requiere habilidades únicas para aprovechar su verdadero poder, habilidades que he perfeccionado a lo largo de los años.</speech>
            <speech>Por 50.000F, puedo usar tu Flauta de Eón para tejer una melodía que resuene con el alma de Latios o Latias.</speech>
            <speech>Esta antigua flauta, cuando se toca correctamente, puede tender puentes entre mundos, invocando al Dúo Eón desde los confines del cielo.</speech>
            <speech>Dime, ¿a cuál de estos seres celestiales te gustaría invocar? Elige sabiamente, porque cada uno ofrece una experiencia tan intemporal como las propias estrellas.</speech>
        </speeches>
        <speeches id="3">
            <speech>La melodía de la Flauta Eon baila ahora sobre los vientos, una canción más antigua que el propio Hoenn, que llega hasta el Dúo Eon.</speech>
            <speech>Mira a los cielos, pues pronto los majestuosos Latios o Latias responderán a nuestra llamada, agraciándonos con su legendaria presencia.</speech>
            <speech>Un espectáculo que pocos han contemplado.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Susurros de poder ancestral resuenan en la noche. Te atreves a escuchar su llamada?</speech>
            <speech>Bajo la atenta mirada de la luna, nuestro pacto se reúne. El desafío de los siglos espera vuestro valor.</speech>
        </speeches>
        <speeches id="2">
            <speech>Aunque triunféis, la oscuridad eterna teje su paciencia. Nuestra determinación permanece inquebrantable, imperturbable.</speech>
            <speech>Las sombras se separan, revelando un camino hacia nuestro enigmático líder. Una recompensa para los valientes, los fuertes, los victoriosos.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
            <speech>Nuestros rituales, ligados a la danza celestial, no encuentran favor a esta hora. El momento adecuado aún se nos escapa.</speech>
            <speech>Regresa cuando la luna reine suprema sobre la noche, en $DURACIÓN. Sólo entonces se levantará el velo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
        </speeches>
        <speeches id="5">
            <speech>Los cuerpos celestes aún no se han alineado; nuestro poder permanece latente, a la espera del momento ordenado.</speech>
            <speech>Vuelve el viernes, cuando el resplandor de la luna atraviese el velo de la realidad y nuestro poder esté en su cenit.</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>Susurros de poder ancestral resuenan en la noche. Te atreves a escuchar su llamada?</speech>
            <speech>Bajo la atenta mirada de la luna, nuestro pacto se reúne. El desafío de los siglos espera vuestro valor.</speech>
        </speeches>
        <speeches id="2">
            <speech>Aunque triunféis, la oscuridad eterna teje su paciencia. Nuestra determinación permanece inquebrantable, imperturbable.</speech>
            <speech>Las sombras se separan, revelando un camino hacia nuestro enigmático líder. Una recompensa para los valientes, los fuertes, los victoriosos.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
            <speech>Nuestros rituales, ligados a la danza celestial, no encuentran favor a esta hora. El momento adecuado aún se nos escapa.</speech>
            <speech>Regresa cuando la luna reine suprema sobre la noche, en $DURACIÓN. Sólo entonces se levantará el velo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Increíble! Tu fuerza atraviesa el velo de la noche, rivalizando con los antiguos poderes que dominamos.</speech>
            <speech>Velado en secreto, nuestro líder espera. Tu victoria te ha valido una audiencia en el corazón de las sombras.</speech>
        </speeches>
        <speeches id="5">
            <speech>Los cuerpos celestes aún no se han alineado; nuestro poder permanece latente, a la espera del momento ordenado.</speech>
            <speech>Vuelve el viernes, cuando el resplandor de la luna atraviese el velo de la realidad y nuestro poder esté en su cenit.</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="2">
            <speech>¡He aquí! Contra el vasto silencio de lo desconocido, a través de reinos retorcidos y mapas inexplorados, has triunfado.</speech>
            <speech>Cien volutas etéreas, cada una un susurro del corazón oculto del mundo, vibran ahora con poder a tu alcance.</speech>
            <speech>Este acto, testimonio de tu inquebrantable determinación y valor, nos une en un pacto de magia ancestral.</speech>
            <speech>A cambio de esta hazaña, te concedo la Sabletita, envuelta en misterios tan antiguos como el cosmos.</speech>
            <speech>Que te sirva de faro, de guía en la oscuridad, de compañero en las batallas que no se ven y en los retos que no se dicen.</speech>
            <speech>¿Aceptas este regalo, vinculado por el pacto etéreo, para llevar su legado a las sombras y más allá?</speech>
        </speeches>

        <speeches id="3">
            <speech>Tu vacilación habla, viajero. La senda del destino es innumerable, y no todos los caminos deben recorrerse a la vez.</speech>
            <speech>Si tu corazón se resuelve y tus pasos te llevan de vuelta, el pacto permanece, a la espera, en la sombra silenciosa.</speech>
        </speeches>

        <speeches id="4">
            <speech>Con una palabra, se teje el futuro y se sella el pacto. La Sabletita, antigua y enigmática, está ahora bajo tu mando.</speech>
            <speech>Llévala con honor, porque su poder sólo es igualado por la profundidad de tu determinación. Que ilumine tus horas más oscuras.</speech>
        </speeches>
    </conversation>

    <movingNpc direction="DOWN" id="1" name="Wingull" speed="1" sprite="278" type="pokemon" x="3" y="4">
        <path>RIGHTx18,DOWNx3,LEFTx18,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Wingull" speed="1" sprite="278" type="pokemon" x="17" y="21">
        <path>UPx10,LEFTx9,DOWNx10,RIGHTx9</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wingull" speed="1" sprite="278" type="pokemon" x="2" y="28">
        <path>UPx8,RIGHTx15,LEFTx15,DOWNx8</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Wingull" speed="1" sprite="278" type="pokemon" x="35" y="2">
        <path>DOWNx4,RIGHTx16,LEFTx16,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Wingull" speed="1" sprite="278" type="pokemon" x="47" y="13">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Duskull" speed="1" sprite="355" type="pokemon" x="15" y="56">
        <path>DOWNx4,RIGHTx1,LEFTx1,UPx4</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>¡Duskull!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Chimecho" speed="1" sprite="358" type="pokemon" x="41" y="57">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Chimecho!</onCollisionSpeech>
        <speech>¡Chimecho!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Shuppet" speed="1" sprite="353" type="pokemon" x="59" y="50">
        <path>LEFTx2,UPx1,DOWNx1,RIGHTx2</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>¡Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Duskull" speed="1" sprite="355" type="pokemon" x="11" y="36">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Duskull</onCollisionSpeech>
        <speech>Duskull</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Vulpix" shouldSleep="" speed="1" sprite="37" type="pokemon" x="51" y="25">
        <path>DOWNx1,RIGHTx2,UPx1,DOWNx1,LEFTx2,UPx1</path>
        <onCollisionSpeech gap="4">Vulpix!</onCollisionSpeech>
        <speech>¡Vulpix!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Shuppet" speed="1" sprite="353" type="pokemon" x="32" y="41">
        <path>RIGHTx9,LEFTx9</path>
        <onCollisionSpeech gap="4">Shuppet!</onCollisionSpeech>
        <speech>¡Shuppet!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Duskull" speed="1" sprite="355" type="pokemon" x="34" y="62">
        <path>UPx1,RIGHTx18,LEFTx18,DOWNx1</path>
        <onCollisionSpeech gap="4">Duskull!</onCollisionSpeech>
        <speech>¡Duskull!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="13" name="Hex Maniac Xanthe" randomRotation="true" sprite="169" x="34" y="49">
        <speech>Entre las silenciosas sombras del Monte Pyre, donde vagan los espíritus y perduran los susurros, camino con mis Pokémon.</speech>
        <speech>En este santuario fantasmal, el aire está cargado del eco de las almas perdidas, y cada paso está embrujado por el pasado.</speech>
        <speech>Juntos, navegamos por el reino espectral, buscando consuelo en el abrazo de lo desconocido.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="14" name="Hex Maniac Valencia" randomRotation="true" sprite="171" x="44" y="41">
        <speech>En la espeluznante niebla del Monte Pyre, donde los espíritus permanecen y las sombras juegan, mis Pokémon y yo vagamos.</speech>
        <speech>Entre susurros de difuntos, andamos con cuidado, porque el reino etéreo guarda sus secretos.</speech>
        <speech>En este santuario fantasmal, cada paso es una aventura hacia lo desconocido, donde la realidad se curva y el velo espectral se afina.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="15" name="Hex Maniac Isolde" randomRotation="true" sprite="170" x="13" y="46">
        <speech>En el corazón de la tradición de Hoenn se encuentra la historia de un entrenador perdido, atraído por el Monte Pyre en busca de consuelo.</speech>
        <speech>La leyenda habla de su atrapamiento en su abrazo espectral, condenados a vagar eternamente por sus sombríos pasillos.</speech>
        <speech>Mientras viajo con mis Pokémon, siento la presencia persistente de ese espíritu atormentado, un recordatorio del delgado velo que separa nuestro mundo del otro.</speech>
    </npc>
    <movingNpc direction="DOWN" id="16" name="Bisharp" speed="1" sprite="625" type="pokemon" x="15" y="38">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4">Bisharp!</onCollisionSpeech>
        <speech>¡Bisharp!</speech>
    </movingNpc>
</npcs>