<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¿Qué tipo de Pokémon te gustan? Venga, enséñamelo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tu gusto por los Pokémon es realmente horrible, ¡pero eres un Entrenador de primera clase!</speech>
        </speeches>
        <speeches id="3">
            <speech>Tu gusto por los Pokémon es realmente horrible, ¡pero eres un Entrenador de primera clase!</speech>
        </speeches>
        <speeches id="4">
            <speech>Tu gusto por los Pokémon es maravilloso, pero como entrenador eres una decepción.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Es simplemente una batalla Pokémon, ¿verdad? ¿Por qué tan serio?</speech>
        </speeches>
        <speeches id="2">
            <speech>No es que pierdas realmente nada cuando pierdes. Mientras lo disfrutes, es suficiente.</speech>
        </speeches>
        <speeches id="3">
            <speech>No es que pierdas realmente nada cuando pierdes. Mientras lo disfrutes, es suficiente.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Y qué si pierdes? Ganar no da dinero.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>No tienes que intentar impresionarme. Puedes perder contra mí.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hice lo que vine a hacer, y así es como resultó. No hay nada más que decir.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hice lo que vine a hacer, y así es como resultó. No hay nada más que decir.</speech>
        </speeches>
        <speeches id="4">
            <speech>Es difícil decir adiós, pero se nos acaba el tiempo...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Para desafiarme debes ser una persona temeraria, que no sabe cuál es su lugar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="4">
            <speech>Hmmph... ¡Desafiarme debe significar que incluso la ignorancia tiene su límite!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ahhh, ¡un Entrenador que está guapísimo! Espero que tu batalla sea igual de hermosa.</speech>
        </speeches>
        <speeches id="2">
            <speech>Dios mío, nuestra batalla fue igual de hermosa. Me siento atraída por ti.</speech>
        </speeches>
        <speeches id="3">
            <speech>Dios mío, nuestra batalla fue igual de hermosa. Me siento atraída por ti.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡¿Tan guapo perdido para mí?! Estoy un poco decepcionado.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>El protagonista de esta historia... ¡Ya te diré quién es!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tienes que ser fuerte por dentro cuando no hay mucha gente que sea más fuerte que tú por fuera...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tienes que ser fuerte por dentro cuando no hay mucha gente que sea más fuerte que tú por fuera...</speech>
        </speeches>
        <speeches id="4">
            <speech>Por supuesto, ¡tú eres el protagonista!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¿Té o café?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Te gusta el café como a mí! Te estoy cuidando.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Te gusta el café como a mí! Te estoy cuidando.</speech>
        </speeches>
        <speeches id="4">
            <speech>El té no es bueno</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Mi última batalla... Así es como me gustaría que viéramos este combate...</speech>
        </speeches>
        <speeches id="2">
            <speech>Ha sido divertido... Tengamos otra última batalla algún día...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ha sido divertido... Tengamos otra última batalla algún día...</speech>
        </speeches>
        <speeches id="4">
            <speech>Nos volveremos a ver algún día... Je. Si eso fuera verdad...</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>No creo que vaya a ser peor para mí así que vamos a ver</speech>
        </speeches>
        <speeches id="2">
            <speech>No esperaba este resultado.</speech>
        </speeches>
        <speeches id="3">
            <speech>No esperaba este resultado.</speech>
        </speeches>
        <speeches id="4">
            <speech>Así es la vida, no puedes vencer al protagonista</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Trabajo muy duro, pero eso no significa que sea fuerte.</speech>
        </speeches>
        <speeches id="2">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="3">
            <speech>Eres un entrenador inteligente, teniendo en cuenta que no sabes mucho.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡¿Qué?! ¡¿Incluso yo puedo perder?! ¡Pero soy un genio de la lucha!</speech>
        </speeches>
    </conversation>
</npcs>