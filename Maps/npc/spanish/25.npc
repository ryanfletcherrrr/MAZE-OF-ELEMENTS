<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Mira eso! Qué grande es esa central eléctrica.</speech>
            <speech>Vamos a comprobarlo desde dentro.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>He estado estudiando todos los días, así que me tomo un descanso para variar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah, mi Pokémon perdido... Quizás me quede estudiando.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah, mi Pokémon perdido... Quizás me quede estudiando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Verás, jugar con Pokémon es divertido. Yo quiero estudiar Pokémon.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>El problema es saber si hay que poner toda la fuerza en la carrera inicial o en el último esfuerzo.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Muy bien! ¡La carrera inicial decidió nuestra batalla!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Muy bien! ¡La carrera inicial decidió nuestra batalla!</speech>
        </speeches>
        <speeches id="4">
            <speech>Aww... Si hubieras podido guardar fuerzas para el último esfuerzo...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>No voy a ser suave contigo sólo porque eres un niño. ¡Adelante!</speech>
        </speeches>
        <speeches id="2">
            <speech>Harrumph. Todavía estoy débil. Compadezco a mis Pokémon...</speech>
        </speeches>
        <speeches id="3">
            <speech>Harrumph. Todavía estoy débil. Compadezco a mis Pokémon...</speech>
        </speeches>
        <speeches id="4">
            <speech>Je. No puedes luchar si tienes miedo de perder.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Mi investigación llevará a este mundo a la paz y la alegría.</speech>
        </speeches>
        <speeches id="2">
            <speech>Mi experimento fracasó, así que estoy acabado en el mundo académico.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mi experimento fracasó, así que estoy acabado en el mundo académico.</speech>
        </speeches>
        <speeches id="4">
            <speech>Soy un genio. No se supone que pierda contra alguien como tú...</speech>
        </speeches>
    </conversation>
</npcs>