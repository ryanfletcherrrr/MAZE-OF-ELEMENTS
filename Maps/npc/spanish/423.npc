<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Oh, hola, $PLAYER_NAME!</speech>
            <speech>...Ah, ya veo, mi padre te regaló un Pokémon.</speech>
            <speech>Ya que estamos aquí, ¡tengamos una batalla rápida! Te daré una muestra de lo que es ser un Entrenador.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Guau! ¡Eso es genial! $PLAYER_NAME, ¡eres muy bueno!</speech>
            <speech>Creo que ahora sé por qué mi padre está pendiente de ti.</speech>
            <speech>Es decir, acabas de conseguir ese Pokémon, pero ya le gustas.</speech>
            <speech>Podrás hacerte amigo de cualquier tipo de Pokémon fácilmente.</speech>
            <speech>Debes dirigirte al oeste de Oldale Town hacia Rustboro City y buscar tu primera insignia de Gimnasio.</speech>
            <speech>Nos vemos allí.</speech>
        </speeches>
        <speeches id="3">
            <speech>Creo que ahora sé por qué mi padre está pendiente de ti.</speech>
            <speech>Es decir, acabas de conseguir ese Pokémon, pero ya le gustas.</speech>
            <speech>Podrás hacerte amigo de cualquier tipo de Pokémon fácilmente.</speech>
            <speech>Debes dirigirte al oeste de Oldale Town hacia Rustboro City y buscar tu primera insignia de Gimnasio.</speech>
            <speech>Nos vemos allí.</speech>
        </speeches>
        <speeches id="4">
            <speech>Para ser entrenador hace falta algo más que llevar un montón de Pokeballs.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Wingull" speed="2" sprite="278" type="pokemon" x="31" y="13">
        <path>RIGHTx20,LEFTx20</path>
        <onCollisionSpeech gap="4">Mine?Mine?</onCollisionSpeech>
        <speech>¡GUUUUUUULL!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Wingull" speed="2" sprite="278" type="pokemon" x="34" y="19">
        <path>UPx7,DOWNx7</path>
        <onCollisionSpeech gap="4">Mine? Mine?</onCollisionSpeech>
        <speech>¡GUUUULL! ¡GUUULL!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wingull" speed="2" sprite="278" type="pokemon" x="37" y="15">
        <path>RIGHTx5,DOWNx5,LEFTx5,UPx5</path>
        <onCollisionSpeech gap="4">Mine? Mine?</onCollisionSpeech>
        <speech>¡GUGUUUUUL!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="4" name="Zackary" randomRotation="false" sprite="16" x="25" y="7">
        <speech>¡Mirad! ¡Una bandada de wingull!</speech>
        <speech>Si pudiera volar como ellos, podría ver lo que hay al otro lado.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="5" name="Xander" randomRotation="false" sprite="16" x="26" y="14">
        <speech>¡Deja de gritar Zackary!</speech>
        <speech>Estás asustando a los peces...</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="6" name="Anna" randomRotation="false" sprite="82" x="65" y="18">
        <speech>Si tu Pokémon puede surfear, podrás cruzar este camino de agua y acceder rápidamente a Pueblo Odale.</speech>
        <speech>Sólo ten cuidado con Wingull.</speech>
        <speech>Parece que hay unos cuantos atascados aquí.</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Linoone" shouldSleep="" speed="1" sprite="264" type="pokemon" x="84" y="16">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Linoone</onCollisionSpeech>
        <speech>¡Linoone!</speech>
    </movingNpc>
    <conversation id="2">
        <speeches id="1">
            <speech>Soy muy fuerte. Nunca perderé.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡WAAAH!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡WAAAH!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Papá me dio mis Pokémon! ¡Tienen que ser los más fuertes!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Ooh la la! ¡Pequeño entrenador! ¡Graciosa flor! ¡Voy a cortarte justo en el tallo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡No! ¡No tan rápido! ¡Quiero que seas la flor más preciada de mi jardín!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Recientemente he rehecho mi vida por completo! ¡Por fin he renacido como Belleza!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sí, hace apenas medio año era cinturón negro. Toda una transformación, ¿no crees?</speech>
        </speeches>
        <speeches id="3">
            <speech>Sí, hace apenas medio año era cinturón negro. Toda una transformación, ¿no crees?</speech>
        </speeches>
        <speeches id="4">
            <speech>Si quieres hacer realidad tus sueños, ¡tienes que dedicarte por completo!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Hay gente joven y guapa, pero la juventud es diferente de la belleza.</speech>
        </speeches>
        <speeches id="2">
            <speech>La juventud es sólo juventud. Ojalá me hubiera dado cuenta entonces.</speech>
        </speeches>
        <speeches id="3">
            <speech>La juventud es sólo juventud. Ojalá me hubiera dado cuenta entonces.</speech>
        </speeches>
        <speeches id="4">
            <speech>Si lo hubiera sabido cuando era joven, ahora no lo estaría pasando tan mal...</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Soy lo que se llama un saco de boxeo profesional. Trabajo aquí para ganarme la vida.</speech>
        </speeches>
        <speeches id="2">
            <speech>Soy un saco de boxeo profesional, así que lo único que importa es que estés contento con tu victoria.</speech>
        </speeches>
        <speeches id="3">
            <speech>Soy un saco de boxeo profesional, así que lo único que importa es que estés contento con tu victoria.</speech>
        </speeches>
        <speeches id="4">
            <speech>Intenté perder a propósito para hacerte sentir bien... Esto no es bueno. Definitivamente me van a despedir por esto...</speech>
        </speeches>
    </conversation>
</npcs>