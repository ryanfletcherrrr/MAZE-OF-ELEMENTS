<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Felicidades! ¡Has vencido a nuestros cinco entrenadores del concurso! ¡Acabas de ganar un fabuloso premio! ¡Una batalla conmigo!</speech>
            <speech>Por cierto, ¿te gustaría unirte al Equipo Rocket? Somos un grupo de criminales profesionales especializados en Pokémon.</speech>
            <speech>¿Quieres unirte? ¿Estás seguro?</speech>
            <speech>Vamos, ¡únete a nosotros!</speech>
            <speech>¡Te digo que te unas! Vale, ¡necesitas convencerte! Te haré una oferta que no podrás rechazar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tú... Gracias... Ahora mi viaje puede llegar a su fin...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tú... Gracias... Ahora mi viaje puede llegar a su fin...</speech>
        </speeches>
        <speeches id="4">
            <speech>Gané de nuevo... Mi viaje aún no ha terminado...</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>No es que esté llamando a las montañas. Son las montañas las que me llaman a mí.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oigo una voz sollozante... Las montañas lloran...</speech>
        </speeches>
        <speeches id="3">
            <speech>Oigo una voz sollozante... Las montañas lloran...</speech>
        </speeches>
        <speeches id="4">
            <speech>Un hombre que es amado por las montañas... Culpable de los cargos...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>La lucha es como la moda. Necesitas estilo, gracia y una ejecución perfecta.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Qué?! Se suponía que eso no iba a pasar... Tal vez necesito un cambio de imagen de batalla</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Qué?! Se suponía que eso no iba a pasar... Tal vez necesito un cambio de imagen de batalla</speech>
        </speeches>
        <speeches id="4">
            <speech>Impecable, como era de esperar. ¡Belleza y fuerza hacen una combinación perfecta!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Seré joven, pero mis Pokémon son duros! ¡Prepárate para perder!</speech>
        </speeches>
        <speeches id="2">
            <speech>Espera, ¡pero yo pensaba que tenía ese!</speech>
        </speeches>
        <speeches id="3">
            <speech>Espera, ¡pero yo pensaba que tenía ese!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! ¡Te lo dije! ¡Quizás cuando seas mayor seas tan bueno como yo!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡No hay nada mejor que una buena caminata y una buena batalla! ¡Veamos si puedes con la escalada!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que me he topado con un camino pedregoso, ¡pero eso forma parte del viaje!</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que me he topado con un camino pedregoso, ¡pero eso forma parte del viaje!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! Una base sólida marca la diferencia tanto en el senderismo como en la lucha.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Mis Pokémon son súper fuertes! ¡Seguro que vas a perder!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Waaah! ¡No es justo! ¡Eres un gran malvado!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Waaah! ¡No es justo! ¡Eres un gran malvado!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sí, sí! ¡Gané! ¡Soy el mejor entrenador del mundo!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>No dejes que mi dulce sonrisa te engañe. Soy una competidora feroz.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Uy! Creo que no estaba tan preparado como pensaba, pero no pasa nada, ¡lo volveré a intentar!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Uy! Creo que no estaba tan preparado como pensaba, pero no pasa nada, ¡lo volveré a intentar!</speech>
        </speeches>
        <speeches id="4">
            <speech>Jeje, ¡te dije que era duro! ¡Lindo y fuerte que es el mejor combo!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>He escalado montañas y cruzado valles, ¡esto será pan comido!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ja! Bueno, parece que aún me queda camino por recorrer... hasta los excursionistas más duros tropiezan a veces.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Ja! Bueno, parece que aún me queda camino por recorrer... hasta los excursionistas más duros tropiezan a veces.</speech>
        </speeches>
        <speeches id="4">
            <speech>Al igual que el camino hacia la cumbre, firme y fuerte, ¡llegué a la cima!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Trapinch" speed="1" sprite="328" type="pokemon" x="3" y="7">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Traaa!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Emma" randomRotation="true" sprite="82" x="15" y="11">
        <speech>¿Has visto algún Trapinch por aquí últimamente?</speech>
        <speech>Intentar atrapar uno porque Flygon es el mejor Pokémon de tipo dragón.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="3" name="Cacnea" speed="1" sprite="331" type="pokemon" x="37" y="23">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Caacneaaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Joltik" speed="1" sprite="595" type="pokemon" x="23" y="6">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">Jooolt!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Liam" speed="1" sprite="21" type="npc" x="61" y="28">
        <path>LEFTx6,RIGHTx6</path>
        <onCollisionSpeech gap="4"/>
        <speech>Lo siento, chico.</speech>
        <speech>Tengo que dar estas vueltas si quiero impresionar a Misty y ganarme una oportunidad en el Gimnasio Cerúleo.</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="6" name="Rafiki" randomRotation="false" sprite="20" x="97" y="14">
        <speech>Oh sí, el pasado puede doler.</speech>
        <speech>Pero tal y como yo lo veo, puedes huir de ello o aprender de ello.</speech>
    </npc>
</npcs>