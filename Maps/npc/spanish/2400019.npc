<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Bienvenido, aspirante. Soy {COLOR=ORANJA}Hermana Hiyori{ENDCOLOR}, guardiana del {COLOR=VERDE}antiguo ritmo de la Tierra{ENDCOLOR}.</speech>
            <speech>Siento que te has probado a ti mismo contra la {COLOR=GOLD}Elite Cuatro{ENDCOLOR} - impresionante, pero nuestras pruebas exigen más.</speech>
            <speech>El verdadero camino del puño enseña {COLOR=BLUE}paciencia{ENDCOLOR} - como la montaña que capea todas las tormentas.</speech>
            <speech>Antes de que puedas enfrentarte a nuestro {COLOR=GOLD}sagrado Kubfu{ENDCOLOR}, debes demostrar que tu espíritu de lucha puede resistir.</speech>
            <speech>Demuéstrame que tus {COLOR=RED}tipos luchadores{ENDCOLOR} poseen la resistencia necesaria para superar cualquier prueba.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tu persistencia refleja la resistencia de la montaña. Has aprendido bien la primera lección.</speech>
            <speech>El camino por delante se hace más empinado, pero tus cimientos son fuertes. Continúa hasta la siguiente prueba.</speech>
        </speeches>
        <speeches id="3">
            <speech>La tierra tiembla con tu derrota, pero no desesperes: incluso las montañas deben erosionarse para hacerse más fuertes.</speech>
            <speech>Vuelve en {COLOR=PURPUL}$DURACIÓN{ENDCOLOR}, cuando llegue de nuevo el {COLOR=ORO}sagrado día{ENDCOLOR}. Medita sobre la resistencia hasta entonces.</speech>
        </speeches>
        <speeches id="4">
            <speech>Has dominado la lección de la persistencia. El {COLOR=VERDE}Pulso de la Tierra{ENDCOLOR} reconoce tu fuerza.</speech>
            <speech>Adéntrate en nuestro santuario, donde mayores desafíos aguardan a tu espíritu luchador.</speech>
        </speeches>
        <speeches id="5">
            <speech>Las pruebas sagradas de nuestro dojo están reservadas para aquellos que han conquistado la {COLOR=GOLD}Elite Four{ENDCOLOR} y demostrado su maestría.</speech>
            <speech>Las puertas se abren sólo los {COLOR=ORO}miércoles{ENDCOLOR}, cuando las energías sagradas se alinean con nuestro entrenamiento.</speech>
            <speech>Regresa cuando llegue el día apropiado, y trae sólo {COLOR=RED}Compañeros de lucha{ENDCOLOR}que honren nuestros caminos.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Soy {COLOR=CYAN}La Hermana de la Hoja Yuna{ENDCOLOR}, veloz como el viento de la montaña que corta la piedra.</speech>
            <speech>Así que otro campeón de la Élite Cuatro quiere poner a prueba su temple contra nuestras antiguas costumbres.</speech>
            <speech>{COLOR=CYAN}Velocidad y precisión{ENDCOLOR} - son los pilares sobre los que se asienta la verdadera maestría marcial.</speech>
            <speech>Tus {COLOR=RED}tipos de lucha{ENDCOLOR} deben aprender a golpear como el rayo y luego desvanecerse como la niebla.</speech>
            <speech>¿Puedes igualar el tempo de la hoja del {COLOR=CYAN}Cortador de Viento{ENDCOLOR}?</speech>
        </speeches>
        <speeches id="2">
            <speech>Veloz como el viento eres, y el doble de agudo. Tus {COLOR=RED}tipos de lucha{ENDCOLOR} bailan con verdadera gracia.</speech>
            <speech>Te has ganado el paso a la siguiente prueba. Que tu velocidad te sirva de mucho en el futuro.</speech>
        </speeches>
        <speeches id="3">
            <speech>El viento cambia hoy en tu contra, pero incluso las tormentas deben descansar antes de volver a arreciar.</speech>
            <speech>Reúne fuerzas para {COLOR=PURPLE}$DURATION{ENDCOLOR}. Cuando {COLOR=GOLD}Wednesday{ENDCOLOR} regrese, también lo hará tu oportunidad.</speech>
        </speeches>
        <speeches id="4">
            <speech>Como el viento que nunca se detiene, tu determinación atraviesa todos los obstáculos.</speech>
            <speech>El {COLOR=CYAN}Cortador de Viento{ENDCOLOR} reconoce tu rapidez. Sigue adelante para afrontar mayores pruebas.</speech>
        </speeches>
        <speeches id="5">
            <speech>Sólo aquellos que hayan vencido a los {COLOR=GOLD}Elite Four{ENDCOLOR} pueden presenciar nuestras técnicas sagradas.</speech>
            <speech>Los vientos de la sabiduría soplan sólo el {COLOR=GOLD}Miércoles{ENDCOLOR}, cuando nuestro dojo abre sus salas sagradas.</speech>
            <speech>Vuelve con tus aliados de tipo {COLOR=RED}Lucha{ENDCOLOR} cuando amanezca de nuevo el día apropiado.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=YELLOW}¡El discípulo Hiro{ENDCOLOR} está ante ti! ¡Siente la oleada eléctrica de puro espíritu de lucha!</speech>
            <speech>¡Un campeón de la Elite 4! Perfecto, ¡necesitarás esa experiencia para lo que viene después!</speech>
            <speech>¡En las artes marciales, a veces la victoria exige {COLOR=RED}todo en un solo momento decisivo{ENDCOLOR}!</speech>
            <speech>Tus {COLOR=ROJO}tipos de lucha{ENDCOLOR} deben aprender cuándo desatar su {COLOR=AMARILLO}Colmillo de Relámpago{ENDCOLOR} - ¡todo el poder, sin vacilar!</speech>
            <speech>¡Muéstrame la fuerza explosiva que arde en tu equipo!</speech>
        </speeches>
        <speeches id="2">
            <speech>{¡Increíble! ¡Tus {COLOR=RED}tipos de lucha{ENDCOLOR} golpearon con la furia de una tormenta!</speech>
            <speech>Entiendes la lección del rayo: a veces, la única respuesta es la fuerza bruta. ¡Sigue adelante!</speech>
        </speeches>
        <speeches id="3">
            <speech>Los relámpagos se desvanecen, pero las tormentas siempre vuelven con más furia que antes.</speech>
            <speech>Entrena bien tus {COLOR=RED}tipos de lucha{ENDCOLOR} durante la {COLOR=PURPLE}$DURATION{ENDCOLOR} espera. Cuando llegue el {COLOR=ORO}Miércoles{ENDCOLOR}, ¡ataca con más fuerza!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Tu poder crepita como un verdadero relámpago! El {COLOR=YELLOW}Lightning Fang{ENDCOLOR} reconoce tu fuerza.</speech>
            <speech>Sólo una prueba más se interpone entre tú y nuestro honorable Sensei. ¡Dalo todo!</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Estas pruebas sagradas exigen la fuerza de un conquistador de {COLOR=GOLD}Elite Four{ENDCOLOR}!</speech>
            <speech>El {COLOR=AMARILLO}Colmillo del Rayo{ENDCOLOR} ataca sólo el {COLOR=ORO}miércoles{ENDCOLOR}, ¡cuando llega nuestro sagrado día de entrenamiento!</speech>
            <speech>Trae a tus mejores {COLOR=RED}tipos de lucha{ENDCOLOR} cuando vuelvas, ¡necesitarán cada chispa de poder!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Soy {COLOR=PURPLE}Sensei Ayaka{ENDCOLOR}, maestra del {COLOR=PURPLE}Tempo Perfecto{ENDCOLOR} - el ritmo que guía todo combate verdadero.</speech>
            <speech>Tu victoria sobre los {COLOR=GOLD}Elite Four{ENDCOLOR} es prometedora, pero ¿puedes encontrar nuestro ritmo sagrado?</speech>
            <speech>Cada golpe tiene su momento, cada defensa su ritmo. Luchar sin ritmo es luchar sin alma.</speech>
            <speech>Tus {COLOR=RED}tipos de lucha{ENDCOLOR} deben demostrar que pueden encontrar el {COLOR=PURPLE}Tempo Perfecto{ENDCOLOR} que fluye a través de todas las artes marciales.</speech>
            <speech>¿Estás preparado para bailar conmigo el eterno ritmo de la batalla?</speech>
        </speeches>
        <speeches id="2">
            <speech>Tus {COLOR=ROJO}tipos de lucha{ENDCOLOR}se mueven en {COLOR=PÚRPURA}perfecta armonía{ENDCOLOR} - has encontrado el verdadero tempo del combate.</speech>
            <speech>Eres digno de enfrentarte a nuestro maestro. Procede a la prueba final con mi bendición.</speech>
        </speeches>
        <speeches id="3">
            <speech>El ritmo se rompe, pero como toda la música, puede aprenderse de nuevo con práctica y paciencia.</speech>
            <speech>Vuelve en {COLOR=PURPLE}$DURATION{ENDCOLOR} cuando {COLOR=GOLD}Vuelva el sagrado tempo del miércoles{ENDCOLOR}. Encuentra entonces tu ritmo perfecto.</speech>
        </speeches>
        <speeches id="4">
            <speech>{¡Perfecto! Tu tempo coincide con el antiguo ritmo que late en el corazón de nuestro dojo.</speech>
            <speech>El {COLOR=ORO}Maestro de Karate{ENDCOLOR} te espera. Muéstrale el {COLOR=PURPLE}Perfect Tempo{ENDCOLOR} que has dominado aquí.</speech>
        </speeches>
        <speeches id="5">
            <speech>Nuestros ritmos ancestrales sólo se revelan a los campeones de {COLOR=GOLD}Elite Four{ENDCOLOR} que entienden la verdadera fuerza.</speech>
            <speech>El {COLOR=PURPLE}Tempo Perfecto{ENDCOLOR} sólo puede lograrse el {COLOR=GOLD}Miércoles{ENDCOLOR}, nuestro día de práctica sagrada.</speech>
            <speech>Vuelve con tu {COLOR=RED}equipo de lucha{ENDCOLOR} cuando se vuelva a alinear el ritmo adecuado de la semana.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Así que... has superado las cuatro pruebas y has llegado al corazón de nuestro santuario.</speech>
            <speech>Soy el {COLOR=ORO}Maestro de Karate{ENDCOLOR}, guardián de los caminos antiguos, guardián del {COLOR=ORO}sagrado Kubfu{ENDCOLOR}.</speech>
            <speech>Tu triunfo sobre los {COLOR=GOLD}Elite Four{ENDCOLOR} te trajo aquí, pero nuestras pruebas ponen a prueba algo más profundo.</speech>
            <speech>Hace mucho tiempo, fuimos dejados de lado, considerados obsoletos por quienes temían nuestra verdadera fuerza.</speech>
            <speech>Pero aquí, en estas salas ocultas, conservamos la {COLOR=RED}pura esencia de la maestría de tipo Lucha{ENDCOLOR}.</speech>
            <speech>Si quieres ganarte el derecho a conocer a nuestro sagrado compañero, ¡debes demostrar que tus puños arden con {COLOR=RED}inquebrantable voluntad{ENDCOLOR}!</speech>
            <speech>¡Muéstrame la culminación de todo lo que has aprendido!</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=ORO}Increíble...{ENDCOLOR} tus {COLOR=ROJO}Tipos de lucha{ENDCOLOR} encarnan el verdadero espíritu que hemos protegido todos estos años.</speech>
            <speech>No luchas por la gloria o la conquista, sino con la {COLOR=BLUE}humilde fuerza{ENDCOLOR} que nace de un vínculo auténtico.</speech>
            <speech>Tal dedicación... tal {COLOR=RED}puro espíritu marcial{ENDCOLOR}... Sí, eres digno.</speech>
            <speech>El {COLOR=ORO}sagrado Kubfu{ENDCOLOR} se sentirá honrado de entrenar junto a un luchador de tu calibre.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tu espíritu arde con fuerza, pero hoy la llama aún no estaba lo bastante caliente como para iluminar nuestros secretos más profundos.</speech>
            <speech>Continúa tu entrenamiento, joven luchador. En {COLOR=PURPLE}$DURATION{ENDCOLOR}, cuando {COLOR=GOLD}Wednesday{ENDCOLOR} regrese, también lo hará tu oportunidad.</speech>
            <speech>El camino del puño es largo y arduo: deja que este revés te forje en algo más fuerte.</speech>
        </speeches>
        <speeches id="4">
            <speech>Has demostrado ser un {COLOR=GOLD}maestro de las artes de lucha{ENDCOLOR}, digno de nuestras antiguas tradiciones.</speech>
            <speech>El sagrado Kubfu{ENDCOLOR} siente tu corazón puro. Tales encuentros son materia de leyenda.</speech>
            <speech>Recuerda este momento: has tocado algo eterno en estas salas ocultas.</speech>
        </speeches>
        <speeches id="5">
            <speech>Nuestros secretos más profundos sólo están reservados para quienes han conquistado la {COLOR=GOLD}Elite Four{ENDCOLOR} y caminan por la senda del puño.</speech>
            <speech>Las pruebas sagradas sólo pueden comenzar el {COLOR=GOLD}Miércoles{ENDCOLOR}, cuando se agitan los antiguos espíritus del combate.</speech>
            <speech>Regresa con tus {COLOR=RED}compañeros de lucha{ENDCOLOR} cuando llegue el día apropiado. Estaremos esperando.</speech>
        </speeches>
    </conversation>
</npcs>