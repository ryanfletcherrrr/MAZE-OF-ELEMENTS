<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Alto!</speech>
            <speech>La carretera ciclista es sólo para entrenadores en Bicicleta.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Oi $PLAYER_NAME. Encontré a este pequeño Pupper vagando por el edificio Eterna y lo recogí.</speech>
            <speech>¿Puedes ocuparte de ello?</speech>
            <speech>Necesitas espacio en tu party antes de que pueda entregártelo. Ve al PokeCenter y haz espacio en tu grupo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Oi $PLAYER_NAME. Encontré a este pequeño Pupper vagando por el edificio Eterna y lo recogí.</speech>
            <speech>¿Puedes ocuparte de ello?</speech>
            <speech/>
        </speeches>
        <speeches id="3">
            <speech>¿Eh? Esperaba algo mejor de ti.</speech>
        </speeches>
        <speeches id="4">
            <speech>Eres un alma tan generosa.</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>La carretera ciclista es sólo para entrenadores en Bicicleta.</speech>
            <speech>Necesitas estar en una Bicicleta para poder seguir adelante.</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Guard Jorge" randomRotation="false" sprite="126" x="8" y="7">
        <speech>Bienvenido a Eterna...</speech>
        <speech>...¡O buena suerte en el camino!</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Guard Diogo" randomRotation="false" sprite="126" x="1" y="7">
        <speech>Bienvenido a Eterna...</speech>
        <speech>...¡O buena suerte en el camino!</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="3" name="" randomRotation="false" sprite="162" x="7" y="7">
        <speech>¡Bienvenido a Ciudad Eterna!</speech>
        <speech>¡Debajo de nosotros está la Vía Ciclista! Asegúrate de tener una bicicleta o no te dejaré pasar.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="4" name="" randomRotation="false" sprite="162" x="2" y="7">
        <speech>¡Bienvenido a Ciudad Eterna!</speech>
        <speech>¡Debajo de nosotros está la Vía Ciclista! Asegúrate de tener una bicicleta o no te dejaré pasar.</speech>
    </npc>
</npcs>