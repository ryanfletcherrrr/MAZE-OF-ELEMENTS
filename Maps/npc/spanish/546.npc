<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¿Nos conocemos o no? La verdad es que no me acuerdo. Bueno, supongo que es un placer conocerte de todos modos.</speech>
        </speeches>
        <speeches id="2">
            <speech>De ninguna manera... ¡DE NINGUNA MANERA! Cómo iba a perder otra vez...</speech>
        </speeches>
        <speeches id="3">
            <speech>De ninguna manera... ¡DE NINGUNA MANERA! Cómo iba a perder otra vez...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Yahoo! ¡Yahoo! ¡Lo logré! He vuelto a ganar.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Muwahaha! ¡La leyenda de mi invencibilidad comienza contigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ja... ¿Me estás diciendo que tu leyenda acaba de empezar?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ja... ¿Me estás diciendo que tu leyenda acaba de empezar?</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Soy completamente invencible! ¡Mi leyenda comienza aquí!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Si quieres llegar a la cima como Entrenador, ¡tendrás que pasar por encima de mí!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Adelante! ¡Tienes que irte! ¡Vete y déjame!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Adelante! ¡Tienes que irte! ¡Vete y déjame!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Incluso si te topas conmigo desastrosamente, no hay ningún equipo de rescate en camino!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="UP" id="1" name="Tentacruel" shouldSleep="" speed="1" sprite="73" type="pokemon" x="21" y="26">
        <path>UPx3, DOWNx3</path>
        <onCollisionSpeech gap="4">Tenta!</onCollisionSpeech>
        <speech>CRUEEEELLLL</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Mime Jr." shouldSleep="" speed="1" sprite="439" type="pokemon" x="10" y="10">
        <path>RIGHTx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Mime!</onCollisionSpeech>
        <speech>¡Mimo!</speech>
    </movingNpc>
</npcs>