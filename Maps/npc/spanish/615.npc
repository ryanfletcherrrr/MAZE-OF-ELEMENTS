<npcs>
    <npc direction="RIGHT" hidden="false" id="1" name="Fisherman Ben" randomRotation="false" sprite="16" x="15" y="15">
        <speech>¡Ten cuidado en estas aguas!</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Horsea" shouldSleep="" speed="1" sprite="116" type="pokemon" x="30" y="21">
        <path>LEFTx4, RIGHTx4</path>
        <onCollisionSpeech gap="4">!!!</onCollisionSpeech>
        <speech>*Sorprendes a Horsea*</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Tropius" shouldSleep="" speed="1" sprite="357" type="pokemon" x="49" y="15">
        <path>LEFTx3, RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Venomoth" shouldSleep="" speed="1" sprite="49" type="pokemon" x="53" y="6">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Timmy" shouldSleep="" speed="1" sprite="24" type="npc" x="46" y="7">
        <path>LEFTx6, DOWNx1, RIGHTx6, UPx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>¡He oído que hay un nuevo Pokémon insecto por aquí!</speech>
        <speech>¡¡VEN A TIMMY!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Golduck" shouldSleep="" speed="1" sprite="55" type="pokemon" x="25" y="9">
        <path>LEFTx5, RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>Miras hacia abajo, ¿has perdido y has venido aquí a relajarte?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ahí lo tienes! No eres tan malo.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Ahí lo tienes! No eres tan malo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡No está bien!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Quiero otro Bird, he oído que aquí hay uno muy chulo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Seguiré buscando uno</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguiré buscando uno</speech>
        </speeches>
        <speeches id="4">
            <speech>Seguiré buscando uno</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¿Qué estás mirando? Me llamo Slim</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Por qué sigues aquí?</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Por qué sigues aquí?</speech>
        </speeches>
        <speeches id="4">
            <speech>Así es como lo hacemos.</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>Tus Pokemon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Tus Pokemon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>Ah, ha llegado el campeón. Los vientos duros de la Ruta 227 son perfectos para afilar nuestras habilidades, ¿eh?</speech>
            <speech>Mi Kingdra ha estado ansioso por un verdadero desafío. ¿Qué tal el tuyo? ¿Listo para enfrentarse a las olas?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Impresionante! Sin duda, tienes lo necesario para ser un verdadero Maestro Dragón.</speech>
            <speech>Pero recuerda, las profundidades del océano son infinitas. Siempre hay más para dominar.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Nos estamos reteniendo? El rugido del mar no es para los débiles de corazón.</speech>
            <speech>Búscame cuando estés listo para sumergirte en la batalla, con Kingdra a tu lado.</speech>
        </speeches>
        <speeches id="4">
            <speech>La victoria es tuya, campeón. Has navegado a través de este desafío con colores voladores.</speech>
            <speech>Que esta victoria te guíe mientras navegas por el vasto mar de batallas que te esperan.</speech>
        </speeches>
        <speeches id="5">
            <speech>Los secretos del océano son vastos y sus guardianes, formidables. Solo aquellos que realmente comprenden las profundidades pueden convocar su fuerza.</speech>
            <speech>Un cierto dragón de las profundidades puede tener aún la clave para superarme. Búscalo, si te atreves.</speech>
        </speeches>
    </conversation>
</npcs>