<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡JUGADOR!</speech>
            <speech>Así que viniste ... Te he estado esperando... Qué calor tan terrible.</speech>
            <speech>Se siente como si el mundo entero fuera a arder...</speech>
            <speech>Ah, sí. Tienes que oír lo que mi amigo tiene que decir.</speech>
        </speeches>
        <speeches id="2">
            <speech>Esta luz solar... Las personas y los Pokémon necesitan la luz del sol para vivir.</speech>
            <speech>Entonces, ¿por qué esta luz solar nos llena de tanto pavor?</speech>
            <speech>El sol abrasador sobre Sootopolis es cada vez más intenso...</speech>
            <speech>Pronto todo Hoenn quedará atrapado bajo su fulgor fulminante... Si eso sucediera...</speech>
        </speeches>
        <speeches id="3">
            <speech>$NOMBRE_JUGADOR...</speech>
            <speech>Y pensar que tenías el Orbe Azul...</speech>
            <speech>Estarás bien. Tú y tus Pokémon pueden manejarlo, pase lo que pase. Eso creo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Me llamo Wallace.</speech>
            <speech>Soy el líder del gimnasio de esta ciudad.</speech>
            <speech>También se me ha confiado la protección de la Cueva del Origen.</speech>
            <speech>Esta sequía está siendo causada por un poder que emana de la Cueva del Origen.</speech>
            <speech>Es el Orbe Azul. Ya veo.</speech>
        </speeches>
        <speeches id="2">
            <speech>No hay nada que temer. El Orbe Azul que lleva este niño...</speech>
            <speech>Sus poderes ancestrales protegerán tanto al niño como a sus Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sí. La energía que rebosa de la Cueva del Origen ahora mismo...</speech>
            <speech>Es la misma energía que da a Groudon su poder...</speech>
            <speech>Con el Orbe Azul, que contiene el poder de suprimir esa...</speech>
            <speech>Debería ser posible calmar la furia de esta avalancha de magma.</speech>
            <speech>Por supuesto, el poder del Orbe Azul por sí solo no te llevará hasta donde te espera Groudon.</speech>
            <speech>Así no llegarás al núcleo de Hoenn. Usa el traje que te acaban de dar.</speech>
            <speech>Con ello, por fin será posible hacer frente a las fuerzas de la naturaleza.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ningún hombre o mujer de Sootopolis puede entrar en la Cueva del Origen.</speech>
            <speech>Pero debes ir, junto con tu Orbe Azul. Debes ir sin importar lo que te espere dentro...
                esa cueva...
            </speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>...sé lo que debe hacerse. Te lo confiaré a ti ahora.</speech>
            <speech>Es fruto de nuestra colaboración con la Corporación Devon, y representa la cima del conocimiento tecnológico de Hoenn.
                conocimientos y habilidades tecnológicas de Hoenn.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Y sin embargo... Incluso con ese Traje de Magma, ¿es probable que alguien pueda atravesar ese magma, ahora
                más feroz que nunca debido a las fuerzas de la naturaleza?
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Niño, tú...</speech>
            <speech>No. No tengo derecho a llamarte "niño". Compañero Entrenador.</speech>
            <speech>He causado un gran daño, y por ello pido mis más sinceras disculpas.</speech>
            <speech>Pero ahora nos encontramos en un callejón sin salida, y tú y tus Pokémon sois todo con lo que cuenta la humanidad
                en su lucha contra Groudon...
            </speech>
            <speech>El destino de nuestro mundo... El mundo en el que toda la humanidad prospera... El destino de nuestro mundo descansa en
                tus manos.
            </speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Líder Maxie... a ese niño...</speech>
        </speeches>
        <speeches id="2">
            <speech>En realidad habíamos estado preparando eso en previsión de entrar en contacto con Groudon...</speech>
            <speech>Pero en este momento, no parece que haya esperanza de eso para nosotros...</speech>
            <speech>No hay nada que podamos hacer excepto dejártelo a ti.</speech>
        </speeches>
        <speeches id="3">
            <speech>Es cierto. Es muy posible que su energía sea mucho mayor de lo que muestran nuestros cálculos.
            </speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Hemos estado esperando, bribón!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Has dado en el clavo!</speech>
            <speech>Esos viejos del Monte Pyre dijeron algo al respecto...</speech>
            <speech>Que el Orbe Rojo desataría los poderes primarios de Groudon... Y desencadenaría una Reversión Primigenia.</speech>
            <speech>Mientras que el Orbe Azul tenía el poder de revertir eso y calmar a la bestia.</speech>
        </speeches>
        <speeches id="3">
            <speech>También reuniremos a nuestra gente aquí arriba, para ayudar a la gente y a los Pokémon que tengan problemas.</speech>
            <speech>Mi pequeño salvador...</speech>
            <speech>Parece que te estamos haciendo soportar toda la carga sobre tus pequeños hombros solo.</speech>
            <speech>Lo siento por eso... ¡Pero sé que vas a sacar esto adelante!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡JUGADOR!</speech>
            <speech>Oí en las noticias que las cosas se estaban volviendo locas alrededor de Sootopolis. Y entonces te vi en BuzzNav,
                ¡$PLAYER!
            </speech>
            <speech>No podía quedarme ahí sin hacer nada cuando sabía que estabas aquí en el meollo, así que vine
                volando.
            </speech>
            <speech>¡¿Bwuh?! ¿No es ese el Equipo Magma? ¡¿Y el Equipo Aqua?!</speech>
            <speech>OK, ¿puedo decir que estoy, como, sorprendido y confundido en muchos niveles en este momento?</speech>
            <speech>Esto es probablemente algo mucho más grande de lo que puedo imaginar, ¿no?</speech>
            <speech>Así que ni siquiera voy a preguntar ahora.</speech>
            <speech>Voy a tratar de encontrar lo que puedo hacer para ayudar, y luego voy a hacer todo lo posible con eso.</speech>
            <speech>Y voy a seguir esperando y creyendo que estarás bien ahí fuera.</speech>
            <speech>Porque... Porque tú... ¡Eres el mejor amigo que tengo!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>$PLAYER_NAME, te debemos un gran agradecimiento.</speech>
            <speech>Mira por encima de ti. El cielo sobre Sootopolis ha vuelto a la normalidad.</speech>
        </speeches>
        <speeches id="2">
            <speech>...</speech>
            <speech>El Equipo Magma y el Equipo Aqua están formados por personas con ideales y objetivos completamente opuestos.</speech>
            <speech>Pero quizá incluso ellos puedan aprender a encontrarse a medio camino... una pequeña concesión cada vez.</speech>
            <speech>Sé que es demasiado esperar que todo cambie a la vez, pero...</speech>
            <speech> Espero que esta crisis les ayude al menos a dar ese primer paso vital.</speech>
            <speech>Imagino que ahora se están produciendo muchos cambios en todo Hoenn.</speech>
            <speech>Espero que puedas viajar por este mundo y ver su riqueza con tus propios ojos, y deleitarte con su novedad en tu propio corazón.</speech>
            <speech>Pero por el momento, puede que primero desees desafiar al Gimnasio Pokémon de esta ciudad.</speech>
            <speech>Allí te esperan los mismos Wallace que tanto nos ayudaron.</speech>
            <speech>Es fuerte. Pero tal y como eres ahora, deberías ser capaz de luchar contra él en igualdad de condiciones.</speech>
            <speech>$NOMBRE_JUGADOR...</speech>
            <speech>Mientras tú y tus Pokémon vivís y crecéis en este mundo cambiado, me pregunto qué efecto tendrá en ti.</speech>
            <speech>¿En qué pensarás? ¿En qué ideales creerás?</speech>
            <speech>Si tenemos la oportunidad de volver a vernos, espero que pueda mostrarnos a mí y a mi equipo las respuestas que ha encontrado.</speech>
            <speech>Hasta entonces...</speech>
            <speech>Hasta luego...</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¿La energía que se había acumulado en las profundidades de la Cueva del Origen fluye ahora para derramarse sobre el
                mundo?
            </speech>
            <speech>Es como si la incertidumbre de hace unos momentos nunca hubiera existido.</speech>
            <speech>Mi corazón se siente tranquilo ahora.</speech>
        </speeches>
        <speeches id="2">
            <speech>... Supongo... que puedes tener razón...</speech>
            <speech>Sin embargo...</speech>
            <speech>Personalmente, en mi caso... Algunos males no pueden expiarse, por mucho que intentes corregirlos.
            </speech>
            <speech>Y he cometido errores tan grandes como para poner de rodillas al mundo entero.</speech>
            <speech>Puede que yo... Puede que sea demasiado suponer que debería merecer la oportunidad de empezar algo
                de nuevo.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>T-Tabitha...</speech>
            <speech>...</speech>
            <speech>Gracias, señor.</speech>
        </speeches>
        <speeches id="4">
            <speech>Tu hábil uso del Orbe Azul me ha impresionado.</speech>
            <speech>A partir de ahora, protegeré el Orbe Rojo para vigilar a Groudon.</speech>
            <speech>Ten por seguro que no permitiré que ninguna fuerza de esta tierra vuelva a perturbar su sueño.</speech>
            <speech>Hasta la vista, adiós.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Líder... Sin duda, has cometido una ofensa que nunca podrá ser perdonada.</speech>
            <speech>No sólo has perjudicado al Equipo Magma, sino a todos los seres vivos de este planeta, ya sean grandes o pequeños.</speech>
            <speech>Sin embargo, es precisamente por eso por lo que ahora debe poner las cosas en su sitio.</speech>
            <speech>Debes seguir expiando los pecados que has cometido, aun a riesgo de tu propia vida...</speech>
            <speech>Corregir los errores cometidos sin huir despavorido: ¿no es así como un adulto acepta su responsabilidad?</speech>
            <speech>... Si encuentras la resolución de hacerlo dentro de ti, entonces yo...</speech>
            <speech>Equipo Magma Admin Tabitha... Serviré a tu lado como consejero para siempre.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>De alguna manera, es... tan cálido...</speech>
        </speeches>
        <speeches id="2">
            <speech>... El mar o la tierra...</speech>
            <speech>Pokémon o humanidad...</speech>
            <speech>Todo este tiempo sólo hemos intentado aferrarnos a la felicidad de uno de ellos, aunque eso significara
                destruir al otro...
            </speech>
            <speech>Mira cómo han salido las cosas, ahora el mundo ha recuperado su equilibrio natural...</speech>
            <speech>Tenemos que replantearnos esto desde el principio...</speech>
            <speech>Tenemos que rehacer todo lo que hemos hecho desde cero, y hacerlo bien esta vez. ¿Qué dices?
                Maxie...
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Sabes...</speech>
            <speech>Algún día los adultos tendremos que entregar este mundo a este pillín y al resto de su generación.</speech>
            <speech>Pero, ¿qué clase de mundo vamos a hacer los adultos?</speech>
            <speech>¿Qué clase de mundo queremos transmitir a estos niños?</speech>
            <speech>Si ni siquiera nos hemos dado cuenta nosotros mismos, nunca llegaremos a ninguna parte.</speech>
            <speech>¿Vamos a crear un mundo en el que todos puedan coexistir juntos?</speech>
            <speech>¿O, después de todo, va a ser un mundo que reclamemos por la fuerza?</speech>
            <speech>Una por la que luchamos y nos peleamos...</speech>
            <speech>No lo sé, pero creo que al menos podemos empezar por dedicarle tiempo y reflexionar.</speech>
            <speech>Todos podemos hacerlo, seamos del Equipo Aqua o del Equipo Magma o lo que sea...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Y eso es todo por mi parte! ¡Hasta luego, bribón!</speech>
        </speeches>
    </conversation>

    //May after its all over
    <conversation id="11">
        <speeches id="1">
            <speech>¡$PLAYER_NAME!</speech>
            <speech>Así que se acabó...</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Uf!</speech>
            <speech>Y por fin estamos los dos solos otra vez.</speech>
            <speech>Así que tengo que decir... gracias por todo lo que has hecho por nuestra región, $PLAYER_NAME.</speech>
            <speech>Sabes, pensé que habíamos partido juntos de Littleroot, pero...</speech>
            <speech>Pero tú, $PLAYER_NAME... Parece que cada vez me llevas más ventaja...</speech>
            <speech>Incluso empecé a sentir que te habías ido a un lugar que ni siquiera puedo alcanzar.</speech>
            <speech>Es bastante solitario, ¿sabes?</speech>
            <speech>¡No! ¿Qué pensarías si realmente dijera algo así?</speech>
            <speech>¡Hee hee! De todos modos, hoy has hecho algo realmente increíble, ¡así que intenta tomártelo con calma durante un tiempo!</speech>
            <speech>¡Hasta luego!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>El responsable del gimnasio no se encuentra actualmente en el gimnasio.</speech>
            <speech>Por favor, vuelva más tarde.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>La casa parece estar cerrada.</speech>
        </speeches>
    </conversation>
    <conversation id="17">
        <speeches id="1">
            <speech>¡¡¡SWAMMMMPPPPP!!!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Zoro" randomRotation="true" sprite="339" x="43" y="43">
        <speech>Perdido otra vez, ¿eh? Figuras. Bueno, también podría sacar el máximo provecho de ella.</speech>
        <speech>Ciudad Sootopolis, ¿eh? No es un mal lugar para estar abandonado. Al menos hay mucha agua cerca para entrenar.</speech>
        <speech>Es hora de afilar mis habilidades y esperar a que la tripulación me alcance. Al final me encontrarán... esperemos.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Relicanth" speed="1" sprite="369" type="pokemon" x="26" y="27">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">Relicanth!</onCollisionSpeech>
        <speech>¡Relicanth!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Bagon" shouldSleep="" speed="1" sprite="371" type="pokemon" x="42" y="5">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Bagon!</onCollisionSpeech>
        <speech>¡Bagón!</speech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="4" name="Mingyu" randomRotation="false" sprite="11" x="21" y="39">
        <speech>Bienvenido al Gimnasio Sootopolis, donde las batallas son tan impredecibles como las mareas.</speech>
        <speech>Los Pokémon de tipo agua del líder del gimnasio son duros oponentes, pero con determinación y estrategia, ¡tú también puedes hacer olas!</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Altaria" speed="1" sprite="334" type="pokemon" x="33" y="58">
        <path>LEFTx13,RIGHTx13</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Shelgon" shouldSleep="" speed="1" sprite="372" type="pokemon" x="42" y="50">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Goldeen" speed="1" sprite="118" type="pokemon" x="21" y="51">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4">Goldeen!</onCollisionSpeech>
        <speech>¡Goldeen!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Chinchou" shouldSleep="" speed="1" sprite="170" type="pokemon" x="37" y="36">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Chinchou!</onCollisionSpeech>
        <speech>¡Chinchou!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Horsea" speed="1" sprite="116" type="pokemon" x="36" y="49">
        <path>UPx5,LEFTx5,DOWNx5,RIGHTx5</path>
        <onCollisionSpeech gap="4">Horsea!</onCollisionSpeech>
        <speech>¡Horsea!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Wingull" speed="1" sprite="278" type="pokemon" x="5" y="27">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Wingull" speed="1" sprite="278" type="pokemon" x="55" y="38">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Salamence" speed="1" sprite="373" type="pokemon" x="5" y="10">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="14" name="''Slim'' Shady Dealer" randomRotation="true" sprite="115" x="22" y="14">
        <speech>¡Oye! ¡Estás ahí!</speech>
        <speech>¿Quieres comprar algunas... bayas?</speech>
        <speech>Oh, yo no vendo. Pero conozco a un tipo ....</speech>
    </npc>
    <movingNpc direction="DOWN" id="15" name="Swablu" shouldSleep="" speed="1" sprite="333" type="pokemon" x="6" y="44">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Tao" shouldSleep="" speed="1" sprite="48" type="npc" x="48" y="28">
        <path>UPx3,DOWNx3</path>
        <onCollisionSpeech gap="4">Hey! Watch it!</onCollisionSpeech>
        <speech>Pasee tranquilamente por el parque Sootopolis y disfrute de la serena belleza de la naturaleza, en pleno centro de la ciudad.</speech>
    </movingNpc>
</npcs>