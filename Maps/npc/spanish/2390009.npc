<npcs>
    <conversation id="4">
        <!-- First Battle (Uses Original Game Dialogues) -->
        <speeches id="1">
            <speech>Hola... Bonito tiempo, ¿verdad? Es tan agradable...</speech>
            <speech>...Oh, querido... Debo haberme quedado dormido. ¡Bienvenidos al Gimnasio Celadon!</speech>
            <speech>Mi nombre es {COLOR=GREEN}Erika{ENDCOLOR}, y soy la líder de este Gimnasio.</speech>
            <speech>Soy estudiante del arte de {COLOR=VERDE}arreglar flores{ENDCOLOR}, y mis Pokémon son de tipo {COLOR=VERDE}grass{ENDCOLOR}.</speech>
            <speech>¿Oh? Lo siento, no tenía ni idea de que deseabas desafiarme.</speech>
            <speech>¡Muy bien, pero no perderé!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oh! ¡Conozco la derrota! Eres notablemente fuerte...</speech>
            <speech>En reconocimiento a tu habilidad, te concedo la insignia del arco iris.</speech>
            <speech>La Insignia Arco Iris hará que te obedezcan Pokémon de hasta {COLOR=CYAN}Nivel 50{ENDCOLOR}.</speech>
            <speech>Por favor, toma también esta TM. Contiene {COLOR=VERDE}Giga Drain{ENDCOLOR}. Úsalo sabiamente.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh mi... Parece que tu viaje acaba de empezar.</speech>
            <speech>La belleza de la batalla no está en ganar, sino en crecer. Vuelve cuando tus raíces sean más fuertes.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, ya veo... ¿Desea desafiarme, pero quizás en otra ocasión?</speech>
            <speech>Como las flores, las batallas florecen mejor cuando el momento es propicio.</speech>
        </speeches>
        <!-- Repeated Battle (More Lore-Intensive & Tougher) -->
        <speeches id="5">
            <speech>Ah, así que vuelves... ¿Cuántos pétalos deben caer antes de que estés satisfecho?</speech>
            <speech>{COLOR=VERDE}El bosque no teme a la tormenta; simplemente la soporta.{ENDCOLOR}</speech>
            <speech>¡Veamos si tu fuerza ha crecido, o si te marchitarás ante mí!</speech>
        </speeches>
        <speeches id="6">
            <speech>Increíble... Usted ha cortado a través de mis vides una vez más.</speech>
            <speech>Esto marca su {COLOR=GOLD}$TOTAL_VICTORY{ENDCOLOR} victoria contra mí, y {COLOR=CYAN}$CONSECUTIVE{ENDCOLOR} consecutiva.</speech>
            <speech>Eres una verdadera fuerza de la naturaleza, que doblega incluso las raíces más fuertes a tu paso.</speech>
        </speeches>
        <speeches id="7">
            <speech>Hasta el árbol más poderoso cae cuando olvida sus raíces.</speech>
            <speech>Has perdido, pero no desesperes. Las estaciones cambian y con ellas vuelve el crecimiento.</speech>
            <speech>La próxima vez, ven preparado... no sea que quedes enterrado bajo las viñas una vez más.</speech>
        </speeches>
        <speeches id="8">
            <speech>Veo que aún no. Muy bien... Como un jardín desatendido, esperaré.</speech>
            <speech>Vuelve cuando estés listo, y estaré aquí para poner a prueba tu determinación.</speech>
        </speeches>
        <speeches id="9">
            <speech>¿Oh? Veo que ya has luchado contra mí recientemente. Debes dar tiempo a que las raíces se asienten.</speech>
            <speech>Vuelve en {COLOR=YELLOW}$DURATION{ENDCOLOR}-entonces, veremos si tu fuerza ha florecido de verdad.</speech>
        </speeches>
        <!-- Special Condition: Battle Requirement Not Met -->
        <speeches id="10">
            <speech>Vaya, parece que te falta la armonía de la naturaleza.</speech>
            <speech>Para volver a desafiarme, debes tener {COLOR=VERDE}al menos 3 Pokémon de tipo hierba{ENDCOLOR} en tu equipo.</speech>
            <speech>Regresa cuando tu corazón se alinee con el bosque, y te concederé la batalla.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Me encantan las flores! Son bonitas... ¡y también peligrosas!</speech>
        </speeches>
        <speeches id="2">
            <speech>Aww... me arrancaron los pétalos..</speech>
        </speeches>
        <speeches id="3">
            <speech>Aww... me arrancaron los pétalos..</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? Hasta los pequeños brotes como yo pueden convertirse en campeones.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Toda rosa tiene sus espinas... ¡y yo sé usar las mías!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que esta vez mis pétalos se marchitaron...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que esta vez mis pétalos se marchitaron...</speech>
        </speeches>
        <speeches id="4">
            <speech>Hermosos y poderosos, ¡así son los Pokémon de hierba!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Los Pokémon de hierba son tranquilos y gentiles... ¡hasta que dejan de serlo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que estaba demasiado relajado...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que estaba demasiado relajado...</speech>
        </speeches>
        <speeches id="4">
            <speech>El equilibrio de la naturaleza... ¡siempre a nuestro favor!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Las flores pueden parecer delicadas, pero si las subestimas te enredarás.</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que necesito podar mi estrategia...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que necesito podar mi estrategia...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Una victoria impecable como un jardín en plena floración!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Los Pokémon de Erika son como su jardín: bellos, tranquilos y llenos de sorpresas.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oh no! Olvidé regar mi equipo... metafóricamente hablando.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Oh no! Olvidé regar mi equipo... metafóricamente hablando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Al igual que las plantas, los Pokémon de hierba prosperan cuando se les cuida adecuadamente. Creo que eso es lo que más me ha enseñado Erika.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Los Pokémon de Erika no solo luchan... prosperan. Ella me ha enseñado que la paciencia convierte el crecimiento en fortaleza.</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que sigo siendo sólo una planta de semillero...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que sigo siendo sólo una planta de semillero...</speech>
        </speeches>
        <speeches id="4">
            <speech>La fuerza de Erika no son solo sus Pokémon, sino su vínculo con ellos. Eso es lo que yo también quiero conseguir.</speech>
        </speeches>
    </conversation>
</npcs>