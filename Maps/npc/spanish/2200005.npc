<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>El hielo susurra... recuerda a los que se perdieron en la tormenta. ¿Quieres oír lo que dice de ti?</speech>
        </speeches>
        <speeches id="2">
            <speech>Has silenciado los susurros... pero volverán.</speech>
        </speeches>
        <speeches id="3">
            <speech>Has silenciado los susurros... pero volverán.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Sientes un escalofrío en los huesos? Es el mundo espiritual acercándose.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>El aire de Seafoam es fresco y limpio, perfecto para agudizar los instintos. Cuidado, juego para ganar.</speech>
        </speeches>
        <speeches id="2">
            <speech>Uf... vale, me has pillado con la guardia baja. Eso no ocurre a menudo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uf... vale, me has pillado con la guardia baja. Eso no ocurre a menudo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Diste una buena pelea, pero el frío no me detuvo ni un poco.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Esta cueva no es sólo una prueba de fuerza. Es una prueba de concentración, resistencia y paciencia. Veamos si la superas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que tienes lo que hay que tener. Respeto.</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que tienes lo que hay que tener. Respeto.</speech>
        </speeches>
        <speeches id="4">
            <speech>Siempre hay alguien más fuerte. Lo conseguirás si sigues empujando.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>{COLOR=CYAN}Arrrrti...cuuuuuno...{ENDCOLOR}</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=CYAN}¡Cuuuuu-noooo!{ENDCOLOR}</speech>
        </speeches>
        <speeches id="3">
            <speech>*Articuno despliega con gracia sus {COLOR=CYAN}alas cristalinas{ENDCOLOR}, creando remolinos de {COLOR=WHITE}copos de nieve{ENDCOLOR} en el aire*.</speech>
            <speech>*El majestuoso pájaro de hielo ladea la cabeza y hace un gesto hacia el horizonte con una suave {COLOR=BLUE}brisa helada{ENDCOLOR}*.</speech>
            <speech>*Parece susurrar que vuelvas cuando la {COLOR=CYAN}escarcha se asiente{ENDCOLOR} en {COLOR=YELLOW}$DURATION{ENDCOLOR}*</speech>
        </speeches>
        <speeches id="4">
            <speech>{COLOR=CYAN}¡Arti-cuno!{ENDCOLOR}</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Seel" shouldSleep="" speed="1" sprite="86" type="pokemon" x="9" y="21">
        <path>DOWNx4,RIGHTx2,LEFTx2,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Golbat" shouldSleep="" speed="1" sprite="42" type="pokemon" x="30" y="21">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Dewgong" shouldSleep="" speed="1" sprite="87" type="pokemon" x="40" y="28">
        <path>UPx4,RIGHTx5,DOWNx4,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Zubat" shouldSleep="" speed="1" sprite="41" type="pokemon" x="37" y="36">
        <path>DOWNx4,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Golbat" shouldSleep="" speed="1" sprite="42" type="pokemon" x="30" y="8">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>