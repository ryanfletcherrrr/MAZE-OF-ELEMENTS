<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Esta zona es dura chico, deberías volver antes de que te hagan daño.</speech>
        </speeches>
        <speeches id="2">
            <speech>Buena suerte.</speech>
        </speeches>
        <speeches id="3">
            <speech>Buena suerte.</speech>
        </speeches>
        <speeches id="4">
            <speech>Te lo dije</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Hmm No me pareces especial</speech>
        </speeches>
        <speeches id="2">
            <speech>No me di cuenta de que eras un Campeón</speech>
        </speeches>
        <speeches id="3">
            <speech>No me di cuenta de que eras un Campeón</speech>
        </speeches>
        <speeches id="4">
            <speech>Sólo otro entrenador.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Estoy buscando un Dragón de tierra, ¿lo has visto?</speech>
        </speeches>
        <speeches id="2">
            <speech>Necesito un Pokemon Dragón en mi vida</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito un Pokemon Dragón en mi vida</speech>
        </speeches>
        <speeches id="4">
            <speech>Necesito un Pokemon Dragón en mi vida</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Tus Pokemon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>...Para haber nacido en el extranjero, ese tipo duro no tiene acento ni nada.</speech>
            <speech>$PLAYER_NAME, hay un volcán más adelante llamado Montaña Stark.</speech>
            <speech>Ese fanfarrón de Buck también va para allá.</speech>
            <speech>Voy a encontrar el tesoro del volcán antes que ese tipo.</speech>
            <speech>Si pudiera hacerlo, ¡una racha de 21 victorias en la Torre de Batalla sería posible!</speech>
        </speeches>
    </conversation>
</npcs>