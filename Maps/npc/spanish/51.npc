<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Quememos la casa, tú y yo, nena.</speech>
            <speech>¡Vamos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Welp, ahí va mi fuego ...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahora me siento húmeda y enferma.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Más fuego!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Aunque la gente te llame As de la formación, no es que te den nada especial por ello.</speech>
        </speeches>
        <speeches id="2">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="3">
            <speech>Al final, ser bueno luchando solo no es suficiente, por muy fuerte que seas.</speech>
        </speeches>
        <speeches id="4">
            <speech>Sólo soy bueno batallando. Ni siquiera tengo trabajo. Sólo soy otro desempleado.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Los Pokémon también son populares en el trabajo. Incluso los chicos disfrutamos con estas batallas.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tanto los mayores como los niños pueden disfrutar luchando con Pokémon.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tanto los mayores como los niños pueden disfrutar luchando con Pokémon.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿No soy bueno para un tipo que sólo batalla durante sus descansos para comer?</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Hace un tiempo horrible para trabajar! Sólo me divierto aquí.</speech>
        </speeches>
        <speeches id="2">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="3">
            <speech>Si tan sólo mi habilidad fuera Rain Dish...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Guau! ¡¡Estoy de un humor tipo Sunny Day!!</speech>
        </speeches>
    </conversation>
</npcs>