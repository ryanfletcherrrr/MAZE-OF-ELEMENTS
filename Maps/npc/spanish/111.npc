<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Veo que has declarado tu lealtad a la Lieja del Agua.</speech>
            <speech>El maestro se alimenta de Esencia Líquida que le rejuvenece. Es un proceso esencial para que siga vivo.</speech>
            <speech>Sería muy generoso por tu parte reunir 100 de estos.</speech>
            <speech>¡Estoy seguro de que el Lieja del Agua te recompensará por ello, muahahahaha!</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Donarás esta esencia como ofrenda a la Lieja del Agua?</speech>
        </speeches>
        <speeches id="3">
            <speech>No es una decisión muy sabia.</speech>
        </speeches>
        <speeches id="4">
            <speech>Vuestras oraciones han sido escuchadas, ¡seréis obsequiados como corresponde!</speech>
        </speeches>
        <speeches id="5">
            <speech>Vuestras oraciones han sido escuchadas, ¡seréis obsequiados como corresponde!</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>¿Cómo es el vínculo entre tú y el súbdito del Lieja del Agua?</speech>
            <speech>Para triunfar plenamente como entrenador Pokemon, nada es más importante que el vínculo con tus Pokemon.</speech>
            <speech>A veces las cosas simplemente no funcionan entre tú y tu Pokemon.</speech>
            <speech>Si es así, me aseguraré de que la Lieja del Agua le proporcione un Frillish fresco.</speech>
            <speech>Todo lo que tienes que hacer es traerme a tu Jellicent de nivel 50, y el Señor del Agua te dará un súbdito recién nacido.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Cortarás todos los lazos con Jellicent para empezar de nuevo con otro Frillish?</speech>
        </speeches>
        <speeches id="3">
            <speech>Entiendo, dale otra oportunidad.</speech>
        </speeches>
        <speeches id="4">
            <speech>La Lieja de las Aguas ha accedido a su petición. Le deseo buena suerte en sus próximos viajes.</speech>
        </speeches>
        <speeches id="5">
            <speech>Vuestras oraciones han sido escuchadas, ¡seréis obsequiados como corresponde!</speech>
        </speeches>
    </conversation>
</npcs>