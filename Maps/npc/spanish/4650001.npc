<npcs>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Oh, Entrenador! Es un alivio ver una cara amiga. Tuve un pequeño encontronazo cerca de Shoal Cave... me dejó en este lamentable estado.</speech>
            <speech>Me estoy recuperando, gracias a la gente de aquí. Pero aún queda mucho por hacer, y por ahora estoy atrapado aquí.</speech>
            <speech>Si estás dispuesto a echar una mano, puede que haya algo en lo que puedas ayudar. La situación es un poco... complicada.</speech>
            <speech>Está un poco borroso, pero te diré lo que recuerdo. Estaba tras la pista de mi Llave de Prisión robada.</speech>
            <speech>Las pistas me condujeron a la Sala Interior de la Cueva Shoal durante la marea alta. Parecía que estaba en el camino correcto.</speech>
            <speech>Pero entonces, todo se oscureció... Cuando volví en mí, me encontré aquí, de vuelta en la seguridad del Pokecentro.</speech>
            <speech>No puedo quitarme la sensación de que algo o alguien me estaba observando allí. Todavía está todo muy borroso.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Volver tan pronto? Me conmueve tu preocupación. Como puedes ver, sigo aquí, aprovechando al máximo la hospitalidad del Pokecentro.</speech>
            <speech>La recuperación es lenta pero segura. Me he mantenido ocupado planeando mis próximos movimientos... una vez que me recupere, claro.</speech>
            <speech>Gracias por venir a verme. No te preocupes, volveré a la acción enseguida.</speech>
            <speech>Hay mucho trabajo esperándome ahí fuera.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Tus hallazgos refrescaron mi memoria... Hubo un destello repentino y cegador de color púrpura o rosa, y luego nada. Me quedé inconsciente.</speech>
            <speech>Ese flash... podría ser clave para entender lo que pasó. No es mucho, pero es todo lo que tenemos ahora.</speech>
            <speech>He oído de Grimers en la Senda Ardiente mostrando un comportamiento inusual recientemente. ¿Podría haber una conexión?</speech>
            <speech>También recuerdo que había alguien tras ese Ooze en las Shoal Caves, pero de nuevo no recuerdo mucho...</speech>
            <speech>Quizá los Grimer tengan la Llave de la Prisión, o sepan dónde está. Es una posibilidad remota, pero ¿podrías comprobarlo?</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Tuviste suerte con los Grimers en Fiery Path? Ese destello púrpura o rosa que mencioné debe estar relacionado de algún modo.</speech>
            <speech>También recuerdo que había alguien tras ese Ooze en las Shoal Caves, pero de nuevo no recuerdo mucho...</speech>
            <speech>No puedo evitar la sensación de que estamos cerca de un gran avance. Cualquier prueba podría ayudar a resolver este caso.</speech>
            <speech>Estén atentos a cualquier cosa fuera de lo común. Estamos tratando con algo... o alguien muy astuto.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Sí, la marea baja, el impostor... ¡Ahora lo recuerdo todo!</speech>
            <speech>Todo tiene sentido: la emboscada, el disfraz, el engaño. ¿Cómo no me di cuenta?</speech>
            <speech>Necesito enfrentarme a esto directamente. Me dirigiré a la Sala Interior de la Cueva Shoal cuando baje la marea.</speech>
            <speech>Hay algo crucial que pasé por alto.</speech>
            <speech>Su ayuda ha sido inestimable. Gracias a ti, estoy un paso más cerca de desentrañar este misterio.</speech>
            <speech>Debo irme ahora, ¡el deber me llama!</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Leopold" randomRotation="false" sprite="39" x="16" y="4">
        <speech>La arrogancia disminuye la sabiduría.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Sumi" randomRotation="false" sprite="38" x="9" y="5">
        <speech>La verdad ilumina la mente, pero no siempre traerá felicidad a tu corazón.</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="4" name="Gunther" randomRotation="false" sprite="5" x="26" y="16">
        <speech>El miedo es una enfermedad; la esperanza es su única cura.</speech>
    </npc>
</npcs>