<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Tanto mi madre como mi padre son entrenadores As. Probablemente yo también sea un As.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Waaah! Debería tener genes superiores y ser capaz de cabalgar sobre los faldones de mis padres...</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Waaah! Debería tener genes superiores y ser capaz de cabalgar sobre los faldones de mis padres...</speech>
        </speeches>
        <speeches id="4">
            <speech>Quiero ser un verdadero As como mi madre y mi padre.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>No se me dan bien las batallas, pero este es uno de los deberes de un Poké Fan.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Salud a todos los Poké Fans! ¡Que el Poké Fan dure para siempre!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Salud a todos los Poké Fans! ¡Que el Poké Fan dure para siempre!</speech>
        </speeches>
        <speeches id="4">
            <speech>He mantenido vivo el honor del Poké Fan. ¡Jajaja!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Lo único que hacen mamá y papá es juguetear con sus tabletas. ¡Nunca juegan conmigo! Me aburro.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡No me gustan ni mamá ni papá ni sus tontas tabletas! ¡Lo único que necesito son Pokémon!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡No me gustan ni mamá ni papá ni sus tontas tabletas! ¡Todo lo que necesito son Pokémon!</speech>
        </speeches>
        <speeches id="4">
            <speech>Tal vez no soy realmente su hijo... Tal vez sus tabletas son ...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>A pesar de mi apariencia, nací en la ciudad. Anhelaba la vida en el campo.</speech>
        </speeches>
        <speeches id="2">
            <speech>A pesar de mi apariencia, nací en el campo. Por eso anhelaba la vida en la ciudad.</speech>
        </speeches>
        <speeches id="3">
            <speech>A pesar de mi apariencia, nací en el campo. Por eso anhelaba la vida en la ciudad.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Tienes una pequeña y bonita ciudad natal? Si es así, deberías volver y visitarlo.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Vamos, mis preciosos Pokémon! ¡A la batalla! ¡A por el enemigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>No voy a llorar... No lo haré. Algún día ganaré.</speech>
        </speeches>
        <speeches id="3">
            <speech>No voy a llorar... No lo haré. Algún día ganaré.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Mis Pokémon son los más poderosos! ¡Grabaré mi nombre en la historia!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Será mejor que no envíes a ningún Pokémon débil! ¡Tu oponente es mi compañero de construcción!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ahh ... Mi compañero se rompió. ¿Qué voy a hacer en el sitio mañana?</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahh ... Mi compañero se rompió. ¿Qué voy a hacer en el sitio mañana?</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Gwahahaha! ¡¿Qué te parece?! ¡¿Viste eso?! ¡Mis compañeros son rudos y duros!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¿Qué? ¿Quieres luchar conmigo? Supongo que podríamos arreglar algo...</speech>
        </speeches>
        <speeches id="2">
            <speech>Oh, wh-whoa. No soy rival para ti. Tus Pokémon son otra cosa.</speech>
        </speeches>
        <speeches id="3">
            <speech>Oh, wh-whoa. No soy rival para ti. Tus Pokémon son otra cosa.</speech>
        </speeches>
        <speeches id="4">
            <speech>Ah, debería haberlo sabido. Hey, no me culpes.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Hola, me llamo Cheryl. ¿Y tú eres...? OK, así que tu nombre es $PLAYER_NAME.</speech>
            <speech>Estoy sinceramente encantado de conocerte. $PLAYER_NAME, ¿puedo pedirte un gran favor?</speech>
            <speech>Quiero atravesar este bosque, pero tengo miedo de hacerlo sola.</speech>
            <speech>He oído que hay un siniestro grupo de gente llamado Equipo Galáctico por ahí. Creo que habría
                seguridad en los números.
            </speech>
            <speech>Por favor, ¿puedo seguirte hasta el final?</speech>
            <speech>Volveré con mis Pokèmon. Puedes continuar por el bosque hasta entonces. Te veré
                pronto.
            </speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Hola $PLAYER_NAME, me alegro de verte. No he visto ningún equipo Galactic Grunt por aquí. Parece que es
                seguro continuar.
            </speech>
            <speech>Voy a tratar de tomar el cargo ahora. Nos vemos en la salida $PLAYER_NAME.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>¡Oh! ¡Ahí está la salida! Estoy tan aliviada... Me perdí en el medio.</speech>
            <speech>No fue la más brillante de las ideas tomar la iniciativa.</speech>
            <speech>De todos modos, te vi y te seguí. Nunca habría sido capaz de superar esto por mí mismo.
            </speech>
            <speech>¡Muchas gracias, $PLAYER_NAME!</speech>
        </speeches>
        <speeches id="2">
            <speech>Esta es mi muestra de agradecimiento. Por favor, acéptalo. Estoy seguro de que volveremos a vernos en alguna parte. Bye for
                por ahora.
            </speech>
        </speeches>
    </conversation>

    <conversation canSkip="true" id="13">
        <speeches id="1">
            <speech>Yo y mi perro estábamos caminando por el Bosque Eterna, en busca de Pokémon raros</speech>
            <speech>De repente, un Gengar apareció de la nada y se llevó a mi perro.</speech>
            <speech>Entró en ese viejo castillo, ¿puedes ayudarme a recuperarlo?</speech>
        </speeches>
        <speeches id="2">
            <speech>Muchas gracias, mi perro volvió corriendo en cuanto derrotaste a ese fantasma.</speech>
            <speech>Mi perro parece confiar mucho en ti, creo que quiere acompañarte en tu viaje.</speech>
            <speech>Por favor, cuida bien de él</speech>
        </speeches>
        <speeches id="3">
            <speech>Lo entiendo. No te gusta limpiar caca de perro.</speech>
            <speech>Vuelve más tarde si cambias de opinión.</speech>
        </speeches>
        <speeches id="4">
            <speech>Toma, por favor, cuida bien de él.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation id="15">
        <speeches id="1">
            <speech>Tus Pokémon parecen cansados. ¿Quieres que los cure?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ya está, todos sanos y felices.</speech>
        </speeches>
        <speeches id="3">
            <speech>Seguro que les hubiera gustado descansar.</speech>
        </speeches>
    </conversation>
    <conversation id="16">
        <speeches id="1">
            <speech>Estoy aquí tratando de recoger Dustox, pero no tengo tiempo.</speech>
            <speech>Si me consigues 3 Dustox te recompensaré con algo útil.</speech>
            <speech>Recuerda tener un Pokémon adicional en tu grupo.</speech>
            <speech>Te quitaré el o los Dustox, y puede que te quedes sin Pokémon para atravesar este Bosque.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Polillas! ¡Hermosas polillas!</speech>
            <speech>¡Tres polillas!</speech>
            <speech>¿Quieres entregármelos a cambio de una Experiencia Compartida?</speech>
        </speeches>
        <speeches id="3">
            <speech>Tú te lo pierdes, amigo.</speech>
        </speeches>
        <speeches id="4">
            <speech>Gracias por Dustox(s).</speech>
            <speech>Equipa a cualquier Pokémon de tu grupo con este objeto y ganará experiencia sin necesidad de luchar.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <movingNpc direction="RIGHT" id="1" name="Silcoon" shouldSleep="" speed="1" sprite="266" type="pokemon" x="9" y="81">
        <path>RIGHTx1, DOWNx1, LEFTx1, UPx1</path>
        <onCollisionSpeech gap="4">Ssssssss!</onCollisionSpeech>
        <speech>¡¡¡Scccccccc!!!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Buneary" shouldSleep="" speed="1" sprite="427" type="pokemon" x="43" y="84">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Bun! Bun! Bun!</onCollisionSpeech>
        <speech>*Buneary te abraza*</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="" shouldSleep="" speed="1" sprite="200" type="pokemon" x="16" y="50">
        <path>LEFTx2, DOWNx2, RIGHTx2, UPx2</path>
        <onCollisionSpeech gap="4">Mis! Mis!</onCollisionSpeech>
        <speech>El Misdreavus te observa con una mirada siniestra...</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="4" name="Cascoon" shouldSleep="" speed="1" sprite="268" type="pokemon" x="11" y="55">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Csssssss!</onCollisionSpeech>
        <speech>¡Cssssss!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Murkrow" shouldSleep="" speed="1" sprite="198" type="pokemon" x="25" y="49">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Murkrow!</onCollisionSpeech>
        <speech>*Murkrow usa Finta en ti!*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="" shouldSleep="" speed="1" sprite="163" type="pokemon" x="26" y="70">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Hoot! Hoot!</onCollisionSpeech>
        <speech>Hoothoot te ulula y ladea la cabeza</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="" shouldSleep="" speed="1" sprite="92" type="pokemon" x="41" y="69">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Gast! Gastly!</onCollisionSpeech>
        <speech>El Gastly se ríe de ti y te saca la lengua.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="8" name="Dustox" shouldSleep="" speed="1" sprite="269" type="pokemon" x="47" y="67">
        <path>RIGHTx2, DOWNx2, LEFTx2, UPx2</path>
        <onCollisionSpeech gap="4">Dus! Dustox! Dustox!</onCollisionSpeech>
        <speech>*Dustox usó Confuse Ray en $PLAYER_NAME*</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="9" name="Louis" shouldSleep="" speed="1" sprite="25" type="npc" x="52" y="90">
        <path>RIGHTx2, UPx2, DOWNx2, LEFTx2</path>
        <onCollisionSpeech gap="4">Hey! Let me pass!</onCollisionSpeech>
        <speech>Estoy muy entusiasmada con Eterna Forest.</speech>
        <speech>Me pregunto si cogeré algo interesante.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="10" name="Russell" shouldSleep="" speed="1" sprite="24" type="npc" x="65" y="75">
        <path>LEFTx6, RIGHTx6</path>
        <onCollisionSpeech gap="4">Aaaaaaaah!!!!!</onCollisionSpeech>
        <speech>¡Aaaaaaaaaaah!</speech>
        <speech>¡¡¡¡¡Tengo tanto miedo!!!!!</speech>
    </movingNpc>
    <movingNpc direction="UP" id="11" name="Wurmple" shouldSleep="" speed="1" sprite="265" type="pokemon" x="70" y="68">
        <path>UPx2, RIGHTx2, LEFTx2, DOWNx2</path>
        <onCollisionSpeech gap="4">Wurm! Wurm!</onCollisionSpeech>
        <speech>*Wurmple usó String Shot en $PLAYER_NAME!*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Bradley" shouldSleep="" speed="1" sprite="48" type="npc" x="82" y="78">
        <path>DOWNx4, UPx4</path>
        <onCollisionSpeech gap="4">Excuse me.</onCollisionSpeech>
        <speech>El Bosque Eterna es el hogar de muchos Pokémon de tipo Bicho y Hierba, y es el único lugar conocido de la región de Sinnoh en el que se puede encontrar y capturar a Buneary.
            para encontrar y capturar a Buneary.
        </speech>
        <speech>Encontraré uno, seguro.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="13" name="Slakoth" shouldSleep="" speed="1" sprite="287" type="pokemon" x="89" y="88">
        <path>LEFTx1, RIGHTx1</path>
        <onCollisionSpeech gap="4">Sla! Sla!</onCollisionSpeech>
        <speech>*Slakoth te bosteza*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Roy" shouldSleep="" speed="1" sprite="24" type="npc" x="106" y="88">
        <path>DOWNx1, UPx1</path>
        <onCollisionSpeech gap="4">Hey!</onCollisionSpeech>
        <speech>Este bosque me recuerda al Bosque Viridiano...</speech>
        <speech>¡Pero es mucho más grande!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="15" name="" shouldSleep="" speed="1" sprite="406" type="pokemon" x="105" y="64">
        <path>RIGHTx1,UPx1, LEFTx1, DOWNx1</path>
        <onCollisionSpeech gap="4">Bu! Bu! Budew!</onCollisionSpeech>
        <speech>Le gustas a este adorable Budew.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="16" name="Lawrence" shouldSleep="" speed="1" sprite="23" type="npc" x="91" y="62">
        <path>RIGHTx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Hey, you!</onCollisionSpeech>
        <speech>El Bosque Eterna es una larga y compleja estructura de árboles que lo convierten en un laberinto natural, de donde mucha
            gente se pierde.
        </speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="17" name="Pineco" shouldSleep="" speed="1" sprite="204" type="pokemon" x="82" y="54">
        <path>LEFTx2, RIGHTx2</path>
        <onCollisionSpeech gap="4">Pi! Pine! Pineco!</onCollisionSpeech>
        <speech>*Pineco usa Protect*</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Nathan" shouldSleep="" speed="1" sprite="75" type="npc" x="71" y="55">
        <path>DOWNx1, RIGHTx1, DOWNx1, RIGHTx1, LEFTx1, UPx1, LEFTx1, UPx1</path>
        <onCollisionSpeech gap="4">You are in the way!</onCollisionSpeech>
        <speech>Estoy tan tentado de entrar en el Old Chateau...</speech>
        <speech>He oído que hay 'mons' bastante aterradores por allí.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="" speed="1" sprite="429" type="pokemon" x="58" y="37">
        <path>DOWNx1, RIGHTx1, UPx1, LEFTx1</path>
        <onCollisionSpeech gap="4">Mis! Mismagius! Mis!</onCollisionSpeech>
        <speech>¡El Mismagius desaparece y reaparece detrás de ti!</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="20" name="" speed="1" sprite="94" type="pokemon" x="75" y="18">
        <path>RIGHTx10, LEFTx10</path>
        <onCollisionSpeech gap="4">Gengar!</onCollisionSpeech>
        <speech>El Gengar te lame cuando pasas a su lado y cacarea alegremente.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Helen" speed="1" sprite="18" type="npc" x="79" y="30">
        <path>DOWNx2, UPx2</path>
        <onCollisionSpeech gap="4">Help! Help!</onCollisionSpeech>
        <speech>¡¡¡¡Hay un Pokemon espeluznante en !!!! ¡¡¡Estoy tan asustada...!!!</speech>
        <speech>Sólo los entrenadores valientes pueden entrar ahí, supongo...</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="" shouldSleep="" speed="1" sprite="355" type="pokemon" x="90" y="17">
        <path>DOWNx3, UPx3</path>
        <onCollisionSpeech gap="4">Dusc! Dusc!</onCollisionSpeech>
        <speech>¡Crees que el Dusclops puede usar la Maldición contigo si lo molestas!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="" shouldSleep="" speed="1" sprite="265" type="pokemon" x="73" y="16">
        <path>DOWNx2, RIGHTx1, LEFTx1, UPx2</path>
        <onCollisionSpeech gap="4">Wrumple!</onCollisionSpeech>
        <speech>.......</speech>
    </movingNpc>
</npcs>