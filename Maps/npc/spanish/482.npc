<npcs>
    <movingNpc direction="DOWN" id="1" name="Torchic" shouldSleep="" speed="1" sprite="255" type="pokemon" x="14" y="8">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Torchic!</onCollisionSpeech>
        <speech>¡Torchic!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Whismer" shouldSleep="" speed="1" sprite="293" type="pokemon" x="30" y="3">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Fletchling" shouldSleep="" speed="1" sprite="661" type="pokemon" x="10" y="28">
        <path>LEFTx2,UPx2,RIGHTx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Fletchling!!</onCollisionSpeech>
        <speech>¡Fletchling!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Doduo" shouldSleep="" speed="1" sprite="84" type="pokemon" x="31" y="28">
        <path>DOWNx2,RIGHTx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Aron" shouldSleep="" speed="1" sprite="304" type="pokemon" x="54" y="23">
        <path>LEFTx1,UPx3,DOWNx3,RIGHTx1</path>
        <onCollisionSpeech gap="4">Aron!</onCollisionSpeech>
        <speech>¡Aron!</speech>
    </movingNpc>
        
    <movingNpc direction="DOWN" id="7" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="29" y="18">
        <path>UPx1,RIGHTx3,LEFTx3,DOWNx1</path>
        <onCollisionSpeech gap="4">Numel!</onCollisionSpeech>
        <speech>¡Numel!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Fletchling" shouldSleep="" speed="1" sprite="661" type="pokemon" x="52" y="4">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Fletchling!</onCollisionSpeech>
        <speech>¡Fletchling!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Whismur" shouldSleep="" speed="1" sprite="293" type="pokemon" x="59" y="18">
        <path>RIGHTx1,UPx3,DOWNx3,LEFTx1</path>
        <onCollisionSpeech gap="4">Whismur!</onCollisionSpeech>
        <speech>¡Whismur!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Doduo" shouldSleep="" speed="1" sprite="84" type="pokemon" x="55" y="27">
        <path>DOWNx3,RIGHTx1,LEFTx1,UPx3</path>
        <onCollisionSpeech gap="4">Doduo!</onCollisionSpeech>
        <speech>¡Doduo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="12" y="13">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Numel!</onCollisionSpeech>
        <speech>¡Numel!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Aron" shouldSleep="" speed="1" sprite="304" type="pokemon" x="37" y="26">
        <path>LEFTx3,UPx2,DOWNx2,RIGHTx3</path>
        <onCollisionSpeech gap="4">Aron!</onCollisionSpeech>
        <speech>¡Aron!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Houndour" shouldSleep="" speed="1" sprite="228" type="pokemon" x="13" y="35">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Houndour!</onCollisionSpeech>
        <speech>¡Houndour!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Whismur" shouldSleep="" speed="1" sprite="293" type="pokemon" x="41" y="29">
        <path>UPx1,RIGHTx3,LEFTx3,DOWNx1</path>
        <onCollisionSpeech gap="4">Whismur!</onCollisionSpeech>
        <speech>¡Whismur!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Doduo" shouldSleep="" speed="1" sprite="84" type="pokemon" x="37" y="7">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Doduo!</onCollisionSpeech>
        <speech>¡Doduo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Numel" shouldSleep="" speed="1" sprite="322" type="pokemon" x="20" y="31">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <conversation id="1">
        <speeches id="1">
            <speech>Hola! Me gusta mucho coleccionar Pokémon, especialmente pájaros, pero aquí en el Safari de Hoenn no tenemos muchos.</speech>
            <speech>Elegir el siguiente que encontrar es siempre tan difícil...</speech>
            <speech>Necesito un poco de tiempo para pensar qué Pokémon pájaro quiero ver a continuación en mi colección.</speech>
            <speech>¿Podrías volver más tarde? Te prometo que tendré un Pokémon pájaro increíble para que lo encontremos juntos.</speech>
            <speech>Vuelve en $DURACIÓN, y seguro que habré decidido un reto súper chulo para los dos.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="2">
            <speech>Hola, no te había visto antes por aquí. Tengo la misión de coleccionar Pokémon pájaro, ¡y necesito tu ayuda!</speech>
            <speech>En primer lugar, tengo mucha curiosidad por el Wattrel. Es tan elegante y su vuelo es hipnotizante, ¿no crees?</speech>
            <speech>¿Puedes mostrarme un Wattrel a nivel 20?</speech>
            <speech>¡Tengo algo especial para ti si lo haces! Va a ser increíble, ¡lo prometo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¿No quieres? Está bien, supongo. Quizá en otra ocasión.</speech>
            <speech>Si alguna vez encuentras un Wattrel de nivel 20 y quieres enseñármelo, ¡te estaré esperando!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sí! ¡Sabía que te apuntarías! Ver a un Wattrel de nivel 20 va a ser genial.</speech>
            <speech>Y no te preocupes, tengo una recompensa genial para ti. Estoy deseando verla.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¿Has encontrado ya un Wattrel de nivel 20? ¡He estado pensando en ello sin parar!</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Has encontrado un Wattrel de nivel 20? Qué guay. ¿Puedo verlo, por favor?</speech>
            <speech>¡No puedo creer que vaya a ver un Wattrel de verdad de cerca! ¡Va a ser el mejor día de mi vida!</speech>
        </speeches>
        <speeches id="3">
            <speech>No ha habido suerte, ¿eh? Está todo bien. Wattrel puede ser bastante difícil de encontrar, supongo.</speech>
            <speech>Pero oye, si alguna vez encuentras uno y quieres enseñármelo, ¡seré súper feliz!</speech>
        </speeches>
        <speeches id="4">
            <speech>Lo has conseguido. ¡Estoy tan emocionada por ver el Wattrel! ¡Este es el mejor día de mi vida!</speech>
            <speech>Tengo que pensar qué Pokémon pájaro quiero ver a continuación... Pero por ahora, aquí está tu impresionante
                ¡recompensa!
            </speech>
            <speech>¡Sois los mejores! ¡Muchas gracias por ayudarme con mi sueño de coleccionar pájaros!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="2">
            <speech>¡Hola! ¿Te acuerdas de mí? Sigo en mi búsqueda de Pokémon pájaro, ¿y adivina qué? Necesito tu
                ¡ayuda de nuevo!
            </speech>
            <speech>Esta vez, tengo mucha curiosidad por Fletchling. Es tan fogoso y su gorjeo es tan alegre... Es
                un poco guay, ¿verdad?
            </speech>
            <speech>¿Podrías enseñarme un Fletchling a nivel 20? ¡Seguro que es tan vibrante como dicen!</speech>
            <speech>Si puedes encontrar uno para mí, tengo algo muy chulo para ti. ¡Es una promesa!</speech>
        </speeches>
        <speeches id="3">
            <speech>¿No te interesa? Qué pena. ¡Pero sin presiones, de verdad!</speech>
            <speech>Si alguna vez te encuentras con un Fletchling de nivel 20 y te apetece compartirlo, ¡ya sabes dónde encontrarme!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>¡Impresionante! Sabía que estarías a bordo. Un Fletchling de nivel 20 es algo que tengo que ver.</speech>
            <speech>Y no</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¿Ya has conocido a un Fletchling de nivel 20? ¡Apuesto a que es súper vibrante y lleno de energía!</speech>
        </speeches>
        <speeches id="2">
            <speech>Vaya, ¿tienes un Fletchling de nivel 20? ¡Es increíble! ¿Me lo enseñas, por favor?</speech>
            <speech>Estoy tan emocionada por ver lo fogoso que es realmente Fletchling. ¡Esto va a ser genial!</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Todavía no hay Fletchling? Ah, todo está bien. Tienen una tendencia a revolotear, después de todo.</speech>
            <speech>Pero oye, si encuentras un Fletchling de nivel 20 y quieres compartirlo, ¡estaré aquí esperando ansioso!
            </speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eres el mejor! Ver un Fletchling de cerca va a ser impresionante. Gracias por hacer esto.
            </speech>
            <speech>Tengo que empezar a pensar en el próximo Pokémon pájaro que quiero ver... Pero antes, ¡aquí tienes tu
                recompensa.
            </speech>
            <speech>¡Muchas gracias! Vuestra ayuda significa mucho para mí y para mis sueños de coleccionar pájaros.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="2">
            <speech>¡Soy yo otra vez! Gracias a vosotros, mi viaje Pokémon pájaro se está volviendo superemocionante. Pero aún hay más que
                ¡explorar!
            </speech>
            <speech>Esta vez, estoy totalmente intrigado por Taillow. Son tan rápidos y sus llamadas son tan agudas, ¿verdad?
            </speech>
            <speech>¿Podrías encontrar y enseñarme un Taillow de nivel 20? Apuesto a que es tan fascinante como suena.</speech>
            <speech>Como antes, tengo una recompensa muy chula esperándote. Te va a encantar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmm, ¿no lo sientes? Está bien, no hay prisa. Estoy aquí cuando estés listo para compartir.</speech>
            <speech>Recuerda, si te encuentras con un Taillow de nivel 20 y quieres presumir de él, ¡seré todo oídos!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sí! Sabía que no me defraudarías. Un Taillow de nivel 20 será un espectáculo digno de ver.</speech>
            <speech>Y sobre la recompensa, créeme, merece la pena el esfuerzo. Estoy deseando ver lo que nos traes.
            </speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¿Has tenido suerte encontrando ese Taillow de nivel 20? Tengo mucha curiosidad por ver uno.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Has encontrado un Taillow de nivel 20? ¡Es increíble! ¿Puedo echarle un vistazo, por favor?</speech>
            <speech>Estoy tan emocionada de ver un Taillow en la vida real. Va a ser increíble.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sigues buscando a Taillow, ¿eh? No te preocupes, pueden ser un poco escurridizos.</speech>
            <speech>Pero si consigues un Taillow de nivel 20, me encantaría verlo. Mantenedme informado.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Vaya, lo has conseguido! ¡Ver un Taillow me va a alegrar el día!</speech>
            <speech>Ahora, déjame pensar qué Pokémon deberíamos descubrir a continuación... Mientras tanto, aquí tienes tu
                ¡bien merecida recompensa!
            </speech>
            <speech>Muchas gracias por vuestra ayuda. Estáis haciendo realidad mis sueños de coleccionar pájaros.</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Muchas gracias por enseñarme todos estos increíbles Pokémon pájaro! Me has inspirado de verdad.</speech>
            <speech>Sé que algún día me convertiré en un maestro Pokémon pájaro, y todo gracias a ti. Hasta entonces, seguiré
                ¡soñando a lo grande!
            </speech>
        </speeches>
    </conversation>
</npcs>