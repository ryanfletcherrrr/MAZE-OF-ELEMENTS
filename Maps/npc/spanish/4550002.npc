<npcs>
    <!-- Dialogue for the real Officer Jenny -->
    <conversation id="1">
        <speeches id="1">
            <speech>No, confía en mí, ¡soy la verdadera oficial Jenny!</speech>
            <speech>[YELLOW]*Si tan solo tuviera un Arcanine en mi equipo. Él seguramente sabría quién dice la verdad.*[]</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Así es! ¡Soy la Jenny genuina! ¡Ahora, juntos, derribemos a esta impostora Ditto!</speech>
        </speeches>
        <speeches id="3">
            <speech>No puedo agradecértelo lo suficiente, valiente entrenador.</speech>
            <speech>Con mi reciente calvario, estoy desbordado de obligaciones y debo despedirme.</speech>
            <speech>Te sugiero que profundices en este misterio de la Llave de la Prisión por tu cuenta.</speech>
        </speeches>
    </conversation>
    <!-- Dialogue for the Imposter (Ditto) -->
    <conversation id="2">
        <speeches id="1">
            <speech>¡Igual! ¡Igualmente! (Suplantando la voz de Jenny)</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Muy bien, muy bien, me atrapaste! Toma, coge la Llave de la Prisión. Sólo déjame escapar, ¿por favor?</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Jajajaja! Contigo fuera de juego, puedo hacerme pasar por ti en Sinnoh y Jvaloh.</speech>
        </speeches>
        <!-- Placeholder for the player deciding not to battle -->
        <speeches id="3">
            <speech/>
        </speeches>
        <speeches id="5">
            <speech>No, créeme, ¡soy la verdadera oficial Jenny!</speech>
            <speech>[AMARILLO]*Un Arcanine en mi equipo vería instantáneamente a través de esta charada.*[]</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>[ORANGE]¡No, confía en mí, soy la verdadera Oficial Jenny! Mi placa brilla con el orgullo de Pacifidlog.[]</speech>
            <speech>[No, créeme, ¡soy la verdadera oficial Jenny! Mira, mi uniforme está perfectamente planchado.[]</speech>
            <speech>[ORANGE]¡No, escucha, yo encarno la ley en Pacifidlog! Sólo yo conozco los caminos secretos del mar.[]</speech>
            <speech>[ROJO]¡No, soy yo, la verdadera Oficial Jenny! Yo... eh, también sé cosas sobre el mar... sí.[]</speech>
            <speech>[ORANGE]No, es innegable, ¡soy la verdadera Oficial Jenny! Puedo contar cada detalle de la historia de nuestra ciudad.[]</speech>
            <speech>[No, insisto, ¡soy la verdadera oficial Jenny! Pregúntame cualquier cosa sobre la ciudad, bueno, casi cualquier cosa.[]</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Antoine" randomRotation="true" sprite="11" x="24" y="20">
        <speech>Presta atención a mis palabras y acércate a la Cueva del Banco con respeto y precaución. El viaje puede ser peligroso, pero la recompensa merece la pena.</speech>
        <speech>Que tu valor te guíe a través de las sombras y te conduzca a la grandeza.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Sneasel" shouldSleep="" speed="1" sprite="215" type="pokemon" x="9" y="7">
        <path>RIGHTx13,LEFTx13</path>
        <onCollisionSpeech gap="4">Sneasel!</onCollisionSpeech>
        <speech>¡Sneasel!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Spheal" shouldSleep="" speed="1" sprite="363" type="pokemon" x="14" y="14">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4">Spheal!</onCollisionSpeech>
        <speech>¡Spheal!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Spheal" shouldSleep="" speed="1" sprite="363" type="pokemon" x="13" y="25">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Spheal!</onCollisionSpeech>
        <speech>¡Spheal!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Sealeo" shouldSleep="" speed="1" sprite="364" type="pokemon" x="39" y="29">
        <path>UPx5,DOWNx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Zubat" speed="1" sprite="41" type="pokemon" x="32" y="13">
        <path>RIGHTx10,DOWNx9,UPx8,LEFTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Golbat" speed="1" sprite="42" type="pokemon" x="36" y="3">
        <path>LEFTx19,RIGHTx19</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Avalugg" shouldSleep="" speed="1" sprite="713" type="pokemon" x="13" y="31">
        <path>LEFTx7,RIGHTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Abomasnow" shouldSleep="" speed="1" sprite="460" type="pokemon" x="4" y="21">
        <path>UPx11,DOWNx11</path>
        <onCollisionSpeech gap="4">Abomasnow!</onCollisionSpeech>
        <speech>¡Abomasnow!</speech>
    </movingNpc>
</npcs>