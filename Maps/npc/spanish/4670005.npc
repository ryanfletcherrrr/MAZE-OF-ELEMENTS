<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Ah! ¡$PLAYER_NAME! ¡Apuesto a que debes estar sorprendido de verme en un lugar como este!</speech>
            <speech>Esa promesa que hicimos entonces</speech>
            <speech>Gracias por cumplir tu parte. Gracias a ti he podido llegar hasta aquí, $PLAYER_NAME.</speech>
            <speech>Sólo porque perdí contra ti entonces pude hacerme aún más fuerte.</speech>
            <speech>Estoy seguro de que tú y tus Pokémon también habréis tenido que superar muchas cosas...</speech>
            <speech>Para llegar hasta aquí. ¿Verdad, $PLAYER_NAME? Todos han crecido tanto y ahora veremos lo que todos podemos hacer.</speech>
            <speech>Estar aquí frente a ti otra vez me da escalofríos ¡Pero no me rendiré! No perderé más.</speech>
            <speech>Mis Pokémon me han dado el valor y la fuerza para luchar.</speech>
            <speech>¡Tengo que ganar por su bien! Así que prepárate, ¡allá voy!</speech>
        </speeches>
        <speeches id="2">
            <speech>... ¡¡¡Arghhh!!! ... ... Hah. $PLAYER_NAME, tú Y tu Pokémon, también.</speech>
            <speech>Gracias por no contenerte cuando luchaste contra nosotros...</speech>
            <speech>Por no contenerte cuando nos venciste Y Gallade a todos.</speech>
            <speech>Muchas gracias, ¡siento que he podido dar otro paso adelante gracias a ti!</speech>
            <speech>¡Oh! ¡Lo sé! Te daré esto para que lo guardes.</speech>
            <speech>Espero que siempre te recuerde tu batalla conmigo y con Gallade y el resto de mi equipo.</speech>
            <speech>Si tienes un Kirlia macho como uno de tus compañeros, $PLAYER_NAME, espero que puedas usar esa Piedra del Alba en él para mí.</speech>
            <speech>No pude vencerte esta vez, $PLAYER_NAME. Pero me quedaré aquí y seguiré entrenando.</speech>
            <speech>Y un día ¡Cuidado! ¡Juro que algún día te alcanzaré!</speech>
            <speech>¡Cuando lo haga, prométeme que volveremos a luchar! ¡Es una promesa que pienso cumplir!</speech>
        </speeches>
        <speeches id="3">
            <speech>... ¡¡¡Arghhh!!! ... ... Hah. $PLAYER_NAME, tú Y tu Pokémon, también.</speech>
            <speech>Gracias por no contenerte cuando luchaste contra nosotros...</speech>
            <speech>Por no contenerte cuando nos venciste Y Gallade a todos.</speech>
            <speech>Muchas gracias, ¡siento que he podido dar otro paso adelante gracias a ti!</speech>
            <speech>¡Oh! ¡Lo sé! Te daré esto para que lo guardes.</speech>
            <speech>Espero que siempre te recuerde tu batalla conmigo y con Gallade y el resto de mi equipo.</speech>
            <speech>Si tienes un Kirlia macho como uno de tus compañeros, $PLAYER_NAME, espero que puedas usar esa Piedra del Alba en él para mí.</speech>
            <speech>No pude vencerte esta vez, $PLAYER_NAME. Pero me quedaré aquí y seguiré entrenando.</speech>
            <speech>Y un día ¡Cuidado! ¡Juro que algún día te alcanzaré!</speech>
            <speech>¡Cuando lo haga, prométeme que volveremos a luchar! ¡Es una promesa que pienso cumplir!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eres débil pero te dejaré intentarlo de nuevo $PLAYER_NAME.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>¡Hola, $PLAYER_NAME! Es increíble ver cuánto hemos crecido los dos desde nuestras aventuras.</speech>
            <speech>He estado entrenando con Mega Swampert, con el objetivo de alcanzar nuevas cotas.</speech>
            <speech>¿Qué te parece si probamos nuestros puntos fuertes? Estoy impaciente por ver cómo somos ahora.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Vaya, eso ha sido intenso! Realmente eres tan fuerte como siempre, $PLAYER_NAME.</speech>
            <speech>Pero no me rendiré. Seguiré entrenando y la próxima vez estaré preparado para ti.</speech>
        </speeches>
        <speeches id="3">
            <speech>Mega Swampert y yo necesitamos refinar nuestras tácticas un poco más.</speech>
            <speech>Tomémonos $DURACIÓN para entrenar. Lo prometo, ¡seremos un reto más duro entonces!</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que aún nos queda mucho para alcanzarte, $NOMBRE_JUGADOR.</speech>
            <speech>Pero no penséis que esto se ha acabado. Entrenaremos más duro y volveremos más fuertes.</speech>
        </speeches>
        <speeches id="5">
            <speech>Sólo comprobando antes de empezar... Estás listo para un desafío, ¿verdad?</speech>
            <speech>¡Me he estado preparando para esta batalla, con el objetivo de superar mis límites!</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="1" name="Jenna" randomRotation="true" sprite="33" x="34" y="9">
        <speech>Yo, soy Jenna.</speech>
        <speech>Victory Road no es para los débiles de corazón, pero a los entrenadores nos encanta la adrenalina de luchar contra Pokémon duros.</speech>
        <speech>Es como un rito de iniciación, ¿sabes? Estoy impaciente por ver a qué se enfrentan los demás aspirantes.</speech>
    </npc>
    <movingNpc direction="DOWN" id="2" name="Seaking" speed="1" sprite="119" type="pokemon" x="3" y="14">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>¡Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Seaking!" speed="1" sprite="119" type="pokemon" x="1" y="15">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>¡Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Lumineon" speed="1" sprite="457" type="pokemon" x="4" y="29">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Lumineon!</onCollisionSpeech>
        <speech>¡Lumineon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="5" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="4" y="45">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="1" y="47">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="4" y="48">
        <path>RIGHTx14,LEFTx14</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="38" y="36">
        <path>RIGHTx16,LEFTx16</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>¡Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Sharpedo" speed="1" sprite="319" type="pokemon" x="27" y="31">
        <path>DOWNx10,UPx10</path>
        <onCollisionSpeech gap="4">Sharpedo!</onCollisionSpeech>
        <speech>¡Sharpedo!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="49" y="50">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="50" y="50">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="51" y="48">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="48" y="48">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Luvdisc" speed="1" sprite="370" type="pokemon" x="49" y="47">
        <path>UPx10,DOWNx10</path>
        <onCollisionSpeech gap="4">Luvdisc!</onCollisionSpeech>
        <speech>Luvdisc</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Altaria" speed="1" sprite="334" type="pokemon" x="47" y="62">
        <path>LEFTx7,RIGHTx7,UPx9,DOWNx9</path>
        <onCollisionSpeech gap="4">Altaria!</onCollisionSpeech>
        <speech>¡Altaria!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="16" name="Altaria" speed="1" sprite="334" type="pokemon" x="19" y="54">
        <path>UPx5,RIGHTx3,LEFTx3,DOWNx5</path>
        <onCollisionSpeech gap="4">Altaria!</onCollisionSpeech>
        <speech>¡Altaria!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="17" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="19" y="62">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Torkoal!</onCollisionSpeech>
        <speech>¡Torkoal!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="18" name="Lairon" speed="1" sprite="305" type="pokemon" x="38" y="47">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">Lairon!</onCollisionSpeech>
        <speech>¡Lairon!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="19" name="Rhyhorn" speed="1" sprite="111" type="pokemon" x="38" y="52">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Rhyhorn!</onCollisionSpeech>
        <speech>¡Rhyhorn!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="20" name="Pelipper" speed="1" sprite="279" type="pokemon" x="30" y="3">
        <path>RIGHTx8,UPx1,LEFTx8,DOWNx1</path>
        <onCollisionSpeech gap="4">Pelipper!</onCollisionSpeech>
        <speech>¡Pelipper!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="21" name="Seaking" speed="1" sprite="119" type="pokemon" x="58" y="18">
        <path>LEFTx5,UPx6,DOWNx6,RIGHTx5</path>
        <onCollisionSpeech gap="4">Seaking!</onCollisionSpeech>
        <speech>¡Seaking!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="22" name="Sableye" shouldSleep="" speed="1" sprite="302" type="pokemon" x="45" y="17">
        <path>UPx2,LEFTx2,DOWNx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Sableye!</onCollisionSpeech>
        <speech>¡Sableye!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="23" name="Mawile" shouldSleep="" speed="1" sprite="303" type="pokemon" x="18" y="36">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Mawile!</onCollisionSpeech>
        <speech>¡Mawile!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="24" name="Skarmory" speed="1" sprite="227" type="pokemon" x="6" y="6">
        <path>RIGHTx8,UPx4,LEFTx8,DOWNx4</path>
        <onCollisionSpeech gap="4">Skarmory!</onCollisionSpeech>
        <speech>¡Skarmory!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="25" name="Golem" shouldSleep="" speed="1" sprite="76" type="pokemon" x="15" y="15">
        <path>UPx4,DOWNx4</path>
        <onCollisionSpeech gap="4">Golem!</onCollisionSpeech>
        <speech>¡Golem!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="26" name="Mawile" shouldSleep="" speed="1" sprite="303" type="pokemon" x="23" y="24">
        <path>RIGHTx6,LEFTx6</path>
        <onCollisionSpeech gap="4">Mawile!</onCollisionSpeech>
        <speech>¡Mawile!</speech>
    </movingNpc>
</npcs>