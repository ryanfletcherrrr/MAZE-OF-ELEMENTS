<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Prepárate! Soy Victor de la familia Winstrate. ¡Vamos a ver lo que tienes!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Impresionante! Me has superado, ¡pero veamos cómo te va contra el resto de los Winstrates!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahora no, estoy entrenando. ¡Vuelve en $DURATION para otro desafío!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! ¡Victoria para la familia Winstrate! ¡Ese es el resultado de nuestro riguroso entrenamiento!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Soy Victoria, y no seré indulgente contigo sólo porque venciste a Víctor!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Bien hecho! Tienes mucho espíritu. Pero, ¿puedes mantener el impulso contra el resto de nosotros?</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito reagruparme. ¡Vuelve en $DURATION para otra oportunidad de victoria!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Una victoria para mí! Esa es la fuerza de la familia Winstrate. ¡Más suerte la próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hola, soy Vivi. ¿Crees que puedes seguirme el ritmo? Averigüémoslo.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Vaya, eres muy bueno! Me has ganado, ¡pero aún queda un reto más!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ahora estoy un poco cansado. ¡Vuelvan en $DURATION para otra emocionante batalla!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sí, he ganado! ¡Estuviste genial, pero no lo suficiente para un Winstrate!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Soy Vicky, la matriarca de la familia Winstrate. ¡Veamos si puedes manejar mi experiencia!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Bueno, lo seré! Tienes mucho talento. Pero recuerda, ¡la experiencia siempre cuenta en una batalla!</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito un poco de descanso. Vuelve en $DURATION, ¡y te mostraré el poder de la experiencia!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡La victoria es mía! La edad y la sabiduría triunfan una vez más. ¡Aprenderás mucho de esto!</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>Hola a todos. Soy Vito, de la familia Winstrate.</speech>
            <speech>He oído hablar de su triunfo sobre la Elite Four. He logrado la misma hazaña.</speech>
            <speech>Veamos cómo nos enfrentamos en una batalla de campeones.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Impresionante! Tus habilidades son tan grandes como dicen.</speech>
            <speech>Es un honor luchar con otro conquistador de Elite Four.</speech>
        </speeches>
        <speeches id="3">
            <speech>Siempre busco mejorar.</speech>
            <speech>Tengamos una revancha en $DURACIÓN. ¡Estoy ansioso por ver cómo crecemos los dos!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Fue una batalla intensa! Como era de esperar de un compañero ganador de Elite Four.</speech>
            <speech>¡Hagámoslo de nuevo alguna vez!</speech>
        </speeches>
    </conversation>
</npcs>