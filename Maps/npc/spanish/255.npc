<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Batallar es como elegir el atuendo perfecto: ¡el estilo y la estrategia importan! ¡Veamos si tu equipo está a la última!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oh, no! Parece que mi equipo es tan última temporada ..</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Oh, no! Parece que mi equipo es tan última temporada ..</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Impecable! ¡Igual que un atuendo perfectamente planeado!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Ugh, la Ruta 8 es tan polvorienta. ¡Supongo que una batalla rápida podría hacer las cosas más emocionantes!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Uf! ¡Perder es aún más molesto que este calor!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Uf! ¡Perder es aún más molesto que este calor!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Tranquilo! Probablemente deberías refrescar tu estrategia, ¿sabes?</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Mis cálculos predicen un 99% de posibilidades de que gane esta batalla. ¡Hagamos la prueba y confirmemos los datos!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Espera, esto no estaba en la ecuación! ¿He calculado mal? ¿O es que tu estrategia es así de buena?</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Espera, esto no estaba en la ecuación! ¿He calculado mal? ¿O es que tu estrategia es así de buena?</speech>
        </speeches>
        <speeches id="4">
            <speech>Tal y como predije en mi investigación. Las batallas Pokémon son toda una ciencia.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Tienes agallas, caminando hacia mí de esa manera. Pero las agallas no son suficientes para ganar una batalla, ¡veamos si tienes las habilidades!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que esta vez me desmayé. ¡No dejes que se te suba a la cabeza!</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que esta vez me desmayé. ¡No dejes que se te suba a la cabeza!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eso es lo que pasa cuando te metes con un auténtico guerrero de la carretera.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ah juventud. Tan llena de energía y ambición. Veamos si puedes seguir el ritmo de la experiencia.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hoho Puede que la edad me frene, pero la sabiduría es siempre mi mayor fortaleza.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hoho Puede que la edad me frene, pero la sabiduría es siempre mi mayor fortaleza.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo ves? La mano firme y la paciencia siempre llevan a la victoria al final.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Eh, eh! ¿Quieres luchar? ¡Prometo que será super divertido! ¡Vamos, vamos!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡No es justo! ¡Pero aún así fue muy divertido!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡No es justo! ¡Pero aún así fue muy divertido!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Sí, sí, sí! Ganar es la mejor sensación del mundo.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Mis Pokémon son tan monos! Pero que su aspecto no te engañe, ¡también son duros!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Oh, no, mi pobre Pokémon! ¡La próxima vez entrenaremos más duro!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Oh, no, mi pobre Pokémon! ¡La próxima vez entrenaremos más duro!</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? Los Pokémon bonitos también pueden ser fuertes.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¿No estarás interesado en las curiosidades de Pokémon? ¿No? Bueno, ¡entonces luchemos!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Maldita sea! Estaba tan concentrado en explicar las habilidades ocultas que me olvidé de la estrategia.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Maldita sea! Estaba tan concentrado en explicar las habilidades ocultas que me olvidé de la estrategia.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eh! Quizá debería darte una clase sobre las interacciones entre tipos de Pokémon. Es fascinante, de verdad.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Fearow" shouldSleep="" speed="1" sprite="22" type="pokemon" x="21" y="3">
        <path>RIGHTx10,LEFTx10</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Jiggly" shouldSleep="" speed="1" sprite="39" type="pokemon" x="48" y="10">
        <path>DOWNx3,RIGHTx1,UPx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Nidoran" shouldSleep="" speed="1" sprite="29" type="pokemon" x="53" y="20">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>