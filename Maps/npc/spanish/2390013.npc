<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>El Equipo Rocket siempre consigue lo que quiere.</speech>
        </speeches>
        <speeches id="2">
            <speech>Urgh... Al jefe no le va a gustar esto...</speech>
        </speeches>
        <speeches id="3">
            <speech>Urgh... Al jefe no le va a gustar esto...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Más suerte la próxima vez, perdedor!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Te estás metiendo en problemas, chico!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Tuviste suerte esta vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Tuviste suerte esta vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! El Equipo Rocket siempre gana al final.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Nadie se cruza con el Equipo Rocket y se sale con la suya!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... ¡Esto no ha terminado!</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... ¡Esto no ha terminado!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Buen intento, pero nunca iba a suceder!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Ja! ¿Otro niño que cree que puede meterse con el Team Rocket?</speech>
        </speeches>
        <speeches id="2">
            <speech>Tch... Tal vez eres más fuerte de lo que pensaba.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tch... Tal vez eres más fuerte de lo que pensaba.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Patético! ¿De verdad creías que tenías alguna posibilidad?</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Te estás metiendo en problemas, chico!</speech>
        </speeches>
        <speeches id="2">
            <speech>Ugh... Tuviste suerte esta vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Ugh... Tuviste suerte esta vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! El Equipo Rocket siempre gana al final.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>{COLOR=AMARILLO}Por favor, seleccione una planta.{ENDCOLOR}</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=VERDE}La consola del ascensor se cierra sola con un suave clic.{ENDCOLOR}</speech>
            <speech>Tendrás que activarlo de nuevo si deseas utilizarlo.</speech>
        </speeches>
        <speeches id="3">
            <speech>{COLOR=RED}El ascensor se niega a moverse-parece requerir una llave especial.{ENDCOLOR}</speech>
            <speech>Tal vez un Rocket Grunt cercano tenga lo que necesitas...</speech>
        </speeches>
    </conversation>
    <npc direction="UP" hidden="false" id="1" name="Eric" randomRotation="true" sprite="49" x="13" y="14">
        <speech>Ugh... Estoy atrapado aquí pagando mi deuda de juego.</speech>
        <speech>Intenté enfrentarme a esos matones de Rocket, pero son demasiado fuertes para mí.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="2" name="Joshua" speed="1" sprite="101" type="npc" x="23" y="31">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>Ten cuidado por aquí, chico.</speech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="3" name="Porygon" speed="1" sprite="137" type="pokemon" x="2" y="25">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4">porrryyy!</onCollisionSpeech>
    </movingNpc>
</npcs>