<npcs>
    <npc direction="DOWN" hidden="false" id="1" name="Selina" randomRotation="true" sprite="12" x="26" y="16">
        <speech>Si los entrenadores dejaran de enviar a sus pobres Pokémon a la batalla, no necesitaríamos este tipo de lugares.</speech>
        <speech>Me pregunto cómo darían nueva vida a este tipo de edificios aunque....</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="2" name="Joy" randomRotation="false" sprite="3" x="1" y="15">
        <speech>¡Hola!</speech>
        <speech>Lo siento, pero estoy en mi descanso.</speech>
        <speech>¿Podrías dejarme en paz, por favor?</speech>
        <speech>Hasta la enfermera Joys necesita un descanso.</speech>
        <speech>Muchas gracias.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Camila" randomRotation="false" sprite="27" x="11" y="4">
        <speech>Confía en tus amigos y ellos tendrán motivos para confiar en ti.</speech>
    </npc>
</npcs>