<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>La oscuridad de las cuevas no molesta a mis bichos ¡Prosperan en las sombras!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tal vez necesitan más luz solar después de todo ..</speech>
        </speeches>
        <speeches id="3">
            <speech>Tal vez necesitan más luz solar después de todo ..</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo ves? Incluso en las cuevas más profundas, los bichos siempre encuentran la forma de meterse por encima.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Soy una principiante, ¡pero lo haré lo mejor que pueda! Daré todo lo que pueda. ¡Mírame!</speech>
        </speeches>
        <speeches id="2">
            <speech>Perdona si te he aburrido. Me esforzaré más la próxima vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Perdona si te he aburrido. Me esforzaré más la próxima vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Oh! ¡Olvidé terminar nuestra batalla! Todavía tengo que estudiar más...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Jejeje ¡No tienes ninguna posibilidad! ¡Mis cálculos garantizan la victoria!</speech>
        </speeches>
        <speeches id="2">
            <speech>Error ERROR ¡Esto no estaba en mi simulación!</speech>
        </speeches>
        <speeches id="3">
            <speech>Error ERROR ¡Esto no estaba en mi simulación!</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? ¡El conocimiento es poder! ¡Mi estrategia fue impecable!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Las minifaldas son increíbles, ¿verdad?</speech>
        </speeches>
        <speeches id="2">
            <speech>Hay que disfrutar de una moda mientras se pueda, ¿no?</speech>
        </speeches>
        <speeches id="3">
            <speech>Hay que disfrutar de una moda mientras se pueda, ¿no?</speech>
        </speeches>
        <speeches id="4">
            <speech>Son fáciles de llevar y monos. Cualquier cosa menos una minifalda sería increíble, ¿verdad?</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¿Las cuevas son oscuras y dan miedo? No. Sólo son un patio de recreo gigante para entrenadores duros como yo.</speech>
        </speeches>
        <speeches id="2">
            <speech>Tal vez debería haber traído una linterna y Pokémon más fuertes.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tal vez debería haber traído una linterna y Pokémon más fuertes.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Jajaja! Supongo que soy el rey de la cueva. ¡Mejor suerte la próxima vez!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Montañas, cuevas y duras batallas, ¡eso es lo que yo llamo una verdadera aventura!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que tengo que entrenar más duro... ¡como subir un sendero empinado!</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que tengo que entrenar más duro... ¡como subir un sendero empinado!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! La resistencia gana la batalla. Igual que en el senderismo, despacio y con constancia se llega a la cima.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Geodude" speed="1" sprite="74" type="pokemon" x="6" y="47">
        <path>LEFTx2,RIGHTx2</path>
        <onCollisionSpeech gap="4">Geoooo!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="2" name="Roggenrola" speed="1" sprite="524" type="pokemon" x="40" y="39">
        <path>RIGHTx2,LEFTx2</path>
        <onCollisionSpeech gap="4">roggg-roll!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Geodude" speed="1" sprite="74" type="pokemon" x="57" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4">Geooooo!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="4" name="Paras" speed="1" sprite="46" type="pokemon" x="19" y="16">
        <path>UPx2,DOWNx2</path>
        <onCollisionSpeech gap="4">Parr!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="5" name="Cubone" speed="1" sprite="104" type="pokemon" x="10" y="12">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Cuuuuu!</onCollisionSpeech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="6" name="Bella" randomRotation="true" sprite="12" x="44" y="19">
        <speech>¡¡¡Oh dios mío Clefairy es taaaan mono!!!</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Clefairy" speed="1" sprite="35" type="pokemon" x="32" y="21">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Clefaiiirry!</onCollisionSpeech>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="8" name="Sarah" randomRotation="false" sprite="53" x="62" y="45">
        <speech>Roggenrola es muy raro de encontrar.</speech>
        <speech>Se parecen mucho a una roca normal.</speech>
    </npc>
</npcs>