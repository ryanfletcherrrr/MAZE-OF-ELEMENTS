<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Esperaba disfrutar de un agradable picnic al aire libre, pero me perdí en esta cueva ¡Podría también batallar para pasar el rato!</speech>
        </speeches>
        <speeches id="2">
            <speech>Bueno, eso no salió según lo planeado, al igual que mi picnic.</speech>
        </speeches>
        <speeches id="3">
            <speech>Bueno, eso no salió según lo planeado, al igual que mi picnic.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo ves? Incluso en una cueva oscura, ¡un poco de diversión y una buena batalla pueden animar el ambiente!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¿Crees que puedes pasear por el Túnel de la Roca? ¡Sin fuerza, no llegarás lejos!</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... Tal vez eres más duro de lo que pareces. Sigue escalando.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... Tal vez eres más duro de lo que pareces. Sigue escalando.</speech>
        </speeches>
        <speeches id="4">
            <speech>Justo lo que pensaba. La fuerza no es sólo músculo, es resistencia.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Esta cueva esconde secretos ancestrales, pero ahora me interesa más poner a prueba tus habilidades de combate.</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que tengo que profundizar en mi formación...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que tengo que profundizar en mi formación...</speech>
        </speeches>
        <speeches id="4">
            <speech>Otro descubrimiento. La estrategia y el conocimiento son tan importantes como la fuerza bruta.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Las sombras susurran tu llegada. Veamos si tienes lo que hay que tener para caminar entre ellas.</speech>
        </speeches>
        <speeches id="2">
            <speech>La oscuridad se desvanece, pero sólo por ahora. Siempre vuelve.</speech>
        </speeches>
        <speeches id="3">
            <speech>La oscuridad se desvanece, pero sólo por ahora. Siempre vuelve.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo sientes? ¿El peso de lo desconocido te presiona? Abrázalo o piérdete en él.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ahh, ¡nada como el aire fresco de una cueva y una buena batalla! Tomémoslo con calma.</speech>
        </speeches>
        <speeches id="2">
            <speech>Bueno, eso fue un deslizamiento de tierra. Supongo que me sentaré aquí y disfrutaré de la brisa del túnel.</speech>
        </speeches>
        <speeches id="3">
            <speech>Bueno, eso fue un deslizamiento de tierra. Supongo que me sentaré aquí y disfrutaré de la brisa del túnel.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? No hay necesidad de apresurarse ¡La fuerza viene de la paciencia y de una base sólida!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Creo que voy en la dirección correcta. Pero oye, ¡una batalla suena más divertido que comprobar mi mapa!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tal vez perder y perderse no sea mi mejor combinación.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tal vez perder y perderse no sea mi mejor combinación.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? A veces, salirse del camino trillado conduce al éxito.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡Jajaja! El Túnel de Roca es mi campo de entrenamiento, ¡y tú sólo eres otra roca que aplastar!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡¿Qué?! ¡No puede ser! ¡Se suponía que iba a ser mi victoria aplastante!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Qué?! ¡No puede ser! ¡Se suponía que iba a ser mi victoria aplastante!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Así se hace! ¡Potencia, confianza y un poco de griterío nunca vienen mal!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Una cueva oscura y húmeda no es precisamente glamurosa, pero nunca pierdo la elegancia. ¿Luchamos?</speech>
        </speeches>
        <speeches id="2">
            <speech>Uf, ahora estoy hecho polvo y no sólo mi orgullo.</speech>
        </speeches>
        <speeches id="3">
            <speech>Uf, ahora estoy hecho polvo y no sólo mi orgullo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Gracia y poder la verdadera belleza brilla no importa donde estés!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="RIGHT" id="1" name="Zubat" speed="1" sprite="41" type="pokemon" x="29" y="53">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Zuuubaat!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="ONIX" speed="1" sprite="95" type="pokemon" x="56" y="36">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Oniiiiix!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="LEFT" id="3" name="Emma" speed="1" sprite="31" type="npc" x="45" y="33">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>No sé muy bien por qué, pero mi Nacli tiene un aspecto diferente a los demás que he encontrado y brilla cuando sale de su Poké Ball.</speech>
        <speech>¿Debería liberarlo?</speech>
    </movingNpc>
    <npc direction="UP" hidden="false" id="4" name="Jasper" randomRotation="true" sprite="39" x="16" y="16">
        <speech>En mis tiempos, ¡teníamos que gastar una ranura HM sólo para usar Flash!</speech>
        <speech>Si sigues haciendo eso, muchacho, ¡más vale que te revisen la vista!</speech>
    </npc>
</npcs>