<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Mi Heracross y yo somos un dúo imparable! ¿Crees que podrás con nosotros?</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que Heracross y yo tenemos que entrenar más duro...</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que Heracross y yo tenemos que entrenar más duro...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te lo dije! ¡Heracross siempre lidera la carga!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Una buena captura requiere paciencia, pero ¿una victoria? ¡Eso es todo habilidad!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que se me escapó. Mejor suerte la próxima vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>Supongo que se me escapó. Mejor suerte la próxima vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! Como en la pesca, si esperas lo suficiente, las grandes victorias vendrán a ti.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>La verdadera fuerza no es sólo potencia. Se trata de control, estrategia y precisión.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... Calculé mal. Pero confía en mí, esto no volverá a suceder.</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... Calculé mal. Pero confía en mí, esto no volverá a suceder.</speech>
        </speeches>
        <speeches id="4">
            <speech>Gracia, habilidad y potencia. Eso es lo que separa a un as del resto. Sigue entrenando; ¡algún día lo conseguirás!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Fuerza, estrategia y habilidad: sólo los entrenadores que reúnen las tres cualidades pueden considerarse de élite. Veamos si estás a la altura.</speech>
        </speeches>
        <speeches id="2">
            <speech>Hmph... no cometeré el mismo error dos veces. ¡La próxima vez, no tendrás tanta suerte!</speech>
        </speeches>
        <speeches id="3">
            <speech>Hmph... no cometeré el mismo error dos veces. ¡La próxima vez, no tendrás tanta suerte!</speech>
        </speeches>
        <speeches id="4">
            <speech>Como era de esperar. La experiencia y la formación marcan la diferencia Aún te queda mucho camino por recorrer.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Puede que la Ruta 6 no sea tan salvaje como el bosque, ¡pero mis bichos siguen dispuestos a arrastrarse por ti!</speech>
        </speeches>
        <speeches id="2">
            <speech>Bueno, eso no salió según lo planeado... ¡Tendré que atrapar bichos aún más fuertes!</speech>
        </speeches>
        <speeches id="3">
            <speech>Bueno, eso no salió según lo planeado... ¡Tendré que cazar bichos aún más fuertes!</speech>
        </speeches>
        <speeches id="4">
            <speech>Jajaja. ¡Parece que mis bichos son los que se arrastran hacia la victoria hoy!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="LEFT" id="1" name="Oddish" shouldSleep="" speed="1" sprite="43" type="pokemon" x="15" y="49">
        <path>LEFTx5,RIGHTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="LEFT" hidden="false" id="2" name="Betty" randomRotation="false" sprite="6" x="25" y="24">
        <speech>¡Lo juro, la Ruta 6 tiene las bayas más jugosas! Si mi cesta no fuera tan pequeña...</speech>
    </npc>
    <movingNpc direction="DOWN" id="3" name="Pidgey" shouldSleep="" speed="1" sprite="16" type="pokemon" x="11" y="12">
        <path>DOWNx3,RIGHTx5,UPx3,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="4" name="Timmy" randomRotation="true" sprite="2" x="23" y="11">
        <speech>Un día lucharé. Hoy no es ese día.</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Meowth" shouldSleep="" speed="1" sprite="52" type="pokemon" x="31" y="10">
        <path>DOWNx6,RIGHTx2,LEFTx2,UPx6</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>