<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Les daré una batalla digna de un alumno de la escuela de batalla!</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Dónde estudias? Yo también quiero estudiar allí.</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Dónde estudias? Yo también quiero estudiar allí.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Ahora entiendes la capacidad de alguien que está a la cabeza de la clase?</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Este es el paraíso de la batalla. Sólo los fuertes sobreviven aquí...</speech>
        </speeches>
        <speeches id="2">
            <speech>Una vez que se ha llegado tan lejos, la victoria y la derrota carecen de sentido.</speech>
        </speeches>
        <speeches id="3">
            <speech>Una vez que se ha llegado tan lejos, la victoria y la derrota carecen de sentido.</speech>
        </speeches>
        <speeches id="4">
            <speech>Mientras haya Formadores, el banquete continuará por toda la eternidad.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Uf...</speech>
            <speech>¡Estuvo muy cerca!</speech>
            <speech>Gracias a ti, no me robó estos papeles tan importantes.</speech>
            <speech>Lo sé, te daré esta Ultra Ball para agradecértelo.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿No dijo ese matón del Equipo Magma que también iban tras algo en Rustboro?</speech>
            <speech>¡Uh-Oh! ¡Es una crisis! ¡No puedo perder el tiempo!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Iba a tenderte una emboscada, pero tuviste que perderte en el bosque de Petalburg para siempre, ¿no?.</speech>
            <speech>Me harté de esperar, así que aquí estoy.</speech>
            <speech>¡Tú! ¡Investigador de Devon!</speech>
            <speech>¡Entrega esos papeles!</speech>
            <speech>¿Quién eres, niñito? ¿Vas a protegerle?</speech>
            <speech>Nadie que se cruce con el Equipo Magma tiene piedad, ¡ni siquiera un niño!</speech>
            <speech>¡Vamos, lucha conmigo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Grrr... ¡Tienes los nervios de punta metiéndote con el Equipo Magma!</speech>
            <speech>Habría vuelto a luchar contigo, pero no me quedan Pokémon.</speech>
            <speech>Y, oye, los del Equipo Magma también buscamos algo en Rustboro.</speech>
            <speech>Te dejaré ir hoy.</speech>
        </speeches>
        <speeches id="3">
            <speech>Grrr... ¡Tienes los nervios de punta metiéndote con el Equipo Magma!</speech>
            <speech>Habría vuelto a luchar contigo, pero no me quedan Pokémon.</speech>
            <speech>Y, oye, los del Equipo Magma también buscamos algo en Rustboro.</speech>
            <speech>Te dejaré ir hoy.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ahora vete al agujero de donde saliste!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>...Este es el equipo de reconocimiento de Petalburg. Me temo que debo comenzar con una disculpa, Srta. Courtney...</speech>
            <speech>No son buenas noticias... No son buenas noticias... La misión es un no-go ...</speech>
            <speech>Algo surgió y se interpuso...</speech>
            <speech>...Entendido.</speech>
            <speech>... Lo tengo. Lo haré. Continuaré investigando esa energía que detectamos.</speech>
            <speech>... ... ¡Uf!</speech>
            <speech>Pero ese chico prometía como entrenador, diría yo.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="4" name="Marie Eve" shouldSleep="" speed="1" sprite="53" type="npc" x="37" y="43">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Colin!! where are you!? It's not fun!</onCollisionSpeech>
        <speech>Llevo un rato jugando al escondite con mi hermano pequeño.... Espero encontrarlo antes de que ocurra algo malo...</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Colin" randomRotation="true" sprite="24" x="31" y="5">
        <speech>¡¿Dónde estás hermana mayor?! Estoy perdido y hay un extraño pokemon al acecho.</speech>
    </npc>
    <movingNpc direction="DOWN" id="7" name="Silcoon" shouldSleep="" speed="1" sprite="266" type="pokemon" x="4" y="23">
        <path>LEFTx1,RIGHTx1</path>
        <onCollisionSpeech gap="4">Silcoon!</onCollisionSpeech>
        <speech>Silcoon espera que se produzca la evolución.</speech>
        <speech>La espera de la evolución es larga y dura.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Cascoon" shouldSleep="" speed="1" sprite="268" type="pokemon" x="6" y="12">
        <path>RIGHTx1,LEFTx1</path>
        <onCollisionSpeech gap="4">Cascoon!</onCollisionSpeech>
        <speech>Cascoon espera que se produzca la evolución.</speech>
        <speech>La espera de la evolución es larga y dura.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="1" name="Volbeat" speed="1" sprite="313" type="pokemon" x="32" y="31">
        <path>RIGHTx3,DOWNx3,LEFTx3,UPx3</path>
        <onCollisionSpeech gap="4">Volbeat beat beat.</onCollisionSpeech>
        <speech>Volbeat baila con Illumise.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Illumise" speed="1" sprite="314" type="pokemon" x="35" y="31">
        <path>LEFTx3,DOWNx3,RIGHTx3,UPx3</path>
        <onCollisionSpeech gap="4">Illumimise!!</onCollisionSpeech>
        <speech>Illumise baila con Volbeat.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Seedot" shouldSleep="" speed="1" sprite="273" type="pokemon" x="42" y="14">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4">See! dot dot dot.</onCollisionSpeech>
        <speech>Seedot intenta mantenerse alejado del sol.</speech>
    </movingNpc>
    <movingNpc direction="LEFT" id="6" name="Duskull" shouldSleep="" speed="1" sprite="355" type="pokemon" x="36" y="5">
        <path>LEFTx3,RIGHTx3</path>
        <onCollisionSpeech gap="4">Dussssssskull!</onCollisionSpeech>
        <speech>Duskull mira a Colin con interés. Ni siquiera le presta atención.</speech>
    </movingNpc>
</npcs>