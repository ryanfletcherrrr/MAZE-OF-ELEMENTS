<npc>
    <conversation canSkip="false" id="1">
        <speeches id="1">
            <speech>No intentes ser sigiloso. ¿Adónde crees que vas?</speech>
        </speeches>
        <speeches id="2">
            <speech>No pude detenerte .. Yo no pertenezco a la banda Sutta.</speech>
        </speeches>
        <speeches id="3">
            <speech>Vete, deja de hacerme sentir mal.</speech>
        </speeches>
        <speeches id="4">
            <speech>No vuelvas aquí nunca más.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>¿Qué haces aquí? ¿Sabes a quién te enfrentas ahora?</speech>
        </speeches>
        <speeches id="2">
            <speech>Te enfrentaste a un perdedor ..</speech>
        </speeches>
        <speeches id="3">
            <speech>¿Tienes pañuelos para que pueda secarme las lágrimas?</speech>
        </speeches>
        <speeches id="4">
            <speech>Te enfrentabas a un futuro campeón.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>¿Vas tras los dragones legendarios? Puedes intentarlo, pero luego no llores.</speech>
        </speeches>
        <speeches id="2">
            <speech>Cada vez, lloro.</speech>
        </speeches>
        <speeches id="3">
            <speech>Por favor, vete. Adiós, adiós.</speech>
        </speeches>
        <speeches id="4">
            <speech>Nunca sabes lo malo que eres hasta que lo intentas.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>Intruso... Argh, no puedo comer patatas fritas en paz.</speech>
        </speeches>
        <speeches id="2">
            <speech>Si y sólo si entrenaba durante las épocas en las que comía comida basura.</speech>
        </speeches>
        <speeches id="3">
            <speech>Si y sólo si entrenaba durante las épocas en las que comía comida basura.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Planeabas unirte a la pandilla sutta? No te mereces eso. Ahora déjame comer mis papas fritas.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
</npc>