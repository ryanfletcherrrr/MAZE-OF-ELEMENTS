<npcs>
    <conversation id="3">
        <speeches id="1">
            <speech>El gimnasio está bien cerrado.</speech>
            <speech>Es posible que se necesite una llave especial para abrirlo.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>El gimnasio está bien cerrado.</speech>
            <speech>Es posible que se necesite una llave especial para abrirlo.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Dr. Plasma" shouldSleep="" speed="1" sprite="8" type="npc" x="18" y="15">
        <path>DOWNx4,RIGHTx1,UPx4,LEFTx1</path>
        <onCollisionSpeech gap="4"/>
        <speech>Dicen que Mew fue clonado aquí... ¡¿pero y si te dijera que el verdadero experimento fue la propia isla?!</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="2" name="Diver Greg" randomRotation="true" sprite="93" x="39" y="14">
        <speech>En mis tiempos, solíamos nadar hasta las islas Seafoam río arriba.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="3" name="Celia" randomRotation="false" sprite="51" x="59" y="31">
        <speech>¡En directo desde la Isla Cinnabar, soy tu chica Celia! ¡Acaba de sobrevivir a una pequeña erupción otra vez! ¡Dale a seguir!</speech>
    </npc>
    <npc direction="UP" hidden="false" id="4" name="Gronk" randomRotation="false" sprite="110" x="59" y="33">
        <speech>Shhh...</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Joni" shouldSleep="" speed="1" sprite="95" type="npc" x="35" y="27">
        <path>RIGHTx5,UPx2,DOWNx2,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>¿Quieres oír cómo Blaine perdió sus cejas la primera vez?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Squirtle" shouldSleep="" speed="1" sprite="7" type="pokemon" x="40" y="22">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="30" y="2">
        <path>DOWNx6,RIGHTx3,UPx6,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Krabby" shouldSleep="" speed="1" sprite="98" type="pokemon" x="47" y="26">
        <path>DOWNx2,RIGHTx1,UPx2,RIGHTx1,LEFTx2</path>
        <onCollisionSpeech gap="4">"Kra-bby!"</onCollisionSpeech>
        <speech>¡Kra-bby!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Mr. Darius" shouldSleep="" speed="1" sprite="5" type="npc" x="26" y="45">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4"/>
        <speech>En mis tiempos, no disponíamos de sofisticados TM de buceo ni de sonares PokéGear. Simplemente aguantábamos la respiración y esperábamos lo mejor.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Ekans" shouldSleep="" speed="1" sprite="23" type="pokemon" x="39" y="45">
        <path>DOWNx1,RIGHTx2,UPx1,LEFTx2</path>
        <onCollisionSpeech gap="4">Ekaaans!</onCollisionSpeech>
        <speech>¡Ekaaans!</speech>
    </movingNpc>
    
    <conversation id="5">
        <speeches id="1">
            <speech>¡Aloha! Soy Ailana, una especialista en comportamiento de la región de {COLOR=CYAN}Alola{ENDCOLOR} que estudia la adaptación felina.</speech>
            <speech>En Alola, nuestros Meowth son muy diferentes: ¡son puros {COLOR=PURPLE}Dark{ENDCOLOR} con herencia real!</speech>
            <speech>La realeza alolana mimó tanto a Meowth que se volvió egoísta y desarrolló personalidades de tipo oscuro.</speech>
            <speech>Su oscura tipografía refleja su naturaleza astuta y egoísta tras generaciones de mimos reales.</speech>
            <speech>Si tienes un {COLOR=VERDE}Kanto Meowth{ENDCOLOR} que hayas capturado tú mismo, ¡me encantaría intercambiarte un {COLOR=CIAN}Alolan Meowth{ENDCOLOR}!</speech>
            <speech>Estoy recogiendo especímenes para estudiar cómo el entorno afecta al desarrollo de la personalidad en Pokémon.</speech>
        </speeches>

        <speeches id="2">
            <speech>¡Perfecto! Tienes un {COLOR=VERDE}Kanto Meowth{ENDCOLOR} que has atrapado tú mismo.</speech>
            <speech>¿Te gustaría cambiar tu {COLOR=VERDE}Kanto Meowth{ENDCOLOR} por mi {COLOR=CIAN}Alolan Meowth{ENDCOLOR}?</speech>
            <speech>Los Alolan tienen una actitud {COLOR=PURPLE}royal{ENDCOLOR} y una personalidad astuta.</speech>
        </speeches>

        <speeches id="3">
            <speech>No te preocupes. Meowth puede ser un compañero encantador.</speech>
            <speech>Estaré aquí estudiando el comportamiento felino cuando quieras.</speech>
        </speeches>

        <speeches id="4">
            <speech>{¡Maravilloso! ¡Otro espécimen para mi investigación del comportamiento!</speech>
            <speech>Déjame coger tu {COLOR=VERDE}Kanto Meowth{ENDCOLOR} y darte este regio {COLOR=CIAN}Alolan Meowth{ENDCOLOR}.</speech>
            <speech>Este Alolan Meowth ha desarrollado {COLOR=PURPLE}astucia de tipo oscuro{ENDCOLOR} gracias a generaciones de mimos reales.</speech>
            <speech>Se dará cuenta de su comportamiento orgulloso y algo egoísta, ¡todo un personaje!</speech>
            <speech>Estoy estudiando cómo el entorno determina el comportamiento de los Pokémon, así que si encuentras más {COLOR=VERDE}Kanto Meowth{ENDCOLOR}, ¡por favor, tráelos!</speech>
            <speech>Cada intercambio ayuda a mi {COLOR=BLUE}investigación sobre el comportamiento{ENDCOLOR} y te regala otro {COLOR=CYAN}Alolan Meowth{ENDCOLOR}.</speech>
        </speeches>
    </conversation>
</npcs>