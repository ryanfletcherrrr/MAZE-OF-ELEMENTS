<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Debería hablar con el profesor Oak antes de seguir adelante.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>¡Detente ahí, joven entrenador! La situación en Kanto se ha vuelto cada vez más inestable.</speech>
        </speeches>
        <speeches id="2">
            <speech>Estamos asistiendo a cambios sin precedentes en el comportamiento de los Pokémon y sus hábitats naturales están cambiando de forma inesperada.</speech>
            <speech>Como prometedor entrenador, necesito urgentemente su ayuda para investigar estas perturbaciones.</speech>
            <speech>Por favor, ven y elige uno de estos Pokémon de la mesa. Están preparados para enfrentarse a estos insólitos desafíos contigo.</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="5">
        <speeches id="1">
            <speech>¡Espera! ¡$PLAYER_NAME! ¡Vamos a ver a nuestros Pokémon! ¡Vamos, te llevaré!</speech>
        </speeches>
        <speeches id="2">
            <speech>¿QUÉ? ¡Increíble! ¡Me he equivocado de Pokémon!</speech>
            <speech>¡Vale! ¡Haré que mi Pokémon luche para endurecerlo! ¡$PLAYER_NAME! ¡Abuelo! ¡Te oleré luego!</speech>
        </speeches>
        <speeches id="3"/>
        <speeches id="4">
            <speech>¡Sí! ¿Soy genial o qué?</speech>
            <speech>¡Vale! ¡Haré que mi Pokémon luche para endurecerlo! ¡$PLAYER_NAME! ¡Abuelo! ¡Te oleré luego!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Debería ayudar al profesor antes de irme de la ciudad.</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¿Listo para volver a {COLOR=CYAN}Lilycove{ENDCOLOR}, {COLOR=GOLD}Champion{ENDCOLOR}?</speech>
            <speech>Las aguas entre {COLOR=YELLOW}Kanto{ENDCOLOR} y {COLOR=CYAN}Hoenn{ENDCOLOR} están tranquilas ahora.</speech>
            <speech>Ha sido toda una aventura, pero no hay nada como volver a navegar por aguas familiares.</speech>
            <speech>¿Qué me dices? ¿Hora de volver a casa a {COLOR=CYAN}Hoenn{ENDCOLOR}?</speech>
        </speeches>
    </conversation>
    <npc direction="LEFT" hidden="false" id="1" name="Retired Trainer Grandpa" randomRotation="false" sprite="5" x="38" y="13">
        <speech>Sabes, el profesor Oak no siempre fue profesor, ¿verdad?</speech>
        <speech>Antes, si cogías un Ditto, ¡te retaba!</speech>
        <speech>Y vaya si era poderoso...</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="2" name="Mysterious Traveler" randomRotation="false" sprite="38" x="28" y="23">
        <speech>Viajé desde Sinnoh hace poco. Aunque llevo años por aquí.</speech>
        <speech>Siempre es agradable ver a jóvenes y brillantes entrenadores partir con su primer Pokémon inicial.</speech>
        <speech>Es como ver el comienzo de una nueva historia, cada vez.</speech>
    </npc>
    <npc direction="RIGHT" hidden="false" id="3" name="Fence-Watching Youngster" randomRotation="false" sprite="2" x="20" y="4">
        <speech>A veces tiro pan a los Rattata salvajes. No se lo digas a nadie.</speech>
    </npc>
    <movingNpc direction="RIGHT" id="4" name="Lab Assistant" shouldSleep="" speed="1" sprite="8" type="npc" x="14" y="28">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Llevo años organizando una base de datos de Pokémon de Oaks. ¿Sabes cuántas formas diferentes de Rotom hay? DEMASIADAS.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Magikarp" shouldSleep="" speed="1" sprite="129" type="pokemon" x="8" y="30">
        <path>RIGHTx2,LEFTx2,DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="6" y="21">
        <path>DOWNx2,UPx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="RIGHT" id="11" name="Fearow" shouldSleep="" speed="1" sprite="22" type="pokemon" x="0" y="2">
        <path>RIGHTx5,LEFTx5,DOWNx2,UPx2</path>
        <onCollisionSpeech gap="2"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Neighbor Karen" shouldSleep="" speed="1" sprite="12" type="npc" x="43" y="28">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="6"/>
        <speech>¿Así que te vas de viaje Pokmon?</speech>
        <speech>Déjame adivinar. ¡Sin crema solar, sin ropa interior limpia y SIN plan!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Bulbasaur" speed="1" sprite="1" type="pokemon" x="33" y="9">
        <path>DOWNx2,RIGHTx2,LEFTx2,UPx2</path>
        <onCollisionSpeech gap="4">Bulbaaaa!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="DOWN" id="15" name="Squirtle" speed="1" sprite="7" type="pokemon" x="41" y="18">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Squirtleee!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="RIGHT" id="16" name="Charmander" speed="1" sprite="4" type="pokemon" x="30" y="27">
        <path>RIGHTx4,LEFTx4</path>
        <onCollisionSpeech gap="4">Chaaaar!</onCollisionSpeech>
    </movingNpc>
</npcs>