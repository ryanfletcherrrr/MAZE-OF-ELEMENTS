<npcs>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Este viaje no tiene límites! ¡¿Dónde está mi aventura?!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sniff, sniff... Esto no es bueno... No puedo oler el perfume del amor. ¡Adiós!</speech>
        </speeches>
        <speeches id="3">
            <speech>Sniff, sniff... Esto no es bueno... No puedo oler el perfume del amor. ¡Adiós!</speech>
        </speeches>
        <speeches id="4">
            <speech>El viaje no ha terminado. ¡Sólo tienes que esperar! Te mostraré la mayor aventura de la historia.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Pareces tan serio y aburrido... ¿Puedes entretenerme?</speech>
        </speeches>
        <speeches id="2">
            <speech>Ah... No estuviste mal... Lo que solo me hace miserable...</speech>
        </speeches>
        <speeches id="3">
            <speech>Ah... No estuviste mal... Lo que solo me hace miserable...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eh, acabamos de empezar! ¡Aquí es donde empieza a ponerse bueno!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Huhuehuehue... No llores cuando pierdas...</speech>
        </speeches>
        <speeches id="2">
            <speech>Sniffle... Sniffle sniffle... Estoy decepcionado... Tan decepcionado...</speech>
        </speeches>
        <speeches id="3">
            <speech>Sniffle... Sniffle sniffle... Estoy decepcionado... Tan decepcionado...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Eh, eh! ¡No llores! ¡No tengo tiempo para las lágrimas de un niño!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Ahhh, ¡un Entrenador que está guapísimo! Espero que tu batalla sea igual de hermosa.</speech>
        </speeches>
        <speeches id="2">
            <speech>Dios mío, nuestra batalla fue igual de hermosa. Me siento atraída por ti.</speech>
        </speeches>
        <speeches id="3">
            <speech>Dios mío, nuestra batalla fue igual de hermosa. Me siento atraída por ti.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡¿Tan guapo perdido para mí?! Estoy un poco decepcionado.</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¿Es consciente de lo que se necesita para ser Formador?</speech>
        </speeches>
        <speeches id="2">
            <speech>No puedes convertirte en Entrenador luchando así.</speech>
        </speeches>
        <speeches id="3">
            <speech>No puedes convertirte en Entrenador luchando así.</speech>
        </speeches>
        <speeches id="4">
            <speech>Claro que soy fuerte y no pierdo. Es importante que gane con elegancia.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>No importa lo rápido que sea el Pokémon, ¡lo atraparé en mi superveloz bicicleta!</speech>
        </speeches>
        <speeches id="2">
            <speech>Sé cantar, bailar y montar en bici. Ahora intentaré convertirme en un ídolo que también sepa batallar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sé cantar, bailar y montar en bici. Ahora intentaré convertirme en un ídolo que también sepa batallar.</speech>
        </speeches>
        <speeches id="4">
            <speech>Tío, ¡soy tan rápido y suave! ¡Debería estar en So You Think You Can Bike!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>Que sea la niña de papá no significa que sea una dama.</speech>
        </speeches>
        <speeches id="2">
            <speech>Esa fuerza... Eres como una próspera hierba de carretera...</speech>
        </speeches>
        <speeches id="3">
            <speech>Esa fuerza... Eres como una próspera hierba de carretera...</speech>
        </speeches>
        <speeches id="4">
            <speech>Hago lo que quiero ¡Vivo como me da la gana! ¡Así es la niñita de papá!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Padre... Madre... Cuida mi batalla...</speech>
        </speeches>
        <speeches id="2">
            <speech>Padre... Madre... ¿Qué debo hacer?</speech>
        </speeches>
        <speeches id="3">
            <speech>Padre... Madre... ¿Qué debo hacer?</speech>
        </speeches>
        <speeches id="4">
            <speech>Padre... Madre... ¿Has visto? Gané una batalla... ¡Realmente gané!</speech>
        </speeches>
    </conversation>
    <conversation id="11">
        <speeches id="1">
            <speech>¡Hola! Eres una montaña que se interpone en mi camino, ¿verdad?</speech>
        </speeches>
        <speeches id="2">
            <speech>Grrr... Mi victoria ha desaparecido en alguna grieta oscura...</speech>
        </speeches>
        <speeches id="3">
            <speech>Grrr... Mi victoria ha desaparecido en alguna grieta oscura...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Yahoo! ¡Yahooooo! ¡Escucha mi grito de triunfo!</speech>
        </speeches>
    </conversation>
    <conversation id="12">
        <speeches id="1">
            <speech>Veo que has demostrado tu valía y eres lo suficientemente fuerte como para sobrevivir con otros domadores dentro.</speech>
            <speech>Te permitiré entrar en la cueva Wayward y ponerte a prueba.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Así que quieres entrar en la cueva Wayward?</speech>
            <speech>No, no puedo dejarte pasar chico. No eres lo suficientemente fuerte.</speech>
            <speech>Necesitas derrotar al Campeón Cynthia y debes registrar al menos 100 Pokemon en tu dex.</speech>
            <speech>Veamos si eres capaz o no.</speech>
        </speeches>
    </conversation>

    <conversation id="13">
        <speeches id="2">
            <speech>Hola! Soy un payaso de la campaña Tutorial PBO. ¡Vamos a lanzar mi pregunta!</speech>
            <speech>¿Puedes encontrar enjambres todos los días en PBO y cazar Pokemon raros?</speech>
        </speeches>
        <speeches id="3">
            <speech>Esa no es la respuesta correcta. Intentémoslo de nuevo.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ding-ding!</speech>
            <speech>Tienes toda la razón.</speech>
            <speech>¡Todos los días podrás ver que hay enjambres en la Región de Sinnoh!</speech>
            <speech>Te recomiendo encarecidamente que vayas a verlos. ¡Puede que los encuentres todos!</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Aquí tienen! ¡Por favor, acepten este Gran Balón!</speech>
            <speech>Con suerte podrás atrapar un Pokémon Ultra Raro con él.</speech>
        </speeches>
    </conversation>
</npcs>