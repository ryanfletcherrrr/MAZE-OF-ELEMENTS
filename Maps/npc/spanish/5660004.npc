<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¿Entiendes a dónde quiero llegar? Este es un mundo extraño.</speech>
            <speech>El tiempo no fluye. El espacio no es estable. Sólo ese Pokémon sombrío vive aquí.</speech>
            <speech>Este mundo es lo opuesto a nuestro mundo... nuestro mundo que deseo cambiar.</speech>
            <speech>Es como las dos cadenas que componen la cadena de ADN.</speech>
            <speech>Los dos mundos deben equilibrarse para seguir existiendo.</speech>
            <speech>Sin uno, el otro no puede existir. Los Pokémon sombríos deben mantener el equilibrio entre los mundos.
                en equilibrio.
            </speech>
            <speech>Es por eso que debe haber interferido y me trajo aquí.</speech>
            <speech>Los Pokémon sombríos deben de haber creado este extraño mundo.</speech>
            <speech>Por eso, intentar cambiar nuestro mundo lo perturbó e hizo que se revelara.</speech>
            <speech>Pero todo eso es irrelevante. Lo que importa es derrotar a ese Pokémon y hacer que este mundo
                desaparezca.
            </speech>
            <speech>No permitiré que vuelva a interferir conmigo.</speech>
            <speech>Sin ella, ninguno de los dos mundos podrá volver a su estado original...</speech>
            <speech>¡No perderé! ¡No ante ese Pokémon sombrío! ¡Ni en ningún mundo inútil!</speech>
        </speeches>
        <speeches id="2">
            <speech>... No creas que puedes derrotar a ese Pokémon.</speech>
            <speech>Este extraño mundo no es otro que el propio Pokémon.</speech>
            <speech>¡Capturarlo o derrotarlo hará que este mundo desaparezca!</speech>
            <speech>¡Muy bien! ¡Haz lo que quieras! ¡En lugar de reparar el mundo, vas a destruirlo por mí!
            </speech>
            <speech>Hazlo. Heredas mi legado.</speech>
        </speeches>
        <speeches id="4">
            <speech>Admito que me has llevado a este extremo.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>Grrrrrrr.................</speech>
        </speeches>
        <speeches id="2">
            <speech>Grrrrrrr.................</speech>
        </speeches>
        <speeches id="4">
            <speech>Grrrrrrr.................</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>¡Parece que Giratina nos ha entendido!</speech>
            <speech>...Los lugares donde nacemos. El tiempo que pasamos viviendo... Las lenguas que hablamos...</speech>
            <speech>Todos somos diferentes. Pero la presencia de Pokémon nos une.</speech>
            <speech>Compartimos nuestras vidas con nuestros Pokémon y nuestra felicidad crece a medida que todos nos hacemos más grandes de lo que éramos
                solos.
            </speech>
            <speech>Por eso podemos combatir y comerciar con quien queramos...</speech>
            <speech>... ... Como hay tristeza, podemos sentir alegría. Cuando hay ira, nace la compasión...</speech>
            <speech>Volvamos a casa. El portal donde estaba Giratina debería llevarnos a nuestro mundo.</speech>
            <speech>Se escribió que Giratina estaba al otro lado de nuestro mundo.</speech>
            <speech>Es lógico que tenga un vínculo con el otro lado.</speech>
            <speech>Si se habla de nuevo: Volvamos a casa.</speech>
            <speech>El portal donde estaba Giratina debería llevar de vuelta a nuestro mundo.</speech>
            <speech>Se escribió que Giratina estaba al otro lado de nuestro mundo.</speech>
            <speech>Es lógico que tenga un vínculo con el otro lado".</speech>
        </speeches>
    </conversation>
</npcs>