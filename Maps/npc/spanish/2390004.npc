<npcs>

    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=ORANGE}*Los ojos se iluminan de emoción*{ENDCOLOR}</speech>
            <speech>¡Espera, espera, espera! ¡¿Eso que veo es el brillo legendario del mineral de dinamita?!</speech>
            <speech>¡Oh por favor oh por favor oh por favor! ¡Cambia conmigo! Tengo tesoros increíbles esperando a la persona adecuada.</speech>
            <speech>¿Qué te parece? ¿Listo para hacer un trato que te deje boquiabierto?</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=CYAN}*se desinfla como un globo triste*{ENDCOLOR}</speech>
            <speech>Pero... ¿por qué no? ¡Prometo que mis golosinas son absolutamente increíbles!</speech>
            <speech>¿Quizás la próxima vez? Estaré aquí, soñando con esos brillantes minerales de dinamita...</speech>
        </speeches>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=YELLOW}*prácticamente vibrando de entusiasmo*{ENDCOLOR}</speech>
            <speech>Esas {COLOR=ROJO}Monedas Brillantes{ENDCOLOR} ¡me están llamando! Puedo oírlas tintinear en tu bolso.</speech>
            <speech>¡Cambia conmigo, cambia conmigo! ¡Tengo cosas tan buenas que te harán girar la cabeza!</speech>
            <speech>Vamos, ¡hagamos magia!</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GRAY}*se marchita dramáticamente*{ENDCOLOR}</speech>
            <speech>¿En serio? Pero tenía tan {COLOR=RED}blazing{ENDCOLOR} ofertas preparadas ...</speech>
            <speech>Bueno, si cambias de opinión, ¡yo estaré aquí puliendo mi colección!</speech>
        </speeches>
    </conversation>

    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=PURPLE}*jadea y señala emocionado*{ENDCOLOR}</speech>
            <speech>¡Fichas de Crew Wars! ¡El premio definitivo del campo de batalla!</speech>
            <speech>Escucha, ¡tengo tesoros que harían llorar de alegría a un capitán pirata!</speech>
            <speech>¿Por favor, por favor, con una cereza encima?</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=BLUE}*Suspiro melancólico*{ENDCOLOR}</speech>
            <speech>Ah, el que se escapó... ¡esas fichas habrían completado mi colección!</speech>
            <speech>Quizá los vientos de la guerra te traigan de vuelta a mí algún día...</speech>
        </speeches>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>{COLOR=GREEN}*hace un pequeño baile de la victoria*{ENDCOLOR}</speech>
            <speech>¡Fichas de combate clasificatorias! Las joyas de la corona de la gloria competitiva.</speech>
            <speech>Prácticamente estoy rebotando por las paredes. Mis golosinas son legendarias, ¡lo juro!</speech>
            <speech>¿Qué va a ser, campeón? ¿Listo para aumentar tu inventario?</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=RED}*se aprieta el pecho dramáticamente*{ENDCOLOR}</speech>
            <speech>¡Mi corazón! ¡Estás rompiendo mi pobre corazón de coleccionista!</speech>
            <speech>Esas fichas... ¡podrían haber sido mías! *Quizás la próxima batalla...</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>{COLOR=BLUE}*Los ojos brillan como gemas raras*{ENDCOLOR}</speech>
            <speech>¿Son esas... {COLOR=ORO}Fichas de batalla{ENDCOLOR} ¿Espío? ¡La dulce moneda de los campeones!</speech>
            <speech>Con esas bellezas, ¡podrías desbloquear maravillas más allá de tus sueños más salvajes!</speech>
            <speech>¡Acércate, héroe! ¡Tengo reliquias forjadas en el fuego de la victoria!</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GRAY}*se desploma como un caballero derrotado*{ENDCOLOR}</speech>
            <speech>Ay... otro día sin el tintineo dorado de las fichas de batalla en mi bolsa...</speech>
            <speech>Que tus futuras batallas sean gloriosas, y que el destino te traiga de vuelta a mí, ¡y a tus fichas!</speech>
        </speeches>
    </conversation>

</npcs>