<npcs>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Dejadlo, idiotas! ¡Soltad al profesor!</speech>
        </speeches>
        <speeches id="2">
            <speech>$PLAYER_NAME, ¡por fin lo has conseguido, eh!</speech>
            <speech>¡Tenemos que salvar al Profesor Cozmo de esta gente!</speech>
            <speech>Hay dos de ellos... Y dos de nosotros... ¡$PLAYER_NAME, por favor! ¡Luchen juntos conmigo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Mierda! ¡Ya no tengo ni idea de lo que pasa con toda esta gente!</speech>
            <speech>¡No te preocupes por esas nueces! ¡¿Profesor, lo está haciendo bien?!</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que todavía está bastante fuera de sí... $PLAYER_NAME...</speech>
            <speech>¡No importa lo que haya pasado! ¡Tengo que llevar al profesor a su laboratorio en Fallarbor!</speech>
            <speech>OK, Profesor... Tranquilo...</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¿Qué tenemos aquí? ¿Por qué ha aparecido de repente este niño?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ahyahyahya! ¡¿No es divertido?!</speech>
            <speech>¿Realmente pretendéis oponeros a mí, un Team Magma Admin, vosotros dos solos?</speech>
            <speech>Mmm... ¡Muy bien entonces! ¡Te mostraré lo aterradores que pueden ser los adultos!</speech>
            <speech>¡Ahyahyahya! ¡Voy a darte un entrenamiento muy completo!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡¿Hyuhn?! ¡¿Un acontecimiento inesperado?!</speech>
            <speech>¡Niños! ¡Me gustaría que os apartarais de mi camino!</speech>
            <speech>La destreza científica del Equipo Magma, la energía del Monte Chimenea...</speech>
            <speech>¡Y el poder oculto del Meteorito! Si los combinamos todos, un Pokémon superantiguo...</speech>
        </speeches>
        <speeches id="4">
            <speech>Ahora no vuelvas aquí.</speech>
        </speeches>
        <speeches id="5">
            <speech>¡Hyahya! ¡Incluso el Equipo Aqua está haciendo su aparición!</speech>
            <speech>Las probabilidades no parecen estar a mi favor...</speech>
            <speech>¡Tú! ¡Tendré el Meteorito ahora!</speech>
        </speeches>
        <speeches id="6">
            <speech>¡Ahyahya! ¡El Meteorito está en la palma de mi mano!</speech>
            <speech>Bueno, bueno, bueno... ¡Adiós a cada uno de vosotros! ¡Por fin me voy al Monte Chimenea!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Señor! ¡Intruso!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Sí, señor!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Ven ahora!</speech>
            <speech>¡Entrega el meteorito!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡¿Qué?!</speech>
            <speech>¡¿Augh?!</speech>
            <speech>P-pero... ellos... Yo... sólo...</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Bwahahahahahaha! ¿Perdiste contra este bribón?</speech>
            <speech>¡Qué grupo tan patético! ¡Ustedes, chiflados perezosos, serán la perdición del Equipo Magma!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Tch!</speech>
            <speech>¡Así es! ¡No los dejaremos escapar!</speech>
            <speech>¿Qué es esto? Tienes una expresión bastante feroz para ser tan pequeñita.</speech>
            <speech>Me llamo Archie. Soy el líder del Equipo Aqua, un grupo que trabaja para devolver el mundo a un estado prístino.</speech>
            <speech>Uno que será perfecto para la supervivencia de Pokémon. Parece que te estabas metiendo con el Equipo Magma, a menos que mis ojos me engañen.</speech>
            <speech>No es que esté en posición de discutir si eso es lo que pretendes, ¿eh? Pero te diré una cosa.</speech>
            <speech>Así que recuerda. Si la próxima vez te interpones en el camino del Equipo Aqua, no saldrás tan bien parado.</speech>
            <speech>¡Así que mantente alejado y no te metas en líos, bribón!</speech>
            <speech>¡Imagino que nos veremos! ¡Waha! ¡Bwahahahahah!</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="8" name="Zubat" shouldSleep="" speed="1" sprite="41" type="pokemon" x="12" y="48">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Screech!</onCollisionSpeech>
        <speech>¡Chillido!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="9" name="Golbat" shouldSleep="" speed="1" sprite="42" type="pokemon" x="5" y="43">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4">Screech!</onCollisionSpeech>
        <speech>¡Chillido!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="10" name="Goldeen" speed="1" sprite="118" type="pokemon" x="21" y="35">
        <path>DOWNx8,UPx8</path>
        <onCollisionSpeech gap="4">Deen! Deen!</onCollisionSpeech>
        <speech>Goldeen está escalando graciosamente la cascada.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="11" name="Solrock" shouldSleep="" speed="1" sprite="338" type="pokemon" x="31" y="34">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="12" name="Lunatone" shouldSleep="" speed="1" sprite="337" type="pokemon" x="24" y="7">
        <path>RIGHTx2,DOWNx2,UPx2,LEFTx2</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="13" name="Whiscash" shouldSleep="" speed="1" sprite="340" type="pokemon" x="23" y="46">
        <path>DOWNx3,RIGHTx1,DOWNx2,RIGHTx1,DOWNx1,RIGHTx2,LEFTx2,UPx1,LEFTx1,UPx2,LEFTx1,UPx3</path>
        <onCollisionSpeech gap="4">cshcsh!</onCollisionSpeech>
        <speech>Whiscash está jugando en el barro.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="14" name="Barboach" shouldSleep="" speed="1" sprite="339" type="pokemon" x="13" y="8">
        <path>DOWNx4,LEFTx1,RIGHTx1,UPx4</path>
        <onCollisionSpeech gap="4">Boboach!</onCollisionSpeech>
        <speech>Barboach caza en aguas poco profundas.</speech>
    </movingNpc>
</npcs>