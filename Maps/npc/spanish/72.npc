<npcs>
    <npc direction="DOWN" id="10001" name="Sailor Silva" sprite="11" x="13" y="7">
        <speech>Vengo de una ciudad muy lejana: Sunshire Town.</speech>
        <speech>Esta ciudad me parece un buen lugar para pasar las vacaciones con mi familia.</speech>
    </npc>
    <npc direction="LEFT" id="10002" name="Explorer Monteiro" sprite="20" x="27" y="31">
        <speech>No tenía ni idea de cómo resolver los misterios del desierto de Scorched, así que decidí pedirle a mi amiga Silva que viajara
            conmigo.
        </speech>
        <speech>Mi objetivo es hacer de detective y puede que encuentre algo útil por todo el mundo.</speech>
        <speech>Hasta que resuelva todos los misterios de mi ciudad natal...</speech>
    </npc>
    <npc direction="LEFT" id="10003" name="Brandy" randomRotation="true" sprite="82" x="47" y="30">
        <speech>Este parque está lleno de flores preciosas.</speech>
    </npc>
    <npc direction="DOWN" id="10004" name="Mark" randomRotation="true" sprite="72" x="56" y="32">
        <speech>Apártate, estoy meditando.</speech>
    </npc>
    <npc direction="LEFT" id="10005" name="Sports Addict Brenda" randomRotation="true" sprite="80" x="54" y="22">
        <speech>Este suelo es genial para patinar, ¡wooooh!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Vine con mi padre a atrapar Pokémon bicho, ¡los Pokémon bicho son increíbles!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Acabas de tener suerte! Hmph!"</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Tengo que encontrar más Pokémon que mi padre!</speech>
        </speeches>
        <speeches id="4">
            <speech>Jejeje, ¡eres bueno! ¡¡Pero yo era mejor!!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¿Has visto los nuevos aparatos que hay en el mercado? ¡Son geniales! ¡Pero también lo son mis Pokemon!</speech>
        </speeches>
        <speeches id="2">
            <speech>Supongo que tengo que investigar más.</speech>
        </speeches>
        <speeches id="3">
            <speech>*Comprueba la PokePad* ¿Será venta On-line?? Tengo que irme a casa.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Somos eléctricos!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Algunos de mis amigos han decidido quedarse en las salas de formación ayudando a los demás, pero yo prefiero usar mis
                habilidades en el mundo exterior, se llega a conocer a más gente.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Eres más fuerte de lo que pensaba, supongo que tengo que tomarme esto más en serio.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tengo que entrenar más duro...</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Eso es todo lo que puedes hacer? Estoy seguro de que puedes hacerlo mejor.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¿Oh? ¿Así que has conocido a esa pareja de alegres colegas míos? Así que ya sabes lo que hacemos los Rangers.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>No me extraña que hayas superado a esos dos, eres realmente fuerte, contigo en el Mountain Ranger puedo sentirme a
                tranquilo, ¡pareces una buena persona!
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Ten cuidado más adelante, ¡hace más frío!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Casi me tienes ahí! Tus Pokémon son fuertes y tú también.
                revancha, ¡siempre me alegra ver entrenadores fuertes!
            </speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Oh, veo que ya conociste a mi hijo, Max, ¿te causó problemas?</speech>
            <speech>Jeje, los dos somos demasiado entusiastas cuando se trata de Pokémon bicho, ¡vamos, luchemos también!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Bien, bien, eres muy capaz, si además venciste a mi hijo, me imagino cómo actuó, él
                odia perder.
            </speech>
        </speeches>
        <speeches id="3">
            <speech>Bueno, me lo tomaré con calma y dejaré que Max consiga más Pokémon que yo, no puedo soportar sus lloriqueos si
                pierde a mí otra vez.... *suspiro*
            </speech>
        </speeches>
        <speeches id="4">
            <speech>Bueno, ¡yo no iba a ser tan fácil como mi Hijo!</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="6">
        <speeches id="1">
            <speech>Hola. ¿Podrías ayudarme a derrotar a estos gruñones?</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="7">
        <speeches id="1">
            <speech>Será mejor si usted no interfiere con nuestro negocio ...</speech>
        </speeches>
        <speeches id="2">
            <speech>Interesante. Te subestimé. No te sientas feliz, nuestro jefe es mucho más fuerte que yo.
            </speech>
        </speeches>
        <speeches id="3">
            <speech/>
        </speeches>
        <speeches id="4">
            <speech>Hmph ... eres tan lastimosamente débil.</speech>
        </speeches>
        <speeches id="5">
            <speech/>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="10">
        <speeches id="1">
            <speech>¡Uf!</speech>
            <speech>Simplemente no lo entiendo. No lo entiendo.</speech>
            <speech>Pasaba tranquilamente y empezaron a preguntarme por Ho-Oh.</speech>
            <speech>Dijeron algo de revivir a alguien.</speech>
            <speech>Para mí no tiene sentido.</speech>
            <speech>Bueno, tenemos que continuar nuestro viaje.</speech>
            <speech>Ok ok no lo voy a hacer de nuevo {EVENT=mood-4-11-20}</speech>
        </speeches>
    </conversation>
    <conversation canSkip="false" id="11">
        <speeches id="1">
            <speech>Debería hablar con $JVALOH_RIVAL antes de salir del forst.</speech>
        </speeches>
    </conversation>
</npcs>