<npcs>
    <npc direction="DOWN" id="1000" name="Bug Catcher Joe" sprite="24" x="51" y="4">
        <speech>Me escapé de casa...</speech>
        <speech>¡¡¡PARA ATRAPAR ALGUNOS BICHOS!!!</speech>
    </npc>
    <npc direction="LEFT" id="1001" name="Bug Catcher Luke" sprite="25" x="36" y="27">
        <speech>Estoy recogiendo algunos datos de los Pokemon salvajes de los alrededores.</speech>
        <speech>Si encuentro algo que no sea del tipo Bug, paso, ¡ja!</speech>
    </npc>
    <conversation id="1">
        <speeches id="1">
            <speech>Me gustan mucho las flores, también están vivas, ¿sabes? Amo y cuido especialmente a mis Pokemon, que</speech>
            <speech>                que te muestre nuestro fuerte vínculo.</speech>
        </speeches>
        <speeches id="2">
            <speech>A través de nuestra batalla sentí que eres una buena persona, eres fuerte y tus pokemon seguramente te aman,</speech>
            <speech>                espero que podamos volver a vernos.</speech>
        </speeches>
        <speeches id="3">
            <speech>A través de nuestra batalla sentí que eres una buena persona, eres fuerte y tus pokemon seguramente te aman,</speech>
            <speech>                espero que podamos volver a vernos.</speech>
        </speeches>
        <speeches id="4">
            <speech>Estaré aquí regando las flores y disfrutando de la luz del sol con mi pokémon, ¡si quieres la revancha!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Te he visto mirando mi cuadro, ¿te gusta el arte? A menudo viajo para encontrar hermosos
                para pintar, mis modelos son mis Pokemon.
            </speech>
            <speech>Son muy bonitas y artísticas, les gusta que las pinte,
                ¡también son bastante fuertes!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>Sin duda eres fuerte, ¡déjame hacerte un cuadro con tu Pokemon!</speech>
        </speeches>
        <speeches id="3">
            <speech>Si quieres un cuadro tuyo y de tu Pokemon ¡ven a buscarme!</speech>
        </speeches>
        <speeches id="4">
            <speech>Hermosos y Fuertes, estos son mis Pokemon, ¡vuelve si quieres la revancha!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Dónde cayó, Santo Arceus, era mi favorito... Oh, hey tú, jovencito, ¿puedes ayudarme a encontrar
                mi pluma? A mi edad no veo muy bien, jaja.
            </speech>
            <speech>¡¿Qué quieres combatir?! Los jóvenes de hoy en día...</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Ya está, me has ganado, ahora ayúdame a encontrar mi bolígrafo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Voy a llegar tarde a la reunión de Arqueólogos... ¡tenía que perder esta Pluma!</speech>
        </speeches>
        <speeches id="4">
            <speech>Eso debería darte una lección, aléjate jovencito, no necesito tu ayuda.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Entrenar en Artes Marciales aquí al aire libre es realmente refrescante, también te ayuda a concentrarte y a
                ¡meditar más fácilmente!
            </speech>
        </speeches>
        <speeches id="2">
            <speech>I... ¿Perdí? ¡Entonces necesito entrenar más duro! ¡Vamos chicos!</speech>
        </speeches>
        <speeches id="3">
            <speech>99... 100... ¡Hecho! ¡Vamos chicos, una serie más de 100 flexiones después de 5 minutos de descanso!</speech>
        </speeches>
        <speeches id="4">
            <speech>Oh eres un entrenador fuerte, puedo sentir tu pasión y fuerza, pero todavía te falta algo, entrena
                ¡y hazte más fuerte!
            </speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>Me dirijo al bosque que hay más adelante. He oído que hay pokémon bicho muy poderosos.
            </speech>
        </speeches>
        <speeches id="2">
            <speech>¡No! ¡Cómo pueden perder mis bichos, los bichos son los mejores!</speech>
        </speeches>
        <speeches id="3">
            <speech>Voy a entrar en el bosque y atrapar a muchos de esos Pokémon bicho tan fuertes.</speech>
        </speeches>
        <speeches id="4">
            <speech>Los de tipo bicho son los más fuertes, ¡jajaja!</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>No creo que deba entrar en esa parte del bosque ahora.</speech>
            <speech>Debería entrenar más antes de desafiar a esos Pokémon de alto nivel.</speech>
        </speeches>
    </conversation>
</npcs>