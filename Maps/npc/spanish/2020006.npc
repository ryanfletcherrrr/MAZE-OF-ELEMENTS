<npcs>
    <conversation id="1">
        <!-- First Battle (Classic Giovanni Style) -->
        <speeches id="1">
            <speech>{¡Fwahahaha! Bienvenido a mi escondite.</speech>
            <speech>Has llegado lejos, pero tu viaje termina aquí.</speech>
            <speech>Soy {COLOR=GRIS}Giovanni{ENDCOLOR}, líder del Gimnasio Viridian, ¡maestro de los Pokémon de tipo tierra{ENDCOLOR}!</speech>
            <speech>Fuerza, disciplina y poder: ¡eso es lo que domina el mundo Pokémon!</speech>
            <speech>¡Prepárate! ¡Déjame mostrarte cómo se siente el verdadero poder!</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=GRIS}...¡Ja! ¡Esto no puede ser!</speech>
            <speech>Realmente te has hecho más fuerte de lo que esperaba.</speech>
            <speech>Muy bien. Aquí tienes tu recompensa: ¡la insignia de la Tierra!</speech>
            <speech>Llévate esto también{COLOR=BROWN}TM26 Terremoto{ENDCOLOR}, ¡un movimiento lo bastante poderoso como para sacudir los cimientos de la batalla!</speech>
            <speech>Úsala para dar forma al futuro que buscas. Tal vez tu fuerza pueda superar incluso la mía.</speech>
            <speech>{COLOR=GRIS}Pero recuerden mis palabras... nuestra historia aún no ha terminado. Los problemas se avecinan en lugares lejos de aquí.</speech>
        </speeches>
        <speeches id="3">
            <speech>{COLOR=GRAY}Hmph. Qué decepción.</speech>
            <speech>Te falta fuerza. Vuelve sólo cuando te hayas forjado como alguien digno de mi respeto.</speech>
        </speeches>
        <speeches id="4">
            <speech>{COLOR=GRAY}¿Ya te estás echando atrás? Tal vez sientas tus limitaciones.</speech>
            <speech>Vuelve cuando tu valor esté a la altura de tu ambición.</speech>
        </speeches>
        <!-- Repeated Battle (More Intense & Thematic) -->
        <speeches id="5">
            <speech>{COLOR=GRIS}¿Vuelves a desafiarme? Interesante.</speech>
            <speech>El poder es una búsqueda sin fin. Sólo los fuertes mantienen su dominio.</speech>
            <speech>{COLOR=BROWN}¡El suelo es firme, paciente e inflexible como mi determinación!{ENDCOLOR}</speech>
            <speech>¡Muéstrame si tu fuerza es absoluta o meramente temporal!</speech>
        </speeches>
        <speeches id="6">
            <speech>{COLOR=GRIS}Notable... Me has superado de nuevo.</speech>
            <speech>{COLOR=GOLD}$TOTAL_VICTORY{ENDCOLOR} victorias totales, y {COLOR=CYAN}$CONSECUTIVE{ENDCOLOR} victorias consecutivas?</speech>
            <speech>Tu poder es extraordinario. Espero con impaciencia nuestro próximo encuentro.</speech>
        </speeches>
        <speeches id="7">
            <speech>{¡Ha! Ahora ves que el poder sin control no tiene sentido.</speech>
            <speech>Entrena más duro, disciplínate y vuelve cuando estés realmente preparado para desafiarme de nuevo.</speech>
        </speeches>
        <speeches id="8">
            <speech>{COLOR=GRIS}La hesitación es debilidad, retador. {ENDCOLOR}</speech>
            <speech>Reúne fuerzas y regresa. Esperaré tu llegada.</speech>
        </speeches>
        <speeches id="9">
            <speech>{COLOR=GRAY}Incluso yo debo descansar, retador. {ENDCOLOR}</speech>
            <speech>Vuelva después de {COLOR=YELLOW}$DURATION{ENDCOLOR}. Veremos si su fuerza persiste entonces.</speech>
        </speeches>
        <!-- Special Condition: Battle Requirement Not Met -->
        <speeches id="10">
            <speech>{COLOR=GRAY}¿Pretendes enfrentarte a mí sin estar preparado?{ENDCOLOR}</speech>
            <speech>Sólo combato con entrenadores que posean al menos {COLOR=BROWN}3 Pokémon de tipo tierra{ENDCOLOR}.</speech>
            <speech>¡Vuelve cuando tu equipo demuestre un verdadero dominio de la tierra!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>¡Las bestias de Giovanni se inclinan ante mí! Mis tipos de tierra aplastan a los débiles. ¡Acércate o te pisoteo!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Batido plano! Tienes agallas. Voy a domar más duro la próxima vez.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Batido plano! Tienes agallas. Voy a domar más duro la próxima vez.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Reglas básicas aquí! Giovanni está orgulloso. ¡Eres tierra bajo mi talón!</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>¡Mis puños y tipos de tierra golpean como el acero! El dojo de Giovanni me forjó. ¿Listo para romper?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Rompiste mi guardia! Tienes columna vertebral. Entrenaré más duro.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Rompiste mi guardia! Tienes columna vertebral. Entrenaré más duro.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Bien castigado! La fuerza de Giovanni manda. ¡Eres polvo!</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>¡Peleo duro como exige Giovanni! Mis tipos de tierra golpean brutalmente. ¿Preparado para el crack?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Sacudido! Eres sólido. Golpearé más fuerte en la próxima ronda.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Sacudido! Eres sólido. Golpearé más fuerte en la próxima ronda.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Quieto que eres bueno! El poder de Giovanni fluye en mí. ¡Quédate abajo!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>La fuerza de Giovanni es como una avalancha... abrumadora e imparable. ¡Te mostraré cómo se siente ese poder!</speech>
        </speeches>
        <speeches id="2">
            <speech>Parece que tengo que superar mis límites aún más...</speech>
        </speeches>
        <speeches id="3">
            <speech>Parece que tengo que superar mis límites aún más...</speech>
        </speeches>
        <speeches id="4">
            <speech>No sobrevivirás al poder de Giovanni si esto es todo lo que tienes...</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Las estrategias de Giovanni son incomparables... pero he estudiado sus tácticas. ¡Veamos si puedes ser más inteligente que yo!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tienes potencial... pero no creas que Giovanni será tan fácil.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tienes potencial... pero no creas que Giovanni será tan fácil.</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? El poder no es nada sin un plan. Tal vez deberías repensar tu enfoque.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>La fuerza lo es todo. Los tipos de tierra pueden ser poderosos, ¡pero mis puños golpean igual de fuerte!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tu fuerza... es real. Supongo que tendré que entrenar aún más duro...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tu fuerza... es real. Supongo que tendré que entrenar aún más duro...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡No puedes arrasar con pura disciplina! ¡Sigue trabajando en esa forma!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¡Soy la élite de Giovanni! Mis Ground-types aplastan a todos. ¿Crees que puedes superarme?</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Superado! Eres más duro de lo que pensaba. Aumentaré.</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Superado! Eres más duro de lo que pensaba. Aumentaré.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡La victoria es mía! El poder de Giovanni prevalece. ¡No eres una amenaza!</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Precisión, control y estrategia... así es como se conquista a los entrenadores más duros. ¿Estás listo para enfrentarte a mis movimientos calculados?</speech>
        </speeches>
        <speeches id="2">
            <speech>Tus instintos... son más agudos de lo que esperaba. Impresionante.</speech>
        </speeches>
        <speeches id="3">
            <speech>Tus instintos... son más agudos de lo que esperaba. Impresionante.</speech>
        </speeches>
        <speeches id="4">
            <speech>Parece que necesitarás algo más que fuerza bruta para tener una oportunidad contra Giovanni.</speech>
        </speeches>
    </conversation>
</npcs>