<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hola a todos. Me llamo Finn, el cazador de tesoros buceador de Hoenn. O, al menos lo era, hasta que perdí mi Snorkel.</speech>
            <speech>Es un poco embarazoso, pero no puedo bucear ni buscar tesoros sin él. Las profundidades del océano esconden maravillas y secretos.</speech>
            <speech>La última vez que recuerdo haberlo tenido fue cerca de la ruta 126. Las olas pueden ser difíciles, y, bueno, debo haberla perdido allí.</speech>
            <speech>Si te apetece una aventura, ¿te importaría ayudarme a encontrarla? Prometo hacer que merezca la pena y abrirte mi tienda.</speech>
        </speeches>
        <speeches id="2">
            <speech>¿Vuelves tan pronto? Supongo que aún no has encontrado mi Snorkel. El océano es inmenso, ¿verdad?</speech>
            <speech>Recuerda, la última vez que lo tuve fue alrededor de la ruta 126. No es mucho, pero realmente cuento contigo.</speech>
            <speech>Sin ese equipo, sólo soy Finn, de pie en la orilla. Con él, soy Finn, ¡[ORO]el cazador de tesoros buceador[]!</speech>
            <speech>Estate atento a cualquier cosa que parezca fuera de lugar, y gracias de nuevo por ayudarme.</speech>
        </speeches>
    </conversation>

    <conversation id="2">
        <speeches id="1">
            <speech>¡Ah, has vuelto! Pero parece que aún no has encontrado mi esnórquel. El mar guarda muchos secretos, y mi esnórquel sigue siendo uno de ellos.</speech>
            <speech>Mantén los ojos bien abiertos en torno a la Ruta 126. Tiene que estar ahí, en algún lugar, entre las olas y los susurros del pasado.</speech>
        </speeches>
        <speeches id="2">
            <speech>Ho ho, ¿qué tenemos aquí? ¿Es mi esnórquel lo que tienes? ¡Brillante!</speech>
            <speech>La llamada del océano es difícil de ignorar, pero sin mi equipo ha sido imposible responder.</speech>
            <speech>¿Puedo recuperarlo? Estoy ansioso por sumergirme en las profundidades una vez más.</speech>
        </speeches>
        <speeches id="3">
            <speech>No estás listo para separarte de él, ¿eh? Entiendo, el mar forma lazos con aquellos que elige.</speech>
            <speech>Vuelve cuando estés listo y hablaremos entonces.</speech>
        </speeches>
        <speeches id="4">
            <speech>Gracias, de verdad. No sólo has encontrado mi tubo, sino que también has reavivado mi pasión por el azul profundo.</speech>
            <speech>Veamos qué tesoros podemos descubrir juntos.</speech>
            <speech>Como prometí, mi tienda ya está abierta para ti.</speech>
            <speech>Que estos tesoros de las profundidades sean una muestra de nuestra nueva camaradería.</speech>
            <speech>Volveré pronto después de cazar algunos tesoros de los mares. ¿Quién sabe qué maravillas encontraré?</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>

    <conversation id="3">
        <speeches id="1">
            <speech>¡Ah! Tengo algunos artículos extraordinarios aquí, tesoros del azul más profundo.</speech>
            <speech>¿Quieres cambiarlas por algunas Perlas Abisales?</speech>
        </speeches>
        <speeches id="2">
            <speech>No te preocupes, amigo. La generosidad del mar no se va a ninguna parte.</speech>
            <speech>Vuelve más tarde si cambias de opinión o encuentras más Perlas Abisales.</speech>
        </speeches>
    </conversation>
</npcs>