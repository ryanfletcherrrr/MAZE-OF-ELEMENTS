<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Hola. Nos conocimos en Granite Cave, ¿no?</speech>
            <speech>No, lo recuerdo. Es $PLAYER_NAME... ¿Verdad?</speech>
            <speech>Es bueno ver que tu viaje va bien.</speech>
            <speech>Volvía a la Isla Sur para ayudar a un misterioso Pokémon que apareció pidiendo ayuda.</speech>
            <speech>Ahora que estás aquí $PLAYER_NAME. Ven conmigo.</speech>
            <speech>Me vendría bien una mano ahí. ¿Me acompañas?</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Debería ayudar a Steven antes de dejar este mapa.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>Hay cierta etiqueta en las batallas con damas glamurosas y elegantes.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Qué manera tan inmodesta de luchar! ¡No puedo estar cerca de eso!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Qué manera tan inmodesta de luchar! ¡No puedo estar cerca de eso!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Idiota! Oh no, ahí voy otra vez...</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>Puedo soltarme en las batallas Pokémon sin que me regañen.</speech>
        </speeches>
        <speeches id="2">
            <speech>Te gusta una gran pelea, ¿no? ¡Eres mi nuevo amigo!</speech>
        </speeches>
        <speeches id="3">
            <speech>Te gusta una gran pelea, ¿no? ¡Eres mi nuevo amigo!</speech>
        </speeches>
        <speeches id="4">
            <speech>Nadie me regaña. ¡Por eso las batallas Pokémon son las mejores!</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡Allá voy! ¡Lucho por el honor de la sucursal!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Urk! ¡Adiós por ahora! ¡Recordaré esto, niña!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Urk! ¡Adiós por ahora! ¡Recordaré esto, niña!</speech>
        </speeches>
        <speeches id="4">
            <speech>Soy director de una sucursal del Club de Fans Pokémon, ¡y he ganado!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>Hola, soy Soy jardinero. Mis tijeras son mis únicas amigas de verdad.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Sabía que odiaba a los humanos! ¡Todo lo que necesito son tijeras!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Sabía que odiaba a los humanos! ¡Todo lo que necesito son tijeras!</speech>
        </speeches>
        <speeches id="4">
            <speech>Mi especialidad y mi afición son cortar cosas. Mi movimiento favorito con las tijeras es la guillotina.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>Nadarás en la derrota cuando mis Pokémon de agua te arrasen.</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está boyante... Has hundido mis esperanzas de ganar.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está boyante... Has hundido mis esperanzas de ganar.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Te estás ahogando en mi ola de victoria!</speech>
        </speeches>
    </conversation>
    <conversation id="8">
        <speeches id="1">
            <speech>¡Hagamos de esto un torbellino de batalla! ¡Mis Pokémon te absorberán hasta la derrota!</speech>
        </speeches>
        <speeches id="2">
            <speech>Yo soy el que está drenado... Has escapado de mi remolino.</speech>
        </speeches>
        <speeches id="3">
            <speech>Yo soy el que está drenado... Has escapado de mi remolino.</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Fuiste absorbido por mi remolino! Mejor suerte la próxima vez.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>¡Lancémonos a la batalla! ¡Mis Pokémon de agua son imbatibles!</speech>
        </speeches>
        <speeches id="2">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="3">
            <speech>Necesito un salvavidas</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Estás sobrepasado! Tal vez deberías quedarte en la piscina para niños.</speech>
        </speeches>
    </conversation>
    <conversation id="10">
        <speeches id="1">
            <speech>Respira profundamente mi perfume antes de irte. Huele el aroma de una auténtica Belleza.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Muy bien! ¡Ahora puedo escapar!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Muy bien! ¡Ahora puedo escapar!</speech>
        </speeches>
        <speeches id="4">
            <speech>La verdad es que mi perfume no es más que el aroma de mi suavizante barato.</speech>
        </speeches>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="57" y="28">
        <path>RIGHTx7,LEFTx7</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Tentacool" shouldSleep="" speed="1" sprite="72" type="pokemon" x="16" y="23">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="3" name="Wingull" speed="1" sprite="278" type="pokemon" x="34" y="0">
        <path>RIGHTx9,DOWNx4,LEFTx9,UPx4</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="4" name="Carvanha" speed="1" sprite="318" type="pokemon" x="36" y="28">
        <path>RIGHTx9,LEFTx9</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="5" name="Enrique" randomRotation="true" sprite="34" x="43" y="15">
        <speech>El terreno siempre cambiante de la ruta 118 es una prueba de adaptabilidad.</speech>
        <speech>Desde escarpados acantilados hasta costas arenosas, los entrenadores deben recorrer diversos paisajes para triunfar. Es todo un reto, pero uno que pone a prueba tanto al entrenador como al Pokémon.</speech>
    </npc>
    <movingNpc direction="DOWN" id="6" name="Altaria" speed="1" sprite="334" type="pokemon" x="73" y="1">
        <path>RIGHTx8,DOWNx1,LEFTx8,UPx1</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <movingNpc direction="DOWN" id="7" name="Linoone" shouldSleep="" speed="1" sprite="264" type="pokemon" x="79" y="11">
        <path>LEFTx4,RIGHTx4</path>
        <onCollisionSpeech gap="4">Linoone!</onCollisionSpeech>
        <speech>¡Linoone!</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="8" name="Torkoal" shouldSleep="" speed="1" sprite="324" type="pokemon" x="103" y="3">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="9" name="Liv" randomRotation="false" sprite="6" x="96" y="14">
        <speech>¿Qué? ¿Creías que quería luchar?</speech>
        <speech>No es lo mío.</speech>
    </npc>
</npcs>