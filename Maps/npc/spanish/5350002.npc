<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>¡Jajaja! Próxima parada, ¡el lago Verity!</speech>
            <speech>¡La civilización más cercana es ese pueblucho llamado Twinleaf!</speech>
            <speech>¡Podemos entrar sin oposición!</speech>
        </speeches>
    </conversation>

    <conversation canSkip="false" id="2">
        <speeches id="1">
            <speech>...¿Te gustaría unirte al MAGIKARP y revolcarte en el barro?</speech>
        </speeches>
        <speeches id="2">
            <speech>...¡¡¡sobrecogedor!!!</speech>
        </speeches>
        <speeches id="3">
            <speech>...¡¡¡sobrecogedor!!!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Elige tu sitio, chico!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>

    <conversation canSkip="false" id="3">
        <speeches id="1">
            <speech>¡Hicimos estallar la bomba galáctica! ¡Su fuerza explosiva fue fenomenal!</speech>
        </speeches>
        <speeches id="2">
            <speech>Tus Pokemon atacan con una potencia fenomenal...</speech>
        </speeches>
        <speeches id="3">
            <speech>Tus Pokemon atacan con una potencia fenomenal...</speech>
        </speeches>
        <speeches id="4">
            <speech>El lago Verity es el siguiente.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>

    <conversation canSkip="false" id="4">
        <speeches id="1">
            <speech>¡Te castigaré en lugar de nuestro jefe por desafiar al Equipo Galáctico!</speech>
        </speeches>
        <speeches id="2">
            <speech>Grr... Tomé la paliza.</speech>
        </speeches>
        <speeches id="3">
            <speech>Grr... Tomé la paliza.</speech>
        </speeches>
        <speeches id="4">
            <speech>No vuelvas por aquí.</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>

    <conversation id="5">
        <speeches id="1">
            <speech>¡Ni siquiera al Equipo Galáctico le sirve MAGIKARP! ¡Inútiles, todos ellos!</speech>
        </speeches>
    </conversation>

    <conversation id="6">
        <speeches id="1">
            <speech>¿Qué es lo que quiere? ¿Estás investigando la explosión?</speech>
            <speech>Bah, no importa quién seas. Es demasiado tarde para cambiar las cosas.</speech>
            <speech>Las cosas se van a poner fascinantes ahora.</speech>
        </speeches>
    </conversation>
</npcs>