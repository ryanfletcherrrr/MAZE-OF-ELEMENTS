<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>Ahh, las ruinas del pasado... ¡y el calor de mis llamas! Este lugar puede estar abandonado, pero mi fuego aún arde con fuerza. ¡Aumentemos el calor!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Vaya! ¡Has apagado mis llamas! Supongo que necesito avivar el fuego un poco más...</speech>
        </speeches>
        <speeches id="3">
            <speech>¡Vaya! ¡Has apagado mis llamas! Supongo que necesito avivar el fuego un poco más...</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Reducido a cenizas! ¡Eso es lo que pasa cuando juegas con fuego!</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>Esta mansión esconde secretos que la mayoría de los entrenadores no se atreverían a desvelar. He venido a estudiar su historia... ¡pero luchar contra ti será un experimento interesante!</speech>
        </speeches>
        <speeches id="2">
            <speech>Fascinante... Quizás subestimé las variables en esta batalla.</speech>
        </speeches>
        <speeches id="3">
            <speech>Fascinante... Quizás subestimé las variables en esta batalla.</speech>
        </speeches>
        <speeches id="4">
            <speech>Tal como estaba previsto. Un enfoque estructurado siempre da los mejores resultados.</speech>
        </speeches>
    </conversation>
    <conversation id="9">
        <speeches id="1">
            <speech>Ah, $PLAYER_NAME. Soy Muldoon, asistente de investigación del Dr. Fuji. He dedicado mi vida a comprender las complejidades de la arquitectura psíquica de Mewtwo.</speech>
            <speech>La armadura que desarrollamos nunca fue una restricción, sino una simbiosis, una forma de canalizar el inmenso poder de Mewtwo de forma segura.</speech>
            <speech>Si posees a Mewtwo y has reunido todos los Componentes de Armadura, puedo realizar el proceso de integración que el Dr. Fuji y yo perfeccionamos hace años.</speech>
            <speech>No se trata de una mera modificación, sino de una profunda mejora que respeta tanto la autonomía de Mewtwo como su increíble potencial.</speech>
        </speeches>
        <speeches id="2">
            <speech>Notable. Tienes tanto la confianza de Mewtwo como todos los Componentes de Armadura necesarios. Esta es una ocasión trascendental, $PLAYER_NAME.</speech>
            <speech>El proceso de integración requiere una precisión absoluta: un error de cálculo podría dañar a Mewtwo o desestabilizar su matriz psíquica.</speech>
            <speech>El Dr. Fuji siempre creyó que esta armadura representaba la redención por nuestros errores del pasado. ¿Estás preparado para presenciar esta transformación?</speech>
        </speeches>
        <speeches id="3">
            <speech>Entiendo tus dudas. El peso de la responsabilidad cuando se trabaja con un ser tan poderoso como Mewtwo no puede tomarse a la ligera.</speech>
            <speech>El Dr. Fuji me enseñó que la verdadera ciencia no sólo requiere conocimientos, sino sabiduría en su aplicación.</speech>
            <speech>Tómate el tiempo que necesites para reflexionar. El bienestar de Mewtwo debe ser siempre lo primero. Estaré aquí cuando estés seguro.</speech>
        </speeches>
        <speeches id="4">
            <speech>Entonces procedamos con la reverencia que merece este momento. El Dr. Fuji estaría orgulloso de ver realizado el trabajo de su vida.</speech>
            <speech>...La integración se ha completado. He aquí a Mewtwo Blindado, una síntesis perfecta de maravilla biológica y precisión tecnológica.</speech>
            <speech>La armadura no suprime el poder de Mewtwo, sino que lo canaliza con precisión quirúrgica. Representa crecimiento, no limitación.</speech>
            <speech>Este logro hace honor tanto a la increíble naturaleza de Mewtwo como a la visión del Dr. Fuji de la armonía entre creación y creador.</speech>
            <speech>Mi mentor diría que esto no es un final, sino un nuevo comienzo. Gracias por permitirme completar su mayor obra, $PLAYER_NAME.</speech>
        </speeches>
        <speeches id="5">
            <speech>Una vez completada esta transformación, siento que el espíritu del Dr. Fuji por fin puede descansar. Su mayor creación es ahora la que pretendía: poderosa pero equilibrada.</speech>
            <speech>Debo volver a mi investigación, seguir estudiando los vínculos entre los Pokémon legendarios y la tecnología que puede potenciar sus dones.</speech>
            <speech>Que Mewtwo Blindado sirva como recordatorio de que lo mejor de la ciencia no es controlar, sino comprender y elevar. Adiós, $PLAYER_NAME.</speech>
        </speeches>
    </conversation>
    <npc direction="DOWN" hidden="false" id="4" name="" randomRotation="false" sprite="162" x="7" y="14">
        <speech>Has encontrado un Diario, vamos a leerlo..</speech>
        <speech>5 de julio: Descubrimos un nuevo Pokémon en lo profundo de la jungla.</speech>
        <speech>10 de julio: Bautizamos al recién descubierto Pokémon 'Mew'.</speech>
        <speech>6 de febrero: Mew dio a luz. Bautizamos al recién nacido con el nombre de Mewtwo.</speech>
        <speech>1 de septiembre: Mewtwo es demasiado poderoso.</speech>
        <speech>No hemos sabido frenar sus tendencias viciosas...</speech>
    </npc>
    <movingNpc direction="DOWN" id="5" name="Joseph" speed="1" sprite="8" type="npc" x="19" y="16">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Esto es alto secreto ..</speech>
        <speech>Al parecer, hay notas esparcidas por este lugar que los jugadores llevan meses intentando encontrar.</speech>
        <speech>Podría estar debajo de una almohada... cerca de una estatua... ¿Quién sabe?</speech>
        <speech>Dígame, ¿cuántos ha encontrado?</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="6" name="Houndour" speed="1" sprite="228" type="pokemon" x="22" y="35">
        <path>DOWNx5,UPx5</path>
        <onCollisionSpeech gap="4">Houuuund!!</onCollisionSpeech>
    </movingNpc>
    <movingNpc direction="UP" id="7" name="Luxio" speed="1" sprite="404" type="pokemon" x="42" y="8">
        <path>UPx2,RIGHTx4,LEFTx4,DOWNx2</path>
        <onCollisionSpeech gap="4">Luuuux!</onCollisionSpeech>
    </movingNpc>
    <npc direction="RIGHT" hidden="false" id="8" name="Thomas" randomRotation="false" sprite="49" x="29" y="10">
        <speech>¡He encontrado a mi compañero Pokémon Luxio aquí mismo!</speech>
        <speech>Seguro que sabe cómo hacer saltar las chispas, tío.</speech>
    </npc>
    <npc direction="UP" hidden="false" id="9" name="Margaret" randomRotation="false" sprite="68" x="7" y="35">
        <speech>Oh cielos, parece que me he perdido tratando de encontrar estas pistas..</speech>
        <speech>Pensé que habría uno en el botiquín, pero me equivoqué.</speech>
    </npc>
    <npc direction="LEFT" hidden="false" id="10" name="Jordan" randomRotation="true" sprite="102" x="15" y="17">
        <speech>Tengo que seguir haciendo mantenimiento a estas estatuas, lo que me hace pensar que son importantes para la mansión.. incluso en este estado.</speech>
        <speech>Me pregunto qué puede significar.</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="11" name="" randomRotation="false" sprite="162" x="6" y="42">
        <speech>- página arrugada, manchada y medio quemada -</speech>
        <speech>...Blanco, azul, uno, dos, tres - patrones dibujados en la arena.</speech>
        <speech>Crecimiento, división, tamaño: todo es efímero.</speech>
        <speech>Al final, no importaba.</speech>
        <speech>(la página termina bruscamente, las manchas de tinta se extienden)</speech>
    </npc>
    <npc direction="DOWN" hidden="false" id="12" name="" randomRotation="false" sprite="162" x="24" y="25">
        <speech>- nota de campo parcial, rasgada a lo largo del margen izquierdo -</speech>
        <speech>.. Las formas blancas tienden a aparecer primero: más pequeñas, más simples, solas. Una unidad, sin probar.</speech>
        <speech>Pero cuando surgen dos -especialmente en hábitats de clase azul- el tamaño se convierte en un factor.</speech>
        <speech>No sólo fuerza... sino presencia.</speech>
        <speech>Dos no sólo significa más. A menudo significa más grande.</speech>
        <speech>(la tinta se desvanece aquí; borde inferior quemado)</speech>
    </npc>
</npcs>