<npcs>
    <conversation id="1">
        <speeches id="1">
            <speech>{COLOR=AMARILLO}Por favor, seleccione una planta.{ENDCOLOR}</speech>
            <speech>Los botones esperan a que los introduzcas, listos para llevarte donde necesites.</speech>
        </speeches>
        <speeches id="2">
            <speech>{COLOR=VERDE}La consola del ascensor se cierra sola con un suave clic.{ENDCOLOR}</speech>
            <speech>Tendrás que activarlo de nuevo si deseas utilizarlo.</speech>
        </speeches>
    </conversation>
    <conversation id="2">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="3">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="4">
        <speeches id="1">
            <speech>{COLOR=RED}La puerta está cerrada. Puede que necesite una tarjeta especial.</speech>
        </speeches>
    </conversation>
    <conversation id="5">
        <speeches id="1">
            <speech>¡No deberías estar aquí! Si el Equipo Rocket descubre que hablé contigo, estoy acabado... pero quizá tú puedas poner fin a esta locura.</speech>
        </speeches>
        <speeches id="2">
            <speech>Sabía que debería haber pasado más tiempo entrenando... no sólo en el laboratorio.</speech>
        </speeches>
        <speeches id="3">
            <speech>Sabía que debería haber pasado más tiempo entrenando... no sólo en el laboratorio.</speech>
        </speeches>
        <speeches id="4">
            <speech>No quiero pelear, pero no puedo arriesgarme a que me pillen ayudándote. ¡Ten cuidado!</speech>
        </speeches>
    </conversation>
    <conversation id="6">
        <speeches id="1">
            <speech>¡Ja! No tienes ni idea de con quién te estás metiendo. Silph Co. es sólo el principio ¡Estoy subiendo a la cima del Team Rocket!</speech>
        </speeches>
        <speeches id="2">
            <speech>¡No, no, no! ¡Esto no tenía que pasar! ¡Mi gran oportunidad, arruinada!</speech>
        </speeches>
        <speeches id="3">
            <speech>¡No, no, no! ¡Esto no tenía que pasar! ¡Mi gran oportunidad, arruinada!</speech>
        </speeches>
        <speeches id="4">
            <speech>¿Lo veis? ¡Voy a llegar lejos! Pronto seré yo quien dé las órdenes.</speech>
        </speeches>
    </conversation>
    <conversation id="7">
        <speeches id="1">
            <speech>¡No deberías haber venido aquí, chico! {COLOR=AMARILLO}Proyecto T.E.R.A.{ENDCOLOR} es {COLOR=ROJO}propiedad del Equipo Rocket{ENDCOLOR} ¡ahora!</speech>
            <speech>¡Estas unidades {COLOR=CYAN}Porygon{ENDCOLOR} están respondiendo maravillosamente a nuestras modificaciones {COLOR=GOLD}Tera Energy{ENDCOLOR}!</speech>
            <speech>¡Mi {COLOR=AMARILLO}terreno eléctrico{ENDCOLOR} freirá a tu Pokemon antes de que puedas parpadear!</speech>
            <speech>Es hora de ver lo que puede hacer la tecnología armamentística.</speech>
        </speeches>
        <speeches id="2">
            <speech>¡Imposible! ¡Se suponía que mis sistemas eléctricos eran infalibles!</speech>
            <speech>El prototipo {COLOR=CYAN}Porygon-Z{ENDCOLOR} aún necesita más calibración...</speech>
            <speech>¡Pero no crean que esto ha terminado! {¡El Equipo Cohete tiene planes más grandes para este lugar!</speech>
        </speeches>
        <speeches id="3">
            <speech>Mi equipo está frito... El {COLOR=AMARILLO}generador eléctrico del terreno{ENDCOLOR} está completamente estropeado.</speech>
            <speech>Puede que me hayas detenido, pero los otros {COLOR=RED}operativos de Rocket{ENDCOLOR}no lo tendrán tan fácil.</speech>
            <speech>{COLOR=ORO}¡El Proyecto T.E.R.A.{ENDCOLOR} es demasiado valioso para abandonarlo ahora!</speech>
        </speeches>
        <speeches id="4">
            <speech>¡Ja! {COLOR=YELLOW}¡La superioridad eléctrica{ENDCOLOR} gana otra vez!</speech>
            <speech>Mi {COLOR=CYAN}Porygon-Z{ENDCOLOR} y {COLOR=PURPLE}Magneton{ENDCOLOR} ¡forman un dúo tecnológico imparable{COLOR=GOLD}!</speech>
            <speech>¡Ahora sal de aquí antes de que pida refuerzos!</speech>
        </speeches>
        <speeches id="5"/>
    </conversation>
    <movingNpc direction="DOWN" id="1" name="Intern Mina" shouldSleep="" speed="1" sprite="7" type="npc" x="7" y="6">
        <path>RIGHTx5,LEFTx5</path>
        <onCollisionSpeech gap="4"/>
        <speech>Una vez derramé café sobre una baldosa y me teletransporté a un armario.</speech>
        <speech>Me quedé allí 3 horas. No me arrepiento.</speech>
    </movingNpc>
    <movingNpc direction="DOWN" id="2" name="Guardian Ryu" shouldSleep="" speed="1" sprite="126" type="npc" x="25" y="23">
        <path>DOWNx3,UPx3</path>
        <onCollisionSpeech gap="4"/>
        <speech>Solía fregar estos suelos cuando cayó la Game Boy original. Atrapé un Clefairy en un descanso.</speech>
    </movingNpc>
    <npc direction="DOWN" hidden="false" id="3" name="Executive Taro" randomRotation="false" sprite="75" x="36" y="14">
        <speech>Si alguien pregunta, estoy en una reunión crucial.</speech>
        <speech>Si insisten, diles que se trata de la pasta de dientes marca Rattata.</speech>
    </npc>
    <movingNpc direction="DOWN" id="4" name="Rattata" shouldSleep="" speed="1" sprite="19" type="pokemon" x="32" y="16">
        <path>RIGHTx3,LEFTx3</path>
        <onCollisionSpeech gap="4"/>
    </movingNpc>
</npcs>